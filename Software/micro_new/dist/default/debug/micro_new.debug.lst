

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jun 17 01:30:44 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    19                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    20                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    21                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 2.00
    75                           ; Generated 27/05/2018 GMT
    76                           ; 
    77                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F1786 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011C                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  011D                     	;# 
   175  011E                     	;# 
   176  011F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0191                     	;# 
   180  0191                     	;# 
   181  0192                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0193                     	;# 
   185  0194                     	;# 
   186  0195                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019D                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019E                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  0210                     	;# 
   218  0211                     	;# 
   219  0211                     	;# 
   220  0212                     	;# 
   221  0212                     	;# 
   222  0213                     	;# 
   223  0213                     	;# 
   224  0214                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  028C                     	;# 
   235  028D                     	;# 
   236  028E                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0298                     	;# 
   242  0298                     	;# 
   243  0299                     	;# 
   244  029A                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  038C                     	;# 
   253  038D                     	;# 
   254  038E                     	;# 
   255  0390                     	;# 
   256  0391                     	;# 
   257  0392                     	;# 
   258  0393                     	;# 
   259  0394                     	;# 
   260  0395                     	;# 
   261  0396                     	;# 
   262  0397                     	;# 
   263  0398                     	;# 
   264  0399                     	;# 
   265  039D                     	;# 
   266  039E                     	;# 
   267  039F                     	;# 
   268  0511                     	;# 
   269  0513                     	;# 
   270  051A                     	;# 
   271  0811                     	;# 
   272  0812                     	;# 
   273  0813                     	;# 
   274  0814                     	;# 
   275  0815                     	;# 
   276  0816                     	;# 
   277  0817                     	;# 
   278  0818                     	;# 
   279  0819                     	;# 
   280  081A                     	;# 
   281  081B                     	;# 
   282  081C                     	;# 
   283  081D                     	;# 
   284  081E                     	;# 
   285  081F                     	;# 
   286  0820                     	;# 
   287  0821                     	;# 
   288  0821                     	;# 
   289  0822                     	;# 
   290  0823                     	;# 
   291  0823                     	;# 
   292  0824                     	;# 
   293  0825                     	;# 
   294  0825                     	;# 
   295  0826                     	;# 
   296  0827                     	;# 
   297  0827                     	;# 
   298  0828                     	;# 
   299  0829                     	;# 
   300  082A                     	;# 
   301  082B                     	;# 
   302  082C                     	;# 
   303  082D                     	;# 
   304  082E                     	;# 
   305  082F                     	;# 
   306  0831                     	;# 
   307  0832                     	;# 
   308  0833                     	;# 
   309  0834                     	;# 
   310  0835                     	;# 
   311  0836                     	;# 
   312  0837                     	;# 
   313  0838                     	;# 
   314  0839                     	;# 
   315  083A                     	;# 
   316  083B                     	;# 
   317  083C                     	;# 
   318  083D                     	;# 
   319  083E                     	;# 
   320  083F                     	;# 
   321  0840                     	;# 
   322  0841                     	;# 
   323  0841                     	;# 
   324  0842                     	;# 
   325  0843                     	;# 
   326  0843                     	;# 
   327  0844                     	;# 
   328  0845                     	;# 
   329  0845                     	;# 
   330  0846                     	;# 
   331  0847                     	;# 
   332  0847                     	;# 
   333  0848                     	;# 
   334  0849                     	;# 
   335  084A                     	;# 
   336  084B                     	;# 
   337  084C                     	;# 
   338  084D                     	;# 
   339  084E                     	;# 
   340  084F                     	;# 
   341  0851                     	;# 
   342  0852                     	;# 
   343  0853                     	;# 
   344  0854                     	;# 
   345  0855                     	;# 
   346  0856                     	;# 
   347  0857                     	;# 
   348  0858                     	;# 
   349  0859                     	;# 
   350  085A                     	;# 
   351  085B                     	;# 
   352  085C                     	;# 
   353  085D                     	;# 
   354  085E                     	;# 
   355  085F                     	;# 
   356  0860                     	;# 
   357  0861                     	;# 
   358  0861                     	;# 
   359  0862                     	;# 
   360  0863                     	;# 
   361  0863                     	;# 
   362  0864                     	;# 
   363  0865                     	;# 
   364  0865                     	;# 
   365  0866                     	;# 
   366  0867                     	;# 
   367  0867                     	;# 
   368  0868                     	;# 
   369  0869                     	;# 
   370  086A                     	;# 
   371  086B                     	;# 
   372  086C                     	;# 
   373  086D                     	;# 
   374  086E                     	;# 
   375  086F                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011C                     	;# 
   451  011D                     	;# 
   452  011D                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  011F                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0197                     	;# 
   468  0199                     	;# 
   469  0199                     	;# 
   470  0199                     	;# 
   471  019A                     	;# 
   472  019A                     	;# 
   473  019A                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019C                     	;# 
   480  019C                     	;# 
   481  019C                     	;# 
   482  019D                     	;# 
   483  019D                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019E                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  019F                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  020D                     	;# 
   495  020E                     	;# 
   496  0210                     	;# 
   497  0211                     	;# 
   498  0211                     	;# 
   499  0212                     	;# 
   500  0212                     	;# 
   501  0213                     	;# 
   502  0213                     	;# 
   503  0214                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0216                     	;# 
   510  0216                     	;# 
   511  0217                     	;# 
   512  0217                     	;# 
   513  028C                     	;# 
   514  028D                     	;# 
   515  028E                     	;# 
   516  0291                     	;# 
   517  0291                     	;# 
   518  0292                     	;# 
   519  0293                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  030C                     	;# 
   525  030D                     	;# 
   526  030E                     	;# 
   527  0311                     	;# 
   528  0311                     	;# 
   529  0312                     	;# 
   530  0313                     	;# 
   531  038C                     	;# 
   532  038D                     	;# 
   533  038E                     	;# 
   534  0390                     	;# 
   535  0391                     	;# 
   536  0392                     	;# 
   537  0393                     	;# 
   538  0394                     	;# 
   539  0395                     	;# 
   540  0396                     	;# 
   541  0397                     	;# 
   542  0398                     	;# 
   543  0399                     	;# 
   544  039D                     	;# 
   545  039E                     	;# 
   546  039F                     	;# 
   547  0511                     	;# 
   548  0513                     	;# 
   549  051A                     	;# 
   550  0811                     	;# 
   551  0812                     	;# 
   552  0813                     	;# 
   553  0814                     	;# 
   554  0815                     	;# 
   555  0816                     	;# 
   556  0817                     	;# 
   557  0818                     	;# 
   558  0819                     	;# 
   559  081A                     	;# 
   560  081B                     	;# 
   561  081C                     	;# 
   562  081D                     	;# 
   563  081E                     	;# 
   564  081F                     	;# 
   565  0820                     	;# 
   566  0821                     	;# 
   567  0821                     	;# 
   568  0822                     	;# 
   569  0823                     	;# 
   570  0823                     	;# 
   571  0824                     	;# 
   572  0825                     	;# 
   573  0825                     	;# 
   574  0826                     	;# 
   575  0827                     	;# 
   576  0827                     	;# 
   577  0828                     	;# 
   578  0829                     	;# 
   579  082A                     	;# 
   580  082B                     	;# 
   581  082C                     	;# 
   582  082D                     	;# 
   583  082E                     	;# 
   584  082F                     	;# 
   585  0831                     	;# 
   586  0832                     	;# 
   587  0833                     	;# 
   588  0834                     	;# 
   589  0835                     	;# 
   590  0836                     	;# 
   591  0837                     	;# 
   592  0838                     	;# 
   593  0839                     	;# 
   594  083A                     	;# 
   595  083B                     	;# 
   596  083C                     	;# 
   597  083D                     	;# 
   598  083E                     	;# 
   599  083F                     	;# 
   600  0840                     	;# 
   601  0841                     	;# 
   602  0841                     	;# 
   603  0842                     	;# 
   604  0843                     	;# 
   605  0843                     	;# 
   606  0844                     	;# 
   607  0845                     	;# 
   608  0845                     	;# 
   609  0846                     	;# 
   610  0847                     	;# 
   611  0847                     	;# 
   612  0848                     	;# 
   613  0849                     	;# 
   614  084A                     	;# 
   615  084B                     	;# 
   616  084C                     	;# 
   617  084D                     	;# 
   618  084E                     	;# 
   619  084F                     	;# 
   620  0851                     	;# 
   621  0852                     	;# 
   622  0853                     	;# 
   623  0854                     	;# 
   624  0855                     	;# 
   625  0856                     	;# 
   626  0857                     	;# 
   627  0858                     	;# 
   628  0859                     	;# 
   629  085A                     	;# 
   630  085B                     	;# 
   631  085C                     	;# 
   632  085D                     	;# 
   633  085E                     	;# 
   634  085F                     	;# 
   635  0860                     	;# 
   636  0861                     	;# 
   637  0861                     	;# 
   638  0862                     	;# 
   639  0863                     	;# 
   640  0863                     	;# 
   641  0864                     	;# 
   642  0865                     	;# 
   643  0865                     	;# 
   644  0866                     	;# 
   645  0867                     	;# 
   646  0867                     	;# 
   647  0868                     	;# 
   648  0869                     	;# 
   649  086A                     	;# 
   650  086B                     	;# 
   651  086C                     	;# 
   652  086D                     	;# 
   653  086E                     	;# 
   654  086F                     	;# 
   655  0FE4                     	;# 
   656  0FE5                     	;# 
   657  0FE6                     	;# 
   658  0FE7                     	;# 
   659  0FE8                     	;# 
   660  0FE9                     	;# 
   661  0FEA                     	;# 
   662  0FEB                     	;# 
   663  0FED                     	;# 
   664  0FEE                     	;# 
   665  0FEF                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0008                     	;# 
   675  0009                     	;# 
   676  000A                     	;# 
   677  000B                     	;# 
   678  000C                     	;# 
   679  000D                     	;# 
   680  000E                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0014                     	;# 
   686  0015                     	;# 
   687  0016                     	;# 
   688  0016                     	;# 
   689  0017                     	;# 
   690  0018                     	;# 
   691  0019                     	;# 
   692  001A                     	;# 
   693  001B                     	;# 
   694  001C                     	;# 
   695  008C                     	;# 
   696  008D                     	;# 
   697  008E                     	;# 
   698  0090                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0097                     	;# 
   706  0098                     	;# 
   707  0099                     	;# 
   708  009A                     	;# 
   709  009B                     	;# 
   710  009B                     	;# 
   711  009C                     	;# 
   712  009D                     	;# 
   713  009E                     	;# 
   714  009F                     	;# 
   715  010C                     	;# 
   716  010D                     	;# 
   717  010E                     	;# 
   718  0111                     	;# 
   719  0112                     	;# 
   720  0113                     	;# 
   721  0114                     	;# 
   722  0115                     	;# 
   723  0116                     	;# 
   724  0117                     	;# 
   725  0118                     	;# 
   726  0119                     	;# 
   727  011A                     	;# 
   728  011B                     	;# 
   729  011C                     	;# 
   730  011D                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011E                     	;# 
   734  011F                     	;# 
   735  018C                     	;# 
   736  018D                     	;# 
   737  0191                     	;# 
   738  0191                     	;# 
   739  0192                     	;# 
   740  0193                     	;# 
   741  0193                     	;# 
   742  0193                     	;# 
   743  0194                     	;# 
   744  0195                     	;# 
   745  0196                     	;# 
   746  0197                     	;# 
   747  0199                     	;# 
   748  0199                     	;# 
   749  0199                     	;# 
   750  019A                     	;# 
   751  019A                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019C                     	;# 
   760  019C                     	;# 
   761  019D                     	;# 
   762  019D                     	;# 
   763  019D                     	;# 
   764  019E                     	;# 
   765  019E                     	;# 
   766  019E                     	;# 
   767  019F                     	;# 
   768  019F                     	;# 
   769  019F                     	;# 
   770  019F                     	;# 
   771  019F                     	;# 
   772  020C                     	;# 
   773  020D                     	;# 
   774  020E                     	;# 
   775  0210                     	;# 
   776  0211                     	;# 
   777  0211                     	;# 
   778  0212                     	;# 
   779  0212                     	;# 
   780  0213                     	;# 
   781  0213                     	;# 
   782  0214                     	;# 
   783  0214                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  028C                     	;# 
   793  028D                     	;# 
   794  028E                     	;# 
   795  0291                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0293                     	;# 
   799  0298                     	;# 
   800  0298                     	;# 
   801  0299                     	;# 
   802  029A                     	;# 
   803  030C                     	;# 
   804  030D                     	;# 
   805  030E                     	;# 
   806  0311                     	;# 
   807  0311                     	;# 
   808  0312                     	;# 
   809  0313                     	;# 
   810  038C                     	;# 
   811  038D                     	;# 
   812  038E                     	;# 
   813  0390                     	;# 
   814  0391                     	;# 
   815  0392                     	;# 
   816  0393                     	;# 
   817  0394                     	;# 
   818  0395                     	;# 
   819  0396                     	;# 
   820  0397                     	;# 
   821  0398                     	;# 
   822  0399                     	;# 
   823  039D                     	;# 
   824  039E                     	;# 
   825  039F                     	;# 
   826  0511                     	;# 
   827  0513                     	;# 
   828  051A                     	;# 
   829  0811                     	;# 
   830  0812                     	;# 
   831  0813                     	;# 
   832  0814                     	;# 
   833  0815                     	;# 
   834  0816                     	;# 
   835  0817                     	;# 
   836  0818                     	;# 
   837  0819                     	;# 
   838  081A                     	;# 
   839  081B                     	;# 
   840  081C                     	;# 
   841  081D                     	;# 
   842  081E                     	;# 
   843  081F                     	;# 
   844  0820                     	;# 
   845  0821                     	;# 
   846  0821                     	;# 
   847  0822                     	;# 
   848  0823                     	;# 
   849  0823                     	;# 
   850  0824                     	;# 
   851  0825                     	;# 
   852  0825                     	;# 
   853  0826                     	;# 
   854  0827                     	;# 
   855  0827                     	;# 
   856  0828                     	;# 
   857  0829                     	;# 
   858  082A                     	;# 
   859  082B                     	;# 
   860  082C                     	;# 
   861  082D                     	;# 
   862  082E                     	;# 
   863  082F                     	;# 
   864  0831                     	;# 
   865  0832                     	;# 
   866  0833                     	;# 
   867  0834                     	;# 
   868  0835                     	;# 
   869  0836                     	;# 
   870  0837                     	;# 
   871  0838                     	;# 
   872  0839                     	;# 
   873  083A                     	;# 
   874  083B                     	;# 
   875  083C                     	;# 
   876  083D                     	;# 
   877  083E                     	;# 
   878  083F                     	;# 
   879  0840                     	;# 
   880  0841                     	;# 
   881  0841                     	;# 
   882  0842                     	;# 
   883  0843                     	;# 
   884  0843                     	;# 
   885  0844                     	;# 
   886  0845                     	;# 
   887  0845                     	;# 
   888  0846                     	;# 
   889  0847                     	;# 
   890  0847                     	;# 
   891  0848                     	;# 
   892  0849                     	;# 
   893  084A                     	;# 
   894  084B                     	;# 
   895  084C                     	;# 
   896  084D                     	;# 
   897  084E                     	;# 
   898  084F                     	;# 
   899  0851                     	;# 
   900  0852                     	;# 
   901  0853                     	;# 
   902  0854                     	;# 
   903  0855                     	;# 
   904  0856                     	;# 
   905  0857                     	;# 
   906  0858                     	;# 
   907  0859                     	;# 
   908  085A                     	;# 
   909  085B                     	;# 
   910  085C                     	;# 
   911  085D                     	;# 
   912  085E                     	;# 
   913  085F                     	;# 
   914  0860                     	;# 
   915  0861                     	;# 
   916  0861                     	;# 
   917  0862                     	;# 
   918  0863                     	;# 
   919  0863                     	;# 
   920  0864                     	;# 
   921  0865                     	;# 
   922  0865                     	;# 
   923  0866                     	;# 
   924  0867                     	;# 
   925  0867                     	;# 
   926  0868                     	;# 
   927  0869                     	;# 
   928  086A                     	;# 
   929  086B                     	;# 
   930  086C                     	;# 
   931  086D                     	;# 
   932  086E                     	;# 
   933  086F                     	;# 
   934  0FE4                     	;# 
   935  0FE5                     	;# 
   936  0FE6                     	;# 
   937  0FE7                     	;# 
   938  0FE8                     	;# 
   939  0FE9                     	;# 
   940  0FEA                     	;# 
   941  0FEB                     	;# 
   942  0FED                     	;# 
   943  0FEE                     	;# 
   944  0FEF                     	;# 
   945  0000                     	;# 
   946  0001                     	;# 
   947  0002                     	;# 
   948  0003                     	;# 
   949  0004                     	;# 
   950  0005                     	;# 
   951  0006                     	;# 
   952  0007                     	;# 
   953  0008                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  0010                     	;# 
   961  0011                     	;# 
   962  0012                     	;# 
   963  0013                     	;# 
   964  0014                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  008C                     	;# 
   975  008D                     	;# 
   976  008E                     	;# 
   977  0090                     	;# 
   978  0091                     	;# 
   979  0092                     	;# 
   980  0093                     	;# 
   981  0094                     	;# 
   982  0095                     	;# 
   983  0096                     	;# 
   984  0097                     	;# 
   985  0098                     	;# 
   986  0099                     	;# 
   987  009A                     	;# 
   988  009B                     	;# 
   989  009B                     	;# 
   990  009C                     	;# 
   991  009D                     	;# 
   992  009E                     	;# 
   993  009F                     	;# 
   994  010C                     	;# 
   995  010D                     	;# 
   996  010E                     	;# 
   997  0111                     	;# 
   998  0112                     	;# 
   999  0113                     	;# 
  1000  0114                     	;# 
  1001  0115                     	;# 
  1002  0116                     	;# 
  1003  0117                     	;# 
  1004  0118                     	;# 
  1005  0119                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011C                     	;# 
  1009  011D                     	;# 
  1010  011D                     	;# 
  1011  011D                     	;# 
  1012  011E                     	;# 
  1013  011F                     	;# 
  1014  018C                     	;# 
  1015  018D                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0197                     	;# 
  1026  0199                     	;# 
  1027  0199                     	;# 
  1028  0199                     	;# 
  1029  019A                     	;# 
  1030  019A                     	;# 
  1031  019A                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019C                     	;# 
  1038  019C                     	;# 
  1039  019C                     	;# 
  1040  019D                     	;# 
  1041  019D                     	;# 
  1042  019D                     	;# 
  1043  019E                     	;# 
  1044  019E                     	;# 
  1045  019E                     	;# 
  1046  019F                     	;# 
  1047  019F                     	;# 
  1048  019F                     	;# 
  1049  019F                     	;# 
  1050  019F                     	;# 
  1051  020C                     	;# 
  1052  020D                     	;# 
  1053  020E                     	;# 
  1054  0210                     	;# 
  1055  0211                     	;# 
  1056  0211                     	;# 
  1057  0212                     	;# 
  1058  0212                     	;# 
  1059  0213                     	;# 
  1060  0213                     	;# 
  1061  0214                     	;# 
  1062  0214                     	;# 
  1063  0215                     	;# 
  1064  0215                     	;# 
  1065  0215                     	;# 
  1066  0215                     	;# 
  1067  0216                     	;# 
  1068  0216                     	;# 
  1069  0217                     	;# 
  1070  0217                     	;# 
  1071  028C                     	;# 
  1072  028D                     	;# 
  1073  028E                     	;# 
  1074  0291                     	;# 
  1075  0291                     	;# 
  1076  0292                     	;# 
  1077  0293                     	;# 
  1078  0298                     	;# 
  1079  0298                     	;# 
  1080  0299                     	;# 
  1081  029A                     	;# 
  1082  030C                     	;# 
  1083  030D                     	;# 
  1084  030E                     	;# 
  1085  0311                     	;# 
  1086  0311                     	;# 
  1087  0312                     	;# 
  1088  0313                     	;# 
  1089  038C                     	;# 
  1090  038D                     	;# 
  1091  038E                     	;# 
  1092  0390                     	;# 
  1093  0391                     	;# 
  1094  0392                     	;# 
  1095  0393                     	;# 
  1096  0394                     	;# 
  1097  0395                     	;# 
  1098  0396                     	;# 
  1099  0397                     	;# 
  1100  0398                     	;# 
  1101  0399                     	;# 
  1102  039D                     	;# 
  1103  039E                     	;# 
  1104  039F                     	;# 
  1105  0511                     	;# 
  1106  0513                     	;# 
  1107  051A                     	;# 
  1108  0811                     	;# 
  1109  0812                     	;# 
  1110  0813                     	;# 
  1111  0814                     	;# 
  1112  0815                     	;# 
  1113  0816                     	;# 
  1114  0817                     	;# 
  1115  0818                     	;# 
  1116  0819                     	;# 
  1117  081A                     	;# 
  1118  081B                     	;# 
  1119  081C                     	;# 
  1120  081D                     	;# 
  1121  081E                     	;# 
  1122  081F                     	;# 
  1123  0820                     	;# 
  1124  0821                     	;# 
  1125  0821                     	;# 
  1126  0822                     	;# 
  1127  0823                     	;# 
  1128  0823                     	;# 
  1129  0824                     	;# 
  1130  0825                     	;# 
  1131  0825                     	;# 
  1132  0826                     	;# 
  1133  0827                     	;# 
  1134  0827                     	;# 
  1135  0828                     	;# 
  1136  0829                     	;# 
  1137  082A                     	;# 
  1138  082B                     	;# 
  1139  082C                     	;# 
  1140  082D                     	;# 
  1141  082E                     	;# 
  1142  082F                     	;# 
  1143  0831                     	;# 
  1144  0832                     	;# 
  1145  0833                     	;# 
  1146  0834                     	;# 
  1147  0835                     	;# 
  1148  0836                     	;# 
  1149  0837                     	;# 
  1150  0838                     	;# 
  1151  0839                     	;# 
  1152  083A                     	;# 
  1153  083B                     	;# 
  1154  083C                     	;# 
  1155  083D                     	;# 
  1156  083E                     	;# 
  1157  083F                     	;# 
  1158  0840                     	;# 
  1159  0841                     	;# 
  1160  0841                     	;# 
  1161  0842                     	;# 
  1162  0843                     	;# 
  1163  0843                     	;# 
  1164  0844                     	;# 
  1165  0845                     	;# 
  1166  0845                     	;# 
  1167  0846                     	;# 
  1168  0847                     	;# 
  1169  0847                     	;# 
  1170  0848                     	;# 
  1171  0849                     	;# 
  1172  084A                     	;# 
  1173  084B                     	;# 
  1174  084C                     	;# 
  1175  084D                     	;# 
  1176  084E                     	;# 
  1177  084F                     	;# 
  1178  0851                     	;# 
  1179  0852                     	;# 
  1180  0853                     	;# 
  1181  0854                     	;# 
  1182  0855                     	;# 
  1183  0856                     	;# 
  1184  0857                     	;# 
  1185  0858                     	;# 
  1186  0859                     	;# 
  1187  085A                     	;# 
  1188  085B                     	;# 
  1189  085C                     	;# 
  1190  085D                     	;# 
  1191  085E                     	;# 
  1192  085F                     	;# 
  1193  0860                     	;# 
  1194  0861                     	;# 
  1195  0861                     	;# 
  1196  0862                     	;# 
  1197  0863                     	;# 
  1198  0863                     	;# 
  1199  0864                     	;# 
  1200  0865                     	;# 
  1201  0865                     	;# 
  1202  0866                     	;# 
  1203  0867                     	;# 
  1204  0867                     	;# 
  1205  0868                     	;# 
  1206  0869                     	;# 
  1207  086A                     	;# 
  1208  086B                     	;# 
  1209  086C                     	;# 
  1210  086D                     	;# 
  1211  086E                     	;# 
  1212  086F                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000D                     	;# 
  1238  000E                     	;# 
  1239  0010                     	;# 
  1240  0011                     	;# 
  1241  0012                     	;# 
  1242  0013                     	;# 
  1243  0014                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  0090                     	;# 
  1257  0091                     	;# 
  1258  0092                     	;# 
  1259  0093                     	;# 
  1260  0094                     	;# 
  1261  0095                     	;# 
  1262  0096                     	;# 
  1263  0097                     	;# 
  1264  0098                     	;# 
  1265  0099                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009B                     	;# 
  1269  009C                     	;# 
  1270  009D                     	;# 
  1271  009E                     	;# 
  1272  009F                     	;# 
  1273  010C                     	;# 
  1274  010D                     	;# 
  1275  010E                     	;# 
  1276  0111                     	;# 
  1277  0112                     	;# 
  1278  0113                     	;# 
  1279  0114                     	;# 
  1280  0115                     	;# 
  1281  0116                     	;# 
  1282  0117                     	;# 
  1283  0118                     	;# 
  1284  0119                     	;# 
  1285  011A                     	;# 
  1286  011B                     	;# 
  1287  011C                     	;# 
  1288  011D                     	;# 
  1289  011D                     	;# 
  1290  011D                     	;# 
  1291  011E                     	;# 
  1292  011F                     	;# 
  1293  018C                     	;# 
  1294  018D                     	;# 
  1295  0191                     	;# 
  1296  0191                     	;# 
  1297  0192                     	;# 
  1298  0193                     	;# 
  1299  0193                     	;# 
  1300  0193                     	;# 
  1301  0194                     	;# 
  1302  0195                     	;# 
  1303  0196                     	;# 
  1304  0197                     	;# 
  1305  0199                     	;# 
  1306  0199                     	;# 
  1307  0199                     	;# 
  1308  019A                     	;# 
  1309  019A                     	;# 
  1310  019A                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019B                     	;# 
  1315  019B                     	;# 
  1316  019C                     	;# 
  1317  019C                     	;# 
  1318  019C                     	;# 
  1319  019D                     	;# 
  1320  019D                     	;# 
  1321  019D                     	;# 
  1322  019E                     	;# 
  1323  019E                     	;# 
  1324  019E                     	;# 
  1325  019F                     	;# 
  1326  019F                     	;# 
  1327  019F                     	;# 
  1328  019F                     	;# 
  1329  019F                     	;# 
  1330  020C                     	;# 
  1331  020D                     	;# 
  1332  020E                     	;# 
  1333  0210                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  0212                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0213                     	;# 
  1340  0214                     	;# 
  1341  0214                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0215                     	;# 
  1345  0215                     	;# 
  1346  0216                     	;# 
  1347  0216                     	;# 
  1348  0217                     	;# 
  1349  0217                     	;# 
  1350  028C                     	;# 
  1351  028D                     	;# 
  1352  028E                     	;# 
  1353  0291                     	;# 
  1354  0291                     	;# 
  1355  0292                     	;# 
  1356  0293                     	;# 
  1357  0298                     	;# 
  1358  0298                     	;# 
  1359  0299                     	;# 
  1360  029A                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  0311                     	;# 
  1365  0311                     	;# 
  1366  0312                     	;# 
  1367  0313                     	;# 
  1368  038C                     	;# 
  1369  038D                     	;# 
  1370  038E                     	;# 
  1371  0390                     	;# 
  1372  0391                     	;# 
  1373  0392                     	;# 
  1374  0393                     	;# 
  1375  0394                     	;# 
  1376  0395                     	;# 
  1377  0396                     	;# 
  1378  0397                     	;# 
  1379  0398                     	;# 
  1380  0399                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  0511                     	;# 
  1385  0513                     	;# 
  1386  051A                     	;# 
  1387  0811                     	;# 
  1388  0812                     	;# 
  1389  0813                     	;# 
  1390  0814                     	;# 
  1391  0815                     	;# 
  1392  0816                     	;# 
  1393  0817                     	;# 
  1394  0818                     	;# 
  1395  0819                     	;# 
  1396  081A                     	;# 
  1397  081B                     	;# 
  1398  081C                     	;# 
  1399  081D                     	;# 
  1400  081E                     	;# 
  1401  081F                     	;# 
  1402  0820                     	;# 
  1403  0821                     	;# 
  1404  0821                     	;# 
  1405  0822                     	;# 
  1406  0823                     	;# 
  1407  0823                     	;# 
  1408  0824                     	;# 
  1409  0825                     	;# 
  1410  0825                     	;# 
  1411  0826                     	;# 
  1412  0827                     	;# 
  1413  0827                     	;# 
  1414  0828                     	;# 
  1415  0829                     	;# 
  1416  082A                     	;# 
  1417  082B                     	;# 
  1418  082C                     	;# 
  1419  082D                     	;# 
  1420  082E                     	;# 
  1421  082F                     	;# 
  1422  0831                     	;# 
  1423  0832                     	;# 
  1424  0833                     	;# 
  1425  0834                     	;# 
  1426  0835                     	;# 
  1427  0836                     	;# 
  1428  0837                     	;# 
  1429  0838                     	;# 
  1430  0839                     	;# 
  1431  083A                     	;# 
  1432  083B                     	;# 
  1433  083C                     	;# 
  1434  083D                     	;# 
  1435  083E                     	;# 
  1436  083F                     	;# 
  1437  0840                     	;# 
  1438  0841                     	;# 
  1439  0841                     	;# 
  1440  0842                     	;# 
  1441  0843                     	;# 
  1442  0843                     	;# 
  1443  0844                     	;# 
  1444  0845                     	;# 
  1445  0845                     	;# 
  1446  0846                     	;# 
  1447  0847                     	;# 
  1448  0847                     	;# 
  1449  0848                     	;# 
  1450  0849                     	;# 
  1451  084A                     	;# 
  1452  084B                     	;# 
  1453  084C                     	;# 
  1454  084D                     	;# 
  1455  084E                     	;# 
  1456  084F                     	;# 
  1457  0851                     	;# 
  1458  0852                     	;# 
  1459  0853                     	;# 
  1460  0854                     	;# 
  1461  0855                     	;# 
  1462  0856                     	;# 
  1463  0857                     	;# 
  1464  0858                     	;# 
  1465  0859                     	;# 
  1466  085A                     	;# 
  1467  085B                     	;# 
  1468  085C                     	;# 
  1469  085D                     	;# 
  1470  085E                     	;# 
  1471  085F                     	;# 
  1472  0860                     	;# 
  1473  0861                     	;# 
  1474  0861                     	;# 
  1475  0862                     	;# 
  1476  0863                     	;# 
  1477  0863                     	;# 
  1478  0864                     	;# 
  1479  0865                     	;# 
  1480  0865                     	;# 
  1481  0866                     	;# 
  1482  0867                     	;# 
  1483  0867                     	;# 
  1484  0868                     	;# 
  1485  0869                     	;# 
  1486  086A                     	;# 
  1487  086B                     	;# 
  1488  086C                     	;# 
  1489  086D                     	;# 
  1490  086E                     	;# 
  1491  086F                     	;# 
  1492  0FE4                     	;# 
  1493  0FE5                     	;# 
  1494  0FE6                     	;# 
  1495  0FE7                     	;# 
  1496  0FE8                     	;# 
  1497  0FE9                     	;# 
  1498  0FEA                     	;# 
  1499  0FEB                     	;# 
  1500  0FED                     	;# 
  1501  0FEE                     	;# 
  1502  0FEF                     	;# 
  1503  0000                     	;# 
  1504  0001                     	;# 
  1505  0002                     	;# 
  1506  0003                     	;# 
  1507  0004                     	;# 
  1508  0005                     	;# 
  1509  0006                     	;# 
  1510  0007                     	;# 
  1511  0008                     	;# 
  1512  0009                     	;# 
  1513  000A                     	;# 
  1514  000B                     	;# 
  1515  000C                     	;# 
  1516  000D                     	;# 
  1517  000E                     	;# 
  1518  0010                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  008C                     	;# 
  1533  008D                     	;# 
  1534  008E                     	;# 
  1535  0090                     	;# 
  1536  0091                     	;# 
  1537  0092                     	;# 
  1538  0093                     	;# 
  1539  0094                     	;# 
  1540  0095                     	;# 
  1541  0096                     	;# 
  1542  0097                     	;# 
  1543  0098                     	;# 
  1544  0099                     	;# 
  1545  009A                     	;# 
  1546  009B                     	;# 
  1547  009B                     	;# 
  1548  009C                     	;# 
  1549  009D                     	;# 
  1550  009E                     	;# 
  1551  009F                     	;# 
  1552  010C                     	;# 
  1553  010D                     	;# 
  1554  010E                     	;# 
  1555  0111                     	;# 
  1556  0112                     	;# 
  1557  0113                     	;# 
  1558  0114                     	;# 
  1559  0115                     	;# 
  1560  0116                     	;# 
  1561  0117                     	;# 
  1562  0118                     	;# 
  1563  0119                     	;# 
  1564  011A                     	;# 
  1565  011B                     	;# 
  1566  011C                     	;# 
  1567  011D                     	;# 
  1568  011D                     	;# 
  1569  011D                     	;# 
  1570  011E                     	;# 
  1571  011F                     	;# 
  1572  018C                     	;# 
  1573  018D                     	;# 
  1574  0191                     	;# 
  1575  0191                     	;# 
  1576  0192                     	;# 
  1577  0193                     	;# 
  1578  0193                     	;# 
  1579  0193                     	;# 
  1580  0194                     	;# 
  1581  0195                     	;# 
  1582  0196                     	;# 
  1583  0197                     	;# 
  1584  0199                     	;# 
  1585  0199                     	;# 
  1586  0199                     	;# 
  1587  019A                     	;# 
  1588  019A                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019C                     	;# 
  1598  019D                     	;# 
  1599  019D                     	;# 
  1600  019D                     	;# 
  1601  019E                     	;# 
  1602  019E                     	;# 
  1603  019E                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  019F                     	;# 
  1608  019F                     	;# 
  1609  020C                     	;# 
  1610  020D                     	;# 
  1611  020E                     	;# 
  1612  0210                     	;# 
  1613  0211                     	;# 
  1614  0211                     	;# 
  1615  0212                     	;# 
  1616  0212                     	;# 
  1617  0213                     	;# 
  1618  0213                     	;# 
  1619  0214                     	;# 
  1620  0214                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0216                     	;# 
  1626  0216                     	;# 
  1627  0217                     	;# 
  1628  0217                     	;# 
  1629  028C                     	;# 
  1630  028D                     	;# 
  1631  028E                     	;# 
  1632  0291                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  029A                     	;# 
  1640  030C                     	;# 
  1641  030D                     	;# 
  1642  030E                     	;# 
  1643  0311                     	;# 
  1644  0311                     	;# 
  1645  0312                     	;# 
  1646  0313                     	;# 
  1647  038C                     	;# 
  1648  038D                     	;# 
  1649  038E                     	;# 
  1650  0390                     	;# 
  1651  0391                     	;# 
  1652  0392                     	;# 
  1653  0393                     	;# 
  1654  0394                     	;# 
  1655  0395                     	;# 
  1656  0396                     	;# 
  1657  0397                     	;# 
  1658  0398                     	;# 
  1659  0399                     	;# 
  1660  039D                     	;# 
  1661  039E                     	;# 
  1662  039F                     	;# 
  1663  0511                     	;# 
  1664  0513                     	;# 
  1665  051A                     	;# 
  1666  0811                     	;# 
  1667  0812                     	;# 
  1668  0813                     	;# 
  1669  0814                     	;# 
  1670  0815                     	;# 
  1671  0816                     	;# 
  1672  0817                     	;# 
  1673  0818                     	;# 
  1674  0819                     	;# 
  1675  081A                     	;# 
  1676  081B                     	;# 
  1677  081C                     	;# 
  1678  081D                     	;# 
  1679  081E                     	;# 
  1680  081F                     	;# 
  1681  0820                     	;# 
  1682  0821                     	;# 
  1683  0821                     	;# 
  1684  0822                     	;# 
  1685  0823                     	;# 
  1686  0823                     	;# 
  1687  0824                     	;# 
  1688  0825                     	;# 
  1689  0825                     	;# 
  1690  0826                     	;# 
  1691  0827                     	;# 
  1692  0827                     	;# 
  1693  0828                     	;# 
  1694  0829                     	;# 
  1695  082A                     	;# 
  1696  082B                     	;# 
  1697  082C                     	;# 
  1698  082D                     	;# 
  1699  082E                     	;# 
  1700  082F                     	;# 
  1701  0831                     	;# 
  1702  0832                     	;# 
  1703  0833                     	;# 
  1704  0834                     	;# 
  1705  0835                     	;# 
  1706  0836                     	;# 
  1707  0837                     	;# 
  1708  0838                     	;# 
  1709  0839                     	;# 
  1710  083A                     	;# 
  1711  083B                     	;# 
  1712  083C                     	;# 
  1713  083D                     	;# 
  1714  083E                     	;# 
  1715  083F                     	;# 
  1716  0840                     	;# 
  1717  0841                     	;# 
  1718  0841                     	;# 
  1719  0842                     	;# 
  1720  0843                     	;# 
  1721  0843                     	;# 
  1722  0844                     	;# 
  1723  0845                     	;# 
  1724  0845                     	;# 
  1725  0846                     	;# 
  1726  0847                     	;# 
  1727  0847                     	;# 
  1728  0848                     	;# 
  1729  0849                     	;# 
  1730  084A                     	;# 
  1731  084B                     	;# 
  1732  084C                     	;# 
  1733  084D                     	;# 
  1734  084E                     	;# 
  1735  084F                     	;# 
  1736  0851                     	;# 
  1737  0852                     	;# 
  1738  0853                     	;# 
  1739  0854                     	;# 
  1740  0855                     	;# 
  1741  0856                     	;# 
  1742  0857                     	;# 
  1743  0858                     	;# 
  1744  0859                     	;# 
  1745  085A                     	;# 
  1746  085B                     	;# 
  1747  085C                     	;# 
  1748  085D                     	;# 
  1749  085E                     	;# 
  1750  085F                     	;# 
  1751  0860                     	;# 
  1752  0861                     	;# 
  1753  0861                     	;# 
  1754  0862                     	;# 
  1755  0863                     	;# 
  1756  0863                     	;# 
  1757  0864                     	;# 
  1758  0865                     	;# 
  1759  0865                     	;# 
  1760  0866                     	;# 
  1761  0867                     	;# 
  1762  0867                     	;# 
  1763  0868                     	;# 
  1764  0869                     	;# 
  1765  086A                     	;# 
  1766  086B                     	;# 
  1767  086C                     	;# 
  1768  086D                     	;# 
  1769  086E                     	;# 
  1770  086F                     	;# 
  1771  0FE4                     	;# 
  1772  0FE5                     	;# 
  1773  0FE6                     	;# 
  1774  0FE7                     	;# 
  1775  0FE8                     	;# 
  1776  0FE9                     	;# 
  1777  0FEA                     	;# 
  1778  0FEB                     	;# 
  1779  0FED                     	;# 
  1780  0FEE                     	;# 
  1781  0FEF                     	;# 
  1782  0000                     	;# 
  1783  0001                     	;# 
  1784  0002                     	;# 
  1785  0003                     	;# 
  1786  0004                     	;# 
  1787  0005                     	;# 
  1788  0006                     	;# 
  1789  0007                     	;# 
  1790  0008                     	;# 
  1791  0009                     	;# 
  1792  000A                     	;# 
  1793  000B                     	;# 
  1794  000C                     	;# 
  1795  000D                     	;# 
  1796  000E                     	;# 
  1797  0010                     	;# 
  1798  0011                     	;# 
  1799  0012                     	;# 
  1800  0013                     	;# 
  1801  0014                     	;# 
  1802  0015                     	;# 
  1803  0016                     	;# 
  1804  0016                     	;# 
  1805  0017                     	;# 
  1806  0018                     	;# 
  1807  0019                     	;# 
  1808  001A                     	;# 
  1809  001B                     	;# 
  1810  001C                     	;# 
  1811  008C                     	;# 
  1812  008D                     	;# 
  1813  008E                     	;# 
  1814  0090                     	;# 
  1815  0091                     	;# 
  1816  0092                     	;# 
  1817  0093                     	;# 
  1818  0094                     	;# 
  1819  0095                     	;# 
  1820  0096                     	;# 
  1821  0097                     	;# 
  1822  0098                     	;# 
  1823  0099                     	;# 
  1824  009A                     	;# 
  1825  009B                     	;# 
  1826  009B                     	;# 
  1827  009C                     	;# 
  1828  009D                     	;# 
  1829  009E                     	;# 
  1830  009F                     	;# 
  1831  010C                     	;# 
  1832  010D                     	;# 
  1833  010E                     	;# 
  1834  0111                     	;# 
  1835  0112                     	;# 
  1836  0113                     	;# 
  1837  0114                     	;# 
  1838  0115                     	;# 
  1839  0116                     	;# 
  1840  0117                     	;# 
  1841  0118                     	;# 
  1842  0119                     	;# 
  1843  011A                     	;# 
  1844  011B                     	;# 
  1845  011C                     	;# 
  1846  011D                     	;# 
  1847  011D                     	;# 
  1848  011D                     	;# 
  1849  011E                     	;# 
  1850  011F                     	;# 
  1851  018C                     	;# 
  1852  018D                     	;# 
  1853  0191                     	;# 
  1854  0191                     	;# 
  1855  0192                     	;# 
  1856  0193                     	;# 
  1857  0193                     	;# 
  1858  0193                     	;# 
  1859  0194                     	;# 
  1860  0195                     	;# 
  1861  0196                     	;# 
  1862  0197                     	;# 
  1863  0199                     	;# 
  1864  0199                     	;# 
  1865  0199                     	;# 
  1866  019A                     	;# 
  1867  019A                     	;# 
  1868  019A                     	;# 
  1869  019B                     	;# 
  1870  019B                     	;# 
  1871  019B                     	;# 
  1872  019B                     	;# 
  1873  019B                     	;# 
  1874  019C                     	;# 
  1875  019C                     	;# 
  1876  019C                     	;# 
  1877  019D                     	;# 
  1878  019D                     	;# 
  1879  019D                     	;# 
  1880  019E                     	;# 
  1881  019E                     	;# 
  1882  019E                     	;# 
  1883  019F                     	;# 
  1884  019F                     	;# 
  1885  019F                     	;# 
  1886  019F                     	;# 
  1887  019F                     	;# 
  1888  020C                     	;# 
  1889  020D                     	;# 
  1890  020E                     	;# 
  1891  0210                     	;# 
  1892  0211                     	;# 
  1893  0211                     	;# 
  1894  0212                     	;# 
  1895  0212                     	;# 
  1896  0213                     	;# 
  1897  0213                     	;# 
  1898  0214                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0215                     	;# 
  1904  0216                     	;# 
  1905  0216                     	;# 
  1906  0217                     	;# 
  1907  0217                     	;# 
  1908  028C                     	;# 
  1909  028D                     	;# 
  1910  028E                     	;# 
  1911  0291                     	;# 
  1912  0291                     	;# 
  1913  0292                     	;# 
  1914  0293                     	;# 
  1915  0298                     	;# 
  1916  0298                     	;# 
  1917  0299                     	;# 
  1918  029A                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  0311                     	;# 
  1923  0311                     	;# 
  1924  0312                     	;# 
  1925  0313                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0390                     	;# 
  1930  0391                     	;# 
  1931  0392                     	;# 
  1932  0393                     	;# 
  1933  0394                     	;# 
  1934  0395                     	;# 
  1935  0396                     	;# 
  1936  0397                     	;# 
  1937  0398                     	;# 
  1938  0399                     	;# 
  1939  039D                     	;# 
  1940  039E                     	;# 
  1941  039F                     	;# 
  1942  0511                     	;# 
  1943  0513                     	;# 
  1944  051A                     	;# 
  1945  0811                     	;# 
  1946  0812                     	;# 
  1947  0813                     	;# 
  1948  0814                     	;# 
  1949  0815                     	;# 
  1950  0816                     	;# 
  1951  0817                     	;# 
  1952  0818                     	;# 
  1953  0819                     	;# 
  1954  081A                     	;# 
  1955  081B                     	;# 
  1956  081C                     	;# 
  1957  081D                     	;# 
  1958  081E                     	;# 
  1959  081F                     	;# 
  1960  0820                     	;# 
  1961  0821                     	;# 
  1962  0821                     	;# 
  1963  0822                     	;# 
  1964  0823                     	;# 
  1965  0823                     	;# 
  1966  0824                     	;# 
  1967  0825                     	;# 
  1968  0825                     	;# 
  1969  0826                     	;# 
  1970  0827                     	;# 
  1971  0827                     	;# 
  1972  0828                     	;# 
  1973  0829                     	;# 
  1974  082A                     	;# 
  1975  082B                     	;# 
  1976  082C                     	;# 
  1977  082D                     	;# 
  1978  082E                     	;# 
  1979  082F                     	;# 
  1980  0831                     	;# 
  1981  0832                     	;# 
  1982  0833                     	;# 
  1983  0834                     	;# 
  1984  0835                     	;# 
  1985  0836                     	;# 
  1986  0837                     	;# 
  1987  0838                     	;# 
  1988  0839                     	;# 
  1989  083A                     	;# 
  1990  083B                     	;# 
  1991  083C                     	;# 
  1992  083D                     	;# 
  1993  083E                     	;# 
  1994  083F                     	;# 
  1995  0840                     	;# 
  1996  0841                     	;# 
  1997  0841                     	;# 
  1998  0842                     	;# 
  1999  0843                     	;# 
  2000  0843                     	;# 
  2001  0844                     	;# 
  2002  0845                     	;# 
  2003  0845                     	;# 
  2004  0846                     	;# 
  2005  0847                     	;# 
  2006  0847                     	;# 
  2007  0848                     	;# 
  2008  0849                     	;# 
  2009  084A                     	;# 
  2010  084B                     	;# 
  2011  084C                     	;# 
  2012  084D                     	;# 
  2013  084E                     	;# 
  2014  084F                     	;# 
  2015  0851                     	;# 
  2016  0852                     	;# 
  2017  0853                     	;# 
  2018  0854                     	;# 
  2019  0855                     	;# 
  2020  0856                     	;# 
  2021  0857                     	;# 
  2022  0858                     	;# 
  2023  0859                     	;# 
  2024  085A                     	;# 
  2025  085B                     	;# 
  2026  085C                     	;# 
  2027  085D                     	;# 
  2028  085E                     	;# 
  2029  085F                     	;# 
  2030  0860                     	;# 
  2031  0861                     	;# 
  2032  0861                     	;# 
  2033  0862                     	;# 
  2034  0863                     	;# 
  2035  0863                     	;# 
  2036  0864                     	;# 
  2037  0865                     	;# 
  2038  0865                     	;# 
  2039  0866                     	;# 
  2040  0867                     	;# 
  2041  0867                     	;# 
  2042  0868                     	;# 
  2043  0869                     	;# 
  2044  086A                     	;# 
  2045  086B                     	;# 
  2046  086C                     	;# 
  2047  086D                     	;# 
  2048  086E                     	;# 
  2049  086F                     	;# 
  2050  0FE4                     	;# 
  2051  0FE5                     	;# 
  2052  0FE6                     	;# 
  2053  0FE7                     	;# 
  2054  0FE8                     	;# 
  2055  0FE9                     	;# 
  2056  0FEA                     	;# 
  2057  0FEB                     	;# 
  2058  0FED                     	;# 
  2059  0FEE                     	;# 
  2060  0FEF                     	;# 
  2061  0000                     	;# 
  2062  0001                     	;# 
  2063  0002                     	;# 
  2064  0003                     	;# 
  2065  0004                     	;# 
  2066  0005                     	;# 
  2067  0006                     	;# 
  2068  0007                     	;# 
  2069  0008                     	;# 
  2070  0009                     	;# 
  2071  000A                     	;# 
  2072  000B                     	;# 
  2073  000C                     	;# 
  2074  000D                     	;# 
  2075  000E                     	;# 
  2076  0010                     	;# 
  2077  0011                     	;# 
  2078  0012                     	;# 
  2079  0013                     	;# 
  2080  0014                     	;# 
  2081  0015                     	;# 
  2082  0016                     	;# 
  2083  0016                     	;# 
  2084  0017                     	;# 
  2085  0018                     	;# 
  2086  0019                     	;# 
  2087  001A                     	;# 
  2088  001B                     	;# 
  2089  001C                     	;# 
  2090  008C                     	;# 
  2091  008D                     	;# 
  2092  008E                     	;# 
  2093  0090                     	;# 
  2094  0091                     	;# 
  2095  0092                     	;# 
  2096  0093                     	;# 
  2097  0094                     	;# 
  2098  0095                     	;# 
  2099  0096                     	;# 
  2100  0097                     	;# 
  2101  0098                     	;# 
  2102  0099                     	;# 
  2103  009A                     	;# 
  2104  009B                     	;# 
  2105  009B                     	;# 
  2106  009C                     	;# 
  2107  009D                     	;# 
  2108  009E                     	;# 
  2109  009F                     	;# 
  2110  010C                     	;# 
  2111  010D                     	;# 
  2112  010E                     	;# 
  2113  0111                     	;# 
  2114  0112                     	;# 
  2115  0113                     	;# 
  2116  0114                     	;# 
  2117  0115                     	;# 
  2118  0116                     	;# 
  2119  0117                     	;# 
  2120  0118                     	;# 
  2121  0119                     	;# 
  2122  011A                     	;# 
  2123  011B                     	;# 
  2124  011C                     	;# 
  2125  011D                     	;# 
  2126  011D                     	;# 
  2127  011D                     	;# 
  2128  011E                     	;# 
  2129  011F                     	;# 
  2130  018C                     	;# 
  2131  018D                     	;# 
  2132  0191                     	;# 
  2133  0191                     	;# 
  2134  0192                     	;# 
  2135  0193                     	;# 
  2136  0193                     	;# 
  2137  0193                     	;# 
  2138  0194                     	;# 
  2139  0195                     	;# 
  2140  0196                     	;# 
  2141  0197                     	;# 
  2142  0199                     	;# 
  2143  0199                     	;# 
  2144  0199                     	;# 
  2145  019A                     	;# 
  2146  019A                     	;# 
  2147  019A                     	;# 
  2148  019B                     	;# 
  2149  019B                     	;# 
  2150  019B                     	;# 
  2151  019B                     	;# 
  2152  019B                     	;# 
  2153  019C                     	;# 
  2154  019C                     	;# 
  2155  019C                     	;# 
  2156  019D                     	;# 
  2157  019D                     	;# 
  2158  019D                     	;# 
  2159  019E                     	;# 
  2160  019E                     	;# 
  2161  019E                     	;# 
  2162  019F                     	;# 
  2163  019F                     	;# 
  2164  019F                     	;# 
  2165  019F                     	;# 
  2166  019F                     	;# 
  2167  020C                     	;# 
  2168  020D                     	;# 
  2169  020E                     	;# 
  2170  0210                     	;# 
  2171  0211                     	;# 
  2172  0211                     	;# 
  2173  0212                     	;# 
  2174  0212                     	;# 
  2175  0213                     	;# 
  2176  0213                     	;# 
  2177  0214                     	;# 
  2178  0214                     	;# 
  2179  0215                     	;# 
  2180  0215                     	;# 
  2181  0215                     	;# 
  2182  0215                     	;# 
  2183  0216                     	;# 
  2184  0216                     	;# 
  2185  0217                     	;# 
  2186  0217                     	;# 
  2187  028C                     	;# 
  2188  028D                     	;# 
  2189  028E                     	;# 
  2190  0291                     	;# 
  2191  0291                     	;# 
  2192  0292                     	;# 
  2193  0293                     	;# 
  2194  0298                     	;# 
  2195  0298                     	;# 
  2196  0299                     	;# 
  2197  029A                     	;# 
  2198  030C                     	;# 
  2199  030D                     	;# 
  2200  030E                     	;# 
  2201  0311                     	;# 
  2202  0311                     	;# 
  2203  0312                     	;# 
  2204  0313                     	;# 
  2205  038C                     	;# 
  2206  038D                     	;# 
  2207  038E                     	;# 
  2208  0390                     	;# 
  2209  0391                     	;# 
  2210  0392                     	;# 
  2211  0393                     	;# 
  2212  0394                     	;# 
  2213  0395                     	;# 
  2214  0396                     	;# 
  2215  0397                     	;# 
  2216  0398                     	;# 
  2217  0399                     	;# 
  2218  039D                     	;# 
  2219  039E                     	;# 
  2220  039F                     	;# 
  2221  0511                     	;# 
  2222  0513                     	;# 
  2223  051A                     	;# 
  2224  0811                     	;# 
  2225  0812                     	;# 
  2226  0813                     	;# 
  2227  0814                     	;# 
  2228  0815                     	;# 
  2229  0816                     	;# 
  2230  0817                     	;# 
  2231  0818                     	;# 
  2232  0819                     	;# 
  2233  081A                     	;# 
  2234  081B                     	;# 
  2235  081C                     	;# 
  2236  081D                     	;# 
  2237  081E                     	;# 
  2238  081F                     	;# 
  2239  0820                     	;# 
  2240  0821                     	;# 
  2241  0821                     	;# 
  2242  0822                     	;# 
  2243  0823                     	;# 
  2244  0823                     	;# 
  2245  0824                     	;# 
  2246  0825                     	;# 
  2247  0825                     	;# 
  2248  0826                     	;# 
  2249  0827                     	;# 
  2250  0827                     	;# 
  2251  0828                     	;# 
  2252  0829                     	;# 
  2253  082A                     	;# 
  2254  082B                     	;# 
  2255  082C                     	;# 
  2256  082D                     	;# 
  2257  082E                     	;# 
  2258  082F                     	;# 
  2259  0831                     	;# 
  2260  0832                     	;# 
  2261  0833                     	;# 
  2262  0834                     	;# 
  2263  0835                     	;# 
  2264  0836                     	;# 
  2265  0837                     	;# 
  2266  0838                     	;# 
  2267  0839                     	;# 
  2268  083A                     	;# 
  2269  083B                     	;# 
  2270  083C                     	;# 
  2271  083D                     	;# 
  2272  083E                     	;# 
  2273  083F                     	;# 
  2274  0840                     	;# 
  2275  0841                     	;# 
  2276  0841                     	;# 
  2277  0842                     	;# 
  2278  0843                     	;# 
  2279  0843                     	;# 
  2280  0844                     	;# 
  2281  0845                     	;# 
  2282  0845                     	;# 
  2283  0846                     	;# 
  2284  0847                     	;# 
  2285  0847                     	;# 
  2286  0848                     	;# 
  2287  0849                     	;# 
  2288  084A                     	;# 
  2289  084B                     	;# 
  2290  084C                     	;# 
  2291  084D                     	;# 
  2292  084E                     	;# 
  2293  084F                     	;# 
  2294  0851                     	;# 
  2295  0852                     	;# 
  2296  0853                     	;# 
  2297  0854                     	;# 
  2298  0855                     	;# 
  2299  0856                     	;# 
  2300  0857                     	;# 
  2301  0858                     	;# 
  2302  0859                     	;# 
  2303  085A                     	;# 
  2304  085B                     	;# 
  2305  085C                     	;# 
  2306  085D                     	;# 
  2307  085E                     	;# 
  2308  085F                     	;# 
  2309  0860                     	;# 
  2310  0861                     	;# 
  2311  0861                     	;# 
  2312  0862                     	;# 
  2313  0863                     	;# 
  2314  0863                     	;# 
  2315  0864                     	;# 
  2316  0865                     	;# 
  2317  0865                     	;# 
  2318  0866                     	;# 
  2319  0867                     	;# 
  2320  0867                     	;# 
  2321  0868                     	;# 
  2322  0869                     	;# 
  2323  086A                     	;# 
  2324  086B                     	;# 
  2325  086C                     	;# 
  2326  086D                     	;# 
  2327  086E                     	;# 
  2328  086F                     	;# 
  2329  0FE4                     	;# 
  2330  0FE5                     	;# 
  2331  0FE6                     	;# 
  2332  0FE7                     	;# 
  2333  0FE8                     	;# 
  2334  0FE9                     	;# 
  2335  0FEA                     	;# 
  2336  0FEB                     	;# 
  2337  0FED                     	;# 
  2338  0FEE                     	;# 
  2339  0FEF                     	;# 
  2340  0000                     	;# 
  2341  0001                     	;# 
  2342  0002                     	;# 
  2343  0003                     	;# 
  2344  0004                     	;# 
  2345  0005                     	;# 
  2346  0006                     	;# 
  2347  0007                     	;# 
  2348  0008                     	;# 
  2349  0009                     	;# 
  2350  000A                     	;# 
  2351  000B                     	;# 
  2352  000C                     	;# 
  2353  000D                     	;# 
  2354  000E                     	;# 
  2355  0010                     	;# 
  2356  0011                     	;# 
  2357  0012                     	;# 
  2358  0013                     	;# 
  2359  0014                     	;# 
  2360  0015                     	;# 
  2361  0016                     	;# 
  2362  0016                     	;# 
  2363  0017                     	;# 
  2364  0018                     	;# 
  2365  0019                     	;# 
  2366  001A                     	;# 
  2367  001B                     	;# 
  2368  001C                     	;# 
  2369  008C                     	;# 
  2370  008D                     	;# 
  2371  008E                     	;# 
  2372  0090                     	;# 
  2373  0091                     	;# 
  2374  0092                     	;# 
  2375  0093                     	;# 
  2376  0094                     	;# 
  2377  0095                     	;# 
  2378  0096                     	;# 
  2379  0097                     	;# 
  2380  0098                     	;# 
  2381  0099                     	;# 
  2382  009A                     	;# 
  2383  009B                     	;# 
  2384  009B                     	;# 
  2385  009C                     	;# 
  2386  009D                     	;# 
  2387  009E                     	;# 
  2388  009F                     	;# 
  2389  010C                     	;# 
  2390  010D                     	;# 
  2391  010E                     	;# 
  2392  0111                     	;# 
  2393  0112                     	;# 
  2394  0113                     	;# 
  2395  0114                     	;# 
  2396  0115                     	;# 
  2397  0116                     	;# 
  2398  0117                     	;# 
  2399  0118                     	;# 
  2400  0119                     	;# 
  2401  011A                     	;# 
  2402  011B                     	;# 
  2403  011C                     	;# 
  2404  011D                     	;# 
  2405  011D                     	;# 
  2406  011D                     	;# 
  2407  011E                     	;# 
  2408  011F                     	;# 
  2409  018C                     	;# 
  2410  018D                     	;# 
  2411  0191                     	;# 
  2412  0191                     	;# 
  2413  0192                     	;# 
  2414  0193                     	;# 
  2415  0193                     	;# 
  2416  0193                     	;# 
  2417  0194                     	;# 
  2418  0195                     	;# 
  2419  0196                     	;# 
  2420  0197                     	;# 
  2421  0199                     	;# 
  2422  0199                     	;# 
  2423  0199                     	;# 
  2424  019A                     	;# 
  2425  019A                     	;# 
  2426  019A                     	;# 
  2427  019B                     	;# 
  2428  019B                     	;# 
  2429  019B                     	;# 
  2430  019B                     	;# 
  2431  019B                     	;# 
  2432  019C                     	;# 
  2433  019C                     	;# 
  2434  019C                     	;# 
  2435  019D                     	;# 
  2436  019D                     	;# 
  2437  019D                     	;# 
  2438  019E                     	;# 
  2439  019E                     	;# 
  2440  019E                     	;# 
  2441  019F                     	;# 
  2442  019F                     	;# 
  2443  019F                     	;# 
  2444  019F                     	;# 
  2445  019F                     	;# 
  2446  020C                     	;# 
  2447  020D                     	;# 
  2448  020E                     	;# 
  2449  0210                     	;# 
  2450  0211                     	;# 
  2451  0211                     	;# 
  2452  0212                     	;# 
  2453  0212                     	;# 
  2454  0213                     	;# 
  2455  0213                     	;# 
  2456  0214                     	;# 
  2457  0214                     	;# 
  2458  0215                     	;# 
  2459  0215                     	;# 
  2460  0215                     	;# 
  2461  0215                     	;# 
  2462  0216                     	;# 
  2463  0216                     	;# 
  2464  0217                     	;# 
  2465  0217                     	;# 
  2466  028C                     	;# 
  2467  028D                     	;# 
  2468  028E                     	;# 
  2469  0291                     	;# 
  2470  0291                     	;# 
  2471  0292                     	;# 
  2472  0293                     	;# 
  2473  0298                     	;# 
  2474  0298                     	;# 
  2475  0299                     	;# 
  2476  029A                     	;# 
  2477  030C                     	;# 
  2478  030D                     	;# 
  2479  030E                     	;# 
  2480  0311                     	;# 
  2481  0311                     	;# 
  2482  0312                     	;# 
  2483  0313                     	;# 
  2484  038C                     	;# 
  2485  038D                     	;# 
  2486  038E                     	;# 
  2487  0390                     	;# 
  2488  0391                     	;# 
  2489  0392                     	;# 
  2490  0393                     	;# 
  2491  0394                     	;# 
  2492  0395                     	;# 
  2493  0396                     	;# 
  2494  0397                     	;# 
  2495  0398                     	;# 
  2496  0399                     	;# 
  2497  039D                     	;# 
  2498  039E                     	;# 
  2499  039F                     	;# 
  2500  0511                     	;# 
  2501  0513                     	;# 
  2502  051A                     	;# 
  2503  0811                     	;# 
  2504  0812                     	;# 
  2505  0813                     	;# 
  2506  0814                     	;# 
  2507  0815                     	;# 
  2508  0816                     	;# 
  2509  0817                     	;# 
  2510  0818                     	;# 
  2511  0819                     	;# 
  2512  081A                     	;# 
  2513  081B                     	;# 
  2514  081C                     	;# 
  2515  081D                     	;# 
  2516  081E                     	;# 
  2517  081F                     	;# 
  2518  0820                     	;# 
  2519  0821                     	;# 
  2520  0821                     	;# 
  2521  0822                     	;# 
  2522  0823                     	;# 
  2523  0823                     	;# 
  2524  0824                     	;# 
  2525  0825                     	;# 
  2526  0825                     	;# 
  2527  0826                     	;# 
  2528  0827                     	;# 
  2529  0827                     	;# 
  2530  0828                     	;# 
  2531  0829                     	;# 
  2532  082A                     	;# 
  2533  082B                     	;# 
  2534  082C                     	;# 
  2535  082D                     	;# 
  2536  082E                     	;# 
  2537  082F                     	;# 
  2538  0831                     	;# 
  2539  0832                     	;# 
  2540  0833                     	;# 
  2541  0834                     	;# 
  2542  0835                     	;# 
  2543  0836                     	;# 
  2544  0837                     	;# 
  2545  0838                     	;# 
  2546  0839                     	;# 
  2547  083A                     	;# 
  2548  083B                     	;# 
  2549  083C                     	;# 
  2550  083D                     	;# 
  2551  083E                     	;# 
  2552  083F                     	;# 
  2553  0840                     	;# 
  2554  0841                     	;# 
  2555  0841                     	;# 
  2556  0842                     	;# 
  2557  0843                     	;# 
  2558  0843                     	;# 
  2559  0844                     	;# 
  2560  0845                     	;# 
  2561  0845                     	;# 
  2562  0846                     	;# 
  2563  0847                     	;# 
  2564  0847                     	;# 
  2565  0848                     	;# 
  2566  0849                     	;# 
  2567  084A                     	;# 
  2568  084B                     	;# 
  2569  084C                     	;# 
  2570  084D                     	;# 
  2571  084E                     	;# 
  2572  084F                     	;# 
  2573  0851                     	;# 
  2574  0852                     	;# 
  2575  0853                     	;# 
  2576  0854                     	;# 
  2577  0855                     	;# 
  2578  0856                     	;# 
  2579  0857                     	;# 
  2580  0858                     	;# 
  2581  0859                     	;# 
  2582  085A                     	;# 
  2583  085B                     	;# 
  2584  085C                     	;# 
  2585  085D                     	;# 
  2586  085E                     	;# 
  2587  085F                     	;# 
  2588  0860                     	;# 
  2589  0861                     	;# 
  2590  0861                     	;# 
  2591  0862                     	;# 
  2592  0863                     	;# 
  2593  0863                     	;# 
  2594  0864                     	;# 
  2595  0865                     	;# 
  2596  0865                     	;# 
  2597  0866                     	;# 
  2598  0867                     	;# 
  2599  0867                     	;# 
  2600  0868                     	;# 
  2601  0869                     	;# 
  2602  086A                     	;# 
  2603  086B                     	;# 
  2604  086C                     	;# 
  2605  086D                     	;# 
  2606  086E                     	;# 
  2607  086F                     	;# 
  2608  0FE4                     	;# 
  2609  0FE5                     	;# 
  2610  0FE6                     	;# 
  2611  0FE7                     	;# 
  2612  0FE8                     	;# 
  2613  0FE9                     	;# 
  2614  0FEA                     	;# 
  2615  0FEB                     	;# 
  2616  0FED                     	;# 
  2617  0FEE                     	;# 
  2618  0FEF                     	;# 
  2619  0000                     	;# 
  2620  0001                     	;# 
  2621  0002                     	;# 
  2622  0003                     	;# 
  2623  0004                     	;# 
  2624  0005                     	;# 
  2625  0006                     	;# 
  2626  0007                     	;# 
  2627  0008                     	;# 
  2628  0009                     	;# 
  2629  000A                     	;# 
  2630  000B                     	;# 
  2631  000C                     	;# 
  2632  000D                     	;# 
  2633  000E                     	;# 
  2634  0010                     	;# 
  2635  0011                     	;# 
  2636  0012                     	;# 
  2637  0013                     	;# 
  2638  0014                     	;# 
  2639  0015                     	;# 
  2640  0016                     	;# 
  2641  0016                     	;# 
  2642  0017                     	;# 
  2643  0018                     	;# 
  2644  0019                     	;# 
  2645  001A                     	;# 
  2646  001B                     	;# 
  2647  001C                     	;# 
  2648  008C                     	;# 
  2649  008D                     	;# 
  2650  008E                     	;# 
  2651  0090                     	;# 
  2652  0091                     	;# 
  2653  0092                     	;# 
  2654  0093                     	;# 
  2655  0094                     	;# 
  2656  0095                     	;# 
  2657  0096                     	;# 
  2658  0097                     	;# 
  2659  0098                     	;# 
  2660  0099                     	;# 
  2661  009A                     	;# 
  2662  009B                     	;# 
  2663  009B                     	;# 
  2664  009C                     	;# 
  2665  009D                     	;# 
  2666  009E                     	;# 
  2667  009F                     	;# 
  2668  010C                     	;# 
  2669  010D                     	;# 
  2670  010E                     	;# 
  2671  0111                     	;# 
  2672  0112                     	;# 
  2673  0113                     	;# 
  2674  0114                     	;# 
  2675  0115                     	;# 
  2676  0116                     	;# 
  2677  0117                     	;# 
  2678  0118                     	;# 
  2679  0119                     	;# 
  2680  011A                     	;# 
  2681  011B                     	;# 
  2682  011C                     	;# 
  2683  011D                     	;# 
  2684  011D                     	;# 
  2685  011D                     	;# 
  2686  011E                     	;# 
  2687  011F                     	;# 
  2688  018C                     	;# 
  2689  018D                     	;# 
  2690  0191                     	;# 
  2691  0191                     	;# 
  2692  0192                     	;# 
  2693  0193                     	;# 
  2694  0193                     	;# 
  2695  0193                     	;# 
  2696  0194                     	;# 
  2697  0195                     	;# 
  2698  0196                     	;# 
  2699  0197                     	;# 
  2700  0199                     	;# 
  2701  0199                     	;# 
  2702  0199                     	;# 
  2703  019A                     	;# 
  2704  019A                     	;# 
  2705  019A                     	;# 
  2706  019B                     	;# 
  2707  019B                     	;# 
  2708  019B                     	;# 
  2709  019B                     	;# 
  2710  019B                     	;# 
  2711  019C                     	;# 
  2712  019C                     	;# 
  2713  019C                     	;# 
  2714  019D                     	;# 
  2715  019D                     	;# 
  2716  019D                     	;# 
  2717  019E                     	;# 
  2718  019E                     	;# 
  2719  019E                     	;# 
  2720  019F                     	;# 
  2721  019F                     	;# 
  2722  019F                     	;# 
  2723  019F                     	;# 
  2724  019F                     	;# 
  2725  020C                     	;# 
  2726  020D                     	;# 
  2727  020E                     	;# 
  2728  0210                     	;# 
  2729  0211                     	;# 
  2730  0211                     	;# 
  2731  0212                     	;# 
  2732  0212                     	;# 
  2733  0213                     	;# 
  2734  0213                     	;# 
  2735  0214                     	;# 
  2736  0214                     	;# 
  2737  0215                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0215                     	;# 
  2741  0216                     	;# 
  2742  0216                     	;# 
  2743  0217                     	;# 
  2744  0217                     	;# 
  2745  028C                     	;# 
  2746  028D                     	;# 
  2747  028E                     	;# 
  2748  0291                     	;# 
  2749  0291                     	;# 
  2750  0292                     	;# 
  2751  0293                     	;# 
  2752  0298                     	;# 
  2753  0298                     	;# 
  2754  0299                     	;# 
  2755  029A                     	;# 
  2756  030C                     	;# 
  2757  030D                     	;# 
  2758  030E                     	;# 
  2759  0311                     	;# 
  2760  0311                     	;# 
  2761  0312                     	;# 
  2762  0313                     	;# 
  2763  038C                     	;# 
  2764  038D                     	;# 
  2765  038E                     	;# 
  2766  0390                     	;# 
  2767  0391                     	;# 
  2768  0392                     	;# 
  2769  0393                     	;# 
  2770  0394                     	;# 
  2771  0395                     	;# 
  2772  0396                     	;# 
  2773  0397                     	;# 
  2774  0398                     	;# 
  2775  0399                     	;# 
  2776  039D                     	;# 
  2777  039E                     	;# 
  2778  039F                     	;# 
  2779  0511                     	;# 
  2780  0513                     	;# 
  2781  051A                     	;# 
  2782  0811                     	;# 
  2783  0812                     	;# 
  2784  0813                     	;# 
  2785  0814                     	;# 
  2786  0815                     	;# 
  2787  0816                     	;# 
  2788  0817                     	;# 
  2789  0818                     	;# 
  2790  0819                     	;# 
  2791  081A                     	;# 
  2792  081B                     	;# 
  2793  081C                     	;# 
  2794  081D                     	;# 
  2795  081E                     	;# 
  2796  081F                     	;# 
  2797  0820                     	;# 
  2798  0821                     	;# 
  2799  0821                     	;# 
  2800  0822                     	;# 
  2801  0823                     	;# 
  2802  0823                     	;# 
  2803  0824                     	;# 
  2804  0825                     	;# 
  2805  0825                     	;# 
  2806  0826                     	;# 
  2807  0827                     	;# 
  2808  0827                     	;# 
  2809  0828                     	;# 
  2810  0829                     	;# 
  2811  082A                     	;# 
  2812  082B                     	;# 
  2813  082C                     	;# 
  2814  082D                     	;# 
  2815  082E                     	;# 
  2816  082F                     	;# 
  2817  0831                     	;# 
  2818  0832                     	;# 
  2819  0833                     	;# 
  2820  0834                     	;# 
  2821  0835                     	;# 
  2822  0836                     	;# 
  2823  0837                     	;# 
  2824  0838                     	;# 
  2825  0839                     	;# 
  2826  083A                     	;# 
  2827  083B                     	;# 
  2828  083C                     	;# 
  2829  083D                     	;# 
  2830  083E                     	;# 
  2831  083F                     	;# 
  2832  0840                     	;# 
  2833  0841                     	;# 
  2834  0841                     	;# 
  2835  0842                     	;# 
  2836  0843                     	;# 
  2837  0843                     	;# 
  2838  0844                     	;# 
  2839  0845                     	;# 
  2840  0845                     	;# 
  2841  0846                     	;# 
  2842  0847                     	;# 
  2843  0847                     	;# 
  2844  0848                     	;# 
  2845  0849                     	;# 
  2846  084A                     	;# 
  2847  084B                     	;# 
  2848  084C                     	;# 
  2849  084D                     	;# 
  2850  084E                     	;# 
  2851  084F                     	;# 
  2852  0851                     	;# 
  2853  0852                     	;# 
  2854  0853                     	;# 
  2855  0854                     	;# 
  2856  0855                     	;# 
  2857  0856                     	;# 
  2858  0857                     	;# 
  2859  0858                     	;# 
  2860  0859                     	;# 
  2861  085A                     	;# 
  2862  085B                     	;# 
  2863  085C                     	;# 
  2864  085D                     	;# 
  2865  085E                     	;# 
  2866  085F                     	;# 
  2867  0860                     	;# 
  2868  0861                     	;# 
  2869  0861                     	;# 
  2870  0862                     	;# 
  2871  0863                     	;# 
  2872  0863                     	;# 
  2873  0864                     	;# 
  2874  0865                     	;# 
  2875  0865                     	;# 
  2876  0866                     	;# 
  2877  0867                     	;# 
  2878  0867                     	;# 
  2879  0868                     	;# 
  2880  0869                     	;# 
  2881  086A                     	;# 
  2882  086B                     	;# 
  2883  086C                     	;# 
  2884  086D                     	;# 
  2885  086E                     	;# 
  2886  086F                     	;# 
  2887  0FE4                     	;# 
  2888  0FE5                     	;# 
  2889  0FE6                     	;# 
  2890  0FE7                     	;# 
  2891  0FE8                     	;# 
  2892  0FE9                     	;# 
  2893  0FEA                     	;# 
  2894  0FEB                     	;# 
  2895  0FED                     	;# 
  2896  0FEE                     	;# 
  2897  0FEF                     	;# 
  2898  0000                     	;# 
  2899  0001                     	;# 
  2900  0002                     	;# 
  2901  0003                     	;# 
  2902  0004                     	;# 
  2903  0005                     	;# 
  2904  0006                     	;# 
  2905  0007                     	;# 
  2906  0008                     	;# 
  2907  0009                     	;# 
  2908  000A                     	;# 
  2909  000B                     	;# 
  2910  000C                     	;# 
  2911  000D                     	;# 
  2912  000E                     	;# 
  2913  0010                     	;# 
  2914  0011                     	;# 
  2915  0012                     	;# 
  2916  0013                     	;# 
  2917  0014                     	;# 
  2918  0015                     	;# 
  2919  0016                     	;# 
  2920  0016                     	;# 
  2921  0017                     	;# 
  2922  0018                     	;# 
  2923  0019                     	;# 
  2924  001A                     	;# 
  2925  001B                     	;# 
  2926  001C                     	;# 
  2927  008C                     	;# 
  2928  008D                     	;# 
  2929  008E                     	;# 
  2930  0090                     	;# 
  2931  0091                     	;# 
  2932  0092                     	;# 
  2933  0093                     	;# 
  2934  0094                     	;# 
  2935  0095                     	;# 
  2936  0096                     	;# 
  2937  0097                     	;# 
  2938  0098                     	;# 
  2939  0099                     	;# 
  2940  009A                     	;# 
  2941  009B                     	;# 
  2942  009B                     	;# 
  2943  009C                     	;# 
  2944  009D                     	;# 
  2945  009E                     	;# 
  2946  009F                     	;# 
  2947  010C                     	;# 
  2948  010D                     	;# 
  2949  010E                     	;# 
  2950  0111                     	;# 
  2951  0112                     	;# 
  2952  0113                     	;# 
  2953  0114                     	;# 
  2954  0115                     	;# 
  2955  0116                     	;# 
  2956  0117                     	;# 
  2957  0118                     	;# 
  2958  0119                     	;# 
  2959  011A                     	;# 
  2960  011B                     	;# 
  2961  011C                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011D                     	;# 
  2965  011E                     	;# 
  2966  011F                     	;# 
  2967  018C                     	;# 
  2968  018D                     	;# 
  2969  0191                     	;# 
  2970  0191                     	;# 
  2971  0192                     	;# 
  2972  0193                     	;# 
  2973  0193                     	;# 
  2974  0193                     	;# 
  2975  0194                     	;# 
  2976  0195                     	;# 
  2977  0196                     	;# 
  2978  0197                     	;# 
  2979  0199                     	;# 
  2980  0199                     	;# 
  2981  0199                     	;# 
  2982  019A                     	;# 
  2983  019A                     	;# 
  2984  019A                     	;# 
  2985  019B                     	;# 
  2986  019B                     	;# 
  2987  019B                     	;# 
  2988  019B                     	;# 
  2989  019B                     	;# 
  2990  019C                     	;# 
  2991  019C                     	;# 
  2992  019C                     	;# 
  2993  019D                     	;# 
  2994  019D                     	;# 
  2995  019D                     	;# 
  2996  019E                     	;# 
  2997  019E                     	;# 
  2998  019E                     	;# 
  2999  019F                     	;# 
  3000  019F                     	;# 
  3001  019F                     	;# 
  3002  019F                     	;# 
  3003  019F                     	;# 
  3004  020C                     	;# 
  3005  020D                     	;# 
  3006  020E                     	;# 
  3007  0210                     	;# 
  3008  0211                     	;# 
  3009  0211                     	;# 
  3010  0212                     	;# 
  3011  0212                     	;# 
  3012  0213                     	;# 
  3013  0213                     	;# 
  3014  0214                     	;# 
  3015  0214                     	;# 
  3016  0215                     	;# 
  3017  0215                     	;# 
  3018  0215                     	;# 
  3019  0215                     	;# 
  3020  0216                     	;# 
  3021  0216                     	;# 
  3022  0217                     	;# 
  3023  0217                     	;# 
  3024  028C                     	;# 
  3025  028D                     	;# 
  3026  028E                     	;# 
  3027  0291                     	;# 
  3028  0291                     	;# 
  3029  0292                     	;# 
  3030  0293                     	;# 
  3031  0298                     	;# 
  3032  0298                     	;# 
  3033  0299                     	;# 
  3034  029A                     	;# 
  3035  030C                     	;# 
  3036  030D                     	;# 
  3037  030E                     	;# 
  3038  0311                     	;# 
  3039  0311                     	;# 
  3040  0312                     	;# 
  3041  0313                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0390                     	;# 
  3046  0391                     	;# 
  3047  0392                     	;# 
  3048  0393                     	;# 
  3049  0394                     	;# 
  3050  0395                     	;# 
  3051  0396                     	;# 
  3052  0397                     	;# 
  3053  0398                     	;# 
  3054  0399                     	;# 
  3055  039D                     	;# 
  3056  039E                     	;# 
  3057  039F                     	;# 
  3058  0511                     	;# 
  3059  0513                     	;# 
  3060  051A                     	;# 
  3061  0811                     	;# 
  3062  0812                     	;# 
  3063  0813                     	;# 
  3064  0814                     	;# 
  3065  0815                     	;# 
  3066  0816                     	;# 
  3067  0817                     	;# 
  3068  0818                     	;# 
  3069  0819                     	;# 
  3070  081A                     	;# 
  3071  081B                     	;# 
  3072  081C                     	;# 
  3073  081D                     	;# 
  3074  081E                     	;# 
  3075  081F                     	;# 
  3076  0820                     	;# 
  3077  0821                     	;# 
  3078  0821                     	;# 
  3079  0822                     	;# 
  3080  0823                     	;# 
  3081  0823                     	;# 
  3082  0824                     	;# 
  3083  0825                     	;# 
  3084  0825                     	;# 
  3085  0826                     	;# 
  3086  0827                     	;# 
  3087  0827                     	;# 
  3088  0828                     	;# 
  3089  0829                     	;# 
  3090  082A                     	;# 
  3091  082B                     	;# 
  3092  082C                     	;# 
  3093  082D                     	;# 
  3094  082E                     	;# 
  3095  082F                     	;# 
  3096  0831                     	;# 
  3097  0832                     	;# 
  3098  0833                     	;# 
  3099  0834                     	;# 
  3100  0835                     	;# 
  3101  0836                     	;# 
  3102  0837                     	;# 
  3103  0838                     	;# 
  3104  0839                     	;# 
  3105  083A                     	;# 
  3106  083B                     	;# 
  3107  083C                     	;# 
  3108  083D                     	;# 
  3109  083E                     	;# 
  3110  083F                     	;# 
  3111  0840                     	;# 
  3112  0841                     	;# 
  3113  0841                     	;# 
  3114  0842                     	;# 
  3115  0843                     	;# 
  3116  0843                     	;# 
  3117  0844                     	;# 
  3118  0845                     	;# 
  3119  0845                     	;# 
  3120  0846                     	;# 
  3121  0847                     	;# 
  3122  0847                     	;# 
  3123  0848                     	;# 
  3124  0849                     	;# 
  3125  084A                     	;# 
  3126  084B                     	;# 
  3127  084C                     	;# 
  3128  084D                     	;# 
  3129  084E                     	;# 
  3130  084F                     	;# 
  3131  0851                     	;# 
  3132  0852                     	;# 
  3133  0853                     	;# 
  3134  0854                     	;# 
  3135  0855                     	;# 
  3136  0856                     	;# 
  3137  0857                     	;# 
  3138  0858                     	;# 
  3139  0859                     	;# 
  3140  085A                     	;# 
  3141  085B                     	;# 
  3142  085C                     	;# 
  3143  085D                     	;# 
  3144  085E                     	;# 
  3145  085F                     	;# 
  3146  0860                     	;# 
  3147  0861                     	;# 
  3148  0861                     	;# 
  3149  0862                     	;# 
  3150  0863                     	;# 
  3151  0863                     	;# 
  3152  0864                     	;# 
  3153  0865                     	;# 
  3154  0865                     	;# 
  3155  0866                     	;# 
  3156  0867                     	;# 
  3157  0867                     	;# 
  3158  0868                     	;# 
  3159  0869                     	;# 
  3160  086A                     	;# 
  3161  086B                     	;# 
  3162  086C                     	;# 
  3163  086D                     	;# 
  3164  086E                     	;# 
  3165  086F                     	;# 
  3166  0FE4                     	;# 
  3167  0FE5                     	;# 
  3168  0FE6                     	;# 
  3169  0FE7                     	;# 
  3170  0FE8                     	;# 
  3171  0FE9                     	;# 
  3172  0FEA                     	;# 
  3173  0FEB                     	;# 
  3174  0FED                     	;# 
  3175  0FEE                     	;# 
  3176  0FEF                     	;# 
  3177                           
  3178                           	psect	idataBANK2
  3179  0E96                     __pidataBANK2:	
  3180                           
  3181                           ;initializer for stoa@F1129
  3182  0E96  3428               	retlw	40
  3183  0E97  346E               	retlw	110
  3184  0E98  3475               	retlw	117
  3185  0E99  346C               	retlw	108
  3186  0E9A  346C               	retlw	108
  3187  0E9B  3429               	retlw	41
  3188  0E9C  3400               	retlw	0
  3189                           
  3190                           	psect	stringtext1
  3191  0742                     __pstringtext1:	
  3192  0742                     _segmcode:	
  3193  0742  3408               	retlw	8
  3194  0743  347C               	retlw	124
  3195  0744  3411               	retlw	17
  3196  0745  3430               	retlw	48
  3197  0746  3464               	retlw	100
  3198  0747  3422               	retlw	34
  3199  0748  3402               	retlw	2
  3200  0749  3478               	retlw	120
  3201  074A  3400               	retlw	0
  3202  074B  3420               	retlw	32
  3203  074C  34FF               	retlw	255
  3204  074D                     __end_of_segmcode:	
  3205  0012                     _PIR2bits	set	18
  3206  000C                     _PORTAbits	set	12
  3207  0015                     _TMR0	set	21
  3208  0018                     _T1CONbits	set	24
  3209  0016                     _TMR1L	set	22
  3210  0017                     _TMR1H	set	23
  3211  0011                     _PIR1bits	set	17
  3212  000E                     _PORTCbits	set	14
  3213  000B                     _INTCONbits	set	11
  3214  005E                     _PEIE	set	94
  3215  005F                     _GIE	set	95
  3216  0074                     _RC4	set	116
  3217  0092                     _PIE2bits	set	146
  3218  0091                     _PIE1bits	set	145
  3219  008E                     _TRISCbits	set	142
  3220  008E                     _TRISC	set	142
  3221  008D                     _TRISB	set	141
  3222  008C                     _TRISA	set	140
  3223  0095                     _OPTION_REGbits	set	149
  3224  0099                     _OSCCONbits	set	153
  3225  048D                     _RCIE	set	1165
  3226  0473                     _TRISC3	set	1139
  3227  0474                     _TRISC4	set	1140
  3228  048C                     _TXIE	set	1164
  3229  010C                     _LATAbits	set	268
  3230  010D                     _LATBbits	set	269
  3231  010E                     _LATC	set	270
  3232  010D                     _LATB	set	269
  3233  010C                     _LATA	set	268
  3234  08E9                     _RXSEL	set	2281
  3235  08EA                     _TXSEL	set	2282
  3236  0874                     _LATC4	set	2164
  3237  0873                     _LATC3	set	2163
  3238  0199                     _RCREG	set	409
  3239  019B                     _SPBRGL	set	411
  3240  019C                     _SPBRGH	set	412
  3241  019A                     _TXREG	set	410
  3242  019E                     _TXSTAbits	set	414
  3243  0CEC                     _CREN	set	3308
  3244  0CFB                     _BRG16	set	3323
  3245  0CF2                     _BRGH	set	3314
  3246  0CEF                     _SPEN	set	3311
  3247  0CF4                     _SYNC	set	3316
  3248  0CF5                     _TXEN	set	3317
  3249  020E                     _WPUCbits	set	526
  3250  020E                     _WPUC	set	526
  3251  020D                     _WPUB	set	525
  3252  020C                     _WPUA	set	524
  3253  1073                     _WPUC3	set	4211
  3254  1074                     _WPUC4	set	4212
  3255  029A                     _CCP2CONbits	set	666
  3256  0298                     _CCPR2L	set	664
  3257  0299                     _CCPR2H	set	665
  3258  1474                     _ODCONC4	set	5236
  3259  1473                     _ODCONC3	set	5235
  3260  0399                     _IOCCFbits	set	921
  3261  0397                     _IOCCPbits	set	919
  3262  0398                     _IOCCN	set	920
  3263  0397                     _IOCCP	set	919
  3264  0395                     _IOCBN	set	917
  3265  0394                     _IOCBP	set	916
  3266  0392                     _IOCAN	set	914
  3267  0391                     _IOCAP	set	913
  3268  074D                     STR_4:	
  3269  074D  345B               	retlw	91	;'['
  3270  074E  3425               	retlw	37	;'%'
  3271  074F  3473               	retlw	115	;'s'
  3272  0750  343A               	retlw	58	;':'
  3273  0751  3425               	retlw	37	;'%'
  3274  0752  3464               	retlw	100	;'d'
  3275  0753  3420               	retlw	32	;' '
  3276  0754  3425               	retlw	37	;'%'
  3277  0755  3473               	retlw	115	;'s'
  3278  0756  345D               	retlw	93	;']'
  3279  0757  3420               	retlw	32	;' '
  3280  0758  3474               	retlw	116	;'t'
  3281  0759  3465               	retlw	101	;'e'
  3282  075A  3473               	retlw	115	;'s'
  3283  075B  3474               	retlw	116	;'t'
  3284  075C  3431               	retlw	49	;'1'
  3285  075D  3432               	retlw	50	;'2'
  3286  075E  3433               	retlw	51	;'3'
  3287  075F  3434               	retlw	52	;'4'
  3288  0760  3435               	retlw	53	;'5'
  3289  0761  3436               	retlw	54	;'6'
  3290  0762  3431               	retlw	49	;'1'
  3291  0763  3432               	retlw	50	;'2'
  3292  0764  3433               	retlw	51	;'3'
  3293  0765  3434               	retlw	52	;'4'
  3294  0766  3435               	retlw	53	;'5'
  3295  0767  3436               	retlw	54	;'6'
  3296  0768  3437               	retlw	55	;'7'
  3297  0769  3438               	retlw	56	;'8'
  3298  076A  3439               	retlw	57	;'9'
  3299  076B  3441               	retlw	65	;'A'
  3300  076C  3453               	retlw	83	;'S'
  3301  076D  3444               	retlw	68	;'D'
  3302  076E  342E               	retlw	46	;'.'
  3303  076F  342E               	retlw	46	;'.'
  3304  0770  342E               	retlw	46	;'.'
  3305  0771  3420               	retlw	32	;' '
  3306  0772  3420               	retlw	32	;' '
  3307  0773  3425               	retlw	37	;'%'
  3308  0774  3464               	retlw	100	;'d'
  3309  0775  340A               	retlw	10
  3310  0776  340D               	retlw	13
  3311  0777  3400               	retlw	0
  3312                           
  3313                           	psect	stringtext2
  3314  1000                     __pstringtext2:	
  3315  1000                     STR_1:	
  3316  1000  345B               	retlw	91	;'['
  3317  1001  3425               	retlw	37	;'%'
  3318  1002  3473               	retlw	115	;'s'
  3319  1003  343A               	retlw	58	;':'
  3320  1004  3425               	retlw	37	;'%'
  3321  1005  3464               	retlw	100	;'d'
  3322  1006  3420               	retlw	32	;' '
  3323  1007  3425               	retlw	37	;'%'
  3324  1008  3473               	retlw	115	;'s'
  3325  1009  345D               	retlw	93	;']'
  3326  100A  3420               	retlw	32	;' '
  3327  100B  3448               	retlw	72	;'H'
  3328  100C  3445               	retlw	69	;'E'
  3329  100D  3452               	retlw	82	;'R'
  3330  100E  3445               	retlw	69	;'E'
  3331  100F  3420               	retlw	32	;' '
  3332  1010  3454               	retlw	84	;'T'
  3333  1011  3449               	retlw	73	;'I'
  3334  1012  344D               	retlw	77	;'M'
  3335  1013  3445               	retlw	69	;'E'
  3336  1014  3452               	retlw	82	;'R'
  3337  1015  3420               	retlw	32	;' '
  3338  1016  3431               	retlw	49	;'1'
  3339  1017  340A               	retlw	10
  3340  1018  340D               	retlw	13
  3341  1019  3400               	retlw	0
  3342                           
  3343                           	psect	stringtext3
  3344  101A                     __pstringtext3:	
  3345  101A                     STR_2:	
  3346  101A  346D               	retlw	109	;'m'
  3347  101B  3461               	retlw	97	;'a'
  3348  101C  3469               	retlw	105	;'i'
  3349  101D  346E               	retlw	110	;'n'
  3350  101E  342E               	retlw	46	;'.'
  3351  101F  3463               	retlw	99	;'c'
  3352  1020  3400               	retlw	0
  3353                           
  3354                           	psect	stringtext4
  3355  1021                     __pstringtext4:	
  3356  1021                     STR_3:	
  3357  1021  3449               	retlw	73	;'I'
  3358  1022  3453               	retlw	83	;'S'
  3359  1023  3452               	retlw	82	;'R'
  3360  1024  3400               	retlw	0
  3361                           
  3362                           	psect	stringtext5
  3363  0000                     __pstringtext5:	
  3364  1021                     
  3365                           ; #config settings
  3366  0000                     
  3367                           	psect	cinit
  3368  012B                     start_initialization:	
  3369  012B                     __initialization:	
  3370                           
  3371                           ; Initialize objects allocated to BANK2
  3372  012B  3096               	movlw	low __pidataBANK2
  3373  012C  0084               	movwf	4
  3374  012D  308E               	movlw	(high __pidataBANK2)| (0+128)
  3375  012E  0085               	movwf	5
  3376  012F  3069               	movlw	low __pdataBANK2
  3377  0130  0086               	movwf	6
  3378  0131  3001               	movlw	high __pdataBANK2
  3379  0132  0087               	movwf	7
  3380  0133  3007               	movlw	7
  3381  0134  318E  2690  3181   	fcall	init_ram
  3382                           
  3383                           ; Clear objects allocated to BANK0
  3384  0137  01EF               	clrf	__pbssBANK0& (0+127)
  3385                           
  3386                           ; Clear objects allocated to BANK1
  3387  0138  30E0               	movlw	low __pbssBANK1
  3388  0139  0084               	movwf	4
  3389  013A  3000               	movlw	high __pbssBANK1
  3390  013B  0085               	movwf	5
  3391  013C  3010               	movlw	16
  3392  013D  318E  268A  3181   	fcall	clear_ram0
  3393                           
  3394                           ; Clear objects allocated to BANK2
  3395  0140  3061               	movlw	low __pbssBANK2
  3396  0141  0084               	movwf	4
  3397  0142  3001               	movlw	high __pbssBANK2
  3398  0143  0085               	movwf	5
  3399  0144  3008               	movlw	8
  3400  0145  318E  268A  3181   	fcall	clear_ram0
  3401                           
  3402                           ; Clear objects allocated to BANK3
  3403  0148  0023               	movlb	3	; select bank3
  3404  0149  01E0               	clrf	__pbssBANK3& (0+127)
  3405  014A  01E1               	clrf	(__pbssBANK3+1)& (0+127)
  3406                           
  3407                           ; Clear objects allocated to BANK5
  3408  014B  30A0               	movlw	low __pbssBANK5
  3409  014C  0084               	movwf	4
  3410  014D  3002               	movlw	high __pbssBANK5
  3411  014E  0085               	movwf	5
  3412  014F  3027               	movlw	39
  3413  0150  318E  268A  3181   	fcall	clear_ram0
  3414                           
  3415                           ; Clear objects allocated to BANK6
  3416  0153  3020               	movlw	low __pbssBANK6
  3417  0154  0084               	movwf	4
  3418  0155  3003               	movlw	high __pbssBANK6
  3419  0156  0085               	movwf	5
  3420  0157  3027               	movlw	39
  3421  0158  318E  268A  3181   	fcall	clear_ram0
  3422                           
  3423                           ; Clear objects allocated to BANK7
  3424  015B  30A0               	movlw	low __pbssBANK7
  3425  015C  0084               	movwf	4
  3426  015D  3003               	movlw	high __pbssBANK7
  3427  015E  0085               	movwf	5
  3428  015F  3040               	movlw	64
  3429  0160  318E  268A  3181   	fcall	clear_ram0
  3430                           
  3431                           ; Clear objects allocated to BANK8
  3432  0163  3020               	movlw	low __pbssBANK8
  3433  0164  0084               	movwf	4
  3434  0165  3004               	movlw	high __pbssBANK8
  3435  0166  0085               	movwf	5
  3436  0167  3040               	movlw	64
  3437  0168  318E  268A  3181   	fcall	clear_ram0
  3438                           
  3439                           ; Clear objects allocated to BANK9
  3440  016B  30A0               	movlw	low __pbssBANK9
  3441  016C  0084               	movwf	4
  3442  016D  3004               	movlw	high __pbssBANK9
  3443  016E  0085               	movwf	5
  3444  016F  3040               	movlw	64
  3445  0170  318E  268A  3181   	fcall	clear_ram0
  3446                           
  3447                           ; Clear objects allocated to BANK10
  3448  0173  3020               	movlw	low __pbssBANK10
  3449  0174  0084               	movwf	4
  3450  0175  3005               	movlw	high __pbssBANK10
  3451  0176  0085               	movwf	5
  3452  0177  3040               	movlw	64
  3453  0178  318E  268A         	fcall	clear_ram0
  3454  017A                     end_of_initialization:	
  3455                           ;End of C runtime variable initialization code
  3456                           
  3457  017A                     __end_of__initialization:	
  3458  017A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3459  017B  0020               	movlb	0
  3460  017C  318F  2FB0         	ljmp	_main	;jump to C main() function
  3461                           
  3462                           	psect	bssBANK0
  3463  006F                     __pbssBANK0:	
  3464  006F                     _temp_h:	
  3465  006F                     	ds	1
  3466                           
  3467                           	psect	bssBANK1
  3468  00E0                     __pbssBANK1:	
  3469  00E0                     _prec:	
  3470  00E0                     	ds	2
  3471  00E2                     _flags:	
  3472  00E2                     	ds	2
  3473  00E4                     capture_handdle@last_cnt:	
  3474  00E4                     	ds	2
  3475  00E6                     key_isPressed@history_key:	
  3476  00E6                     	ds	1
  3477  00E7                     led_Blink@State:	
  3478  00E7                     	ds	1
  3479  00E8                     _flg_rc:	
  3480  00E8                     	ds	1
  3481  00E9                     _TX_en:	
  3482  00E9                     	ds	1
  3483  00EA                     _RX_data:	
  3484  00EA                     	ds	1
  3485  00EB                     _TX_data:	
  3486  00EB                     	ds	1
  3487  00EC                     _temp_l:	
  3488  00EC                     	ds	1
  3489  00ED                     main@cnt:	
  3490  00ED                     	ds	1
  3491  00EE                     ISR@tx:	
  3492  00EE                     	ds	1
  3493  00EF                     _ENUM:	
  3494  00EF                     	ds	1
  3495                           
  3496                           	psect	bssBANK2
  3497  0161                     __pbssBANK2:	
  3498  0161                     _nout:	
  3499  0161                     	ds	2
  3500  0163                     _width:	
  3501  0163                     	ds	2
  3502  0165                     key_isPressed@key_time_cnt:	
  3503  0165                     	ds	2
  3504  0167                     _Temp:	
  3505  0167                     	ds	2
  3506                           
  3507                           	psect	dataBANK2
  3508  0169                     __pdataBANK2:	
  3509  0169                     stoa@F1129:	
  3510  0169                     	ds	7
  3511                           
  3512                           	psect	bssBANK3
  3513  01E0                     __pbssBANK3:	
  3514  01E0                     ISR@cnt:	
  3515  01E0                     	ds	2
  3516                           
  3517                           	psect	bssBANK5
  3518  02A0                     __pbssBANK5:	
  3519  02A0                     main@i:	
  3520  02A0                     	ds	2
  3521  02A2                     tmp_change@key_time_cnt:	
  3522  02A2                     	ds	2
  3523  02A4                     receive_decode@cnt_low:	
  3524  02A4                     	ds	1
  3525  02A5                     display_update@i:	
  3526  02A5                     	ds	1
  3527  02A6                     tmp_change@history_key:	
  3528  02A6                     	ds	1
  3529  02A7                     _dbuf:	
  3530  02A7                     	ds	32
  3531                           
  3532                           	psect	bssBANK6
  3533  0320                     __pbssBANK6:	
  3534  0320                     _g_data:	
  3535  0320                     	ds	39
  3536                           
  3537                           	psect	bssBANK7
  3538  03A0                     __pbssBANK7:	
  3539  03A0                     ISR@F5503:	
  3540  03A0                     	ds	64
  3541                           
  3542                           	psect	bssBANK8
  3543  0420                     __pbssBANK8:	
  3544  0420                     ISR@F5506:	
  3545  0420                     	ds	64
  3546                           
  3547                           	psect	bssBANK9
  3548  04A0                     __pbssBANK9:	
  3549  04A0                     ISR@F5509:	
  3550  04A0                     	ds	64
  3551                           
  3552                           	psect	bssBANK10
  3553  0520                     __pbssBANK10:	
  3554  0520                     ISR@F5512:	
  3555  0520                     	ds	64
  3556                           
  3557                           	psect	inittext
  3558  0E90                     init_ram:	
  3559  0E90  00FE               	movwf	126
  3560  0E91                     initloop:	
  3561  0E91  0012               	moviw fsr0++
  3562  0E92  001E               	movwi fsr1++
  3563  0E93  0BFE               	decfsz	126,f
  3564  0E94  2E91               	goto	initloop
  3565  0E95  3400               	retlw	0
  3566                           
  3567                           	psect	clrtext
  3568  0E8A                     clear_ram0:	
  3569                           ;	Called with FSR0 containing the base address, and
  3570                           ;	WREG with the size to clear
  3571                           
  3572  0E8A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3573  0E8B                     clrloop0:	
  3574  0E8B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3575  0E8C  3101               	addfsr 0,1
  3576  0E8D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3577  0E8E  2E8B               	goto	clrloop0	;have we reached the end yet?
  3578  0E8F  3400               	retlw	0	;all done for this memory range, return
  3579                           
  3580                           	psect	cstackBANK5
  3581  02C7                     __pcstackBANK5:	
  3582  02C7                     ??_data_getdata:	
  3583  02C7                     ??_display_set:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586  02C7                     ??_timer_Timer0Start:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  02C7                     ??_timer_Timer0Reset:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  02C7                     ??_timer_Timer0Init:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  02C7                     ??_timer_Timer1Init:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  02C7                     ??_timer_Timer1Start:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  02C7                     ??_uart_init:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  02C7                     ??_led_SetState:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  02C7                     ??_display_control595_delay:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  02C7                     ?___awmod:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  02C7                     display_set@ison:	
  3614                           ; 2 bytes @ 0x0
  3615                           
  3616  02C7                     led_SetState@isOn:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  02C7                     ___awmod@divisor:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622                           
  3623                           ; 2 bytes @ 0x0
  3624  02C7                     	ds	1
  3625  02C8                     ??_init_env:	
  3626  02C8                     display_control595_delay@times:	
  3627                           ; 1 bytes @ 0x1
  3628                           
  3629                           
  3630                           ; 1 bytes @ 0x1
  3631  02C8                     	ds	1
  3632  02C9                     ??_display_write_byte:	
  3633  02C9                     ___awmod@dividend:	
  3634                           ; 1 bytes @ 0x2
  3635                           
  3636                           
  3637                           ; 2 bytes @ 0x2
  3638  02C9                     	ds	1
  3639  02CA                     init_env@pdata:	
  3640                           
  3641                           ; 1 bytes @ 0x3
  3642  02CA                     	ds	1
  3643  02CB                     ??___awmod:	
  3644  02CB                     display_write_byte@data:	
  3645                           ; 1 bytes @ 0x4
  3646                           
  3647  02CB                     init_env@i:	
  3648                           ; 1 bytes @ 0x4
  3649                           
  3650                           
  3651                           ; 2 bytes @ 0x4
  3652  02CB                     	ds	1
  3653  02CC                     display_write_byte@i:	
  3654  02CC                     ___awmod@counter:	
  3655                           ; 1 bytes @ 0x5
  3656                           
  3657                           
  3658                           ; 1 bytes @ 0x5
  3659  02CC                     	ds	1
  3660  02CD                     ___awmod@sign:	
  3661                           
  3662                           ; 1 bytes @ 0x6
  3663  02CD                     	ds	1
  3664  02CE                     ?_display_write_once:	
  3665  02CE                     display_write_once@HR:	
  3666                           ; 1 bytes @ 0x7
  3667                           
  3668                           
  3669                           ; 1 bytes @ 0x7
  3670  02CE                     	ds	1
  3671  02CF                     display_write_once@ML:	
  3672                           
  3673                           ; 1 bytes @ 0x8
  3674  02CF                     	ds	1
  3675  02D0                     display_write_once@MR:	
  3676                           
  3677                           ; 1 bytes @ 0x9
  3678  02D0                     	ds	1
  3679  02D1                     ??_display_write_once:	
  3680  02D1                     display_write_once@HL:	
  3681                           ; 1 bytes @ 0xA
  3682                           
  3683                           
  3684                           ; 1 bytes @ 0xA
  3685  02D1                     	ds	1
  3686  02D2                     ??_display_update:	
  3687                           
  3688                           ; 1 bytes @ 0xB
  3689  02D2                     	ds	11
  3690  02DD                     ??_main:	
  3691                           
  3692                           	psect	cstackBANK4
  3693  0220                     __pcstackBANK4:	
  3694                           ; 1 bytes @ 0x16
  3695                           
  3696  0220                     ISR@send_578:	
  3697                           
  3698                           ; 64 bytes @ 0x0
  3699  0220                     	ds	64
  3700                           
  3701                           	psect	cstackBANK3
  3702  01A0                     __pcstackBANK3:	
  3703  01A0                     ISR@send:	
  3704                           
  3705                           ; 64 bytes @ 0x0
  3706  01A0                     	ds	64
  3707                           
  3708                           	psect	cstackBANK2
  3709  0120                     __pcstackBANK2:	
  3710  0120                     ISR@buf_572:	
  3711                           
  3712                           ; 64 bytes @ 0x0
  3713  0120                     	ds	64
  3714  0160                     ISR@i_576:	
  3715                           
  3716                           ; 1 bytes @ 0x40
  3717  0160                     	ds	1
  3718                           
  3719                           	psect	cstackBANK1
  3720  00A0                     __pcstackBANK1:	
  3721  00A0                     ISR@buf:	
  3722                           
  3723                           ; 64 bytes @ 0x0
  3724  00A0                     	ds	64
  3725                           
  3726                           	psect	cstackCOMMON
  3727  0070                     __pcstackCOMMON:	
  3728  0070                     ?_data_getdata:	
  3729  0070                     ?_display_set:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0070                     ?_timer_Timer0Start:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0070                     ?_timer_Timer0Reset:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0070                     ?_timer_IsTimer1Itrpt:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0070                     ??_timer_IsTimer1Itrpt:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0070                     ?_timer_Timer1ClrIntrpt:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0070                     ??_timer_Timer1ClrIntrpt:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0070                     ?_timer_IsTimer0Itrpt:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0070                     ??_timer_IsTimer0Itrpt:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0070                     ?_led_Blink:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0070                     ?_timer_Timer0Init:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0070                     ?_timer_Timer1Init:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0070                     ?_timer_Timer1Start:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0070                     ?_uart_init:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0070                     ?_display_update:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0070                     ?_led_SetState:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0070                     ?_key_isPressed:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0070                     ?_putch:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0070                     ??_putch:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0070                     ?_init_env:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     ?_ISR:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0070                     ?_main:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0070                     ?_display_control595_delay:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0070                     ?_display_write_byte:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0070                     ?i1_timer_Timer0Reset:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0070                     ??i1_timer_Timer0Reset:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0070                     ?i1_data_getdata:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0070                     ??i1_data_getdata:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0070                     ?i1_led_SetState:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0070                     ??i1_led_SetState:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0070                     ?_strcpy:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0070                     ?_strlen:	
  3823                           ; 2 bytes @ 0x0
  3824                           
  3825  0070                     ?_timer_Timer0Handdle:	
  3826                           ; 2 bytes @ 0x0
  3827                           
  3828  0070                     ?_fputc:	
  3829                           ; 2 bytes @ 0x0
  3830                           
  3831  0070                     ?___lwmod:	
  3832                           ; 2 bytes @ 0x0
  3833                           
  3834  0070                     ?___aldiv:	
  3835                           ; 2 bytes @ 0x0
  3836                           
  3837  0070                     ?___almod:	
  3838                           ; 4 bytes @ 0x0
  3839                           
  3840  0070                     putch@c:	
  3841                           ; 4 bytes @ 0x0
  3842                           
  3843  0070                     i1led_SetState@isOn:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     ___lwmod@divisor:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     fputc@c:	
  3850                           ; 2 bytes @ 0x0
  3851                           
  3852  0070                     strcpy@dest:	
  3853                           ; 2 bytes @ 0x0
  3854                           
  3855  0070                     strlen@s:	
  3856                           ; 2 bytes @ 0x0
  3857                           
  3858  0070                     ___aldiv@divisor:	
  3859                           ; 2 bytes @ 0x0
  3860                           
  3861  0070                     ___almod@divisor:	
  3862                           ; 4 bytes @ 0x0
  3863                           
  3864                           
  3865                           ; 4 bytes @ 0x0
  3866  0070                     	ds	1
  3867  0071                     ??_led_Blink:	
  3868                           
  3869                           ; 1 bytes @ 0x1
  3870  0071                     	ds	1
  3871  0072                     ??_strlen:	
  3872  0072                     fputc@fp:	
  3873                           ; 1 bytes @ 0x2
  3874                           
  3875  0072                     ___lwmod@dividend:	
  3876                           ; 1 bytes @ 0x2
  3877                           
  3878  0072                     strcpy@src:	
  3879                           ; 2 bytes @ 0x2
  3880                           
  3881                           
  3882                           ; 2 bytes @ 0x2
  3883  0072                     	ds	1
  3884  0073                     ??_fputc:	
  3885                           
  3886                           ; 1 bytes @ 0x3
  3887  0073                     	ds	1
  3888  0074                     ??_strcpy:	
  3889  0074                     ??___lwmod:	
  3890                           ; 1 bytes @ 0x4
  3891                           
  3892  0074                     strlen@a:	
  3893                           ; 1 bytes @ 0x4
  3894                           
  3895  0074                     ___aldiv@dividend:	
  3896                           ; 2 bytes @ 0x4
  3897                           
  3898  0074                     ___almod@dividend:	
  3899                           ; 4 bytes @ 0x4
  3900                           
  3901                           
  3902                           ; 4 bytes @ 0x4
  3903  0074                     	ds	1
  3904  0075                     ___lwmod@counter:	
  3905                           
  3906                           ; 1 bytes @ 0x5
  3907  0075                     	ds	1
  3908  0076                     ??_key_isPressed:	
  3909                           
  3910                           ; 1 bytes @ 0x6
  3911  0076                     	ds	2
  3912  0078                     ??___aldiv:	
  3913  0078                     ??___almod:	
  3914                           ; 1 bytes @ 0x8
  3915                           
  3916  0078                     ?_fputs:	
  3917                           ; 1 bytes @ 0x8
  3918                           
  3919  0078                     ?_stoa:	
  3920                           ; 2 bytes @ 0x8
  3921                           
  3922  0078                     key_isPressed@pdata:	
  3923                           ; 2 bytes @ 0x8
  3924                           
  3925  0078                     fputs@fp:	
  3926                           ; 1 bytes @ 0x8
  3927                           
  3928  0078                     stoa@s:	
  3929                           ; 1 bytes @ 0x8
  3930                           
  3931  0078                     strcpy@s:	
  3932                           ; 2 bytes @ 0x8
  3933                           
  3934                           
  3935                           ; 2 bytes @ 0x8
  3936  0078                     	ds	1
  3937  0079                     ??_timer_Timer0Handdle:	
  3938  0079                     ??_fputs:	
  3939                           ; 1 bytes @ 0x9
  3940                           
  3941  0079                     ___almod@counter:	
  3942                           ; 1 bytes @ 0x9
  3943                           
  3944                           
  3945                           ; 1 bytes @ 0x9
  3946  0079                     	ds	1
  3947  007A                     ??_stoa:	
  3948  007A                     ___almod@sign:	
  3949                           ; 1 bytes @ 0xA
  3950                           
  3951  007A                     strcpy@d:	
  3952                           ; 1 bytes @ 0xA
  3953                           
  3954                           
  3955                           ; 2 bytes @ 0xA
  3956  007A                     	ds	1
  3957  007B                     ?_abs:	
  3958  007B                     abs@a:	
  3959                           ; 2 bytes @ 0xB
  3960                           
  3961                           
  3962                           ; 2 bytes @ 0xB
  3963  007B                     	ds	1
  3964  007C                     ??_pad:	
  3965                           
  3966                           ; 1 bytes @ 0xC
  3967  007C                     	ds	1
  3968  007D                     ??_sprintf:	
  3969                           
  3970                           ; 1 bytes @ 0xD
  3971  007D                     	ds	1
  3972                           
  3973                           	psect	cstackBANK0
  3974  0020                     __pcstackBANK0:	
  3975  0020                     ??_abs:	
  3976  0020                     ___aldiv@counter:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979  0020                     fputs@c:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982  0020                     stoa@nuls:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985                           
  3986                           ; 7 bytes @ 0x0
  3987  0020                     	ds	1
  3988  0021                     ___aldiv@sign:	
  3989  0021                     fputs@i:	
  3990                           ; 1 bytes @ 0x1
  3991                           
  3992                           
  3993                           ; 2 bytes @ 0x1
  3994  0021                     	ds	1
  3995  0022                     ___aldiv@quotient:	
  3996                           
  3997                           ; 4 bytes @ 0x2
  3998  0022                     	ds	1
  3999  0023                     fputs@s:	
  4000                           
  4001                           ; 1 bytes @ 0x3
  4002  0023                     	ds	1
  4003  0024                     ?_pad:	
  4004  0024                     pad@buf:	
  4005                           ; 2 bytes @ 0x4
  4006                           
  4007                           
  4008                           ; 1 bytes @ 0x4
  4009  0024                     	ds	1
  4010  0025                     pad@p:	
  4011                           
  4012                           ; 2 bytes @ 0x5
  4013  0025                     	ds	2
  4014  0027                     pad@i:	
  4015  0027                     stoa@i:	
  4016                           ; 2 bytes @ 0x7
  4017                           
  4018                           
  4019                           ; 2 bytes @ 0x7
  4020  0027                     	ds	2
  4021  0029                     pad@w:	
  4022  0029                     stoa@w:	
  4023                           ; 2 bytes @ 0x9
  4024                           
  4025                           
  4026                           ; 2 bytes @ 0x9
  4027  0029                     	ds	2
  4028  002B                     pad@fp:	
  4029  002B                     stoa@fp:	
  4030                           ; 1 bytes @ 0xB
  4031                           
  4032                           
  4033                           ; 1 bytes @ 0xB
  4034  002B                     	ds	1
  4035  002C                     ?_dtoa:	
  4036  002C                     stoa@cp:	
  4037                           ; 2 bytes @ 0xC
  4038                           
  4039  002C                     dtoa@d:	
  4040                           ; 2 bytes @ 0xC
  4041                           
  4042                           
  4043                           ; 4 bytes @ 0xC
  4044  002C                     	ds	2
  4045  002E                     stoa@p:	
  4046                           
  4047                           ; 2 bytes @ 0xE
  4048  002E                     	ds	2
  4049  0030                     ??_dtoa:	
  4050  0030                     stoa@l:	
  4051                           ; 1 bytes @ 0x10
  4052                           
  4053                           
  4054                           ; 2 bytes @ 0x10
  4055  0030                     	ds	2
  4056  0032                     dtoa@fp:	
  4057                           
  4058                           ; 1 bytes @ 0x12
  4059  0032                     	ds	1
  4060  0033                     _dtoa$1699:	
  4061                           
  4062                           ; 2 bytes @ 0x13
  4063  0033                     	ds	2
  4064  0035                     dtoa@p:	
  4065                           
  4066                           ; 2 bytes @ 0x15
  4067  0035                     	ds	2
  4068  0037                     dtoa@w:	
  4069                           
  4070                           ; 2 bytes @ 0x17
  4071  0037                     	ds	2
  4072  0039                     dtoa@s:	
  4073                           
  4074                           ; 2 bytes @ 0x19
  4075  0039                     	ds	2
  4076  003B                     dtoa@n:	
  4077                           
  4078                           ; 4 bytes @ 0x1B
  4079  003B                     	ds	4
  4080  003F                     dtoa@i:	
  4081                           
  4082                           ; 2 bytes @ 0x1F
  4083  003F                     	ds	2
  4084  0041                     ?_vfpfcnvrt:	
  4085  0041                     vfpfcnvrt@fmt:	
  4086                           ; 2 bytes @ 0x21
  4087                           
  4088                           
  4089                           ; 1 bytes @ 0x21
  4090  0041                     	ds	1
  4091  0042                     vfpfcnvrt@ap:	
  4092                           
  4093                           ; 1 bytes @ 0x22
  4094  0042                     	ds	1
  4095  0043                     ??_vfpfcnvrt:	
  4096                           
  4097                           ; 1 bytes @ 0x23
  4098  0043                     	ds	5
  4099  0048                     vfpfcnvrt@ll:	
  4100                           
  4101                           ; 4 bytes @ 0x28
  4102  0048                     	ds	4
  4103  004C                     vfpfcnvrt@cp:	
  4104                           
  4105                           ; 2 bytes @ 0x2C
  4106  004C                     	ds	2
  4107  004E                     vfpfcnvrt@fp:	
  4108                           
  4109                           ; 1 bytes @ 0x2E
  4110  004E                     	ds	1
  4111  004F                     ?_vfprintf:	
  4112  004F                     vfprintf@fmt:	
  4113                           ; 2 bytes @ 0x2F
  4114                           
  4115                           
  4116                           ; 2 bytes @ 0x2F
  4117  004F                     	ds	2
  4118  0051                     vfprintf@ap:	
  4119                           
  4120                           ; 1 bytes @ 0x31
  4121  0051                     	ds	1
  4122  0052                     ??_vfprintf:	
  4123                           
  4124                           ; 1 bytes @ 0x32
  4125  0052                     	ds	2
  4126  0054                     vfprintf@fp:	
  4127                           
  4128                           ; 1 bytes @ 0x34
  4129  0054                     	ds	1
  4130  0055                     vfprintf@cfmt:	
  4131                           
  4132                           ; 2 bytes @ 0x35
  4133  0055                     	ds	2
  4134  0057                     ?_sprintf:	
  4135  0057                     sprintf@s:	
  4136                           ; 2 bytes @ 0x37
  4137                           
  4138                           
  4139                           ; 2 bytes @ 0x37
  4140  0057                     	ds	2
  4141  0059                     sprintf@fmt:	
  4142                           
  4143                           ; 2 bytes @ 0x39
  4144  0059                     	ds	10
  4145  0063                     sprintf@ret:	
  4146                           
  4147                           ; 2 bytes @ 0x43
  4148  0063                     	ds	2
  4149  0065                     sprintf@ap:	
  4150                           
  4151                           ; 1 bytes @ 0x45
  4152  0065                     	ds	1
  4153  0066                     sprintf@f:	
  4154                           
  4155                           ; 6 bytes @ 0x46
  4156  0066                     	ds	6
  4157  006C                     ??_ISR:	
  4158                           
  4159                           ; 1 bytes @ 0x4C
  4160  006C                     	ds	2
  4161  006E                     ISR@i:	
  4162                           
  4163                           ; 1 bytes @ 0x4E
  4164  006E                     	ds	1
  4165                           
  4166                           	psect	maintext
  4167  0FB0                     __pmaintext:	
  4168 ;;
  4169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4170 ;;
  4171 ;; *************** function _main *****************
  4172 ;; Defined at:
  4173 ;;		line 242 in file "main.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : B1F/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels required when called:   13
  4193 ;; This function calls:
  4194 ;;		_display_set
  4195 ;;		_display_update
  4196 ;;		_init_env
  4197 ;;		_led_SetState
  4198 ;;		_timer_Timer0Init
  4199 ;;		_timer_Timer0Start
  4200 ;;		_timer_Timer1Init
  4201 ;;		_timer_Timer1Start
  4202 ;;		_uart_init
  4203 ;; This function is called by:
  4204 ;;		Startup code after reset
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _main
  4210  0FB0                     _main:	
  4211                           
  4212                           ;main.c: 244:     static u16 i = 0;;main.c: 245:     static u8 cnt = 0;;main.c: 249:    
      +                           init_env();
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4216  0FB0  3185  2543  318F   	fcall	_init_env
  4217                           
  4218                           ;main.c: 252:     timer_Timer0Init();
  4219  0FB3  318E  26D3  318F   	fcall	_timer_Timer0Init
  4220                           
  4221                           ;main.c: 253:     timer_Timer0Start();
  4222  0FB6  318E  267C  318F   	fcall	_timer_Timer0Start
  4223                           
  4224                           ;main.c: 256:     timer_Timer1Init();
  4225  0FB9  318E  26E0  318F   	fcall	_timer_Timer1Init
  4226                           
  4227                           ;main.c: 257:     timer_Timer1Start();
  4228  0FBC  318E  2671  318F   	fcall	_timer_Timer1Start
  4229                           
  4230                           ;main.c: 264:     uart_init();
  4231  0FBF  318F  2706  318F   	fcall	_uart_init
  4232                           
  4233                           ;main.c: 267:     display_update();
  4234  0FC2  3184  24D1  318F   	fcall	_display_update
  4235                           
  4236                           ;main.c: 268:     led_SetState(FALSE);
  4237  0FC5  3000               	movlw	0
  4238  0FC6  318E  26BB  318F   	fcall	_led_SetState
  4239  0FC9                     l3682:	
  4240                           ;main.c: 270:     while(1)
  4241                           
  4242                           
  4243                           ;main.c: 271:     {;main.c: 272:         if(i++ == 65535)
  4244  0FC9  3001               	movlw	1
  4245  0FCA  0025               	movlb	5	; select bank5
  4246  0FCB  07A0               	addwf	main@i^(0+640),f
  4247  0FCC  3000               	movlw	0
  4248  0FCD  3DA1               	addwfc	(main@i+1)^(0+640),f
  4249  0FCE  0820               	movf	main@i^(0+640),w
  4250  0FCF  0421               	iorwf	(main@i+1)^(0+640),w
  4251  0FD0  1D03               	btfss	3,2
  4252  0FD1  2FC9               	goto	l3682
  4253                           
  4254                           ;main.c: 273:         {;main.c: 275:             display_set(FALSE);
  4255  0FD2  3000               	movlw	0
  4256  0FD3  318E  269D  318F   	fcall	_display_set
  4257                           
  4258                           ;main.c: 278:     }
  4259                           
  4260                           ;main.c: 277:         }
  4261  0FD6  2FC9               	goto	l3682
  4262  0FD7                     __end_of_main:	
  4263                           ;main.c: 279:     return;
  4264                           
  4265                           
  4266                           	psect	text1
  4267  0F06                     __ptext1:	
  4268 ;; *************** function _uart_init *****************
  4269 ;; Defined at:
  4270 ;;		line 14 in file "uart.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    9
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _uart_init
  4300  0F06                     _uart_init:	
  4301                           
  4302                           ;uart.c: 17:     TXSEL = 0;
  4303                           
  4304                           ;incstack = 0
  4305                           ; Regs used in _uart_init: [wreg+status,2]
  4306  0F06  0022               	movlb	2	; select bank2
  4307  0F07  111D               	bcf	29,2	;volatile
  4308                           
  4309                           ;uart.c: 18:     RXSEL = 0;
  4310  0F08  109D               	bcf	29,1	;volatile
  4311                           
  4312                           ;uart.c: 19:     TRISCbits.TRISC7 = 1;
  4313  0F09  0021               	movlb	1	; select bank1
  4314  0F0A  178E               	bsf	14,7	;volatile
  4315                           
  4316                           ;uart.c: 20:     TRISCbits.TRISC6 = 0;
  4317  0F0B  130E               	bcf	14,6	;volatile
  4318                           
  4319                           ;uart.c: 21:     WPUCbits.WPUC7 = 0;
  4320  0F0C  0024               	movlb	4	; select bank4
  4321  0F0D  138E               	bcf	14,7	;volatile
  4322                           
  4323                           ;uart.c: 22:     WPUCbits.WPUC6 = 0;
  4324  0F0E  130E               	bcf	14,6	;volatile
  4325                           
  4326                           ;uart.c: 26:     SYNC = 0;
  4327  0F0F  0023               	movlb	3	; select bank3
  4328  0F10  121E               	bcf	30,4	;volatile
  4329                           
  4330                           ;uart.c: 27:     BRGH = 1;
  4331  0F11  151E               	bsf	30,2	;volatile
  4332                           
  4333                           ;uart.c: 28:     BRG16 = 1;
  4334  0F12  159F               	bsf	31,3	;volatile
  4335                           
  4336                           ;uart.c: 32:     SPBRGH = 0x00;
  4337  0F13  019C               	clrf	28	;volatile
  4338                           
  4339                           ;uart.c: 33:     SPBRGL = 23;
  4340  0F14  3017               	movlw	23
  4341  0F15  009B               	movwf	27	;volatile
  4342                           
  4343                           ;uart.c: 36:     TXEN = 1;
  4344  0F16  169E               	bsf	30,5	;volatile
  4345                           
  4346                           ;uart.c: 37:     SYNC = 0;
  4347  0F17  121E               	bcf	30,4	;volatile
  4348                           
  4349                           ;uart.c: 38:     SPEN = 1;
  4350  0F18  179D               	bsf	29,7	;volatile
  4351                           
  4352                           ;uart.c: 41:     TXIE = 1;
  4353  0F19  0021               	movlb	1	; select bank1
  4354  0F1A  1611               	bsf	17,4	;volatile
  4355                           
  4356                           ;uart.c: 42:     GIE = 1;
  4357  0F1B  178B               	bsf	11,7	;volatile
  4358                           
  4359                           ;uart.c: 43:     PEIE = 1;
  4360  0F1C  170B               	bsf	11,6	;volatile
  4361                           
  4362                           ;uart.c: 46:     CREN = 1;
  4363  0F1D  0023               	movlb	3	; select bank3
  4364  0F1E  161D               	bsf	29,4	;volatile
  4365                           
  4366                           ;uart.c: 49:     RCIE = 1;
  4367  0F1F  0021               	movlb	1	; select bank1
  4368  0F20  1691               	bsf	17,5	;volatile
  4369  0F21  0008               	return
  4370  0F22                     __end_of_uart_init:	
  4371                           
  4372                           	psect	text2
  4373  0E71                     __ptext2:	
  4374 ;; *************** function _timer_Timer1Start *****************
  4375 ;; Defined at:
  4376 ;;		line 40 in file "timer.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		None
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    9
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_main
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _timer_Timer1Start
  4406  0E71                     _timer_Timer1Start:	
  4407                           
  4408                           ;timer.c: 43:     T1CONbits.TMR1ON = 0b1;
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _timer_Timer1Start: []
  4412  0E71  0020               	movlb	0	; select bank0
  4413  0E72  1418               	bsf	24,0	;volatile
  4414  0E73  0008               	return
  4415  0E74                     __end_of_timer_Timer1Start:	
  4416                           
  4417                           	psect	text3
  4418  0EE0                     __ptext3:	
  4419 ;; *************** function _timer_Timer1Init *****************
  4420 ;; Defined at:
  4421 ;;		line 9 in file "timer.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    9
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _timer_Timer1Init
  4451  0EE0                     _timer_Timer1Init:	
  4452                           
  4453                           ;timer.c: 12:     INTCONbits.GIE = 0b1;
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _timer_Timer1Init: [wreg+status,2+status,0]
  4457  0EE0  178B               	bsf	11,7	;volatile
  4458                           
  4459                           ;timer.c: 14:     INTCONbits.PEIE = 0b1;
  4460  0EE1  170B               	bsf	11,6	;volatile
  4461                           
  4462                           ;timer.c: 15:     PIE1bits.TMR1IE = 0b1;
  4463  0EE2  0021               	movlb	1	; select bank1
  4464  0EE3  1411               	bsf	17,0	;volatile
  4465                           
  4466                           ;timer.c: 17:     PIR1bits.TMR1IF = 0b0;
  4467  0EE4  0020               	movlb	0	; select bank0
  4468  0EE5  1011               	bcf	17,0	;volatile
  4469                           
  4470                           ;timer.c: 19:     TMR1H = 0b0;
  4471  0EE6  0197               	clrf	23	;volatile
  4472                           
  4473                           ;timer.c: 20:     TMR1L = 0b0;
  4474  0EE7  0196               	clrf	22	;volatile
  4475                           
  4476                           ;timer.c: 30:     T1CONbits.TMR1CS = 0b00;
  4477  0EE8  303F               	movlw	-193
  4478  0EE9  0598               	andwf	24,f	;volatile
  4479                           
  4480                           ;timer.c: 33:     T1CONbits.T1CKPS = 0b11;
  4481  0EEA  3030               	movlw	48
  4482  0EEB  0498               	iorwf	24,f	;volatile
  4483  0EEC  0008               	return
  4484  0EED                     __end_of_timer_Timer1Init:	
  4485                           
  4486                           	psect	text4
  4487  0E7C                     __ptext4:	
  4488 ;; *************** function _timer_Timer0Start *****************
  4489 ;; Defined at:
  4490 ;;		line 96 in file "timer.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:   10
  4511 ;; This function calls:
  4512 ;;		_timer_Timer0Reset
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_tmp_change
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function _timer_Timer0Start
  4521  0E7C                     _timer_Timer0Start:	
  4522                           
  4523                           ;timer.c: 98:     timer_Timer0Reset();
  4524                           
  4525                           ;incstack = 0
  4526                           ; Regs used in _timer_Timer0Start: [wreg+status,2+status,0+pclath+cstack]
  4527  0E7C  318E  2685         	fcall	_timer_Timer0Reset
  4528                           
  4529                           ;timer.c: 99:     INTCONbits.TMR0IE = 0b1;
  4530  0E7E  168B               	bsf	11,5	;volatile
  4531  0E7F  0008               	return
  4532  0E80                     __end_of_timer_Timer0Start:	
  4533                           
  4534                           	psect	text5
  4535  0E85                     __ptext5:	
  4536 ;; *************** function _timer_Timer0Reset *****************
  4537 ;; Defined at:
  4538 ;;		line 91 in file "timer.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    9
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_timer_Timer0Start
  4563 ;;		_tmp_change
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _timer_Timer0Reset
  4569  0E85                     _timer_Timer0Reset:	
  4570                           
  4571                           ;timer.c: 93:     INTCONbits.TMR0IF = 0;
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _timer_Timer0Reset: [wreg]
  4575  0E85  110B               	bcf	11,2	;volatile
  4576                           
  4577                           ;timer.c: 94:     TMR0 = (217 + 14);
  4578  0E86  30E7               	movlw	231
  4579  0E87  0020               	movlb	0	; select bank0
  4580  0E88  0095               	movwf	21	;volatile
  4581  0E89  0008               	return
  4582  0E8A                     __end_of_timer_Timer0Reset:	
  4583                           
  4584                           	psect	text6
  4585  0ED3                     __ptext6:	
  4586 ;; *************** function _timer_Timer0Init *****************
  4587 ;; Defined at:
  4588 ;;		line 63 in file "timer.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    9
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _timer_Timer0Init
  4618  0ED3                     _timer_Timer0Init:	
  4619                           
  4620                           ;timer.c: 66:     INTCONbits.GIE = 0b1;
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _timer_Timer0Init: [wreg+status,2+status,0]
  4624  0ED3  178B               	bsf	11,7	;volatile
  4625                           
  4626                           ;timer.c: 69:     INTCONbits.TMR0IE = 0b0;
  4627  0ED4  128B               	bcf	11,5	;volatile
  4628                           
  4629                           ;timer.c: 75:     OPTION_REGbits.PSA = 0;
  4630  0ED5  0021               	movlb	1	; select bank1
  4631  0ED6  1195               	bcf	21,3	;volatile
  4632                           
  4633                           ;timer.c: 76:     OPTION_REGbits.TMR0CS = 0;
  4634  0ED7  1295               	bcf	21,5	;volatile
  4635                           
  4636                           ;timer.c: 77:     OPTION_REGbits.PS = 4;
  4637  0ED8  0815               	movf	21,w	;volatile
  4638  0ED9  39F8               	andlw	-8
  4639  0EDA  3804               	iorlw	4
  4640  0EDB  0095               	movwf	21	;volatile
  4641                           
  4642                           ;timer.c: 78:     TMR0 = (217 + 14);
  4643  0EDC  30E7               	movlw	231
  4644  0EDD  0020               	movlb	0	; select bank0
  4645  0EDE  0095               	movwf	21	;volatile
  4646  0EDF  0008               	return
  4647  0EE0                     __end_of_timer_Timer0Init:	
  4648                           
  4649                           	psect	text7
  4650  0EBB                     __ptext7:	
  4651 ;; *************** function _led_SetState *****************
  4652 ;; Defined at:
  4653 ;;		line 107 in file "hardware.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  isOn            1    wreg     unsigned char 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  isOn            1    0[BANK5 ] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:        1 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    9
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_main
  4678 ;;		_capture_handdle
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _led_SetState
  4684  0EBB                     _led_SetState:	
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _led_SetState: [wreg+status,2+status,0]
  4688                           ;led_SetState@isOn stored from wreg
  4689  0EBB  0025               	movlb	5	; select bank5
  4690  0EBC  00C7               	movwf	led_SetState@isOn^(0+640)
  4691                           
  4692                           ;hardware.c: 107: u8 led_SetState(u8 isOn);hardware.c: 108: {;hardware.c: 109:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  4693  0EBD  0847               	movf	led_SetState@isOn^(0+640),w
  4694  0EBE  1D03               	btfss	3,2
  4695  0EBF  2EC3               	goto	u2950
  4696  0EC0  0022               	movlb	2	; select bank2
  4697  0EC1  158D               	bsf	13,3	;volatile
  4698  0EC2  0008               	return
  4699  0EC3                     u2950:	
  4700  0EC3  0022               	movlb	2	; select bank2
  4701  0EC4  118D               	bcf	13,3	;volatile
  4702  0EC5  0008               	return
  4703  0EC6                     __end_of_led_SetState:	
  4704                           ;hardware.c: 110:     return 0;;	Return value of _led_SetState is never used
  4705                           
  4706                           
  4707                           	psect	text8
  4708  0543                     __ptext8:	
  4709 ;; *************** function _init_env *****************
  4710 ;; Defined at:
  4711 ;;		line 44 in file "main.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  i               2    4[BANK5 ] int 
  4716 ;;  pdata           1    3[BANK5 ] PTR volatile struct .
  4717 ;;		 -> g_data(39), 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         0       0       0       0       0       0       3       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         0       0       0       0       0       0       5       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:        5 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:   10
  4734 ;; This function calls:
  4735 ;;		_data_getdata
  4736 ;;		_display_set
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _init_env
  4744  0543                     _init_env:	
  4745                           
  4746                           ;main.c: 45:     IOCCP = 0;
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4750  0543  3180  2002  3185   	fcall	_data_getdata
  4751  0546  0025               	movlb	5	; select bank5
  4752  0547  00C8               	movwf	??_init_env^(0+640)
  4753  0548  0848               	movf	??_init_env^(0+640),w
  4754  0549  00CA               	movwf	init_env@pdata^(0+640)
  4755                           
  4756                           ;main.c: 51:     TRISCbits.TRISC5 = 1;
  4757  054A  178B               	bsf	11,7	;volatile
  4758                           
  4759                           ;main.c: 58: 
  4760  054B  0021               	movlb	1	; select bank1
  4761  054C  0819               	movf	25,w	;volatile
  4762  054D  39FC               	andlw	-4
  4763  054E  3802               	iorlw	2
  4764  054F  0099               	movwf	25	;volatile
  4765                           
  4766                           ;main.c: 62: 
  4767  0550  0819               	movf	25,w	;volatile
  4768  0551  3987               	andlw	-121
  4769  0552  3858               	iorlw	88
  4770  0553  0099               	movwf	25	;volatile
  4771                           
  4772                           ;main.c: 70: 
  4773  0554  1395               	bcf	21,7	;volatile
  4774                           
  4775                           ;main.c: 72:     TRISCbits.TRISC0 = 1;
  4776  0555  018C               	clrf	12	;volatile
  4777                           
  4778                           ;main.c: 73:     WPUCbits.WPUC0 = 1;
  4779  0556  0022               	movlb	2	; select bank2
  4780  0557  018C               	clrf	12	;volatile
  4781                           
  4782                           ;main.c: 74: 
  4783  0558  0024               	movlb	4	; select bank4
  4784  0559  018C               	clrf	12	;volatile
  4785                           
  4786                           ;main.c: 75: 
  4787  055A  0027               	movlb	7	; select bank7
  4788  055B  0191               	clrf	17	;volatile
  4789                           
  4790                           ;main.c: 76: 
  4791  055C  0192               	clrf	18	;volatile
  4792                           
  4793                           ;main.c: 78: 
  4794  055D  0021               	movlb	1	; select bank1
  4795  055E  018D               	clrf	13	;volatile
  4796                           
  4797                           ;main.c: 79: 
  4798  055F  0022               	movlb	2	; select bank2
  4799  0560  018D               	clrf	13	;volatile
  4800                           
  4801                           ;main.c: 80:     display_set(TRUE);
  4802  0561  0024               	movlb	4	; select bank4
  4803  0562  018D               	clrf	13	;volatile
  4804                           
  4805                           ;main.c: 81: }
  4806  0563  0027               	movlb	7	; select bank7
  4807  0564  0194               	clrf	20	;volatile
  4808                           
  4809                           ;main.c: 82: 
  4810  0565  0195               	clrf	21	;volatile
  4811                           
  4812                           ;main.c: 84: void tmp_change(void)
  4813  0566  0021               	movlb	1	; select bank1
  4814  0567  018E               	clrf	14	;volatile
  4815                           
  4816                           ;main.c: 85: {
  4817  0568  0022               	movlb	2	; select bank2
  4818  0569  018E               	clrf	14	;volatile
  4819                           
  4820                           ;main.c: 86:     static u8 history_key = 0;
  4821  056A  3001               	movlw	1
  4822  056B  0024               	movlb	4	; select bank4
  4823  056C  008E               	movwf	14	;volatile
  4824                           
  4825                           ;main.c: 87:     static u16 key_time_cnt = 0;
  4826  056D  0027               	movlb	7	; select bank7
  4827  056E  0197               	clrf	23	;volatile
  4828                           
  4829                           ;main.c: 88:     G_DATA *pdata = data_getdata();
  4830  056F  0198               	clrf	24	;volatile
  4831                           
  4832                           ;main.c: 93:     if( pdata->g_isDecoding == FALSE && ((pdata->g_flg_switch == TRUE)||(pd
      +                          ata->cnt_update >= 30)) )
  4833  0570  0021               	movlb	1	; select bank1
  4834  0571  168E               	bsf	14,5	;volatile
  4835                           
  4836                           ;main.c: 94: 
  4837  0572  0024               	movlb	4	; select bank4
  4838  0573  168E               	bsf	14,5	;volatile
  4839                           
  4840                           ;main.c: 96: 
  4841  0574  0021               	movlb	1	; select bank1
  4842  0575  148E               	bsf	14,1	;volatile
  4843                           
  4844                           ;main.c: 97:         pdata->g_find_recv_start = FALSE;
  4845  0576  0024               	movlb	4	; select bank4
  4846  0577  108E               	bcf	14,1	;volatile
  4847                           
  4848                           ;main.c: 98:         pdata->g_isDecoding = TRUE;
  4849  0578  0027               	movlb	7	; select bank7
  4850  0579  1497               	bsf	23,1	;volatile
  4851                           
  4852                           ;main.c: 101:         pdata->g_recv_count = CODE_P0;
  4853  057A  0025               	movlb	5	; select bank5
  4854  057B  01CB               	clrf	init_env@i^(0+640)
  4855  057C  01CC               	clrf	(init_env@i+1)^(0+640)
  4856  057D  084C               	movf	(init_env@i+1)^(0+640),w
  4857  057E  3A80               	xorlw	128
  4858  057F  00C8               	movwf	??_init_env^(0+640)
  4859  0580  3080               	movlw	128
  4860  0581  0248               	subwf	??_init_env^(0+640),w
  4861  0582  1D03               	skipz
  4862  0583  2D86               	goto	u2925
  4863  0584  3014               	movlw	20
  4864  0585  024B               	subwf	init_env@i^(0+640),w
  4865  0586                     u2925:	
  4866  0586  1803               	btfsc	3,0
  4867  0587  2DA4               	goto	l106
  4868  0588                     l3150:	
  4869                           
  4870                           ;main.c: 102:         PORTCbits.RC2 = BPC_PWR_ON;
  4871  0588  3005               	movlw	5
  4872  0589  0025               	movlb	5	; select bank5
  4873  058A  00C8               	movwf	??_init_env^(0+640)
  4874  058B  084B               	movf	init_env@i^(0+640),w
  4875  058C  3E0D               	addlw	13
  4876  058D  074A               	addwf	init_env@pdata^(0+640),w
  4877  058E  00C9               	movwf	(??_init_env+1)^(0+640)
  4878  058F  0849               	movf	(??_init_env+1)^(0+640),w
  4879  0590  0086               	movwf	6
  4880  0591  3003               	movlw	3	; select bank6/7
  4881  0592  0087               	movwf	7
  4882  0593  0848               	movf	??_init_env^(0+640),w
  4883  0594  0081               	movwf	1
  4884                           
  4885                           ;main.c: 103: 
  4886  0595  3001               	movlw	1
  4887  0596  07CB               	addwf	init_env@i^(0+640),f
  4888  0597  3000               	movlw	0
  4889  0598  3DCC               	addwfc	(init_env@i+1)^(0+640),f
  4890  0599  084C               	movf	(init_env@i+1)^(0+640),w
  4891  059A  3A80               	xorlw	128
  4892  059B  00C8               	movwf	??_init_env^(0+640)
  4893  059C  3080               	movlw	128
  4894  059D  0248               	subwf	??_init_env^(0+640),w
  4895  059E  1D03               	skipz
  4896  059F  2DA2               	goto	u2935
  4897  05A0  3014               	movlw	20
  4898  05A1  024B               	subwf	init_env@i^(0+640),w
  4899  05A2                     u2935:	
  4900  05A2  1C03               	skipc
  4901  05A3  2D88               	goto	l3150
  4902  05A4                     l106:	
  4903                           
  4904                           ;main.c: 108:     else if(pdata->g_isDecoding == TRUE && IOCCFbits.IOCCF1 == TRUE && TRU
      +                          E == pdata->g_find_recv_start)
  4905  05A4  0022               	movlb	2	; select bank2
  4906  05A5  110D               	bcf	13,2	;volatile
  4907                           
  4908                           ;main.c: 111:         {
  4909  05A6  0020               	movlb	0	; select bank0
  4910  05A7  110E               	bcf	14,2	;volatile
  4911                           
  4912                           ;main.c: 114:         timer_Timer0Start();
  4913  05A8  0021               	movlb	1	; select bank1
  4914  05A9  140E               	bsf	14,0	;volatile
  4915                           
  4916                           ;main.c: 115:     }
  4917  05AA  0024               	movlb	4	; select bank4
  4918  05AB  140E               	bsf	14,0	;volatile
  4919                           
  4920                           ;main.c: 122: 
  4921  05AC  3001               	movlw	1
  4922  05AD  318E  269D         	fcall	_display_set
  4923  05AF  0008               	return
  4924  05B0                     __end_of_init_env:	
  4925                           
  4926                           	psect	text9
  4927  0E9D                     __ptext9:	
  4928 ;; *************** function _display_set *****************
  4929 ;; Defined at:
  4930 ;;		line 14 in file "display.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  ison            1    wreg     enum E5222
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  ison            1    0[BANK5 ] enum E5222
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Locals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Totals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  4948 ;;Total ram usage:        1 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    9
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_init_env
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _display_set
  4961  0E9D                     _display_set:	
  4962                           
  4963                           ;incstack = 0
  4964                           ; Regs used in _display_set: [wreg+status,0]
  4965                           ;display_set@ison stored from wreg
  4966  0E9D  0025               	movlb	5	; select bank5
  4967  0E9E  00C7               	movwf	display_set@ison^(0+640)
  4968                           
  4969                           ;display.c: 14: void display_set(BOOL ison);display.c: 15: {;display.c: 16:     PORTAbit
      +                          s.RA0 = ison;
  4970  0E9F  0C47               	rrf	display_set@ison^(0+640),w
  4971  0EA0  0020               	movlb	0	; select bank0
  4972  0EA1  1C03               	skipc
  4973  0EA2  100C               	bcf	12,0	;volatile
  4974  0EA3  1803               	skipnc
  4975  0EA4  140C               	bsf	12,0	;volatile
  4976  0EA5  0008               	return
  4977  0EA6                     __end_of_display_set:	
  4978                           
  4979                           	psect	text10
  4980  0002                     __ptext10:	
  4981 ;; *************** function _data_getdata *****************
  4982 ;; Defined at:
  4983 ;;		line 9 in file "data.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      PTR volatile struct .
  4990 ;; Registers used:
  4991 ;;		wreg
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    9
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_init_env
  5008 ;;		_tmp_change
  5009 ;;		_update_time
  5010 ;;		_capture_handdle
  5011 ;;		_check_err
  5012 ;;		_receive_decode
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _data_getdata
  5018  0002                     _data_getdata:	
  5019                           
  5020                           ;data.c: 11:     return &g_data;
  5021                           
  5022                           ;incstack = 0
  5023                           ; Regs used in _data_getdata: [wreg]
  5024  0002  3020               	movlw	(low (_g_data| (0+768)))& (0+255)
  5025  0003  0008               	return
  5026  0004                     __end_of_data_getdata:	
  5027                           
  5028                           	psect	text11
  5029  04D1                     __ptext11:	
  5030 ;; *************** function _display_update *****************
  5031 ;; Defined at:
  5032 ;;		line 72 in file "display.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Temps:          0       0       0       0       0       0      11       0       0       0       0       0       
      +0       0
  5049 ;;      Totals:         0       0       0       0       0       0      11       0       0       0       0       0       
      +0       0
  5050 ;;Total ram usage:       11 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:   12
  5053 ;; This function calls:
  5054 ;;		___awmod
  5055 ;;		_display_write_once
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;;		_update_time
  5059 ;;		_receive_decode
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _display_update
  5065  04D1                     _display_update:	
  5066                           
  5067                           ;display.c: 85:     static u8 i=0;;display.c: 89:     display_write_once(segmcode[i%10],
      +                           segmcode[i%10], segmcode[i%10], segmcode[i%10]);
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _display_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5071  04D1  300A               	movlw	10
  5072  04D2  0025               	movlb	5	; select bank5
  5073  04D3  00C7               	movwf	___awmod@divisor^(0+640)
  5074  04D4  3000               	movlw	0
  5075  04D5  00C8               	movwf	(___awmod@divisor^(0+640)+1)
  5076  04D6  0825               	movf	display_update@i^(0+640),w
  5077  04D7  00D2               	movwf	??_display_update^(0+640)
  5078  04D8  01D3               	clrf	(??_display_update^(0+640)+1)
  5079  04D9  0852               	movf	??_display_update^(0+640),w
  5080  04DA  00C9               	movwf	___awmod@dividend^(0+640)
  5081  04DB  0853               	movf	(??_display_update+1)^(0+640),w
  5082  04DC  00CA               	movwf	(___awmod@dividend+1)^(0+640)
  5083  04DD  3186  26BB  3184   	fcall	___awmod
  5084  04E0  0025               	movlb	5	; select bank5
  5085  04E1  0848               	movf	(?___awmod+1)^(0+640),w
  5086  04E2  0085               	movwf	5
  5087  04E3  0847               	movf	?___awmod^(0+640),w
  5088  04E4  0084               	movwf	4
  5089  04E5  3042               	movlw	low (_segmcode| (0+32768))
  5090  04E6  0784               	addwf	4,f
  5091  04E7  3087               	movlw	high (_segmcode| (0+32768))
  5092  04E8  3D85               	addwfc	5,f
  5093  04E9  0800               	movf	0,w	;code access
  5094  04EA  00D4               	movwf	(??_display_update+2)^(0+640)
  5095  04EB  0854               	movf	(??_display_update+2)^(0+640),w
  5096  04EC  00CE               	movwf	display_write_once@HR^(0+640)
  5097  04ED  300A               	movlw	10
  5098  04EE  00C7               	movwf	___awmod@divisor^(0+640)
  5099  04EF  3000               	movlw	0
  5100  04F0  00C8               	movwf	(___awmod@divisor^(0+640)+1)
  5101  04F1  0825               	movf	display_update@i^(0+640),w
  5102  04F2  00D5               	movwf	(??_display_update+3)^(0+640)
  5103  04F3  01D6               	clrf	((??_display_update+3)^(0+640)+1)
  5104  04F4  0855               	movf	(??_display_update+3)^(0+640),w
  5105  04F5  00C9               	movwf	___awmod@dividend^(0+640)
  5106  04F6  0856               	movf	(??_display_update+4)^(0+640),w
  5107  04F7  00CA               	movwf	(___awmod@dividend+1)^(0+640)
  5108  04F8  3186  26BB  3184   	fcall	___awmod
  5109  04FB  0025               	movlb	5	; select bank5
  5110  04FC  0848               	movf	(?___awmod+1)^(0+640),w
  5111  04FD  0085               	movwf	5
  5112  04FE  0847               	movf	?___awmod^(0+640),w
  5113  04FF  0084               	movwf	4
  5114  0500  3042               	movlw	low (_segmcode| (0+32768))
  5115  0501  0784               	addwf	4,f
  5116  0502  3087               	movlw	high (_segmcode| (0+32768))
  5117  0503  3D85               	addwfc	5,f
  5118  0504  0800               	movf	0,w	;code access
  5119  0505  00D7               	movwf	(??_display_update+5)^(0+640)
  5120  0506  0857               	movf	(??_display_update+5)^(0+640),w
  5121  0507  00CF               	movwf	display_write_once@ML^(0+640)
  5122  0508  300A               	movlw	10
  5123  0509  00C7               	movwf	___awmod@divisor^(0+640)
  5124  050A  3000               	movlw	0
  5125  050B  00C8               	movwf	(___awmod@divisor^(0+640)+1)
  5126  050C  0825               	movf	display_update@i^(0+640),w
  5127  050D  00D8               	movwf	(??_display_update+6)^(0+640)
  5128  050E  01D9               	clrf	((??_display_update+6)^(0+640)+1)
  5129  050F  0858               	movf	(??_display_update+6)^(0+640),w
  5130  0510  00C9               	movwf	___awmod@dividend^(0+640)
  5131  0511  0859               	movf	(??_display_update+7)^(0+640),w
  5132  0512  00CA               	movwf	(___awmod@dividend+1)^(0+640)
  5133  0513  3186  26BB  3184   	fcall	___awmod
  5134  0516  0025               	movlb	5	; select bank5
  5135  0517  0848               	movf	(?___awmod+1)^(0+640),w
  5136  0518  0085               	movwf	5
  5137  0519  0847               	movf	?___awmod^(0+640),w
  5138  051A  0084               	movwf	4
  5139  051B  3042               	movlw	low (_segmcode| (0+32768))
  5140  051C  0784               	addwf	4,f
  5141  051D  3087               	movlw	high (_segmcode| (0+32768))
  5142  051E  3D85               	addwfc	5,f
  5143  051F  0800               	movf	0,w	;code access
  5144  0520  00DA               	movwf	(??_display_update+8)^(0+640)
  5145  0521  085A               	movf	(??_display_update+8)^(0+640),w
  5146  0522  00D0               	movwf	display_write_once@MR^(0+640)
  5147  0523  300A               	movlw	10
  5148  0524  00C7               	movwf	___awmod@divisor^(0+640)
  5149  0525  3000               	movlw	0
  5150  0526  00C8               	movwf	(___awmod@divisor^(0+640)+1)
  5151  0527  0825               	movf	display_update@i^(0+640),w
  5152  0528  00DB               	movwf	(??_display_update+9)^(0+640)
  5153  0529  01DC               	clrf	((??_display_update+9)^(0+640)+1)
  5154  052A  085B               	movf	(??_display_update+9)^(0+640),w
  5155  052B  00C9               	movwf	___awmod@dividend^(0+640)
  5156  052C  085C               	movf	(??_display_update+10)^(0+640),w
  5157  052D  00CA               	movwf	(___awmod@dividend+1)^(0+640)
  5158  052E  3186  26BB  3184   	fcall	___awmod
  5159  0531  0025               	movlb	5	; select bank5
  5160  0532  0848               	movf	(?___awmod+1)^(0+640),w
  5161  0533  0085               	movwf	5
  5162  0534  0847               	movf	?___awmod^(0+640),w
  5163  0535  0084               	movwf	4
  5164  0536  3042               	movlw	low (_segmcode| (0+32768))
  5165  0537  0784               	addwf	4,f
  5166  0538  3087               	movlw	high (_segmcode| (0+32768))
  5167  0539  3D85               	addwfc	5,f
  5168  053A  0800               	movf	0,w	;code access
  5169  053B  318F  278A         	fcall	_display_write_once
  5170                           
  5171                           ;display.c: 91:     i++;
  5172  053D  3001               	movlw	1
  5173  053E  0025               	movlb	5	; select bank5
  5174  053F  00D2               	movwf	??_display_update^(0+640)
  5175  0540  0852               	movf	??_display_update^(0+640),w
  5176  0541  07A5               	addwf	display_update@i^(0+640),f
  5177  0542  0008               	return
  5178  0543                     __end_of_display_update:	
  5179                           ;display.c: 92:     return;
  5180                           
  5181                           
  5182                           	psect	text12
  5183  0F8A                     __ptext12:	
  5184 ;; *************** function _display_write_once *****************
  5185 ;; Defined at:
  5186 ;;		line 54 in file "display.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  HL              1    wreg     unsigned char 
  5189 ;;  HR              1    7[BANK5 ] unsigned char 
  5190 ;;  ML              1    8[BANK5 ] unsigned char 
  5191 ;;  MR              1    9[BANK5 ] unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  HL              1   10[BANK5 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5203 ;;      Params:         0       0       0       0       0       0       3       0       0       0       0       0       
      +0       0
  5204 ;;      Locals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Totals:         0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0
  5207 ;;Total ram usage:        4 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:   11
  5210 ;; This function calls:
  5211 ;;		_display_control595_delay
  5212 ;;		_display_write_byte
  5213 ;; This function is called by:
  5214 ;;		_display_update
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function _display_write_once
  5220  0F8A                     _display_write_once:	
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _display_write_once: [wreg+status,2+status,0+pclath+cstack]
  5224                           ;display_write_once@HL stored from wreg
  5225  0F8A  0025               	movlb	5	; select bank5
  5226  0F8B  00D1               	movwf	display_write_once@HL^(0+640)
  5227                           
  5228                           ;display.c: 56:     display_write_byte(HL);
  5229  0F8C  0851               	movf	display_write_once@HL^(0+640),w
  5230  0F8D  3187  27D4  318F   	fcall	_display_write_byte
  5231                           
  5232                           ;display.c: 57:     display_write_byte(HR);
  5233  0F90  0025               	movlb	5	; select bank5
  5234  0F91  084E               	movf	display_write_once@HR^(0+640),w
  5235  0F92  3187  27D4  318F   	fcall	_display_write_byte
  5236                           
  5237                           ;display.c: 58:     display_write_byte(ML);
  5238  0F95  0025               	movlb	5	; select bank5
  5239  0F96  084F               	movf	display_write_once@ML^(0+640),w
  5240  0F97  3187  27D4  318F   	fcall	_display_write_byte
  5241                           
  5242                           ;display.c: 59:     display_write_byte(MR);
  5243  0F9A  0025               	movlb	5	; select bank5
  5244  0F9B  0850               	movf	display_write_once@MR^(0+640),w
  5245  0F9C  3187  27D4  318F   	fcall	_display_write_byte
  5246                           
  5247                           ;display.c: 62:     LATBbits.LATB0 = PIN_LOW;
  5248  0F9F  0022               	movlb	2	; select bank2
  5249  0FA0  100D               	bcf	13,0	;volatile
  5250                           
  5251                           ;display.c: 63:     display_control595_delay();
  5252  0FA1  318E  26C6  318F   	fcall	_display_control595_delay
  5253                           
  5254                           ;display.c: 64:     LATBbits.LATB0 = PIN_HIGH;
  5255  0FA4  0022               	movlb	2	; select bank2
  5256  0FA5  140D               	bsf	13,0	;volatile
  5257                           
  5258                           ;display.c: 65:     display_control595_delay();
  5259  0FA6  318E  26C6  318F   	fcall	_display_control595_delay
  5260                           
  5261                           ;display.c: 67:     LATBbits.LATB1 = PIN_HIGH;
  5262  0FA9  0022               	movlb	2	; select bank2
  5263  0FAA  148D               	bsf	13,1	;volatile
  5264                           
  5265                           ;display.c: 68:  display_control595_delay();
  5266  0FAB  318E  26C6         	fcall	_display_control595_delay
  5267                           
  5268                           ;display.c: 69:     LATBbits.LATB1 = PIN_LOW;
  5269  0FAD  0022               	movlb	2	; select bank2
  5270  0FAE  108D               	bcf	13,1	;volatile
  5271  0FAF  0008               	return
  5272  0FB0                     __end_of_display_write_once:	
  5273                           
  5274                           	psect	text13
  5275  07D4                     __ptext13:	
  5276 ;; *************** function _display_write_byte *****************
  5277 ;; Defined at:
  5278 ;;		line 42 in file "display.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  data            1    wreg     unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  data            1    4[BANK5 ] unsigned char 
  5283 ;;  i               1    5[BANK5 ] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Locals:         0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0
  5295 ;;      Temps:          0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0
  5296 ;;      Totals:         0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0
  5297 ;;Total ram usage:        4 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:   10
  5300 ;; This function calls:
  5301 ;;		_display_control595_delay
  5302 ;; This function is called by:
  5303 ;;		_display_write_once
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           
  5308                           ;psect for function _display_write_byte
  5309  07D4                     _display_write_byte:	
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in _display_write_byte: [wreg+status,2+status,0+pclath+cstack]
  5313                           ;display_write_byte@data stored from wreg
  5314  07D4  0025               	movlb	5	; select bank5
  5315  07D5  00CB               	movwf	display_write_byte@data^(0+640)
  5316                           
  5317                           ;display.c: 43:     u8 i;;display.c: 44:     for(i = 0; i < 8; i++){
  5318  07D6  01CC               	clrf	display_write_byte@i^(0+640)
  5319  07D7                     L1:	
  5320  07D7  3008               	movlw	8
  5321  07D8  024C               	subwf	display_write_byte@i^(0+640),w
  5322  07D9  1803               	btfsc	3,0
  5323  07DA  0008               	return
  5324                           
  5325                           ;display.c: 45:   LATBbits.LATB5 = (data & 0x80) >> 7;
  5326  07DB  084B               	movf	display_write_byte@data^(0+640),w
  5327  07DC  00C9               	movwf	??_display_write_byte^(0+640)
  5328  07DD  3007               	movlw	7
  5329  07DE                     u2555:	
  5330  07DE  36C9               	lsrf	??_display_write_byte^(0+640),f
  5331  07DF  0B89               	decfsz	9,f
  5332  07E0  2FDE               	goto	u2555
  5333  07E1  0849               	movf	??_display_write_byte^(0+640),w
  5334  07E2  3901               	andlw	1
  5335  07E3  00CA               	movwf	(??_display_write_byte+1)^(0+640)
  5336  07E4  0ECA               	swapf	(??_display_write_byte+1)^(0+640),f
  5337  07E5  0DCA               	rlf	(??_display_write_byte+1)^(0+640),f
  5338  07E6  0022               	movlb	2	; select bank2
  5339  07E7  080D               	movf	13,w	;volatile
  5340  07E8  0025               	movlb	5	; select bank5
  5341  07E9  064A               	xorwf	(??_display_write_byte+1)^(0+640),w
  5342  07EA  39DF               	andlw	-33
  5343  07EB  064A               	xorwf	(??_display_write_byte+1)^(0+640),w
  5344  07EC  0022               	movlb	2	; select bank2
  5345  07ED  008D               	movwf	13	;volatile
  5346                           
  5347                           ;display.c: 46:         LATBbits.LATB0 = PIN_LOW;
  5348  07EE  100D               	bcf	13,0	;volatile
  5349                           
  5350                           ;display.c: 47:   display_control595_delay();
  5351  07EF  318E  26C6  3187   	fcall	_display_control595_delay
  5352                           
  5353                           ;display.c: 48:         LATBbits.LATB0 = PIN_HIGH;
  5354  07F2  0022               	movlb	2	; select bank2
  5355  07F3  140D               	bsf	13,0	;volatile
  5356                           
  5357                           ;display.c: 49:   display_control595_delay();
  5358  07F4  318E  26C6  3187   	fcall	_display_control595_delay
  5359                           
  5360                           ;display.c: 50:         data <<= 1;
  5361  07F7  1003               	clrc
  5362  07F8  0025               	movlb	5	; select bank5
  5363  07F9  0DCB               	rlf	display_write_byte@data^(0+640),f
  5364                           
  5365                           ;display.c: 51:     }
  5366  07FA  3001               	movlw	1
  5367  07FB  00C9               	movwf	??_display_write_byte^(0+640)
  5368  07FC  0849               	movf	??_display_write_byte^(0+640),w
  5369  07FD  07CC               	addwf	display_write_byte@i^(0+640),f
  5370  07FE  2FD7               	goto	L1
  5371  07FF                     __end_of_display_write_byte:	
  5372                           
  5373                           	psect	text14
  5374  0EC6                     __ptext14:	
  5375 ;; *************** function _display_control595_delay *****************
  5376 ;; Defined at:
  5377 ;;		line 26 in file "display.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  times           1    1[BANK5 ] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Locals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  5393 ;;      Temps:          0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  5394 ;;      Totals:         0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0
  5395 ;;Total ram usage:        2 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    9
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_display_write_byte
  5402 ;;		_display_write_once
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _display_control595_delay
  5408  0EC6                     _display_control595_delay:	
  5409                           
  5410                           ;display.c: 27:    u8 times = 10;
  5411                           
  5412                           ;incstack = 0
  5413                           ; Regs used in _display_control595_delay: [wreg+status,2+status,0]
  5414  0EC6  300A               	movlw	10
  5415  0EC7  0025               	movlb	5	; select bank5
  5416  0EC8  00C7               	movwf	??_display_control595_delay^(0+640)
  5417  0EC9  0847               	movf	??_display_control595_delay^(0+640),w
  5418  0ECA  00C8               	movwf	display_control595_delay@times^(0+640)
  5419  0ECB                     l397:	
  5420                           ;display.c: 31:    }
  5421                           
  5422                           ;display.c: 28:    while(times > 0){
  5423                           
  5424                           
  5425                           ;display.c: 28:    while(times > 0){
  5426  0ECB  0848               	movf	display_control595_delay@times^(0+640),w
  5427  0ECC  1903               	btfsc	3,2
  5428  0ECD  0008               	return
  5429                           
  5430                           ;display.c: 29:     __nop();
  5431  0ECE  0000               	nop
  5432                           
  5433                           ;display.c: 30:        times--;
  5434  0ECF  3001               	movlw	1
  5435  0ED0  0025               	movlb	5	; select bank5
  5436  0ED1  02C8               	subwf	display_control595_delay@times^(0+640),f
  5437  0ED2  2ECB               	goto	l397
  5438  0ED3                     __end_of_display_control595_delay:	
  5439                           
  5440                           	psect	text15
  5441  06BB                     __ptext15:	
  5442 ;; *************** function ___awmod *****************
  5443 ;; Defined at:
  5444 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\awmod.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  divisor         2    0[BANK5 ] int 
  5447 ;;  dividend        2    2[BANK5 ] int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  sign            1    6[BANK5 ] unsigned char 
  5450 ;;  counter         1    5[BANK5 ] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  2    0[BANK5 ] int 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5460 ;;      Params:         0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0
  5461 ;;      Locals:         0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0
  5462 ;;      Temps:          0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0
  5463 ;;      Totals:         0       0       0       0       0       0       7       0       0       0       0       0       
      +0       0
  5464 ;;Total ram usage:        7 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    9
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_display_update
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function ___awmod
  5476  06BB                     ___awmod:	
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5480  06BB  0025               	movlb	5	; select bank5
  5481  06BC  01CD               	clrf	___awmod@sign^(0+640)
  5482  06BD  1FCA               	btfss	(___awmod@dividend+1)^(0+640),7
  5483  06BE  2EC6               	goto	l3064
  5484  06BF  09C9               	comf	___awmod@dividend^(0+640),f
  5485  06C0  09CA               	comf	(___awmod@dividend+1)^(0+640),f
  5486  06C1  0AC9               	incf	___awmod@dividend^(0+640),f
  5487  06C2  1903               	skipnz
  5488  06C3  0ACA               	incf	(___awmod@dividend+1)^(0+640),f
  5489  06C4  01CD               	clrf	___awmod@sign^(0+640)
  5490  06C5  0ACD               	incf	___awmod@sign^(0+640),f
  5491  06C6                     l3064:	
  5492  06C6  1FC8               	btfss	(___awmod@divisor+1)^(0+640),7
  5493  06C7  2ECD               	goto	l3068
  5494  06C8  09C7               	comf	___awmod@divisor^(0+640),f
  5495  06C9  09C8               	comf	(___awmod@divisor+1)^(0+640),f
  5496  06CA  0AC7               	incf	___awmod@divisor^(0+640),f
  5497  06CB  1903               	skipnz
  5498  06CC  0AC8               	incf	(___awmod@divisor+1)^(0+640),f
  5499  06CD                     l3068:	
  5500  06CD  0847               	movf	___awmod@divisor^(0+640),w
  5501  06CE  0448               	iorwf	(___awmod@divisor+1)^(0+640),w
  5502  06CF  1903               	btfsc	3,2
  5503  06D0  2EF4               	goto	l3086
  5504  06D1  01CC               	clrf	___awmod@counter^(0+640)
  5505  06D2  0ACC               	incf	___awmod@counter^(0+640),f
  5506  06D3                     l3076:	
  5507  06D3  1BC8               	btfsc	(___awmod@divisor+1)^(0+640),7
  5508  06D4  2EDF               	goto	l3078
  5509  06D5  3001               	movlw	1
  5510  06D6                     u2865:	
  5511  06D6  35C7               	lslf	___awmod@divisor^(0+640),f
  5512  06D7  0DC8               	rlf	(___awmod@divisor+1)^(0+640),f
  5513  06D8  0B89               	decfsz	9,f
  5514  06D9  2ED6               	goto	u2865
  5515  06DA  3001               	movlw	1
  5516  06DB  00CB               	movwf	??___awmod^(0+640)
  5517  06DC  084B               	movf	??___awmod^(0+640),w
  5518  06DD  07CC               	addwf	___awmod@counter^(0+640),f
  5519  06DE  2ED3               	goto	l3076
  5520  06DF                     l3078:	
  5521  06DF  0848               	movf	(___awmod@divisor+1)^(0+640),w
  5522  06E0  024A               	subwf	(___awmod@dividend+1)^(0+640),w
  5523  06E1  1D03               	skipz
  5524  06E2  2EE5               	goto	u2885
  5525  06E3  0847               	movf	___awmod@divisor^(0+640),w
  5526  06E4  0249               	subwf	___awmod@dividend^(0+640),w
  5527  06E5                     u2885:	
  5528  06E5  1C03               	skipc
  5529  06E6  2EEB               	goto	l3082
  5530  06E7  0847               	movf	___awmod@divisor^(0+640),w
  5531  06E8  02C9               	subwf	___awmod@dividend^(0+640),f
  5532  06E9  0848               	movf	(___awmod@divisor+1)^(0+640),w
  5533  06EA  3BCA               	subwfb	(___awmod@dividend+1)^(0+640),f
  5534  06EB                     l3082:	
  5535  06EB  3001               	movlw	1
  5536  06EC                     u2895:	
  5537  06EC  36C8               	lsrf	(___awmod@divisor+1)^(0+640),f
  5538  06ED  0CC7               	rrf	___awmod@divisor^(0+640),f
  5539  06EE  0B89               	decfsz	9,f
  5540  06EF  2EEC               	goto	u2895
  5541  06F0  3001               	movlw	1
  5542  06F1  02CC               	subwf	___awmod@counter^(0+640),f
  5543  06F2  1D03               	btfss	3,2
  5544  06F3  2EDF               	goto	l3078
  5545  06F4                     l3086:	
  5546  06F4  084D               	movf	___awmod@sign^(0+640),w
  5547  06F5  1903               	btfsc	3,2
  5548  06F6  2EFC               	goto	l3090
  5549  06F7  09C9               	comf	___awmod@dividend^(0+640),f
  5550  06F8  09CA               	comf	(___awmod@dividend+1)^(0+640),f
  5551  06F9  0AC9               	incf	___awmod@dividend^(0+640),f
  5552  06FA  1903               	skipnz
  5553  06FB  0ACA               	incf	(___awmod@dividend+1)^(0+640),f
  5554  06FC                     l3090:	
  5555  06FC  084A               	movf	(___awmod@dividend+1)^(0+640),w
  5556  06FD  00C8               	movwf	(?___awmod+1)^(0+640)
  5557  06FE  0849               	movf	___awmod@dividend^(0+640),w
  5558  06FF  00C7               	movwf	?___awmod^(0+640)
  5559  0700  0008               	return
  5560  0701                     __end_of___awmod:	
  5561                           
  5562                           	psect	intentry
  5563  0004                     __pintentry:	
  5564 ;; *************** function _ISR *****************
  5565 ;; Defined at:
  5566 ;;		line 193 in file "main.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  send           64    0[BANK4 ] unsigned char [64]
  5571 ;;  i               1   64[BANK2 ] unsigned char 
  5572 ;;  buf            64    0[BANK2 ] unsigned char [64]
  5573 ;;  send           64    0[BANK3 ] unsigned char [64]
  5574 ;;  i               1   78[BANK0 ] unsigned char 
  5575 ;;  buf            64    0[BANK1 ] unsigned char [64]
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Locals:         0       1      64      65      64      64       0       0       0       0       0       0       
      +0       0
  5587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Totals:         0       3      64      65      64      64       0       0       0       0       0       0       
      +0       0
  5589 ;;Total ram usage:      260 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    8
  5592 ;; This function calls:
  5593 ;;		___lwmod
  5594 ;;		_led_Blink
  5595 ;;		_sprintf
  5596 ;;		_strcpy
  5597 ;;		_strlen
  5598 ;;		_timer_IsTimer0Itrpt
  5599 ;;		_timer_IsTimer1Itrpt
  5600 ;;		_timer_Timer0Handdle
  5601 ;;		_timer_Timer1ClrIntrpt
  5602 ;;		i1_timer_Timer0Reset
  5603 ;; This function is called by:
  5604 ;;		Interrupt level 1
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608  0004                     _ISR:	
  5609                           
  5610                           ;incstack = 0
  5611  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5612                           
  5613                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5614  0005  3180               	pagesel	$
  5615  0006  318E  2678  3180   	fcall	_timer_IsTimer1Itrpt
  5616  0009  3A00               	xorlw	0
  5617  000A  1903               	skipnz
  5618  000B  287D               	goto	i1l4246
  5619  000C  30A0               	movlw	low ISR@F5503
  5620  000D  0086               	movwf	6
  5621  000E  3003               	movlw	high ISR@F5503
  5622  000F  0087               	movwf	7
  5623  0010  30A0               	movlw	low ISR@buf
  5624  0011  0084               	movwf	4
  5625  0012  3000               	movlw	high ISR@buf
  5626  0013  0085               	movwf	5
  5627  0014  3040               	movlw	64
  5628  0015  0020               	movlb	0	; select bank0
  5629  0016  00EC               	movwf	??_ISR
  5630  0017                     u479_20:	
  5631  0017  0016               	moviw fsr1++
  5632  0018  001A               	movwi fsr0++
  5633  0019  0BEC               	decfsz	??_ISR,f
  5634  001A  2817               	goto	u479_20
  5635  001B  30A0               	movlw	low ISR@buf
  5636  001C  00D7               	movwf	sprintf@s
  5637  001D  3000               	movlw	high ISR@buf
  5638  001E  00D8               	movwf	sprintf@s+1
  5639  001F  3000               	movlw	low (STR_1| (0+32768))
  5640  0020  00D9               	movwf	sprintf@fmt
  5641  0021  3090               	movlw	high (STR_1| (0+32768))
  5642  0022  00DA               	movwf	sprintf@fmt+1
  5643  0023  301A               	movlw	low (STR_2| (0+32768))
  5644  0024  00DB               	movwf	low ((?_sprintf| 0+4))
  5645  0025  3090               	movlw	high (STR_2| (0+32768))
  5646  0026  00DC               	movwf	(low ((?_sprintf| 0+4))+1)
  5647  0027  30C9               	movlw	201
  5648  0028  00DD               	movwf	?_sprintf+6
  5649  0029  3000               	movlw	0
  5650  002A  00DE               	movwf	?_sprintf+7
  5651  002B  3021               	movlw	low (STR_3| (0+32768))
  5652  002C  00DF               	movwf	low ((?_sprintf| 0+8))
  5653  002D  3090               	movlw	high (STR_3| (0+32768))
  5654  002E  00E0               	movwf	(low ((?_sprintf| 0+8))+1)
  5655  002F  318F  27D7  3180   	fcall	_sprintf
  5656  0032  0020               	movlb	0	; select bank0
  5657  0033  01EE               	clrf	ISR@i
  5658  0034  3020               	movlw	low ISR@F5506
  5659  0035  0086               	movwf	6
  5660  0036  3004               	movlw	high ISR@F5506
  5661  0037  0087               	movwf	7
  5662  0038  30A0               	movlw	low ISR@send
  5663  0039  0084               	movwf	4
  5664  003A  3001               	movlw	high ISR@send
  5665  003B  0085               	movwf	5
  5666  003C  3040               	movlw	64
  5667  003D  00EC               	movwf	??_ISR
  5668  003E                     u480_20:	
  5669  003E  0016               	moviw fsr1++
  5670  003F  001A               	movwi fsr0++
  5671  0040  0BEC               	decfsz	??_ISR,f
  5672  0041  283E               	goto	u480_20
  5673  0042  30A0               	movlw	low ISR@send
  5674  0043  00F0               	movwf	strcpy@dest
  5675  0044  3001               	movlw	high ISR@send
  5676  0045  00F1               	movwf	strcpy@dest+1
  5677  0046  30A0               	movlw	low ISR@buf
  5678  0047  00F2               	movwf	strcpy@src
  5679  0048  3000               	movlw	high ISR@buf
  5680  0049  00F3               	movwf	strcpy@src+1
  5681  004A  318F  2740  3180   	fcall	_strcpy
  5682  004D                     i1l4242:	
  5683  004D  30A0               	movlw	low ISR@send
  5684  004E  00F0               	movwf	strlen@s
  5685  004F  3001               	movlw	high ISR@send
  5686  0050  00F1               	movwf	strlen@s+1
  5687  0051  318F  2722  3180   	fcall	_strlen
  5688  0054  0870               	movf	?_strlen,w
  5689  0055  3E01               	addlw	1
  5690  0056  0020               	movlb	0	; select bank0
  5691  0057  00EC               	movwf	??_ISR
  5692  0058  3000               	movlw	0
  5693  0059  3D71               	addwfc	?_strlen+1,w
  5694  005A  00ED               	movwf	??_ISR+1
  5695  005B  086E               	movf	ISR@i,w
  5696  005C  066C               	xorwf	??_ISR,w
  5697  005D  046D               	iorwf	??_ISR+1,w
  5698  005E  1903               	btfsc	3,2
  5699  005F  287A               	goto	i1l4244
  5700  0060  0023               	movlb	3	; select bank3
  5701  0061  169E               	bsf	30,5	;volatile
  5702  0062  121E               	bcf	30,4	;volatile
  5703  0063  179D               	bsf	29,7	;volatile
  5704  0064  0021               	movlb	1	; select bank1
  5705  0065  1611               	bsf	17,4	;volatile
  5706  0066                     i1l144:	
  5707  0066  0023               	movlb	3	; select bank3
  5708  0067  1C9E               	btfss	30,1	;volatile
  5709  0068  2866               	goto	i1l144
  5710  0069  0020               	movlb	0	; select bank0
  5711  006A  086E               	movf	ISR@i,w
  5712  006B  3EA0               	addlw	(low (ISR@send| (0+256)))& (0+255)
  5713  006C  0086               	movwf	6
  5714  006D  3001               	movlw	1	; select bank3/4
  5715  006E  0087               	movwf	7
  5716  006F  0801               	movf	1,w
  5717  0070  0023               	movlb	3	; select bank3
  5718  0071  009A               	movwf	26	;volatile
  5719  0072  3001               	movlw	1
  5720  0073  0020               	movlb	0	; select bank0
  5721  0074  00EC               	movwf	??_ISR
  5722  0075  086C               	movf	??_ISR,w
  5723  0076  07EE               	addwf	ISR@i,f
  5724  0077  0021               	movlb	1	; select bank1
  5725  0078  1211               	bcf	17,4	;volatile
  5726  0079  284D               	goto	i1l4242
  5727  007A                     i1l4244:	
  5728  007A  318E  266E  3180   	fcall	_timer_Timer1ClrIntrpt
  5729  007D                     i1l4246:	
  5730  007D  318E  2674  3180   	fcall	_timer_IsTimer0Itrpt
  5731  0080  3A00               	xorlw	0
  5732  0081  1903               	skipnz
  5733  0082  2927               	goto	i1l162
  5734  0083  318E  266B  3180   	fcall	_timer_Timer0Handdle
  5735  0086  3064               	movlw	100
  5736  0087  00F0               	movwf	___lwmod@divisor
  5737  0088  3000               	movlw	0
  5738  0089  00F1               	movwf	___lwmod@divisor+1
  5739  008A  0023               	movlb	3	; select bank3
  5740  008B  0861               	movf	(ISR@cnt+1)^(0+384),w
  5741  008C  0020               	movlb	0	; select bank0
  5742  008D  00ED               	movwf	??_ISR+1
  5743  008E  0023               	movlb	3	; select bank3
  5744  008F  0860               	movf	ISR@cnt^(0+384),w
  5745  0090  0020               	movlb	0	; select bank0
  5746  0091  00EC               	movwf	??_ISR
  5747  0092  0023               	movlb	3	; select bank3
  5748  0093  0AE0               	incf	ISR@cnt^(0+384),f
  5749  0094  1903               	skipnz
  5750  0095  0AE1               	incf	(ISR@cnt+1)^(0+384),f
  5751  0096  0020               	movlb	0	; select bank0
  5752  0097  086C               	movf	??_ISR,w
  5753  0098  00F2               	movwf	___lwmod@dividend
  5754  0099  086D               	movf	??_ISR+1,w
  5755  009A  00F3               	movwf	___lwmod@dividend+1
  5756  009B  3187  27A8  3180   	fcall	___lwmod
  5757  009E  0870               	movf	?___lwmod,w
  5758  009F  0471               	iorwf	?___lwmod+1,w
  5759  00A0  1D03               	btfss	3,2
  5760  00A1  2925               	goto	i1l4274
  5761  00A2  318E  26B0  3180   	fcall	_led_Blink
  5762  00A5  30A0               	movlw	low ISR@F5509
  5763  00A6  0086               	movwf	6
  5764  00A7  3004               	movlw	high ISR@F5509
  5765  00A8  0087               	movwf	7
  5766  00A9  3020               	movlw	low ISR@buf_572
  5767  00AA  0084               	movwf	4
  5768  00AB  3001               	movlw	high ISR@buf_572
  5769  00AC  0085               	movwf	5
  5770  00AD  3040               	movlw	64
  5771  00AE  0020               	movlb	0	; select bank0
  5772  00AF  00EC               	movwf	??_ISR
  5773  00B0                     u485_20:	
  5774  00B0  0016               	moviw fsr1++
  5775  00B1  001A               	movwi fsr0++
  5776  00B2  0BEC               	decfsz	??_ISR,f
  5777  00B3  28B0               	goto	u485_20
  5778  00B4  3020               	movlw	low ISR@buf_572
  5779  00B5  00D7               	movwf	sprintf@s
  5780  00B6  3001               	movlw	high ISR@buf_572
  5781  00B7  00D8               	movwf	sprintf@s+1
  5782  00B8  304D               	movlw	low (STR_4| (0+32768))
  5783  00B9  00D9               	movwf	sprintf@fmt
  5784  00BA  3087               	movlw	high (STR_4| (0+32768))
  5785  00BB  00DA               	movwf	sprintf@fmt+1
  5786  00BC  301A               	movlw	low (STR_2| (0+32768))
  5787  00BD  00DB               	movwf	low ((?_sprintf| 0+4))
  5788  00BE  3090               	movlw	high (STR_2| (0+32768))
  5789  00BF  00DC               	movwf	(low ((?_sprintf| 0+4))+1)
  5790  00C0  30D9               	movlw	217
  5791  00C1  00DD               	movwf	?_sprintf+6
  5792  00C2  3000               	movlw	0
  5793  00C3  00DE               	movwf	?_sprintf+7
  5794  00C4  3021               	movlw	low (STR_3| (0+32768))
  5795  00C5  00DF               	movwf	low ((?_sprintf| 0+8))
  5796  00C6  3090               	movlw	high (STR_3| (0+32768))
  5797  00C7  00E0               	movwf	(low ((?_sprintf| 0+8))+1)
  5798  00C8  0021               	movlb	1	; select bank1
  5799  00C9  086E               	movf	ISR@tx^(0+128),w
  5800  00CA  0020               	movlb	0	; select bank0
  5801  00CB  00EC               	movwf	??_ISR
  5802  00CC  01ED               	clrf	??_ISR+1
  5803  00CD  086C               	movf	??_ISR,w
  5804  00CE  00E1               	movwf	?_sprintf+10
  5805  00CF  086D               	movf	??_ISR+1,w
  5806  00D0  00E2               	movwf	?_sprintf+11
  5807  00D1  318F  27D7  3180   	fcall	_sprintf
  5808  00D4  0022               	movlb	2	; select bank2
  5809  00D5  01E0               	clrf	ISR@i_576^(0+256)
  5810  00D6  3020               	movlw	low ISR@F5512
  5811  00D7  0086               	movwf	6
  5812  00D8  3005               	movlw	high ISR@F5512
  5813  00D9  0087               	movwf	7
  5814  00DA  3020               	movlw	low ISR@send_578
  5815  00DB  0084               	movwf	4
  5816  00DC  3002               	movlw	high ISR@send_578
  5817  00DD  0085               	movwf	5
  5818  00DE  3040               	movlw	64
  5819  00DF  0020               	movlb	0	; select bank0
  5820  00E0  00EC               	movwf	??_ISR
  5821  00E1                     u486_20:	
  5822  00E1  0016               	moviw fsr1++
  5823  00E2  001A               	movwi fsr0++
  5824  00E3  0BEC               	decfsz	??_ISR,f
  5825  00E4  28E1               	goto	u486_20
  5826  00E5  3020               	movlw	low ISR@send_578
  5827  00E6  00F0               	movwf	strcpy@dest
  5828  00E7  3002               	movlw	high ISR@send_578
  5829  00E8  00F1               	movwf	strcpy@dest+1
  5830  00E9  3020               	movlw	low ISR@buf_572
  5831  00EA  00F2               	movwf	strcpy@src
  5832  00EB  3001               	movlw	high ISR@buf_572
  5833  00EC  00F3               	movwf	strcpy@src+1
  5834  00ED  318F  2740  3180   	fcall	_strcpy
  5835  00F0                     i1l4270:	
  5836  00F0  3020               	movlw	low ISR@send_578
  5837  00F1  00F0               	movwf	strlen@s
  5838  00F2  3002               	movlw	high ISR@send_578
  5839  00F3  00F1               	movwf	strlen@s+1
  5840  00F4  318F  2722  3180   	fcall	_strlen
  5841  00F7  0870               	movf	?_strlen,w
  5842  00F8  3E01               	addlw	1
  5843  00F9  0020               	movlb	0	; select bank0
  5844  00FA  00EC               	movwf	??_ISR
  5845  00FB  3000               	movlw	0
  5846  00FC  3D71               	addwfc	?_strlen+1,w
  5847  00FD  00ED               	movwf	??_ISR+1
  5848  00FE  0022               	movlb	2	; select bank2
  5849  00FF  0860               	movf	ISR@i_576^(0+256),w
  5850  0100  0020               	movlb	0	; select bank0
  5851  0101  066C               	xorwf	??_ISR,w
  5852  0102  046D               	iorwf	??_ISR+1,w
  5853  0103  1903               	btfsc	3,2
  5854  0104  2920               	goto	i1l4272
  5855  0105  0023               	movlb	3	; select bank3
  5856  0106  169E               	bsf	30,5	;volatile
  5857  0107  121E               	bcf	30,4	;volatile
  5858  0108  179D               	bsf	29,7	;volatile
  5859  0109  0021               	movlb	1	; select bank1
  5860  010A  1611               	bsf	17,4	;volatile
  5861  010B                     i1l158:	
  5862  010B  0023               	movlb	3	; select bank3
  5863  010C  1C9E               	btfss	30,1	;volatile
  5864  010D  290B               	goto	i1l158
  5865  010E  0022               	movlb	2	; select bank2
  5866  010F  0860               	movf	ISR@i_576^(0+256),w
  5867  0110  3E20               	addlw	(low (ISR@send_578| (0+512)))& (0+255)
  5868  0111  0086               	movwf	6
  5869  0112  3002               	movlw	2	; select bank4/5
  5870  0113  0087               	movwf	7
  5871  0114  0801               	movf	1,w
  5872  0115  0023               	movlb	3	; select bank3
  5873  0116  009A               	movwf	26	;volatile
  5874  0117  3001               	movlw	1
  5875  0118  0020               	movlb	0	; select bank0
  5876  0119  00EC               	movwf	??_ISR
  5877  011A  086C               	movf	??_ISR,w
  5878  011B  0022               	movlb	2	; select bank2
  5879  011C  07E0               	addwf	ISR@i_576^(0+256),f
  5880  011D  0021               	movlb	1	; select bank1
  5881  011E  1211               	bcf	17,4	;volatile
  5882  011F  28F0               	goto	i1l4270
  5883  0120                     i1l4272:	
  5884  0120  3001               	movlw	1
  5885  0121  00EC               	movwf	??_ISR
  5886  0122  086C               	movf	??_ISR,w
  5887  0123  0021               	movlb	1	; select bank1
  5888  0124  07EE               	addwf	ISR@tx^(0+128),f
  5889  0125                     i1l4274:	
  5890  0125  318E  2680         	fcall	i1_timer_Timer0Reset
  5891  0127                     i1l162:	
  5892  0127  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5893  0128  0009               	retfie
  5894  0129                     __end_of_ISR:	
  5895                           
  5896                           	psect	text17
  5897  0E80                     __ptext17:	
  5898 ;; *************** function i1_timer_Timer0Reset *****************
  5899 ;; Defined at:
  5900 ;;		line 91 in file "timer.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_ISR
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           
  5928                           ;psect for function i1_timer_Timer0Reset
  5929  0E80                     i1_timer_Timer0Reset:	
  5930                           
  5931                           ;timer.c: 93:     INTCONbits.TMR0IF = 0;
  5932                           
  5933                           ;incstack = 0
  5934                           ; Regs used in i1_timer_Timer0Reset: [wreg]
  5935  0E80  110B               	bcf	11,2	;volatile
  5936                           
  5937                           ;timer.c: 94:     TMR0 = (217 + 14);
  5938  0E81  30E7               	movlw	231
  5939  0E82  0020               	movlb	0	; select bank0
  5940  0E83  0095               	movwf	21	;volatile
  5941  0E84  0008               	return
  5942  0E85                     __end_ofi1_timer_Timer0Reset:	
  5943                           
  5944                           	psect	text18
  5945  0E6E                     __ptext18:	
  5946 ;; *************** function _timer_Timer1ClrIntrpt *****************
  5947 ;; Defined at:
  5948 ;;		line 51 in file "timer.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		None
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;Total ram usage:        0 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_ISR
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function _timer_Timer1ClrIntrpt
  5977  0E6E                     _timer_Timer1ClrIntrpt:	
  5978                           
  5979                           ;timer.c: 53:     PIR1bits.TMR1IF = 0b0;
  5980                           
  5981                           ;incstack = 0
  5982                           ; Regs used in _timer_Timer1ClrIntrpt: []
  5983  0E6E  0020               	movlb	0	; select bank0
  5984  0E6F  1011               	bcf	17,0	;volatile
  5985  0E70  0008               	return
  5986  0E71                     __end_of_timer_Timer1ClrIntrpt:	
  5987                           
  5988                           	psect	text19
  5989  0E6B                     __ptext19:	
  5990 ;; *************** function _timer_Timer0Handdle *****************
  5991 ;; Defined at:
  5992 ;;		line 109 in file "timer.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2   86[None  ] int 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    3
  6013 ;; This function calls:
  6014 ;;		_key_isPressed
  6015 ;; This function is called by:
  6016 ;;		_ISR
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _timer_Timer0Handdle
  6022  0E6B                     _timer_Timer0Handdle:	
  6023                           
  6024                           ;timer.c: 111:     key_isPressed();
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _timer_Timer0Handdle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6028  0E6B  3187  2701         	fcall	_key_isPressed
  6029  0E6D  0008               	return
  6030  0E6E                     __end_of_timer_Timer0Handdle:	
  6031                           ;timer.c: 113:     return 0;;	Return value of _timer_Timer0Handdle is never used
  6032                           
  6033                           
  6034                           	psect	text20
  6035  0701                     __ptext20:	
  6036 ;; *************** function _key_isPressed *****************
  6037 ;; Defined at:
  6038 ;;		line 123 in file "hardware.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  pdata           1    8[COMMON] PTR volatile struct .
  6043 ;;		 -> g_data(39), 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        3 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    2
  6060 ;; This function calls:
  6061 ;;		___lwmod
  6062 ;;		_led_Blink
  6063 ;;		i1_data_getdata
  6064 ;; This function is called by:
  6065 ;;		_timer_Timer0Handdle
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function _key_isPressed
  6071  0701                     _key_isPressed:	
  6072                           
  6073                           ;hardware.c: 125:     static u8 history_key = 0;;hardware.c: 126:     static u16 key_tim
      +                          e_cnt = 0;;hardware.c: 127:     G_DATA *pdata = data_getdata();
  6074                           
  6075                           ;incstack = 0
  6076                           ; Regs used in _key_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6077  0701  318E  2669  3187   	fcall	i1_data_getdata
  6078  0704  00F6               	movwf	??_key_isPressed
  6079  0705  0876               	movf	??_key_isPressed,w
  6080  0706  00F8               	movwf	key_isPressed@pdata
  6081                           
  6082                           ;hardware.c: 129:     if(key_time_cnt++ % 10 == 0)
  6083  0707  300A               	movlw	10
  6084  0708  00F0               	movwf	___lwmod@divisor
  6085  0709  3000               	movlw	0
  6086  070A  00F1               	movwf	___lwmod@divisor+1
  6087  070B  0022               	movlb	2	; select bank2
  6088  070C  0866               	movf	(key_isPressed@key_time_cnt+1)^(0+256),w
  6089  070D  00F7               	movwf	??_key_isPressed+1
  6090  070E  0865               	movf	key_isPressed@key_time_cnt^(0+256),w
  6091  070F  00F6               	movwf	??_key_isPressed
  6092  0710  0AE5               	incf	key_isPressed@key_time_cnt^(0+256),f
  6093  0711  1903               	skipnz
  6094  0712  0AE6               	incf	(key_isPressed@key_time_cnt+1)^(0+256),f
  6095  0713  0876               	movf	??_key_isPressed,w
  6096  0714  00F2               	movwf	___lwmod@dividend
  6097  0715  0877               	movf	??_key_isPressed+1,w
  6098  0716  00F3               	movwf	___lwmod@dividend+1
  6099  0717  3187  27A8  3187   	fcall	___lwmod
  6100  071A  0870               	movf	?___lwmod,w
  6101  071B  0471               	iorwf	?___lwmod+1,w
  6102  071C  1D03               	btfss	3,2
  6103  071D  0008               	return
  6104                           
  6105                           ;hardware.c: 130:     {;hardware.c: 131:         history_key <<= 1;
  6106  071E  1003               	clrc
  6107  071F  0021               	movlb	1	; select bank1
  6108  0720  0DE6               	rlf	key_isPressed@history_key^(0+128),f
  6109                           
  6110                           ;hardware.c: 132:         history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  6111  0721  0020               	movlb	0	; select bank0
  6112  0722  0E0E               	swapf	14,w	;volatile
  6113  0723  0C89               	rrf	9,f
  6114  0724  3901               	andlw	1
  6115  0725  00F6               	movwf	??_key_isPressed
  6116  0726  0876               	movf	??_key_isPressed,w
  6117  0727  0021               	movlb	1	; select bank1
  6118  0728  04E6               	iorwf	key_isPressed@history_key^(0+128),f
  6119                           
  6120                           ;hardware.c: 135:         if(((0x03) == (history_key & (0x0f))) && (FALSE == pdata->g_fl
      +                          g_switch))
  6121  0729  300F               	movlw	15
  6122  072A  0566               	andwf	key_isPressed@history_key^(0+128),w
  6123  072B  00F6               	movwf	??_key_isPressed
  6124  072C  3003               	movlw	3
  6125  072D  0676               	xorwf	??_key_isPressed,w
  6126  072E  1D03               	btfss	3,2
  6127  072F  0008               	return
  6128  0730  0878               	movf	key_isPressed@pdata,w
  6129  0731  0086               	movwf	6
  6130  0732  3003               	movlw	3	; select bank6/7
  6131  0733  0087               	movwf	7
  6132  0734  0801               	movf	1,w
  6133  0735  1D03               	btfss	3,2
  6134  0736  0008               	return
  6135                           
  6136                           ;hardware.c: 136:         {;hardware.c: 137:             pdata->g_flg_switch = TRUE;
  6137  0737  3001               	movlw	1
  6138  0738  00F6               	movwf	??_key_isPressed
  6139  0739  0878               	movf	key_isPressed@pdata,w
  6140  073A  0086               	movwf	6
  6141  073B  3003               	movlw	3	; select bank6/7
  6142  073C  0087               	movwf	7
  6143  073D  0876               	movf	??_key_isPressed,w
  6144  073E  0081               	movwf	1
  6145                           
  6146                           ;hardware.c: 139:             led_Blink();
  6147  073F  318E  26B0         	fcall	_led_Blink
  6148                           
  6149                           ;hardware.c: 140:         }
  6150  0741  0008               	return
  6151  0742                     __end_of_key_isPressed:	
  6152                           ;hardware.c: 141:     }
  6153                           
  6154                           
  6155                           	psect	text21
  6156  0E69                     __ptext21:	
  6157 ;; *************** function i1_data_getdata *****************
  6158 ;; Defined at:
  6159 ;;		line 9 in file "data.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      PTR volatile struct .
  6166 ;; Registers used:
  6167 ;;		wreg
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; This function calls:
  6180 ;;		Nothing
  6181 ;; This function is called by:
  6182 ;;		_key_isPressed
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           
  6187                           ;psect for function i1_data_getdata
  6188  0E69                     i1_data_getdata:	
  6189                           
  6190                           ;data.c: 11:     return &g_data;
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in i1_data_getdata: [wreg]
  6194  0E69  3020               	movlw	(low (_g_data| (0+768)))& (0+255)
  6195  0E6A  0008               	return
  6196  0E6B                     __end_ofi1_data_getdata:	
  6197                           
  6198                           	psect	text22
  6199  0EB0                     __ptext22:	
  6200 ;; *************** function _led_Blink *****************
  6201 ;; Defined at:
  6202 ;;		line 113 in file "hardware.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      unsigned char 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;Total ram usage:        1 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    1
  6223 ;; This function calls:
  6224 ;;		i1_led_SetState
  6225 ;; This function is called by:
  6226 ;;		_ISR
  6227 ;;		_key_isPressed
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function _led_Blink
  6233  0EB0                     _led_Blink:	
  6234                           
  6235                           ;hardware.c: 115:     static u8 State = 0;;hardware.c: 116:     led_SetState(State++ & 0
      +                          x01);
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _led_Blink: [wreg+status,2+status,0+pclath+cstack]
  6239  0EB0  0021               	movlb	1	; select bank1
  6240  0EB1  0867               	movf	led_Blink@State^(0+128),w
  6241  0EB2  3901               	andlw	1
  6242  0EB3  318E  26A6         	fcall	i1_led_SetState
  6243  0EB5  3001               	movlw	1
  6244  0EB6  00F1               	movwf	??_led_Blink
  6245  0EB7  0871               	movf	??_led_Blink,w
  6246  0EB8  0021               	movlb	1	; select bank1
  6247  0EB9  07E7               	addwf	led_Blink@State^(0+128),f
  6248  0EBA  0008               	return
  6249  0EBB                     __end_of_led_Blink:	
  6250                           ;hardware.c: 117:     return 0;;	Return value of _led_Blink is never used
  6251                           
  6252                           
  6253                           	psect	text23
  6254  0EA6                     __ptext23:	
  6255 ;; *************** function i1_led_SetState *****************
  6256 ;; Defined at:
  6257 ;;		line 107 in file "hardware.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  isOn            1    wreg     unsigned char 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  isOn            1    0[COMMON] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      unsigned char 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;Total ram usage:        1 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_led_Blink
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function i1_led_SetState
  6286  0EA6                     i1_led_SetState:	
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in i1_led_SetState: [wreg+status,2+status,0]
  6290                           ;i1led_SetState@isOn stored from wreg
  6291  0EA6  00F0               	movwf	i1led_SetState@isOn
  6292                           
  6293                           ;hardware.c: 107: u8 led_SetState(u8 isOn);hardware.c: 108: {;hardware.c: 109:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  6294  0EA7  0870               	movf	i1led_SetState@isOn,w
  6295  0EA8  1D03               	btfss	3,2
  6296  0EA9  2EAD               	goto	u444_20
  6297  0EAA  0022               	movlb	2	; select bank2
  6298  0EAB  158D               	bsf	13,3	;volatile
  6299  0EAC  0008               	return
  6300  0EAD                     u444_20:	
  6301  0EAD  0022               	movlb	2	; select bank2
  6302  0EAE  118D               	bcf	13,3	;volatile
  6303  0EAF  0008               	return
  6304  0EB0                     __end_ofi1_led_SetState:	
  6305                           ;hardware.c: 110:     return 0;;	Return value of i1_led_SetState is never used
  6306                           
  6307                           
  6308                           	psect	text24
  6309  07A8                     __ptext24:	
  6310 ;; *************** function ___lwmod *****************
  6311 ;; Defined at:
  6312 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  divisor         2    0[COMMON] unsigned int 
  6315 ;;  dividend        2    2[COMMON] unsigned int 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  counter         1    5[COMMON] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  2    0[COMMON] unsigned int 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;Total ram usage:        6 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_ISR
  6337 ;;		_key_isPressed
  6338 ;;		_tmp_change
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function ___lwmod
  6344  07A8                     ___lwmod:	
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6348  07A8  0870               	movf	___lwmod@divisor,w
  6349  07A9  0471               	iorwf	___lwmod@divisor+1,w
  6350  07AA  1903               	btfsc	3,2
  6351  07AB  2FCF               	goto	i1l4088
  6352  07AC  01F5               	clrf	___lwmod@counter
  6353  07AD  0AF5               	incf	___lwmod@counter,f
  6354  07AE                     i1l4078:	
  6355  07AE  1BF1               	btfsc	___lwmod@divisor+1,7
  6356  07AF  2FBA               	goto	i1l4080
  6357  07B0  3001               	movlw	1
  6358  07B1                     u452_25:	
  6359  07B1  35F0               	lslf	___lwmod@divisor,f
  6360  07B2  0DF1               	rlf	___lwmod@divisor+1,f
  6361  07B3  0B89               	decfsz	9,f
  6362  07B4  2FB1               	goto	u452_25
  6363  07B5  3001               	movlw	1
  6364  07B6  00F4               	movwf	??___lwmod
  6365  07B7  0874               	movf	??___lwmod,w
  6366  07B8  07F5               	addwf	___lwmod@counter,f
  6367  07B9  2FAE               	goto	i1l4078
  6368  07BA                     i1l4080:	
  6369  07BA  0871               	movf	___lwmod@divisor+1,w
  6370  07BB  0273               	subwf	___lwmod@dividend+1,w
  6371  07BC  1D03               	skipz
  6372  07BD  2FC0               	goto	u454_25
  6373  07BE  0870               	movf	___lwmod@divisor,w
  6374  07BF  0272               	subwf	___lwmod@dividend,w
  6375  07C0                     u454_25:	
  6376  07C0  1C03               	skipc
  6377  07C1  2FC6               	goto	i1l4084
  6378  07C2  0870               	movf	___lwmod@divisor,w
  6379  07C3  02F2               	subwf	___lwmod@dividend,f
  6380  07C4  0871               	movf	___lwmod@divisor+1,w
  6381  07C5  3BF3               	subwfb	___lwmod@dividend+1,f
  6382  07C6                     i1l4084:	
  6383  07C6  3001               	movlw	1
  6384  07C7                     u455_25:	
  6385  07C7  36F1               	lsrf	___lwmod@divisor+1,f
  6386  07C8  0CF0               	rrf	___lwmod@divisor,f
  6387  07C9  0B89               	decfsz	9,f
  6388  07CA  2FC7               	goto	u455_25
  6389  07CB  3001               	movlw	1
  6390  07CC  02F5               	subwf	___lwmod@counter,f
  6391  07CD  1D03               	btfss	3,2
  6392  07CE  2FBA               	goto	i1l4080
  6393  07CF                     i1l4088:	
  6394  07CF  0873               	movf	___lwmod@dividend+1,w
  6395  07D0  00F1               	movwf	?___lwmod+1
  6396  07D1  0872               	movf	___lwmod@dividend,w
  6397  07D2  00F0               	movwf	?___lwmod
  6398  07D3  0008               	return
  6399  07D4                     __end_of___lwmod:	
  6400                           
  6401                           	psect	text25
  6402  0E78                     __ptext25:	
  6403 ;; *************** function _timer_IsTimer1Itrpt *****************
  6404 ;; Defined at:
  6405 ;;		line 46 in file "timer.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      enum E5222
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_ISR
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _timer_IsTimer1Itrpt
  6434  0E78                     _timer_IsTimer1Itrpt:	
  6435                           
  6436                           ;timer.c: 48:     return (PIR1bits.TMR1IF == 0b1)? TRUE : FALSE;
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in _timer_IsTimer1Itrpt: [wreg+status,2+status,0]
  6440  0E78  0020               	movlb	0	; select bank0
  6441  0E79  0811               	movf	17,w	;volatile
  6442  0E7A  3901               	andlw	1
  6443  0E7B  0008               	return
  6444  0E7C                     __end_of_timer_IsTimer1Itrpt:	
  6445                           
  6446                           	psect	text26
  6447  0E74                     __ptext26:	
  6448 ;; *************** function _timer_IsTimer0Itrpt *****************
  6449 ;; Defined at:
  6450 ;;		line 102 in file "timer.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      enum E5222
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;Total ram usage:        0 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_ISR
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _timer_IsTimer0Itrpt
  6479  0E74                     _timer_IsTimer0Itrpt:	
  6480                           
  6481                           ;timer.c: 104:     return (INTCONbits.TMR0IF == 0b1)? TRUE : FALSE;
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _timer_IsTimer0Itrpt: [wreg+status,2+status,0]
  6485  0E74  0C0B               	rrf	11,w	;volatile
  6486  0E75  0C89               	rrf	9,f
  6487  0E76  3901               	andlw	1
  6488  0E77  0008               	return
  6489  0E78                     __end_of_timer_IsTimer0Itrpt:	
  6490                           
  6491                           	psect	text27
  6492  0F40                     __ptext27:	
  6493 ;; *************** function _strcpy *****************
  6494 ;; Defined at:
  6495 ;;		line 7 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  dest            2    0[COMMON] PTR unsigned char 
  6498 ;;		 -> ISR@send_578(64), ISR@send(64), 
  6499 ;;  src             2    2[COMMON] PTR const unsigned char 
  6500 ;;		 -> ISR@buf_572(64), ISR@buf(64), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  d               2   10[COMMON] PTR unsigned char 
  6503 ;;		 -> ISR@send_578(64), ISR@send(64), 
  6504 ;;  s               2    8[COMMON] PTR const unsigned char 
  6505 ;;		 -> ISR@buf_572(64), ISR@buf(64), 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  2    0[COMMON] PTR unsigned char 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;Total ram usage:       12 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_ISR
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function _strcpy
  6530  0F40                     _strcpy:	
  6531                           
  6532                           ;incstack = 0
  6533                           ; Regs used in _strcpy: [wreg-fsr1h]
  6534  0F40  0873               	movf	strcpy@src+1,w
  6535  0F41  00F9               	movwf	strcpy@s+1
  6536  0F42  0872               	movf	strcpy@src,w
  6537  0F43  00F8               	movwf	strcpy@s
  6538  0F44  0871               	movf	strcpy@dest+1,w
  6539  0F45  00FB               	movwf	strcpy@d+1
  6540  0F46  0870               	movf	strcpy@dest,w
  6541  0F47  00FA               	movwf	strcpy@d
  6542  0F48                     i1l4142:	
  6543  0F48  087B               	movf	strcpy@d+1,w
  6544  0F49  00F5               	movwf	??_strcpy+1
  6545  0F4A  087A               	movf	strcpy@d,w
  6546  0F4B  00F4               	movwf	??_strcpy
  6547  0F4C  0AFA               	incf	strcpy@d,f
  6548  0F4D  1903               	skipnz
  6549  0F4E  0AFB               	incf	strcpy@d+1,f
  6550  0F4F  0874               	movf	??_strcpy,w
  6551  0F50  0086               	movwf	6
  6552  0F51  0875               	movf	??_strcpy+1,w
  6553  0F52  0087               	movwf	7
  6554  0F53  0879               	movf	strcpy@s+1,w
  6555  0F54  00F7               	movwf	??_strcpy+3
  6556  0F55  0878               	movf	strcpy@s,w
  6557  0F56  00F6               	movwf	??_strcpy+2
  6558  0F57  0AF8               	incf	strcpy@s,f
  6559  0F58  1903               	skipnz
  6560  0F59  0AF9               	incf	strcpy@s+1,f
  6561  0F5A  0876               	movf	??_strcpy+2,w
  6562  0F5B  0084               	movwf	4
  6563  0F5C  0877               	movf	??_strcpy+3,w
  6564  0F5D  0085               	movwf	5
  6565  0F5E  0800               	movf	0,w
  6566  0F5F  3FC0               	movwi [0]fsr1
  6567  0F60  0889               	movf	9,f
  6568  0F61  1903               	btfsc	3,2
  6569  0F62  0008               	return
  6570  0F63  2F48               	goto	i1l4142
  6571  0F64                     __end_of_strcpy:	
  6572                           ;	Return value of _strcpy is never used
  6573                           
  6574                           
  6575                           	psect	text28
  6576  0FD7                     __ptext28:	
  6577 ;; *************** function _sprintf *****************
  6578 ;; Defined at:
  6579 ;;		line 9 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  s               2   55[BANK0 ] PTR unsigned char 
  6582 ;;		 -> ISR@buf_572(64), ISR@buf(64), 
  6583 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  6584 ;;		 -> STR_4(43), STR_1(26), 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  f               6   70[BANK0 ] struct _IO_FILE
  6587 ;;  ret             2   67[BANK0 ] int 
  6588 ;;  ap              1   69[BANK0 ] PTR void [1]
  6589 ;;		 -> ?_sprintf(2), 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2   55[BANK0 ] int 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6599 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Totals:         1      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;Total ram usage:       22 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    7
  6606 ;; This function calls:
  6607 ;;		_vfprintf
  6608 ;; This function is called by:
  6609 ;;		_ISR
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           
  6614                           ;psect for function _sprintf
  6615  0FD7                     _sprintf:	
  6616                           
  6617                           ;incstack = 0
  6618                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6619  0FD7  305B               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6620  0FD8  00FD               	movwf	??_sprintf
  6621  0FD9  087D               	movf	??_sprintf,w
  6622  0FDA  0020               	movlb	0	; select bank0
  6623  0FDB  00E5               	movwf	sprintf@ap
  6624  0FDC  0858               	movf	sprintf@s+1,w
  6625  0FDD  00E7               	movwf	sprintf@f+1
  6626  0FDE  0857               	movf	sprintf@s,w
  6627  0FDF  00E6               	movwf	sprintf@f
  6628  0FE0  01E8               	clrf	sprintf@f+2
  6629  0FE1  01E9               	clrf	sprintf@f+3
  6630  0FE2  01EA               	clrf	sprintf@f+4
  6631  0FE3  01EB               	clrf	sprintf@f+5
  6632  0FE4  085A               	movf	sprintf@fmt+1,w
  6633  0FE5  00D0               	movwf	vfprintf@fmt+1
  6634  0FE6  0859               	movf	sprintf@fmt,w
  6635  0FE7  00CF               	movwf	vfprintf@fmt
  6636  0FE8  3065               	movlw	(low (sprintf@ap| 0))& (0+255)
  6637  0FE9  00FD               	movwf	??_sprintf
  6638  0FEA  087D               	movf	??_sprintf,w
  6639  0FEB  00D1               	movwf	vfprintf@ap
  6640  0FEC  3066               	movlw	(low (sprintf@f| 0))& (0+255)
  6641  0FED  3187  2778         	fcall	_vfprintf
  6642  0FEF  0020               	movlb	0	; select bank0
  6643  0FF0  0850               	movf	?_vfprintf+1,w
  6644  0FF1  00E4               	movwf	sprintf@ret+1
  6645  0FF2  084F               	movf	?_vfprintf,w
  6646  0FF3  00E3               	movwf	sprintf@ret
  6647  0FF4  3002               	movlw	2
  6648  0FF5  3E66               	addlw	(low (sprintf@f| 0))& (0+255)
  6649  0FF6  0086               	movwf	6
  6650  0FF7  0187               	clrf	7
  6651  0FF8  3F40               	moviw [0]fsr1
  6652  0FF9  0757               	addwf	sprintf@s,w
  6653  0FFA  0084               	movwf	4
  6654  0FFB  3F41               	moviw [1]fsr1
  6655  0FFC  3D58               	addwfc	sprintf@s+1,w
  6656  0FFD  0085               	movwf	5
  6657  0FFE  0180               	clrf	0
  6658  0FFF  0008               	return
  6659  1000                     __end_of_sprintf:	
  6660                           ;	Return value of _sprintf is never used
  6661                           
  6662                           
  6663                           	psect	text29
  6664  0778                     __ptext29:	
  6665 ;; *************** function _vfprintf *****************
  6666 ;; Defined at:
  6667 ;;		line 1368 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  fp              1    wreg     PTR struct _IO_FILE
  6670 ;;		 -> sprintf@f(6), 
  6671 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  6672 ;;		 -> STR_4(43), STR_1(26), 
  6673 ;;  ap              1   49[BANK0 ] PTR PTR void 
  6674 ;;		 -> sprintf@ap(1), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  fp              1   52[BANK0 ] PTR struct _IO_FILE
  6677 ;;		 -> sprintf@f(6), 
  6678 ;;  cfmt            2   53[BANK0 ] PTR unsigned char 
  6679 ;;		 -> STR_4(43), STR_1(26), 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2   47[BANK0 ] int 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6689 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;Total ram usage:        8 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    6
  6696 ;; This function calls:
  6697 ;;		_vfpfcnvrt
  6698 ;; This function is called by:
  6699 ;;		_sprintf
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _vfprintf
  6705  0778                     _vfprintf:	
  6706                           
  6707                           ;incstack = 0
  6708                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6709                           ;vfprintf@fp stored from wreg
  6710  0778  0020               	movlb	0	; select bank0
  6711  0779  00D4               	movwf	vfprintf@fp
  6712                           
  6713                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int vfpr
      +                          intf(FILE *fp, const char *fmt, va_list ap);F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\
      +                          sources\c99\common\doprnt.c: 1369: {;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources
      +                          \c99\common\doprnt.c: 1371:     char *cfmt;;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\
      +                          sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6714  077A  0850               	movf	vfprintf@fmt+1,w
  6715  077B  00D6               	movwf	vfprintf@cfmt+1
  6716  077C  084F               	movf	vfprintf@fmt,w
  6717  077D  00D5               	movwf	vfprintf@cfmt
  6718                           
  6719                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     nout
      +                           = 0;
  6720  077E  0022               	movlb	2	; select bank2
  6721  077F  01E1               	clrf	_nout^(0+256)
  6722  0780  01E2               	clrf	(_nout+1)^(0+256)
  6723  0781                     i1l4118:	
  6724                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
  6725                           
  6726                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     whil
      +                          e (*cfmt) {
  6727                           
  6728                           
  6729                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     whil
      +                          e (*cfmt) {
  6730  0781  0020               	movlb	0	; select bank0
  6731  0782  0855               	movf	vfprintf@cfmt,w
  6732  0783  0084               	movwf	4
  6733  0784  0856               	movf	vfprintf@cfmt+1,w
  6734  0785  0085               	movwf	5
  6735  0786  0012               	moviw fsr0++
  6736  0787  1903               	btfsc	3,2
  6737  0788  2F9F               	goto	i1l4120
  6738                           
  6739                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:         
      +                          nout += vfpfcnvrt(fp, &cfmt, ap);
  6740  0789  3055               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6741  078A  0020               	movlb	0	; select bank0
  6742  078B  00D2               	movwf	??_vfprintf
  6743  078C  0852               	movf	??_vfprintf,w
  6744  078D  00C1               	movwf	vfpfcnvrt@fmt
  6745  078E  0851               	movf	vfprintf@ap,w
  6746  078F  00D3               	movwf	??_vfprintf+1
  6747  0790  0853               	movf	??_vfprintf+1,w
  6748  0791  00C2               	movwf	vfpfcnvrt@ap
  6749  0792  0854               	movf	vfprintf@fp,w
  6750  0793  3182  2291  3187   	fcall	_vfpfcnvrt
  6751  0796  0020               	movlb	0	; select bank0
  6752  0797  0841               	movf	?_vfpfcnvrt,w
  6753  0798  0022               	movlb	2	; select bank2
  6754  0799  07E1               	addwf	_nout^(0+256),f
  6755  079A  0020               	movlb	0	; select bank0
  6756  079B  0842               	movf	?_vfpfcnvrt+1,w
  6757  079C  0022               	movlb	2	; select bank2
  6758  079D  3DE2               	addwfc	(_nout+1)^(0+256),f
  6759  079E  2F81               	goto	i1l4118
  6760  079F                     i1l4120:	
  6761                           
  6762                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     retu
      +                          rn nout;
  6763  079F  0022               	movlb	2	; select bank2
  6764  07A0  0862               	movf	(_nout+1)^(0+256),w
  6765  07A1  0020               	movlb	0	; select bank0
  6766  07A2  00D0               	movwf	?_vfprintf+1
  6767  07A3  0022               	movlb	2	; select bank2
  6768  07A4  0861               	movf	_nout^(0+256),w
  6769  07A5  0020               	movlb	0	; select bank0
  6770  07A6  00CF               	movwf	?_vfprintf
  6771  07A7  0008               	return
  6772  07A8                     __end_of_vfprintf:	
  6773                           
  6774                           	psect	text30
  6775  0291                     __ptext30:	
  6776 ;; *************** function _vfpfcnvrt *****************
  6777 ;; Defined at:
  6778 ;;		line 670 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  fp              1    wreg     PTR struct _IO_FILE
  6781 ;;		 -> sprintf@f(6), 
  6782 ;;  fmt             1   33[BANK0 ] PTR PTR unsigned char 
  6783 ;;		 -> vfprintf@cfmt(2), 
  6784 ;;  ap              1   34[BANK0 ] PTR PTR void 
  6785 ;;		 -> sprintf@ap(1), 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  fp              1   46[BANK0 ] PTR struct _IO_FILE
  6788 ;;		 -> sprintf@f(6), 
  6789 ;;  ll              4   40[BANK0 ] long 
  6790 ;;  f               4    0        long 
  6791 ;;  llu             4    0        unsigned long 
  6792 ;;  ct              3    0        unsigned char [3]
  6793 ;;  cp              2   44[BANK0 ] PTR unsigned char 
  6794 ;;		 -> ?_sprintf(2), STR_6(4), STR_5(7), STR_3(4), 
  6795 ;;		 -> STR_2(7), 
  6796 ;;  vp              2    0        PTR void 
  6797 ;;  i               2    0        int 
  6798 ;;  done            2    0        int 
  6799 ;;  c               1    0        unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  2   33[BANK0 ] int 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;Total ram usage:       14 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    5
  6816 ;; This function calls:
  6817 ;;		_dtoa
  6818 ;;		_fputc
  6819 ;;		_stoa
  6820 ;; This function is called by:
  6821 ;;		_vfprintf
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _vfpfcnvrt
  6827  0291                     _vfpfcnvrt:	
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6831                           ;vfpfcnvrt@fp stored from wreg
  6832  0291  0020               	movlb	0	; select bank0
  6833  0292  00CE               	movwf	vfpfcnvrt@fp
  6834                           
  6835                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static in
      +                          t vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);F:\other_software\MPLAB_X_IDE\xc8\v2.00\p
      +                          ic\sources\c99\common\doprnt.c: 671: {;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;F:\other_software\MPLAB_X_IDE\xc8\v
      +                          2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;F:\other_software\MPLAB_X_ID
      +                          E\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;;F:\other_software\MP
      +                          LAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6836  0293  0841               	movf	vfpfcnvrt@fmt,w
  6837  0294  0086               	movwf	6
  6838  0295  0187               	clrf	7
  6839  0296  3F40               	moviw [0]fsr1
  6840  0297  00C3               	movwf	??_vfpfcnvrt
  6841  0298  3F41               	moviw [1]fsr1
  6842  0299  00C4               	movwf	??_vfpfcnvrt+1
  6843  029A  0843               	movf	??_vfpfcnvrt,w
  6844  029B  0084               	movwf	4
  6845  029C  0844               	movf	??_vfpfcnvrt+1,w
  6846  029D  0085               	movwf	5
  6847  029E  0012               	moviw fsr0++
  6848  029F  3A25               	xorlw	37
  6849  02A0  1D03               	btfss	3,2
  6850  02A1  2B63               	goto	i1l4062
  6851                           
  6852                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:         +
      +                          +*fmt;
  6853  02A2  0841               	movf	vfpfcnvrt@fmt,w
  6854  02A3  0086               	movwf	6
  6855  02A4  0187               	clrf	7
  6856  02A5  3001               	movlw	1
  6857  02A6  0781               	addwf	1,f
  6858  02A7  3141               	addfsr 1,1
  6859  02A8  1803               	skipnc
  6860  02A9  0A81               	incf	1,f
  6861                           
  6862                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:         f
      +                          lags = width = 0;
  6863  02AA  0022               	movlb	2	; select bank2
  6864  02AB  01E3               	clrf	_width^(0+256)
  6865  02AC  01E4               	clrf	(_width+1)^(0+256)
  6866  02AD  0021               	movlb	1	; select bank1
  6867  02AE  01E2               	clrf	_flags^(0+128)
  6868  02AF  01E3               	clrf	(_flags+1)^(0+128)
  6869                           
  6870                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:         p
      +                          rec = -1;
  6871  02B0  30FF               	movlw	255
  6872  02B1  00E0               	movwf	_prec^(0+128)
  6873  02B2  30FF               	movlw	255
  6874  02B3  00E1               	movwf	(_prec^(0+128)+1)
  6875                           
  6876                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:         i
      +                          f ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6877  02B4  0020               	movlb	0	; select bank0
  6878  02B5  0841               	movf	vfpfcnvrt@fmt,w
  6879  02B6  0086               	movwf	6
  6880  02B7  0187               	clrf	7
  6881  02B8  3F40               	moviw [0]fsr1
  6882  02B9  00C3               	movwf	??_vfpfcnvrt
  6883  02BA  3F41               	moviw [1]fsr1
  6884  02BB  00C4               	movwf	??_vfpfcnvrt+1
  6885  02BC  0843               	movf	??_vfpfcnvrt,w
  6886  02BD  0084               	movwf	4
  6887  02BE  0844               	movf	??_vfpfcnvrt+1,w
  6888  02BF  0085               	movwf	5
  6889  02C0  0012               	moviw fsr0++
  6890  02C1  3A64               	xorlw	100
  6891  02C2  1903               	btfsc	3,2
  6892  02C3  2AD3               	goto	i1l4028
  6893  02C4  0841               	movf	vfpfcnvrt@fmt,w
  6894  02C5  0086               	movwf	6
  6895  02C6  0187               	clrf	7
  6896  02C7  3F40               	moviw [0]fsr1
  6897  02C8  00C3               	movwf	??_vfpfcnvrt
  6898  02C9  3F41               	moviw [1]fsr1
  6899  02CA  00C4               	movwf	??_vfpfcnvrt+1
  6900  02CB  0843               	movf	??_vfpfcnvrt,w
  6901  02CC  0084               	movwf	4
  6902  02CD  0844               	movf	??_vfpfcnvrt+1,w
  6903  02CE  0085               	movwf	5
  6904  02CF  0012               	moviw fsr0++
  6905  02D0  3A69               	xorlw	105
  6906  02D1  1D03               	btfss	3,2
  6907  02D2  2B01               	goto	i1l4036
  6908  02D3                     i1l4028:	
  6909                           
  6910                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:          
      +                             ++*fmt;
  6911  02D3  0841               	movf	vfpfcnvrt@fmt,w
  6912  02D4  0086               	movwf	6
  6913  02D5  0187               	clrf	7
  6914  02D6  3001               	movlw	1
  6915  02D7  0781               	addwf	1,f
  6916  02D8  3141               	addfsr 1,1
  6917  02D9  1803               	skipnc
  6918  02DA  0A81               	incf	1,f
  6919                           
  6920                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:          
      +                             ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6921  02DB  0842               	movf	vfpfcnvrt@ap,w
  6922  02DC  0086               	movwf	6
  6923  02DD  0187               	clrf	7
  6924  02DE  0801               	movf	1,w
  6925  02DF  0084               	movwf	4
  6926  02E0  0185               	clrf	5
  6927  02E1  3002               	movlw	2
  6928  02E2  0781               	addwf	1,f
  6929  02E3  3F00               	moviw [0]fsr0
  6930  02E4  00C3               	movwf	??_vfpfcnvrt
  6931  02E5  3F01               	moviw [1]fsr0
  6932  02E6  00C4               	movwf	??_vfpfcnvrt+1
  6933  02E7  0843               	movf	??_vfpfcnvrt,w
  6934  02E8  00C8               	movwf	vfpfcnvrt@ll
  6935  02E9  0844               	movf	??_vfpfcnvrt+1,w
  6936  02EA  00C9               	movwf	vfpfcnvrt@ll+1
  6937  02EB  0D89               	rlf	9,f
  6938  02EC  3B89               	subwfb	9,f
  6939  02ED  0989               	comf	9,f
  6940  02EE  00CA               	movwf	vfpfcnvrt@ll+2
  6941  02EF  00CB               	movwf	vfpfcnvrt@ll+3
  6942                           
  6943                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:          
      +                             return dtoa(fp, ll);
  6944  02F0  084B               	movf	vfpfcnvrt@ll+3,w
  6945  02F1  00AF               	movwf	dtoa@d+3
  6946  02F2  084A               	movf	vfpfcnvrt@ll+2,w
  6947  02F3  00AE               	movwf	dtoa@d+2
  6948  02F4  0849               	movf	vfpfcnvrt@ll+1,w
  6949  02F5  00AD               	movwf	dtoa@d+1
  6950  02F6  0848               	movf	vfpfcnvrt@ll,w
  6951  02F7  00AC               	movwf	dtoa@d
  6952  02F8  084E               	movf	vfpfcnvrt@fp,w
  6953  02F9  3181  217E         	fcall	_dtoa
  6954  02FB  0020               	movlb	0	; select bank0
  6955  02FC  082D               	movf	?_dtoa+1,w
  6956  02FD  00C2               	movwf	?_vfpfcnvrt+1
  6957  02FE  082C               	movf	?_dtoa,w
  6958  02FF  00C1               	movwf	?_vfpfcnvrt
  6959  0300  0008               	return
  6960  0301                     i1l4036:	
  6961                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:         }
  6962                           
  6963                           
  6964                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1149:         
      +                          if (*fmt[0] == 's') {
  6965  0301  0841               	movf	vfpfcnvrt@fmt,w
  6966  0302  0086               	movwf	6
  6967  0303  0187               	clrf	7
  6968  0304  3F40               	moviw [0]fsr1
  6969  0305  00C3               	movwf	??_vfpfcnvrt
  6970  0306  3F41               	moviw [1]fsr1
  6971  0307  00C4               	movwf	??_vfpfcnvrt+1
  6972  0308  0843               	movf	??_vfpfcnvrt,w
  6973  0309  0084               	movwf	4
  6974  030A  0844               	movf	??_vfpfcnvrt+1,w
  6975  030B  0085               	movwf	5
  6976  030C  0012               	moviw fsr0++
  6977  030D  3A73               	xorlw	115
  6978  030E  1D03               	btfss	3,2
  6979  030F  2B31               	goto	i1l4046
  6980                           
  6981                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1151:         
      +                              ++*fmt;
  6982  0310  0841               	movf	vfpfcnvrt@fmt,w
  6983  0311  0086               	movwf	6
  6984  0312  0187               	clrf	7
  6985  0313  3001               	movlw	1
  6986  0314  0781               	addwf	1,f
  6987  0315  3141               	addfsr 1,1
  6988  0316  1803               	skipnc
  6989  0317  0A81               	incf	1,f
  6990                           
  6991                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1152:         
      +                              cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6992  0318  0842               	movf	vfpfcnvrt@ap,w
  6993  0319  0086               	movwf	6
  6994  031A  0187               	clrf	7
  6995  031B  0801               	movf	1,w
  6996  031C  0084               	movwf	4
  6997  031D  0185               	clrf	5
  6998  031E  3002               	movlw	2
  6999  031F  0781               	addwf	1,f
  7000  0320  3F00               	moviw [0]fsr0
  7001  0321  00CC               	movwf	vfpfcnvrt@cp
  7002  0322  3F01               	moviw [1]fsr0
  7003  0323  00CD               	movwf	vfpfcnvrt@cp+1
  7004                           
  7005                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1154:         
      +                              return stoa(fp, cp);
  7006  0324  084D               	movf	vfpfcnvrt@cp+1,w
  7007  0325  00F9               	movwf	stoa@s+1
  7008  0326  084C               	movf	vfpfcnvrt@cp,w
  7009  0327  00F8               	movwf	stoa@s
  7010  0328  084E               	movf	vfpfcnvrt@fp,w
  7011  0329  3183  2389         	fcall	_stoa
  7012  032B  0879               	movf	?_stoa+1,w
  7013  032C  0020               	movlb	0	; select bank0
  7014  032D  00C2               	movwf	?_vfpfcnvrt+1
  7015  032E  0878               	movf	?_stoa,w
  7016  032F  00C1               	movwf	?_vfpfcnvrt
  7017  0330  0008               	return
  7018  0331                     i1l4046:	
  7019                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1155:         
      +                          }
  7020                           
  7021                           
  7022                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:         
      +                          if ((*fmt)[0] == '%') {
  7023  0331  0841               	movf	vfpfcnvrt@fmt,w
  7024  0332  0086               	movwf	6
  7025  0333  0187               	clrf	7
  7026  0334  3F40               	moviw [0]fsr1
  7027  0335  00C3               	movwf	??_vfpfcnvrt
  7028  0336  3F41               	moviw [1]fsr1
  7029  0337  00C4               	movwf	??_vfpfcnvrt+1
  7030  0338  0843               	movf	??_vfpfcnvrt,w
  7031  0339  0084               	movwf	4
  7032  033A  0844               	movf	??_vfpfcnvrt+1,w
  7033  033B  0085               	movwf	5
  7034  033C  0012               	moviw fsr0++
  7035  033D  3A25               	xorlw	37
  7036  033E  1D03               	btfss	3,2
  7037  033F  2B58               	goto	i1l4056
  7038                           
  7039                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:         
      +                              ++*fmt;
  7040  0340  0841               	movf	vfpfcnvrt@fmt,w
  7041  0341  0086               	movwf	6
  7042  0342  0187               	clrf	7
  7043  0343  3001               	movlw	1
  7044  0344  0781               	addwf	1,f
  7045  0345  3141               	addfsr 1,1
  7046  0346  1803               	skipnc
  7047  0347  0A81               	incf	1,f
  7048                           
  7049                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:         
      +                              fputc((int)'%', fp);
  7050  0348  3025               	movlw	37
  7051  0349  00F0               	movwf	fputc@c
  7052  034A  3000               	movlw	0
  7053  034B  00F1               	movwf	fputc@c+1
  7054  034C  084E               	movf	vfpfcnvrt@fp,w
  7055  034D  00C3               	movwf	??_vfpfcnvrt
  7056  034E  0843               	movf	??_vfpfcnvrt,w
  7057  034F  00F2               	movwf	fputc@fp
  7058  0350  3186  2670         	fcall	_fputc
  7059                           
  7060                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:         
      +                              return 1;
  7061  0352  3001               	movlw	1
  7062  0353  0020               	movlb	0	; select bank0
  7063  0354  00C1               	movwf	?_vfpfcnvrt
  7064  0355  3000               	movlw	0
  7065  0356  00C2               	movwf	?_vfpfcnvrt+1
  7066  0357  0008               	return
  7067  0358                     i1l4056:	
  7068                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:         
      +                          }
  7069                           
  7070                           
  7071                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:         
      +                          ++*fmt;
  7072  0358  0841               	movf	vfpfcnvrt@fmt,w
  7073  0359  0086               	movwf	6
  7074  035A  0187               	clrf	7
  7075  035B  3001               	movlw	1
  7076  035C  0781               	addwf	1,f
  7077  035D  3141               	addfsr 1,1
  7078  035E  1803               	skipnc
  7079  035F  0A81               	incf	1,f
  7080                           
  7081                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:         
      +                          return 0;
  7082  0360  01C1               	clrf	?_vfpfcnvrt
  7083  0361  01C2               	clrf	?_vfpfcnvrt+1
  7084  0362  0008               	return
  7085  0363                     i1l4062:	
  7086                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
  7087                           
  7088                           
  7089                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     fput
      +                          c((int)(*fmt)[0], fp);
  7090  0363  0841               	movf	vfpfcnvrt@fmt,w
  7091  0364  0086               	movwf	6
  7092  0365  0187               	clrf	7
  7093  0366  3F40               	moviw [0]fsr1
  7094  0367  00C3               	movwf	??_vfpfcnvrt
  7095  0368  3F41               	moviw [1]fsr1
  7096  0369  00C4               	movwf	??_vfpfcnvrt+1
  7097  036A  0843               	movf	??_vfpfcnvrt,w
  7098  036B  0084               	movwf	4
  7099  036C  0844               	movf	??_vfpfcnvrt+1,w
  7100  036D  0085               	movwf	5
  7101  036E  0800               	movf	0,w	;code access
  7102  036F  00C5               	movwf	??_vfpfcnvrt+2
  7103  0370  01C6               	clrf	??_vfpfcnvrt+3
  7104  0371  0845               	movf	??_vfpfcnvrt+2,w
  7105  0372  00F0               	movwf	fputc@c
  7106  0373  0846               	movf	??_vfpfcnvrt+3,w
  7107  0374  00F1               	movwf	fputc@c+1
  7108  0375  084E               	movf	vfpfcnvrt@fp,w
  7109  0376  00C7               	movwf	??_vfpfcnvrt+4
  7110  0377  0847               	movf	??_vfpfcnvrt+4,w
  7111  0378  00F2               	movwf	fputc@fp
  7112  0379  3186  2670         	fcall	_fputc
  7113                           
  7114                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     ++*f
      +                          mt;
  7115  037B  0020               	movlb	0	; select bank0
  7116  037C  0841               	movf	vfpfcnvrt@fmt,w
  7117  037D  0086               	movwf	6
  7118  037E  0187               	clrf	7
  7119  037F  3001               	movlw	1
  7120  0380  0781               	addwf	1,f
  7121  0381  3141               	addfsr 1,1
  7122  0382  1803               	skipnc
  7123  0383  0A81               	incf	1,f
  7124                           
  7125                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     retu
      +                          rn 1;
  7126  0384  3001               	movlw	1
  7127  0385  00C1               	movwf	?_vfpfcnvrt
  7128  0386  3000               	movlw	0
  7129  0387  00C2               	movwf	?_vfpfcnvrt+1
  7130  0388  0008               	return
  7131  0389                     __end_of_vfpfcnvrt:	
  7132                           
  7133                           	psect	text31
  7134  0389                     __ptext31:	
  7135 ;; *************** function _stoa *****************
  7136 ;; Defined at:
  7137 ;;		line 546 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  fp              1    wreg     PTR struct _IO_FILE
  7140 ;;		 -> sprintf@f(6), 
  7141 ;;  s               2    8[COMMON] PTR unsigned char 
  7142 ;;		 -> ?_sprintf(2), STR_6(4), STR_5(7), STR_3(4), 
  7143 ;;		 -> STR_2(7), 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7146 ;;		 -> sprintf@f(6), 
  7147 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  7148 ;;  l               2   16[BANK0 ] int 
  7149 ;;  p               2   14[BANK0 ] int 
  7150 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  7151 ;;		 -> ?_sprintf(2), stoa@nuls(7), STR_6(4), STR_5(7), 
  7152 ;;		 -> STR_3(4), STR_2(7), 
  7153 ;;  w               2    9[BANK0 ] int 
  7154 ;;  i               2    7[BANK0 ] int 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    8[COMMON] int 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         5      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:       23 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    2
  7171 ;; This function calls:
  7172 ;;		_fputc
  7173 ;;		_strlen
  7174 ;; This function is called by:
  7175 ;;		_vfpfcnvrt
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _stoa
  7181  0389                     _stoa:	
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7185                           ;stoa@fp stored from wreg
  7186  0389  0020               	movlb	0	; select bank0
  7187  038A  00AB               	movwf	stoa@fp
  7188                           
  7189                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 546: static in
      +                          t stoa(FILE *fp, char *s);F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common
      +                          \doprnt.c: 547: {;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.
      +                          c: 548:     char *cp, nuls[] = "(null)";
  7190  038B  3069               	movlw	low stoa@F1129
  7191  038C  0086               	movwf	6
  7192  038D  3001               	movlw	high stoa@F1129
  7193  038E  0087               	movwf	7
  7194  038F  3020               	movlw	low stoa@nuls
  7195  0390  0084               	movwf	4
  7196  0391  3000               	movlw	high stoa@nuls
  7197  0392  0085               	movwf	5
  7198  0393  3007               	movlw	7
  7199  0394  00FA               	movwf	??_stoa
  7200  0395                     u435_20:	
  7201  0395  0016               	moviw fsr1++
  7202  0396  001A               	movwi fsr0++
  7203  0397  0BFA               	decfsz	??_stoa,f
  7204  0398  2B95               	goto	u435_20
  7205                           
  7206                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 549:     int i
      +                          , l, p, w;;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 552:
      +                               cp = s;
  7207  0399  0879               	movf	stoa@s+1,w
  7208  039A  00AD               	movwf	stoa@cp+1
  7209  039B  0878               	movf	stoa@s,w
  7210  039C  00AC               	movwf	stoa@cp
  7211                           
  7212                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 553:     if (!
      +                          cp) {
  7213  039D  082C               	movf	stoa@cp,w
  7214  039E  042D               	iorwf	stoa@cp+1,w
  7215  039F  1D03               	btfss	3,2
  7216  03A0  2BA5               	goto	i1l3964
  7217                           
  7218                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 554:         c
      +                          p = nuls;
  7219  03A1  3020               	movlw	low stoa@nuls
  7220  03A2  00AC               	movwf	stoa@cp
  7221  03A3  3000               	movlw	high stoa@nuls
  7222  03A4  00AD               	movwf	stoa@cp+1
  7223  03A5                     i1l3964:	
  7224                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 555:     }
  7225                           
  7226                           
  7227                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 558:     l = s
      +                          trlen(cp);
  7228  03A5  082D               	movf	stoa@cp+1,w
  7229  03A6  00F1               	movwf	strlen@s+1
  7230  03A7  082C               	movf	stoa@cp,w
  7231  03A8  00F0               	movwf	strlen@s
  7232  03A9  318F  2722  3183   	fcall	_strlen
  7233  03AC  0871               	movf	?_strlen+1,w
  7234  03AD  0020               	movlb	0	; select bank0
  7235  03AE  00B1               	movwf	stoa@l+1
  7236  03AF  0870               	movf	?_strlen,w
  7237  03B0  00B0               	movwf	stoa@l
  7238                           
  7239                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 559:     p = p
      +                          rec;
  7240  03B1  0021               	movlb	1	; select bank1
  7241  03B2  0861               	movf	(_prec+1)^(0+128),w
  7242  03B3  0020               	movlb	0	; select bank0
  7243  03B4  00AF               	movwf	stoa@p+1
  7244  03B5  0021               	movlb	1	; select bank1
  7245  03B6  0860               	movf	_prec^(0+128),w
  7246  03B7  0020               	movlb	0	; select bank0
  7247  03B8  00AE               	movwf	stoa@p
  7248                           
  7249                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 560:     l = (
      +                          !(p < 0) && (p < l)) ? p : l;
  7250  03B9  1BAF               	btfsc	stoa@p+1,7
  7251  03BA  2BCC               	goto	i1l747
  7252  03BB  082F               	movf	stoa@p+1,w
  7253  03BC  3A80               	xorlw	128
  7254  03BD  00FA               	movwf	??_stoa
  7255  03BE  0831               	movf	stoa@l+1,w
  7256  03BF  3A80               	xorlw	128
  7257  03C0  027A               	subwf	??_stoa,w
  7258  03C1  1D03               	skipz
  7259  03C2  2BC5               	goto	u438_25
  7260  03C3  0830               	movf	stoa@l,w
  7261  03C4  022E               	subwf	stoa@p,w
  7262  03C5                     u438_25:	
  7263  03C5  1803               	btfsc	3,0
  7264  03C6  2BCC               	goto	i1l747
  7265  03C7  0020               	movlb	0	; select bank0
  7266  03C8  082F               	movf	stoa@p+1,w
  7267  03C9  00B1               	movwf	stoa@l+1
  7268  03CA  082E               	movf	stoa@p,w
  7269  03CB  00B0               	movwf	stoa@l
  7270  03CC                     i1l747:	
  7271                           
  7272                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 561:     p = l
      +                          ;
  7273  03CC  0020               	movlb	0	; select bank0
  7274  03CD  0831               	movf	stoa@l+1,w
  7275  03CE  00AF               	movwf	stoa@p+1
  7276  03CF  0830               	movf	stoa@l,w
  7277  03D0  00AE               	movwf	stoa@p
  7278                           
  7279                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 562:     w = w
      +                          idth;
  7280  03D1  0022               	movlb	2	; select bank2
  7281  03D2  0864               	movf	(_width+1)^(0+256),w
  7282  03D3  0020               	movlb	0	; select bank0
  7283  03D4  00AA               	movwf	stoa@w+1
  7284  03D5  0022               	movlb	2	; select bank2
  7285  03D6  0863               	movf	_width^(0+256),w
  7286  03D7  0020               	movlb	0	; select bank0
  7287  03D8  00A9               	movwf	stoa@w
  7288                           
  7289                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 565:     if (!
      +                          (flags & (1 << 0))) {
  7290  03D9  0021               	movlb	1	; select bank1
  7291  03DA  1C62               	btfss	_flags^(0+128),0
  7292  03DB  2BEE               	goto	i1l3982
  7293  03DC  2BFB               	goto	i1l3984
  7294  03DD                     i1l3978:	
  7295                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:         w
      +                          hile (l < w) {
  7296                           
  7297                           
  7298                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 567:          
      +                             fputc(' ', fp);
  7299  03DD  3020               	movlw	32
  7300  03DE  00F0               	movwf	fputc@c
  7301  03DF  3000               	movlw	0
  7302  03E0  00F1               	movwf	fputc@c+1
  7303  03E1  0020               	movlb	0	; select bank0
  7304  03E2  082B               	movf	stoa@fp,w
  7305  03E3  00FA               	movwf	??_stoa
  7306  03E4  087A               	movf	??_stoa,w
  7307  03E5  00F2               	movwf	fputc@fp
  7308  03E6  3186  2670  3183   	fcall	_fputc
  7309                           
  7310                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 568:          
      +                             ++l;
  7311  03E9  3001               	movlw	1
  7312  03EA  0020               	movlb	0	; select bank0
  7313  03EB  07B0               	addwf	stoa@l,f
  7314  03EC  3000               	movlw	0
  7315  03ED  3DB1               	addwfc	stoa@l+1,f
  7316  03EE                     i1l3982:	
  7317                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 569:         }
  7318                           
  7319                           
  7320                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:         w
      +                          hile (l < w) {
  7321  03EE  0020               	movlb	0	; select bank0
  7322  03EF  0831               	movf	stoa@l+1,w
  7323  03F0  3A80               	xorlw	128
  7324  03F1  00FA               	movwf	??_stoa
  7325  03F2  082A               	movf	stoa@w+1,w
  7326  03F3  3A80               	xorlw	128
  7327  03F4  027A               	subwf	??_stoa,w
  7328  03F5  1D03               	skipz
  7329  03F6  2BF9               	goto	u440_25
  7330  03F7  0829               	movf	stoa@w,w
  7331  03F8  0230               	subwf	stoa@l,w
  7332  03F9                     u440_25:	
  7333  03F9  1C03               	skipc
  7334  03FA  2BDD               	goto	i1l3978
  7335  03FB                     i1l3984:	
  7336                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 570:     }
  7337                           
  7338                           
  7339                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 573:     i = 0
      +                          ;
  7340  03FB  0020               	movlb	0	; select bank0
  7341  03FC  01A7               	clrf	stoa@i
  7342  03FD  01A8               	clrf	stoa@i+1
  7343  03FE                     i1l3992:	
  7344                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 578:     }
  7345                           
  7346                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     while
      +                           (i < p) {
  7347                           
  7348                           
  7349                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     while
      +                           (i < p) {
  7350  03FE  0828               	movf	stoa@i+1,w
  7351  03FF  3A80               	xorlw	128
  7352  0400  00FA               	movwf	??_stoa
  7353  0401  082F               	movf	stoa@p+1,w
  7354  0402  3A80               	xorlw	128
  7355  0403  027A               	subwf	??_stoa,w
  7356  0404  1D03               	skipz
  7357  0405  2C08               	goto	u441_25
  7358  0406  082E               	movf	stoa@p,w
  7359  0407  0227               	subwf	stoa@i,w
  7360  0408                     u441_25:	
  7361  0408  1803               	btfsc	3,0
  7362  0409  2C27               	goto	i1l756
  7363                           
  7364                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 575:         f
      +                          putc(*cp, fp);
  7365  040A  0020               	movlb	0	; select bank0
  7366  040B  082C               	movf	stoa@cp,w
  7367  040C  0084               	movwf	4
  7368  040D  082D               	movf	stoa@cp+1,w
  7369  040E  0085               	movwf	5
  7370  040F  0800               	movf	0,w	;code access
  7371  0410  00FA               	movwf	??_stoa
  7372  0411  01FB               	clrf	??_stoa+1
  7373  0412  087A               	movf	??_stoa,w
  7374  0413  00F0               	movwf	fputc@c
  7375  0414  087B               	movf	??_stoa+1,w
  7376  0415  00F1               	movwf	fputc@c+1
  7377  0416  082B               	movf	stoa@fp,w
  7378  0417  00FC               	movwf	??_stoa+2
  7379  0418  087C               	movf	??_stoa+2,w
  7380  0419  00F2               	movwf	fputc@fp
  7381  041A  3186  2670  3183   	fcall	_fputc
  7382                           
  7383                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 576:         +
      +                          +cp;
  7384  041D  3001               	movlw	1
  7385  041E  0020               	movlb	0	; select bank0
  7386  041F  07AC               	addwf	stoa@cp,f
  7387  0420  3000               	movlw	0
  7388  0421  3DAD               	addwfc	stoa@cp+1,f
  7389                           
  7390                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 577:         +
      +                          +i;
  7391  0422  3001               	movlw	1
  7392  0423  07A7               	addwf	stoa@i,f
  7393  0424  3000               	movlw	0
  7394  0425  3DA8               	addwfc	stoa@i+1,f
  7395  0426  2BFE               	goto	i1l3992
  7396  0427                     i1l756:	
  7397                           
  7398                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 581:     if (f
      +                          lags & (1 << 0)) {
  7399  0427  0021               	movlb	1	; select bank1
  7400  0428  1862               	btfsc	_flags^(0+128),0
  7401  0429  2C3C               	goto	i1l4000
  7402  042A  2C49               	goto	i1l4002
  7403  042B                     i1l3996:	
  7404                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:         w
      +                          hile (l < w) {
  7405                           
  7406                           
  7407                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 583:          
      +                             fputc(' ', fp);
  7408  042B  3020               	movlw	32
  7409  042C  00F0               	movwf	fputc@c
  7410  042D  3000               	movlw	0
  7411  042E  00F1               	movwf	fputc@c+1
  7412  042F  0020               	movlb	0	; select bank0
  7413  0430  082B               	movf	stoa@fp,w
  7414  0431  00FA               	movwf	??_stoa
  7415  0432  087A               	movf	??_stoa,w
  7416  0433  00F2               	movwf	fputc@fp
  7417  0434  3186  2670  3183   	fcall	_fputc
  7418                           
  7419                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 584:          
      +                             ++l;
  7420  0437  3001               	movlw	1
  7421  0438  0020               	movlb	0	; select bank0
  7422  0439  07B0               	addwf	stoa@l,f
  7423  043A  3000               	movlw	0
  7424  043B  3DB1               	addwfc	stoa@l+1,f
  7425  043C                     i1l4000:	
  7426                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 585:         }
  7427                           
  7428                           
  7429                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:         w
      +                          hile (l < w) {
  7430  043C  0020               	movlb	0	; select bank0
  7431  043D  0831               	movf	stoa@l+1,w
  7432  043E  3A80               	xorlw	128
  7433  043F  00FA               	movwf	??_stoa
  7434  0440  082A               	movf	stoa@w+1,w
  7435  0441  3A80               	xorlw	128
  7436  0442  027A               	subwf	??_stoa,w
  7437  0443  1D03               	skipz
  7438  0444  2C47               	goto	u443_25
  7439  0445  0829               	movf	stoa@w,w
  7440  0446  0230               	subwf	stoa@l,w
  7441  0447                     u443_25:	
  7442  0447  1C03               	skipc
  7443  0448  2C2B               	goto	i1l3996
  7444  0449                     i1l4002:	
  7445                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 586:     }
  7446                           
  7447                           
  7448                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 588:     retur
      +                          n l;
  7449  0449  0020               	movlb	0	; select bank0
  7450  044A  0831               	movf	stoa@l+1,w
  7451  044B  00F9               	movwf	?_stoa+1
  7452  044C  0830               	movf	stoa@l,w
  7453  044D  00F8               	movwf	?_stoa
  7454  044E  0008               	return
  7455  044F                     __end_of_stoa:	
  7456                           
  7457                           	psect	text32
  7458  017E                     __ptext32:	
  7459 ;; *************** function _dtoa *****************
  7460 ;; Defined at:
  7461 ;;		line 274 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  fp              1    wreg     PTR struct _IO_FILE
  7464 ;;		 -> sprintf@f(6), 
  7465 ;;  d               4   12[BANK0 ] long 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  7468 ;;		 -> sprintf@f(6), 
  7469 ;;  n               4   27[BANK0 ] long 
  7470 ;;  i               2   31[BANK0 ] int 
  7471 ;;  s               2   25[BANK0 ] int 
  7472 ;;  w               2   23[BANK0 ] int 
  7473 ;;  p               2   21[BANK0 ] int 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  2   12[BANK0 ] int 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;Total ram usage:       21 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    4
  7490 ;; This function calls:
  7491 ;;		___aldiv
  7492 ;;		___almod
  7493 ;;		_abs
  7494 ;;		_pad
  7495 ;; This function is called by:
  7496 ;;		_vfpfcnvrt
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           
  7501                           ;psect for function _dtoa
  7502  017E                     _dtoa:	
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7506                           ;dtoa@fp stored from wreg
  7507  017E  0020               	movlb	0	; select bank0
  7508  017F  00B2               	movwf	dtoa@fp
  7509                           
  7510                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static in
      +                          t dtoa(FILE *fp, long long d);F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 275: {;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\dop
      +                          rnt.c: 276:     int i, p, s, w;;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\
      +                          common\doprnt.c: 277:     long long n;;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 280:     n = d;
  7511  0180  082F               	movf	dtoa@d+3,w
  7512  0181  00BE               	movwf	dtoa@n+3
  7513  0182  082E               	movf	dtoa@d+2,w
  7514  0183  00BD               	movwf	dtoa@n+2
  7515  0184  082D               	movf	dtoa@d+1,w
  7516  0185  00BC               	movwf	dtoa@n+1
  7517  0186  082C               	movf	dtoa@d,w
  7518  0187  00BB               	movwf	dtoa@n
  7519                           
  7520                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s = n
      +                           < 0 ? 1 : 0;
  7521  0188  1FBE               	btfss	dtoa@n+3,7
  7522  0189  298C               	goto	u420_20
  7523  018A  3001               	movlw	1
  7524  018B  298D               	goto	u421_20
  7525  018C                     u420_20:	
  7526  018C  3000               	movlw	0
  7527  018D                     u421_20:	
  7528  018D  00B0               	movwf	??_dtoa
  7529  018E  01B1               	clrf	??_dtoa+1
  7530  018F  0830               	movf	??_dtoa,w
  7531  0190  00B9               	movwf	dtoa@s
  7532  0191  0831               	movf	??_dtoa+1,w
  7533  0192  00BA               	movwf	dtoa@s+1
  7534                           
  7535                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if (s
      +                          ) {
  7536  0193  0839               	movf	dtoa@s,w
  7537  0194  043A               	iorwf	dtoa@s+1,w
  7538  0195  1903               	btfsc	3,2
  7539  0196  29A2               	goto	i1l715
  7540                           
  7541                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:         n
      +                           = -n;
  7542  0197  09BB               	comf	dtoa@n,f
  7543  0198  09BC               	comf	dtoa@n+1,f
  7544  0199  09BD               	comf	dtoa@n+2,f
  7545  019A  09BE               	comf	dtoa@n+3,f
  7546  019B  0ABB               	incf	dtoa@n,f
  7547  019C  1903               	skipnz
  7548  019D  0ABC               	incf	dtoa@n+1,f
  7549  019E  1903               	skipnz
  7550  019F  0ABD               	incf	dtoa@n+2,f
  7551  01A0  1903               	skipnz
  7552  01A1  0ABE               	incf	dtoa@n+3,f
  7553  01A2                     i1l715:	
  7554                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }
  7555                           
  7556                           
  7557                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if (!
      +                          (prec < 0)) {
  7558  01A2  0021               	movlb	1	; select bank1
  7559  01A3  1BE1               	btfsc	(_prec+1)^(0+128),7
  7560  01A4  29A9               	goto	i1l716
  7561                           
  7562                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:         f
      +                          lags &= ~(1 << 1);
  7563  01A5  30FD               	movlw	253
  7564  01A6  05E2               	andwf	_flags^(0+128),f
  7565  01A7  30FF               	movlw	255
  7566  01A8  05E3               	andwf	(_flags+1)^(0+128),f
  7567  01A9                     i1l716:	
  7568                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }
  7569                           
  7570                           
  7571                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p = (
      +                          0 < prec) ? prec : 1;
  7572  01A9  0861               	movf	(_prec+1)^(0+128),w
  7573  01AA  3A80               	xorlw	128
  7574  01AB  0020               	movlb	0	; select bank0
  7575  01AC  00B0               	movwf	??_dtoa
  7576  01AD  3080               	movlw	128
  7577  01AE  0230               	subwf	??_dtoa,w
  7578  01AF  1D03               	skipz
  7579  01B0  29B4               	goto	u424_25
  7580  01B1  3001               	movlw	1
  7581  01B2  0021               	movlb	1	; select bank1
  7582  01B3  0260               	subwf	_prec^(0+128),w
  7583  01B4                     u424_25:	
  7584  01B4  1803               	skipnc
  7585  01B5  29BC               	goto	i1l3908
  7586  01B6  3001               	movlw	1
  7587  01B7  0020               	movlb	0	; select bank0
  7588  01B8  00B5               	movwf	dtoa@p
  7589  01B9  3000               	movlw	0
  7590  01BA  00B6               	movwf	dtoa@p+1
  7591  01BB  29C4               	goto	i1l720
  7592  01BC                     i1l3908:	
  7593  01BC  0021               	movlb	1	; select bank1
  7594  01BD  0861               	movf	(_prec+1)^(0+128),w
  7595  01BE  0020               	movlb	0	; select bank0
  7596  01BF  00B6               	movwf	dtoa@p+1
  7597  01C0  0021               	movlb	1	; select bank1
  7598  01C1  0860               	movf	_prec^(0+128),w
  7599  01C2  0020               	movlb	0	; select bank0
  7600  01C3  00B5               	movwf	dtoa@p
  7601  01C4                     i1l720:	
  7602                           
  7603                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w = w
      +                          idth;
  7604  01C4  0022               	movlb	2	; select bank2
  7605  01C5  0864               	movf	(_width+1)^(0+256),w
  7606  01C6  0020               	movlb	0	; select bank0
  7607  01C7  00B8               	movwf	dtoa@w+1
  7608  01C8  0022               	movlb	2	; select bank2
  7609  01C9  0863               	movf	_width^(0+256),w
  7610  01CA  0020               	movlb	0	; select bank0
  7611  01CB  00B7               	movwf	dtoa@w
  7612                           
  7613                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if (s
      +                           || (flags & (1 << 2))) {
  7614  01CC  0839               	movf	dtoa@s,w
  7615  01CD  043A               	iorwf	dtoa@s+1,w
  7616  01CE  1D03               	btfss	3,2
  7617  01CF  29D3               	goto	i1l3914
  7618  01D0  0021               	movlb	1	; select bank1
  7619  01D1  1D62               	btfss	_flags^(0+128),2
  7620  01D2  29D8               	goto	i1l721
  7621  01D3                     i1l3914:	
  7622                           
  7623                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:         -
      +                          -w;
  7624  01D3  30FF               	movlw	255
  7625  01D4  0020               	movlb	0	; select bank0
  7626  01D5  07B7               	addwf	dtoa@w,f
  7627  01D6  30FF               	movlw	255
  7628  01D7  3DB8               	addwfc	dtoa@w+1,f
  7629  01D8                     i1l721:	
  7630                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }
  7631                           
  7632                           
  7633                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i = s
      +                          izeof(dbuf) - 1;
  7634  01D8  301F               	movlw	31
  7635  01D9  0020               	movlb	0	; select bank0
  7636  01DA  00BF               	movwf	dtoa@i
  7637  01DB  3000               	movlw	0
  7638  01DC  00C0               	movwf	dtoa@i+1
  7639                           
  7640                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     dbuf[
      +                          i] = '\0';
  7641  01DD  083F               	movf	dtoa@i,w
  7642  01DE  3EA7               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7643  01DF  0086               	movwf	6
  7644  01E0  3002               	movlw	2	; select bank5/6
  7645  01E1  0087               	movwf	7
  7646  01E2  0181               	clrf	1
  7647                           
  7648                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     while
      +                           (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7649  01E3  2A32               	goto	i1l3928
  7650  01E4                     i1l3918:	
  7651                           
  7652                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:         -
      +                          -i;
  7653  01E4  30FF               	movlw	255
  7654  01E5  0020               	movlb	0	; select bank0
  7655  01E6  07BF               	addwf	dtoa@i,f
  7656  01E7  30FF               	movlw	255
  7657  01E8  3DC0               	addwfc	dtoa@i+1,f
  7658                           
  7659                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:         d
      +                          buf[i] = '0' + abs(n % 10);
  7660  01E9  3000               	movlw	0
  7661  01EA  00F3               	movwf	___almod@divisor+3
  7662  01EB  3000               	movlw	0
  7663  01EC  00F2               	movwf	___almod@divisor+2
  7664  01ED  3000               	movlw	0
  7665  01EE  00F1               	movwf	___almod@divisor+1
  7666  01EF  300A               	movlw	10
  7667  01F0  00F0               	movwf	___almod@divisor
  7668  01F1  083E               	movf	dtoa@n+3,w
  7669  01F2  00F7               	movwf	___almod@dividend+3
  7670  01F3  083D               	movf	dtoa@n+2,w
  7671  01F4  00F6               	movwf	___almod@dividend+2
  7672  01F5  083C               	movf	dtoa@n+1,w
  7673  01F6  00F5               	movwf	___almod@dividend+1
  7674  01F7  083B               	movf	dtoa@n,w
  7675  01F8  00F4               	movwf	___almod@dividend
  7676  01F9  3185  25B0  3181   	fcall	___almod
  7677  01FC  0871               	movf	?___almod+1,w
  7678  01FD  00FC               	movwf	abs@a+1
  7679  01FE  0870               	movf	?___almod,w
  7680  01FF  00FB               	movwf	abs@a
  7681  0200  318E  26ED  3181   	fcall	_abs
  7682  0203  087B               	movf	?_abs,w
  7683  0204  3E30               	addlw	48
  7684  0205  0020               	movlb	0	; select bank0
  7685  0206  00B0               	movwf	??_dtoa
  7686  0207  083F               	movf	dtoa@i,w
  7687  0208  3EA7               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7688  0209  0086               	movwf	6
  7689  020A  3002               	movlw	2	; select bank5/6
  7690  020B  0087               	movwf	7
  7691  020C  0830               	movf	??_dtoa,w
  7692  020D  0081               	movwf	1
  7693                           
  7694                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:         -
      +                          -p;
  7695  020E  30FF               	movlw	255
  7696  020F  07B5               	addwf	dtoa@p,f
  7697  0210  30FF               	movlw	255
  7698  0211  3DB6               	addwfc	dtoa@p+1,f
  7699                           
  7700                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:         -
      +                          -w;
  7701  0212  30FF               	movlw	255
  7702  0213  07B7               	addwf	dtoa@w,f
  7703  0214  30FF               	movlw	255
  7704  0215  3DB8               	addwfc	dtoa@w+1,f
  7705                           
  7706                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:         n
      +                           = n / 10;
  7707  0216  3000               	movlw	0
  7708  0217  00F3               	movwf	___aldiv@divisor+3
  7709  0218  3000               	movlw	0
  7710  0219  00F2               	movwf	___aldiv@divisor+2
  7711  021A  3000               	movlw	0
  7712  021B  00F1               	movwf	___aldiv@divisor+1
  7713  021C  300A               	movlw	10
  7714  021D  00F0               	movwf	___aldiv@divisor
  7715  021E  083E               	movf	dtoa@n+3,w
  7716  021F  00F7               	movwf	___aldiv@dividend+3
  7717  0220  083D               	movf	dtoa@n+2,w
  7718  0221  00F6               	movwf	___aldiv@dividend+2
  7719  0222  083C               	movf	dtoa@n+1,w
  7720  0223  00F5               	movwf	___aldiv@dividend+1
  7721  0224  083B               	movf	dtoa@n,w
  7722  0225  00F4               	movwf	___aldiv@dividend
  7723  0226  3184  244F  3181   	fcall	___aldiv
  7724  0229  0873               	movf	?___aldiv+3,w
  7725  022A  0020               	movlb	0	; select bank0
  7726  022B  00BE               	movwf	dtoa@n+3
  7727  022C  0872               	movf	?___aldiv+2,w
  7728  022D  00BD               	movwf	dtoa@n+2
  7729  022E  0871               	movf	?___aldiv+1,w
  7730  022F  00BC               	movwf	dtoa@n+1
  7731  0230  0870               	movf	?___aldiv,w
  7732  0231  00BB               	movwf	dtoa@n
  7733  0232                     i1l3928:	
  7734                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }
  7735                           
  7736                           
  7737                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     while
      +                           (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7738  0232  0840               	movf	dtoa@i+1,w
  7739  0233  3A80               	xorlw	128
  7740  0234  00B0               	movwf	??_dtoa
  7741  0235  3080               	movlw	128
  7742  0236  0230               	subwf	??_dtoa,w
  7743  0237  1D03               	skipz
  7744  0238  2A3B               	goto	u427_25
  7745  0239  3001               	movlw	1
  7746  023A  023F               	subwf	dtoa@i,w
  7747  023B                     u427_25:	
  7748  023B  1C03               	skipc
  7749  023C  2A5E               	goto	i1l3938
  7750  023D  0020               	movlb	0	; select bank0
  7751  023E  083E               	movf	dtoa@n+3,w
  7752  023F  043D               	iorwf	dtoa@n+2,w
  7753  0240  043C               	iorwf	dtoa@n+1,w
  7754  0241  043B               	iorwf	dtoa@n,w
  7755  0242  1D03               	skipz
  7756  0243  29E4               	goto	i1l3918
  7757  0244  0836               	movf	dtoa@p+1,w
  7758  0245  3A80               	xorlw	128
  7759  0246  00B0               	movwf	??_dtoa
  7760  0247  3080               	movlw	128
  7761  0248  0230               	subwf	??_dtoa,w
  7762  0249  1D03               	skipz
  7763  024A  2A4D               	goto	u429_25
  7764  024B  3001               	movlw	1
  7765  024C  0235               	subwf	dtoa@p,w
  7766  024D                     u429_25:	
  7767  024D  1803               	skipnc
  7768  024E  29E4               	goto	i1l3918
  7769  024F  0020               	movlb	0	; select bank0
  7770  0250  0838               	movf	dtoa@w+1,w
  7771  0251  3A80               	xorlw	128
  7772  0252  00B0               	movwf	??_dtoa
  7773  0253  3080               	movlw	128
  7774  0254  0230               	subwf	??_dtoa,w
  7775  0255  1D03               	skipz
  7776  0256  2A59               	goto	u430_25
  7777  0257  3001               	movlw	1
  7778  0258  0237               	subwf	dtoa@w,w
  7779  0259                     u430_25:	
  7780  0259  1C03               	skipc
  7781  025A  2A5E               	goto	i1l3938
  7782  025B  0021               	movlb	1	; select bank1
  7783  025C  18E2               	btfsc	_flags^(0+128),1
  7784  025D  29E4               	goto	i1l3918
  7785  025E                     i1l3938:	
  7786                           
  7787                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if (s
      +                           || (flags & (1 << 2))) {
  7788  025E  0020               	movlb	0	; select bank0
  7789  025F  0839               	movf	dtoa@s,w
  7790  0260  043A               	iorwf	dtoa@s+1,w
  7791  0261  1D03               	btfss	3,2
  7792  0262  2A66               	goto	i1l3942
  7793  0263  0021               	movlb	1	; select bank1
  7794  0264  1D62               	btfss	_flags^(0+128),2
  7795  0265  2A7E               	goto	i1l3952
  7796  0266                     i1l3942:	
  7797                           
  7798                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:         -
      +                          -i;
  7799  0266  30FF               	movlw	255
  7800  0267  0020               	movlb	0	; select bank0
  7801  0268  07BF               	addwf	dtoa@i,f
  7802  0269  30FF               	movlw	255
  7803  026A  3DC0               	addwfc	dtoa@i+1,f
  7804                           
  7805                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:         d
      +                          buf[i] = s ? '-' : '+';
  7806  026B  0839               	movf	dtoa@s,w
  7807  026C  043A               	iorwf	dtoa@s+1,w
  7808  026D  1D03               	btfss	3,2
  7809  026E  2A71               	goto	i1l3948
  7810  026F  302B               	movlw	43
  7811  0270  2A72               	goto	L2
  7812  0271                     i1l3948:	
  7813  0271  302D               	movlw	45
  7814  0272                     L2:	
  7815  0272  00B3               	movwf	_dtoa$1699
  7816  0273  3000               	movlw	0
  7817  0274  00B4               	movwf	_dtoa$1699+1
  7818  0275  0833               	movf	_dtoa$1699,w
  7819  0276  00B0               	movwf	??_dtoa
  7820  0277  083F               	movf	dtoa@i,w
  7821  0278  3EA7               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7822  0279  0086               	movwf	6
  7823  027A  3002               	movlw	2	; select bank5/6
  7824  027B  0087               	movwf	7
  7825  027C  0830               	movf	??_dtoa,w
  7826  027D  0081               	movwf	1
  7827  027E                     i1l3952:	
  7828                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }
  7829                           
  7830                           
  7831                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     retur
      +                          n pad(fp, &dbuf[i], w);
  7832  027E  0020               	movlb	0	; select bank0
  7833  027F  083F               	movf	dtoa@i,w
  7834  0280  3EA7               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7835  0281  00B0               	movwf	??_dtoa
  7836  0282  0830               	movf	??_dtoa,w
  7837  0283  00A4               	movwf	pad@buf
  7838  0284  0838               	movf	dtoa@w+1,w
  7839  0285  00A6               	movwf	pad@p+1
  7840  0286  0837               	movf	dtoa@w,w
  7841  0287  00A5               	movwf	pad@p
  7842  0288  0832               	movf	dtoa@fp,w
  7843  0289  3186  261D         	fcall	_pad
  7844  028B  0020               	movlb	0	; select bank0
  7845  028C  0825               	movf	?_pad+1,w
  7846  028D  00AD               	movwf	?_dtoa+1
  7847  028E  0824               	movf	?_pad,w
  7848  028F  00AC               	movwf	?_dtoa
  7849  0290  0008               	return
  7850  0291                     __end_of_dtoa:	
  7851                           
  7852                           	psect	text33
  7853  061D                     __ptext33:	
  7854 ;; *************** function _pad *****************
  7855 ;; Defined at:
  7856 ;;		line 72 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  fp              1    wreg     PTR struct _IO_FILE
  7859 ;;		 -> sprintf@f(6), 
  7860 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  7861 ;;		 -> dbuf(32), 
  7862 ;;  p               2    5[BANK0 ] int 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7865 ;;		 -> sprintf@f(6), 
  7866 ;;  w               2    9[BANK0 ] int 
  7867 ;;  i               2    7[BANK0 ] int 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  2    4[BANK0 ] int 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7877 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;Total ram usage:        9 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		_fputc
  7886 ;;		_fputs
  7887 ;;		_strlen
  7888 ;; This function is called by:
  7889 ;;		_dtoa
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _pad
  7895  061D                     _pad:	
  7896                           
  7897                           ;incstack = 0
  7898                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7899                           ;pad@fp stored from wreg
  7900  061D  0020               	movlb	0	; select bank0
  7901  061E  00AB               	movwf	pad@fp
  7902                           
  7903                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static int
      +                           pad(FILE *fp, char *buf, int p);F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99
      +                          \common\doprnt.c: 73: {;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\d
      +                          oprnt.c: 74:     int i, w;;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\commo
      +                          n\doprnt.c: 77:     if (flags & (1 << 0)) {
  7904  061F  0021               	movlb	1	; select bank1
  7905  0620  1C62               	btfss	_flags^(0+128),0
  7906  0621  2E2B               	goto	i1l3804
  7907                           
  7908                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:         fp
      +                          uts((const char *)buf, fp);
  7909  0622  0020               	movlb	0	; select bank0
  7910  0623  082B               	movf	pad@fp,w
  7911  0624  00FC               	movwf	??_pad
  7912  0625  087C               	movf	??_pad,w
  7913  0626  00F8               	movwf	fputs@fp
  7914  0627  0824               	movf	pad@buf,w
  7915  0628  318F  2764  3186   	fcall	_fputs
  7916  062B                     i1l3804:	
  7917                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  7918                           
  7919                           
  7920                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w = (p
      +                           < 0) ? 0 : p;
  7921  062B  0020               	movlb	0	; select bank0
  7922  062C  1BA6               	btfsc	pad@p+1,7
  7923  062D  2E33               	goto	i1l3808
  7924  062E  0826               	movf	pad@p+1,w
  7925  062F  00AA               	movwf	pad@w+1
  7926  0630  0825               	movf	pad@p,w
  7927  0631  00A9               	movwf	pad@w
  7928  0632  2E35               	goto	i1l707
  7929  0633                     i1l3808:	
  7930  0633  01A9               	clrf	pad@w
  7931  0634  01AA               	clrf	pad@w+1
  7932  0635                     i1l707:	
  7933                           
  7934                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7935  0635  01A7               	clrf	pad@i
  7936  0636  01A8               	clrf	pad@i+1
  7937  0637                     i1l3814:	
  7938                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  7939                           
  7940                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     while 
      +                          (i < w) {
  7941                           
  7942                           
  7943                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     while 
      +                          (i < w) {
  7944  0637  0828               	movf	pad@i+1,w
  7945  0638  3A80               	xorlw	128
  7946  0639  00FC               	movwf	??_pad
  7947  063A  082A               	movf	pad@w+1,w
  7948  063B  3A80               	xorlw	128
  7949  063C  027C               	subwf	??_pad,w
  7950  063D  1D03               	skipz
  7951  063E  2E41               	goto	u398_25
  7952  063F  0829               	movf	pad@w,w
  7953  0640  0227               	subwf	pad@i,w
  7954  0641                     u398_25:	
  7955  0641  1803               	btfsc	3,0
  7956  0642  2E55               	goto	i1l710
  7957                           
  7958                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:         fp
      +                          utc(' ', fp);
  7959  0643  3020               	movlw	32
  7960  0644  00F0               	movwf	fputc@c
  7961  0645  3000               	movlw	0
  7962  0646  00F1               	movwf	fputc@c+1
  7963  0647  0020               	movlb	0	; select bank0
  7964  0648  082B               	movf	pad@fp,w
  7965  0649  00FC               	movwf	??_pad
  7966  064A  087C               	movf	??_pad,w
  7967  064B  00F2               	movwf	fputc@fp
  7968  064C  3186  2670  3186   	fcall	_fputc
  7969                           
  7970                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:         ++
      +                          i;
  7971  064F  3001               	movlw	1
  7972  0650  0020               	movlb	0	; select bank0
  7973  0651  07A7               	addwf	pad@i,f
  7974  0652  3000               	movlw	0
  7975  0653  3DA8               	addwfc	pad@i+1,f
  7976  0654  2E37               	goto	i1l3814
  7977  0655                     i1l710:	
  7978                           
  7979                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if (!(
      +                          flags & (1 << 0))) {
  7980  0655  0021               	movlb	1	; select bank1
  7981  0656  1862               	btfsc	_flags^(0+128),0
  7982  0657  2E61               	goto	i1l3818
  7983                           
  7984                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:         fp
      +                          uts((const char *)buf, fp);
  7985  0658  0020               	movlb	0	; select bank0
  7986  0659  082B               	movf	pad@fp,w
  7987  065A  00FC               	movwf	??_pad
  7988  065B  087C               	movf	??_pad,w
  7989  065C  00F8               	movwf	fputs@fp
  7990  065D  0824               	movf	pad@buf,w
  7991  065E  318F  2764  3186   	fcall	_fputs
  7992  0661                     i1l3818:	
  7993                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  7994                           
  7995                           
  7996                           ;F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     return
      +                           strlen(buf) + w;
  7997  0661  0020               	movlb	0	; select bank0
  7998  0662  0824               	movf	pad@buf,w
  7999  0663  00F0               	movwf	strlen@s
  8000  0664  3002               	movlw	2
  8001  0665  00F1               	movwf	strlen@s+1
  8002  0666  318F  2722         	fcall	_strlen
  8003  0668  0020               	movlb	0	; select bank0
  8004  0669  0829               	movf	pad@w,w
  8005  066A  0770               	addwf	?_strlen,w
  8006  066B  00A4               	movwf	?_pad
  8007  066C  082A               	movf	pad@w+1,w
  8008  066D  3D71               	addwfc	?_strlen+1,w
  8009  066E  00A5               	movwf	?_pad+1
  8010  066F  0008               	return
  8011  0670                     __end_of_pad:	
  8012                           
  8013                           	psect	text34
  8014  0F22                     __ptext34:	
  8015 ;; *************** function _strlen *****************
  8016 ;; Defined at:
  8017 ;;		line 12 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  s               2    0[COMMON] PTR const unsigned char 
  8020 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), ISR@send_578(64), 
  8021 ;;		 -> STR_6(4), STR_5(7), ISR@send(64), STR_3(4), 
  8022 ;;		 -> STR_2(7), 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  a               2    4[COMMON] PTR const unsigned char 
  8025 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), ISR@send_578(64), 
  8026 ;;		 -> STR_6(4), STR_5(7), ISR@send(64), STR_3(4), 
  8027 ;;		 -> STR_2(7), 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  2    0[COMMON] unsigned int 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        6 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		_ISR
  8047 ;;		_pad
  8048 ;;		_stoa
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           
  8053                           ;psect for function _strlen
  8054  0F22                     _strlen:	
  8055                           
  8056                           ;incstack = 0
  8057                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8058  0F22  0871               	movf	strlen@s+1,w
  8059  0F23  00F5               	movwf	strlen@a+1
  8060  0F24  0870               	movf	strlen@s,w
  8061  0F25  00F4               	movwf	strlen@a
  8062  0F26                     i1l3786:	
  8063  0F26  0870               	movf	strlen@s,w
  8064  0F27  0084               	movwf	4
  8065  0F28  0871               	movf	strlen@s+1,w
  8066  0F29  0085               	movwf	5
  8067  0F2A  0012               	moviw fsr0++
  8068  0F2B  1903               	btfsc	3,2
  8069  0F2C  2F32               	goto	i1l3788
  8070  0F2D  3001               	movlw	1
  8071  0F2E  07F0               	addwf	strlen@s,f
  8072  0F2F  3000               	movlw	0
  8073  0F30  3DF1               	addwfc	strlen@s+1,f
  8074  0F31  2F26               	goto	i1l3786
  8075  0F32                     i1l3788:	
  8076  0F32  0974               	comf	strlen@a,w
  8077  0F33  00F2               	movwf	??_strlen
  8078  0F34  0975               	comf	strlen@a+1,w
  8079  0F35  00F3               	movwf	??_strlen+1
  8080  0F36  0AF2               	incf	??_strlen,f
  8081  0F37  1903               	skipnz
  8082  0F38  0AF3               	incf	??_strlen+1,f
  8083  0F39  0870               	movf	strlen@s,w
  8084  0F3A  0772               	addwf	??_strlen,w
  8085  0F3B  00F0               	movwf	?_strlen
  8086  0F3C  0871               	movf	strlen@s+1,w
  8087  0F3D  3D73               	addwfc	??_strlen+1,w
  8088  0F3E  00F1               	movwf	?_strlen+1
  8089  0F3F  0008               	return
  8090  0F40                     __end_of_strlen:	
  8091                           
  8092                           	psect	text35
  8093  0F64                     __ptext35:	
  8094 ;; *************** function _fputs *****************
  8095 ;; Defined at:
  8096 ;;		line 8 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  s               1    wreg     PTR const unsigned char 
  8099 ;;		 -> dbuf(32), 
  8100 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  8101 ;;		 -> sprintf@f(6), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8104 ;;		 -> dbuf(32), 
  8105 ;;  i               2    1[BANK0 ] int 
  8106 ;;  c               1    0[BANK0 ] unsigned char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  2    8[COMMON] int 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;Total ram usage:        8 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    2
  8123 ;; This function calls:
  8124 ;;		_fputc
  8125 ;; This function is called by:
  8126 ;;		_pad
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _fputs
  8132  0F64                     _fputs:	
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8136                           ;fputs@s stored from wreg
  8137  0F64  0020               	movlb	0	; select bank0
  8138  0F65  00A3               	movwf	fputs@s
  8139  0F66  01A1               	clrf	fputs@i
  8140  0F67  01A2               	clrf	fputs@i+1
  8141  0F68                     i1l3798:	
  8142  0F68  0821               	movf	fputs@i,w
  8143  0F69  0723               	addwf	fputs@s,w
  8144  0F6A  00F9               	movwf	??_fputs
  8145  0F6B  0879               	movf	??_fputs,w
  8146  0F6C  0086               	movwf	6
  8147  0F6D  3002               	movlw	2	; select bank4/5
  8148  0F6E  0087               	movwf	7
  8149  0F6F  0801               	movf	1,w
  8150  0F70  00FA               	movwf	??_fputs+1
  8151  0F71  087A               	movf	??_fputs+1,w
  8152  0F72  00A0               	movwf	fputs@c
  8153  0F73  0820               	movf	fputs@c,w
  8154  0F74  1903               	btfsc	3,2
  8155  0F75  0008               	return
  8156  0F76  0820               	movf	fputs@c,w
  8157  0F77  00F9               	movwf	??_fputs
  8158  0F78  01FA               	clrf	??_fputs+1
  8159  0F79  0879               	movf	??_fputs,w
  8160  0F7A  00F0               	movwf	fputc@c
  8161  0F7B  087A               	movf	??_fputs+1,w
  8162  0F7C  00F1               	movwf	fputc@c+1
  8163  0F7D  0878               	movf	fputs@fp,w
  8164  0F7E  00FB               	movwf	??_fputs+2
  8165  0F7F  087B               	movf	??_fputs+2,w
  8166  0F80  00F2               	movwf	fputc@fp
  8167  0F81  3186  2670  318F   	fcall	_fputc
  8168  0F84  3001               	movlw	1
  8169  0F85  0020               	movlb	0	; select bank0
  8170  0F86  07A1               	addwf	fputs@i,f
  8171  0F87  3000               	movlw	0
  8172  0F88  3DA2               	addwfc	fputs@i+1,f
  8173  0F89  2F68               	goto	i1l3798
  8174  0F8A                     __end_of_fputs:	
  8175                           ;	Return value of _fputs is never used
  8176                           
  8177                           
  8178                           	psect	text36
  8179  0670                     __ptext36:	
  8180 ;; *************** function _fputc *****************
  8181 ;; Defined at:
  8182 ;;		line 8 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  c               2    0[COMMON] int 
  8185 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  8186 ;;		 -> sprintf@f(6), 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  2    0[COMMON] int 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;Total ram usage:        8 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    1
  8205 ;; This function calls:
  8206 ;;		_putch
  8207 ;; This function is called by:
  8208 ;;		_pad
  8209 ;;		_stoa
  8210 ;;		_vfpfcnvrt
  8211 ;;		_fputs
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _fputc
  8217  0670                     _fputc:	
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8221  0670  0872               	movf	fputc@fp,w
  8222  0671  1D03               	btfss	3,2
  8223  0672  0872               	movf	fputc@fp,w
  8224  0673  1D03               	btfss	3,2
  8225  0674  2E79               	goto	i1l3772
  8226  0675  0870               	movf	fputc@c,w
  8227  0676  3187  27FF         	fcall	_putch
  8228  0678  0008               	return
  8229  0679                     i1l3772:	
  8230  0679  0872               	movf	fputc@fp,w
  8231  067A  3E04               	addlw	4
  8232  067B  0086               	movwf	6
  8233  067C  0187               	clrf	7
  8234  067D  0016               	moviw fsr1++
  8235  067E  0401               	iorwf	1,w
  8236  067F  1903               	btfsc	3,2
  8237  0680  2E9D               	goto	i1l3776
  8238  0681  0872               	movf	fputc@fp,w
  8239  0682  3E04               	addlw	4
  8240  0683  0086               	movwf	6
  8241  0684  0187               	clrf	7
  8242  0685  3F40               	moviw [0]fsr1
  8243  0686  00F3               	movwf	??_fputc
  8244  0687  3F41               	moviw [1]fsr1
  8245  0688  00F4               	movwf	??_fputc+1
  8246  0689  0872               	movf	fputc@fp,w
  8247  068A  3E02               	addlw	2
  8248  068B  0086               	movwf	6
  8249  068C  0187               	clrf	7
  8250  068D  3F40               	moviw [0]fsr1
  8251  068E  00F5               	movwf	??_fputc+2
  8252  068F  3F41               	moviw [1]fsr1
  8253  0690  00F6               	movwf	??_fputc+3
  8254  0691  0876               	movf	??_fputc+3,w
  8255  0692  3A80               	xorlw	128
  8256  0693  00F7               	movwf	??_fputc+4
  8257  0694  0874               	movf	??_fputc+1,w
  8258  0695  3A80               	xorlw	128
  8259  0696  0277               	subwf	??_fputc+4,w
  8260  0697  1D03               	skipz
  8261  0698  2E9B               	goto	u393_25
  8262  0699  0873               	movf	??_fputc,w
  8263  069A  0275               	subwf	??_fputc+2,w
  8264  069B                     u393_25:	
  8265  069B  1803               	skipnc
  8266  069C  0008               	return
  8267  069D                     i1l3776:	
  8268  069D  0872               	movf	fputc@fp,w
  8269  069E  3E02               	addlw	2
  8270  069F  0086               	movwf	6
  8271  06A0  0187               	clrf	7
  8272  06A1  0872               	movf	fputc@fp,w
  8273  06A2  0084               	movwf	4
  8274  06A3  0185               	clrf	5
  8275  06A4  3F40               	moviw [0]fsr1
  8276  06A5  0700               	addwf	0,w
  8277  06A6  00F3               	movwf	??_fputc
  8278  06A7  3101               	addfsr 0,1
  8279  06A8  3F41               	moviw [1]fsr1
  8280  06A9  3D00               	addwfc	0,w
  8281  06AA  00F4               	movwf	??_fputc+1
  8282  06AB  0873               	movf	??_fputc,w
  8283  06AC  0086               	movwf	6
  8284  06AD  0874               	movf	??_fputc+1,w
  8285  06AE  0087               	movwf	7
  8286  06AF  0870               	movf	fputc@c,w
  8287  06B0  0081               	movwf	1
  8288  06B1  0872               	movf	fputc@fp,w
  8289  06B2  3E02               	addlw	2
  8290  06B3  0086               	movwf	6
  8291  06B4  0187               	clrf	7
  8292  06B5  3001               	movlw	1
  8293  06B6  0781               	addwf	1,f
  8294  06B7  3141               	addfsr 1,1
  8295  06B8  1803               	skipnc
  8296  06B9  0A81               	incf	1,f
  8297  06BA  0008               	return
  8298  06BB                     __end_of_fputc:	
  8299                           ;	Return value of _fputc is never used
  8300                           
  8301                           
  8302                           	psect	text37
  8303  07FF                     __ptext37:	
  8304 ;; *************** function _putch *****************
  8305 ;; Defined at:
  8306 ;;		line 7 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\putch.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  c               1    wreg     unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  c               1    0[COMMON] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_fputc
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _putch
  8335  07FF                     _putch:	
  8336                           
  8337                           ;incstack = 0
  8338                           ; Regs used in _putch: [wreg]
  8339  07FF  0008               	return
  8340  0800                     __end_of_putch:	
  8341                           
  8342                           	psect	text38
  8343  0EED                     __ptext38:	
  8344 ;; *************** function _abs *****************
  8345 ;; Defined at:
  8346 ;;		line 1 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\abs.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  a               2   11[COMMON] int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  2   11[COMMON] int 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        4 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_dtoa
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function _abs
  8375  0EED                     _abs:	
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _abs: [wreg+status,2+status,0]
  8379  0EED  087C               	movf	abs@a+1,w
  8380  0EEE  3A80               	xorlw	128
  8381  0EEF  0020               	movlb	0	; select bank0
  8382  0EF0  00A0               	movwf	??_abs
  8383  0EF1  3080               	movlw	128
  8384  0EF2  0220               	subwf	??_abs,w
  8385  0EF3  1D03               	skipz
  8386  0EF4  2EF7               	goto	u400_25
  8387  0EF5  3001               	movlw	1
  8388  0EF6  027B               	subwf	abs@a,w
  8389  0EF7                     u400_25:	
  8390  0EF7  1803               	skipnc
  8391  0EF8  0008               	return
  8392  0EF9  097B               	comf	abs@a,w
  8393  0EFA  0020               	movlb	0	; select bank0
  8394  0EFB  00A0               	movwf	??_abs
  8395  0EFC  097C               	comf	abs@a+1,w
  8396  0EFD  00A1               	movwf	??_abs+1
  8397  0EFE  0AA0               	incf	??_abs,f
  8398  0EFF  1903               	skipnz
  8399  0F00  0AA1               	incf	??_abs+1,f
  8400  0F01  0820               	movf	??_abs,w
  8401  0F02  00FB               	movwf	?_abs
  8402  0F03  0821               	movf	??_abs+1,w
  8403  0F04  00FC               	movwf	?_abs+1
  8404  0F05  0008               	return
  8405  0F06                     __end_of_abs:	
  8406                           
  8407                           	psect	text39
  8408  05B0                     __ptext39:	
  8409 ;; *************** function ___almod *****************
  8410 ;; Defined at:
  8411 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\almod.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  divisor         4    0[COMMON] long 
  8414 ;;  dividend        4    4[COMMON] long 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  sign            1   10[COMMON] unsigned char 
  8417 ;;  counter         1    9[COMMON] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  4    0[COMMON] long 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8427 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;Total ram usage:       11 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_dtoa
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function ___almod
  8442  05B0                     ___almod:	
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8446  05B0  01FA               	clrf	___almod@sign
  8447  05B1  1FF7               	btfss	___almod@dividend+3,7
  8448  05B2  2DC0               	goto	i1l858
  8449  05B3  09F4               	comf	___almod@dividend,f
  8450  05B4  09F5               	comf	___almod@dividend+1,f
  8451  05B5  09F6               	comf	___almod@dividend+2,f
  8452  05B6  09F7               	comf	___almod@dividend+3,f
  8453  05B7  0AF4               	incf	___almod@dividend,f
  8454  05B8  1903               	skipnz
  8455  05B9  0AF5               	incf	___almod@dividend+1,f
  8456  05BA  1903               	skipnz
  8457  05BB  0AF6               	incf	___almod@dividend+2,f
  8458  05BC  1903               	skipnz
  8459  05BD  0AF7               	incf	___almod@dividend+3,f
  8460  05BE  01FA               	clrf	___almod@sign
  8461  05BF  0AFA               	incf	___almod@sign,f
  8462  05C0                     i1l858:	
  8463  05C0  1FF3               	btfss	___almod@divisor+3,7
  8464  05C1  2DCD               	goto	i1l3874
  8465  05C2  09F0               	comf	___almod@divisor,f
  8466  05C3  09F1               	comf	___almod@divisor+1,f
  8467  05C4  09F2               	comf	___almod@divisor+2,f
  8468  05C5  09F3               	comf	___almod@divisor+3,f
  8469  05C6  0AF0               	incf	___almod@divisor,f
  8470  05C7  1903               	skipnz
  8471  05C8  0AF1               	incf	___almod@divisor+1,f
  8472  05C9  1903               	skipnz
  8473  05CA  0AF2               	incf	___almod@divisor+2,f
  8474  05CB  1903               	skipnz
  8475  05CC  0AF3               	incf	___almod@divisor+3,f
  8476  05CD                     i1l3874:	
  8477  05CD  0873               	movf	___almod@divisor+3,w
  8478  05CE  0472               	iorwf	___almod@divisor+2,w
  8479  05CF  0471               	iorwf	___almod@divisor+1,w
  8480  05D0  0470               	iorwf	___almod@divisor,w
  8481  05D1  1903               	skipnz
  8482  05D2  2E06               	goto	i1l3890
  8483  05D3  01F9               	clrf	___almod@counter
  8484  05D4  0AF9               	incf	___almod@counter,f
  8485  05D5                     i1l3880:	
  8486  05D5  1BF3               	btfsc	___almod@divisor+3,7
  8487  05D6  2DE3               	goto	i1l3882
  8488  05D7  3001               	movlw	1
  8489  05D8                     u414_25:	
  8490  05D8  35F0               	lslf	___almod@divisor,f
  8491  05D9  0DF1               	rlf	___almod@divisor+1,f
  8492  05DA  0DF2               	rlf	___almod@divisor+2,f
  8493  05DB  0DF3               	rlf	___almod@divisor+3,f
  8494  05DC  0B89               	decfsz	9,f
  8495  05DD  2DD8               	goto	u414_25
  8496  05DE  3001               	movlw	1
  8497  05DF  00F8               	movwf	??___almod
  8498  05E0  0878               	movf	??___almod,w
  8499  05E1  07F9               	addwf	___almod@counter,f
  8500  05E2  2DD5               	goto	i1l3880
  8501  05E3                     i1l3882:	
  8502  05E3  0873               	movf	___almod@divisor+3,w
  8503  05E4  0277               	subwf	___almod@dividend+3,w
  8504  05E5  1D03               	skipz
  8505  05E6  2DF1               	goto	u416_25
  8506  05E7  0872               	movf	___almod@divisor+2,w
  8507  05E8  0276               	subwf	___almod@dividend+2,w
  8508  05E9  1D03               	skipz
  8509  05EA  2DF1               	goto	u416_25
  8510  05EB  0871               	movf	___almod@divisor+1,w
  8511  05EC  0275               	subwf	___almod@dividend+1,w
  8512  05ED  1D03               	skipz
  8513  05EE  2DF1               	goto	u416_25
  8514  05EF  0870               	movf	___almod@divisor,w
  8515  05F0  0274               	subwf	___almod@dividend,w
  8516  05F1                     u416_25:	
  8517  05F1  1C03               	skipc
  8518  05F2  2DFB               	goto	i1l3886
  8519  05F3  0870               	movf	___almod@divisor,w
  8520  05F4  02F4               	subwf	___almod@dividend,f
  8521  05F5  0871               	movf	___almod@divisor+1,w
  8522  05F6  3BF5               	subwfb	___almod@dividend+1,f
  8523  05F7  0872               	movf	___almod@divisor+2,w
  8524  05F8  3BF6               	subwfb	___almod@dividend+2,f
  8525  05F9  0873               	movf	___almod@divisor+3,w
  8526  05FA  3BF7               	subwfb	___almod@dividend+3,f
  8527  05FB                     i1l3886:	
  8528  05FB  3001               	movlw	1
  8529  05FC                     u417_25:	
  8530  05FC  36F3               	lsrf	___almod@divisor+3,f
  8531  05FD  0CF2               	rrf	___almod@divisor+2,f
  8532  05FE  0CF1               	rrf	___almod@divisor+1,f
  8533  05FF  0CF0               	rrf	___almod@divisor,f
  8534  0600  0B89               	decfsz	9,f
  8535  0601  2DFC               	goto	u417_25
  8536  0602  3001               	movlw	1
  8537  0603  02F9               	subwf	___almod@counter,f
  8538  0604  1D03               	btfss	3,2
  8539  0605  2DE3               	goto	i1l3882
  8540  0606                     i1l3890:	
  8541  0606  087A               	movf	___almod@sign,w
  8542  0607  1903               	btfsc	3,2
  8543  0608  2E14               	goto	i1l3894
  8544  0609  09F4               	comf	___almod@dividend,f
  8545  060A  09F5               	comf	___almod@dividend+1,f
  8546  060B  09F6               	comf	___almod@dividend+2,f
  8547  060C  09F7               	comf	___almod@dividend+3,f
  8548  060D  0AF4               	incf	___almod@dividend,f
  8549  060E  1903               	skipnz
  8550  060F  0AF5               	incf	___almod@dividend+1,f
  8551  0610  1903               	skipnz
  8552  0611  0AF6               	incf	___almod@dividend+2,f
  8553  0612  1903               	skipnz
  8554  0613  0AF7               	incf	___almod@dividend+3,f
  8555  0614                     i1l3894:	
  8556  0614  0877               	movf	___almod@dividend+3,w
  8557  0615  00F3               	movwf	?___almod+3
  8558  0616  0876               	movf	___almod@dividend+2,w
  8559  0617  00F2               	movwf	?___almod+2
  8560  0618  0875               	movf	___almod@dividend+1,w
  8561  0619  00F1               	movwf	?___almod+1
  8562  061A  0874               	movf	___almod@dividend,w
  8563  061B  00F0               	movwf	?___almod
  8564  061C  0008               	return
  8565  061D                     __end_of___almod:	
  8566                           
  8567                           	psect	text40
  8568  044F                     __ptext40:	
  8569 ;; *************** function ___aldiv *****************
  8570 ;; Defined at:
  8571 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  divisor         4    0[COMMON] long 
  8574 ;;  dividend        4    4[COMMON] long 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  quotient        4    2[BANK0 ] long 
  8577 ;;  sign            1    1[BANK0 ] unsigned char 
  8578 ;;  counter         1    0[BANK0 ] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  4    0[COMMON] long 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:       15 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_dtoa
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function ___aldiv
  8603  044F                     ___aldiv:	
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8607  044F  0020               	movlb	0	; select bank0
  8608  0450  01A1               	clrf	___aldiv@sign
  8609  0451  1FF3               	btfss	___aldiv@divisor+3,7
  8610  0452  2C60               	goto	i1l845
  8611  0453  09F0               	comf	___aldiv@divisor,f
  8612  0454  09F1               	comf	___aldiv@divisor+1,f
  8613  0455  09F2               	comf	___aldiv@divisor+2,f
  8614  0456  09F3               	comf	___aldiv@divisor+3,f
  8615  0457  0AF0               	incf	___aldiv@divisor,f
  8616  0458  1903               	skipnz
  8617  0459  0AF1               	incf	___aldiv@divisor+1,f
  8618  045A  1903               	skipnz
  8619  045B  0AF2               	incf	___aldiv@divisor+2,f
  8620  045C  1903               	skipnz
  8621  045D  0AF3               	incf	___aldiv@divisor+3,f
  8622  045E  01A1               	clrf	___aldiv@sign
  8623  045F  0AA1               	incf	___aldiv@sign,f
  8624  0460                     i1l845:	
  8625  0460  1FF7               	btfss	___aldiv@dividend+3,7
  8626  0461  2C71               	goto	i1l3836
  8627  0462  09F4               	comf	___aldiv@dividend,f
  8628  0463  09F5               	comf	___aldiv@dividend+1,f
  8629  0464  09F6               	comf	___aldiv@dividend+2,f
  8630  0465  09F7               	comf	___aldiv@dividend+3,f
  8631  0466  0AF4               	incf	___aldiv@dividend,f
  8632  0467  1903               	skipnz
  8633  0468  0AF5               	incf	___aldiv@dividend+1,f
  8634  0469  1903               	skipnz
  8635  046A  0AF6               	incf	___aldiv@dividend+2,f
  8636  046B  1903               	skipnz
  8637  046C  0AF7               	incf	___aldiv@dividend+3,f
  8638  046D  3001               	movlw	1
  8639  046E  00F8               	movwf	??___aldiv
  8640  046F  0878               	movf	??___aldiv,w
  8641  0470  06A1               	xorwf	___aldiv@sign,f
  8642  0471                     i1l3836:	
  8643  0471  3000               	movlw	0
  8644  0472  00A5               	movwf	___aldiv@quotient+3
  8645  0473  3000               	movlw	0
  8646  0474  00A4               	movwf	___aldiv@quotient+2
  8647  0475  3000               	movlw	0
  8648  0476  00A3               	movwf	___aldiv@quotient+1
  8649  0477  3000               	movlw	0
  8650  0478  00A2               	movwf	___aldiv@quotient
  8651  0479  0873               	movf	___aldiv@divisor+3,w
  8652  047A  0472               	iorwf	___aldiv@divisor+2,w
  8653  047B  0471               	iorwf	___aldiv@divisor+1,w
  8654  047C  0470               	iorwf	___aldiv@divisor,w
  8655  047D  1903               	skipnz
  8656  047E  2CBA               	goto	i1l3858
  8657  047F  01A0               	clrf	___aldiv@counter
  8658  0480  0AA0               	incf	___aldiv@counter,f
  8659  0481                     i1l3844:	
  8660  0481  1BF3               	btfsc	___aldiv@divisor+3,7
  8661  0482  2C8F               	goto	i1l3846
  8662  0483  3001               	movlw	1
  8663  0484                     u404_25:	
  8664  0484  35F0               	lslf	___aldiv@divisor,f
  8665  0485  0DF1               	rlf	___aldiv@divisor+1,f
  8666  0486  0DF2               	rlf	___aldiv@divisor+2,f
  8667  0487  0DF3               	rlf	___aldiv@divisor+3,f
  8668  0488  0B89               	decfsz	9,f
  8669  0489  2C84               	goto	u404_25
  8670  048A  3001               	movlw	1
  8671  048B  00F8               	movwf	??___aldiv
  8672  048C  0878               	movf	??___aldiv,w
  8673  048D  07A0               	addwf	___aldiv@counter,f
  8674  048E  2C81               	goto	i1l3844
  8675  048F                     i1l3846:	
  8676  048F  3001               	movlw	1
  8677  0490                     u406_25:	
  8678  0490  35A2               	lslf	___aldiv@quotient,f
  8679  0491  0DA3               	rlf	___aldiv@quotient+1,f
  8680  0492  0DA4               	rlf	___aldiv@quotient+2,f
  8681  0493  0DA5               	rlf	___aldiv@quotient+3,f
  8682  0494  0B89               	decfsz	9,f
  8683  0495  2C90               	goto	u406_25
  8684  0496  0873               	movf	___aldiv@divisor+3,w
  8685  0497  0277               	subwf	___aldiv@dividend+3,w
  8686  0498  1D03               	skipz
  8687  0499  2CA4               	goto	u407_25
  8688  049A  0872               	movf	___aldiv@divisor+2,w
  8689  049B  0276               	subwf	___aldiv@dividend+2,w
  8690  049C  1D03               	skipz
  8691  049D  2CA4               	goto	u407_25
  8692  049E  0871               	movf	___aldiv@divisor+1,w
  8693  049F  0275               	subwf	___aldiv@dividend+1,w
  8694  04A0  1D03               	skipz
  8695  04A1  2CA4               	goto	u407_25
  8696  04A2  0870               	movf	___aldiv@divisor,w
  8697  04A3  0274               	subwf	___aldiv@dividend,w
  8698  04A4                     u407_25:	
  8699  04A4  1C03               	skipc
  8700  04A5  2CAF               	goto	i1l3854
  8701  04A6  0870               	movf	___aldiv@divisor,w
  8702  04A7  02F4               	subwf	___aldiv@dividend,f
  8703  04A8  0871               	movf	___aldiv@divisor+1,w
  8704  04A9  3BF5               	subwfb	___aldiv@dividend+1,f
  8705  04AA  0872               	movf	___aldiv@divisor+2,w
  8706  04AB  3BF6               	subwfb	___aldiv@dividend+2,f
  8707  04AC  0873               	movf	___aldiv@divisor+3,w
  8708  04AD  3BF7               	subwfb	___aldiv@dividend+3,f
  8709  04AE  1422               	bsf	___aldiv@quotient,0
  8710  04AF                     i1l3854:	
  8711  04AF  3001               	movlw	1
  8712  04B0                     u408_25:	
  8713  04B0  36F3               	lsrf	___aldiv@divisor+3,f
  8714  04B1  0CF2               	rrf	___aldiv@divisor+2,f
  8715  04B2  0CF1               	rrf	___aldiv@divisor+1,f
  8716  04B3  0CF0               	rrf	___aldiv@divisor,f
  8717  04B4  0B89               	decfsz	9,f
  8718  04B5  2CB0               	goto	u408_25
  8719  04B6  3001               	movlw	1
  8720  04B7  02A0               	subwf	___aldiv@counter,f
  8721  04B8  1D03               	btfss	3,2
  8722  04B9  2C8F               	goto	i1l3846
  8723  04BA                     i1l3858:	
  8724  04BA  0821               	movf	___aldiv@sign,w
  8725  04BB  1903               	btfsc	3,2
  8726  04BC  2CC8               	goto	i1l3862
  8727  04BD  09A2               	comf	___aldiv@quotient,f
  8728  04BE  09A3               	comf	___aldiv@quotient+1,f
  8729  04BF  09A4               	comf	___aldiv@quotient+2,f
  8730  04C0  09A5               	comf	___aldiv@quotient+3,f
  8731  04C1  0AA2               	incf	___aldiv@quotient,f
  8732  04C2  1903               	skipnz
  8733  04C3  0AA3               	incf	___aldiv@quotient+1,f
  8734  04C4  1903               	skipnz
  8735  04C5  0AA4               	incf	___aldiv@quotient+2,f
  8736  04C6  1903               	skipnz
  8737  04C7  0AA5               	incf	___aldiv@quotient+3,f
  8738  04C8                     i1l3862:	
  8739  04C8  0825               	movf	___aldiv@quotient+3,w
  8740  04C9  00F3               	movwf	?___aldiv+3
  8741  04CA  0824               	movf	___aldiv@quotient+2,w
  8742  04CB  00F2               	movwf	?___aldiv+2
  8743  04CC  0823               	movf	___aldiv@quotient+1,w
  8744  04CD  00F1               	movwf	?___aldiv+1
  8745  04CE  0822               	movf	___aldiv@quotient,w
  8746  04CF  00F0               	movwf	?___aldiv
  8747  04D0  0008               	return
  8748  04D1                     __end_of___aldiv:	
  8749  007E                     btemp	set	126	;btemp
  8750  007E                     int$flags	set	126
  8751  007E                     wtemp0	set	126


Data Sizes:
    Strings     80
    Constant    11
    Data        7
    BSS         361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     64      80
    BANK2            80     65      80
    BANK3            80     64      66
    BANK4            80     64      64
    BANK5            80     22      61
    BANK6            80      0      39
    BANK7            80      0      64
    BANK8            80      0      64
    BANK9            80      0      64
    BANK10           80      0      64
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ?_sprintf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ISR@send_578(BANK4[64]), 
		 -> STR_6(CODE[4]), STR_5(CODE[7]), ISR@send(BANK3[64]), STR_3(CODE[4]), 
		 -> STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 64
		 -> ?_sprintf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ISR@send_578(BANK4[64]), 
		 -> STR_6(CODE[4]), STR_5(CODE[7]), ISR@send(BANK3[64]), STR_3(CODE[4]), 
		 -> STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@send_578(BANK4[64]), ISR@send(BANK3[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@send_578(BANK4[64]), ISR@send(BANK3[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    S2005_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@buf_572(BANK2[64]), ISR@buf(BANK1[64]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), STR_6(CODE[4]), STR_5(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), STR_6(CODE[4]), STR_5(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(BANK0[7]), STR_6(CODE[4]), STR_5(CODE[7]), 
		 -> STR_3(CODE[4]), STR_2(CODE[7]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    key_isPressed@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK6[39]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> ISR@send_578(BANK4[64]), ISR@send(BANK3[64]), 

    sp__data_getdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK6[39]), 

    init_env@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK6[39]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_sprintf
    _timer_Timer0Handdle->_key_isPressed
    _key_isPressed->___lwmod
    _led_Blink->i1_led_SetState
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _dtoa->_abs
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_display_update
    _init_env->_display_set
    _display_update->_display_write_once
    _display_write_once->___awmod
    _display_write_byte->_display_control595_delay

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1494
                        _display_set
                     _display_update
                           _init_env
                       _led_SetState
                   _timer_Timer0Init
                  _timer_Timer0Start
                   _timer_Timer1Init
                  _timer_Timer1Start
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Start                                    0     0      0       0
                  _timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (2) _timer_Timer0Reset                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_SetState                                         1     1      0      22
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             5     5      0     113
                                              1 BANK5      5     5      0
                       _data_getdata
                        _display_set
 ---------------------------------------------------------------------------------
 (2) _display_set                                          1     1      0      22
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (2) _data_getdata                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                      11    11      0    1337
                                             11 BANK5     11    11      0
                            ___awmod
                 _display_write_once
 ---------------------------------------------------------------------------------
 (2) _display_write_once                                   4     1      3     433
                                              7 BANK5      4     1      3
                            ___awmod (ARG)
           _display_control595_delay
                 _display_write_byte
 ---------------------------------------------------------------------------------
 (3) _display_write_byte                                   4     4      0      93
                                              2 BANK5      4     4      0
           _display_control595_delay
 ---------------------------------------------------------------------------------
 (4) _display_control595_delay                             2     2      0      24
                                              0 BANK5      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              0 BANK5      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                260   260      0   15783
                                             76 BANK0      3     3      0
                                              0 BANK1     64    64      0
                                              0 BANK2     65    65      0
                                              0 BANK3     64    64      0
                                              0 BANK4     64    64      0
                            ___lwmod
                          _led_Blink
                            _sprintf
                             _strcpy
                             _strlen
                _timer_IsTimer0Itrpt
                _timer_IsTimer1Itrpt
                _timer_Timer0Handdle
              _timer_Timer1ClrIntrpt
                i1_timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (6) i1_timer_Timer0Reset                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_Timer1ClrIntrpt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_Timer0Handdle                                  0     0      0     868
                      _key_isPressed
 ---------------------------------------------------------------------------------
 (7) _key_isPressed                                        3     3      0     868
                                              6 COMMON     3     3      0
                            ___lwmod
                          _led_Blink
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (8) i1_data_getdata                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _led_Blink                                            1     1      0      31
                                              1 COMMON     1     1      0
                     i1_led_SetState
 ---------------------------------------------------------------------------------
 (9) i1_led_SetState                                       1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     772
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _timer_IsTimer1Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_IsTimer0Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              12     8      4     407
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             22    10     12   12839
                                             13 COMMON     1     1      0
                                             55 BANK0     21     9     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     5      3   12257
                                             47 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           32    30      2   11829
                                             33 BANK0     14    12      2
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (9) _stoa                                                23    21      2    2729
                                              8 COMMON     5     3      2
                                              0 BANK0     18    18      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                21    17      4    6681
                                             12 BANK0     21    17      4
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                 9     6      3    4469
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     354
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (11) _fputs                                               8     7      1    1969
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               8     5      3    1577
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___almod                                            11     3      8     613
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (10) ___aldiv                                            15     7      8     625
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_set
   _display_update
     ___awmod
     _display_write_once
       ___awmod (ARG)
       _display_control595_delay (ARG)
       _display_write_byte (ARG)
         _display_control595_delay
   _init_env
     _data_getdata
     _display_set
   _led_SetState
   _timer_Timer0Init
   _timer_Timer0Start
     _timer_Timer0Reset
   _timer_Timer1Init
   _timer_Timer1Start
   _uart_init

 _ISR (ROOT)
   ___lwmod
   _led_Blink
     i1_led_SetState
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aldiv
           ___almod
           _abs
             ___almod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _stoa
           _fputc
             _putch
           _strlen
   _strcpy
   _strlen
   _timer_IsTimer0Itrpt
   _timer_IsTimer1Itrpt
   _timer_Timer0Handdle
     _key_isPressed
       ___lwmod
       _led_Blink
         i1_led_SetState
       i1_data_getdata
   _timer_Timer1ClrIntrpt
   i1_timer_Timer0Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     40      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     41      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     40      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     40      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50     16      3D      15       76.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      27      17       48.8%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     2E4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      40      22       80.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      40      24       80.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     2E4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jun 17 01:30:44 2019

                      __CFG_CP$OFF 0000                       ?_display_set 0070  
                      __CFG_LVP$ON 0000                                l106 05A4  
                              l397 0ECB                                _GIE 005F  
                              _RC4 0074                       __CFG_CPD$OFF 0000  
                              _ISR 0004                                _abs 0EED  
                              _pad 061D                       ___awmod@sign 02CD  
           __end_of_display_update 0543                       __CFG_BORV$LO 0000  
                              wreg 0009                       __CFG_IESO$ON 0000  
                     __CFG_FOSC$HS 0000                     ??_led_SetState 02C7  
             __end_of_data_getdata 0004                               ?_ISR 0070  
                             ISR@i 006E                               ?_abs 007B  
                             l3150 0588                               l3064 06C6  
                             l3090 06FC                               l3082 06EB  
                             l3076 06D3                               l3068 06CD  
                             l3078 06DF                               l3086 06F4  
                             ?_pad 0024                               l3682 0FC9  
                             STR_1 1000                               STR_2 101A  
                             STR_3 1021                               STR_4 074D  
                             STR_5 101A                               STR_6 1021  
                             _BRGH 0CF2                               _CREN 0CEC  
                             _LATA 010C                               _LATB 010D  
                             _LATC 010E                               _ENUM 00EF  
                             u2555 07DE                               _PEIE 005E  
                             u2925 0586                               u2950 0EC3  
                             u2935 05A2                               u2865 06D6  
                             _RCIE 048D                               u2885 06E5  
                             u2895 06EC                               _TMR0 0015  
                             _SPEN 0CEF                               _TXIE 048C  
                             _TXEN 0CF5                               _SYNC 0CF4  
                             _WPUA 020C                               _WPUB 020D  
                             _WPUC 020E                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _Temp 0167  
                             abs@a 007B                               _dbuf 02A7  
                             _main 0FB0                               _dtoa 017E  
                             _prec 00E0                               _nout 0161  
                             pad@i 0027                               pad@p 0025  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             pad@w 0029                               _stoa 0389  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                             start 0129                      __CFG_MCLRE$ON 0000  
              i1_timer_Timer0Reset 0E80                              ??_ISR 006C  
                            ??_abs 0020                              ??_pad 007C  
                    __CFG_PLLEN$ON 0000                              ISR@tx 00EE  
         __end_of_timer_Timer0Init 0EE0           __end_of_timer_Timer1Init 0EED  
                  __end_of___aldiv 04D1                    __end_of___almod 061D  
                            ?_main 0070                              ?_dtoa 002C  
                            _BRG16 0CFB                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0701                              ?_stoa 0078  
                            _LATC3 0873                              _LATC4 0874  
                            _IOCAN 0392                              _IOCAP 0391  
                            _IOCBN 0395                              _IOCBP 0394  
                            _IOCCN 0398                              _IOCCP 0397  
                            i1l144 0066                              i1l162 0127  
                            i1l158 010B                    __end_of___lwmod 07D4  
                            i1l710 0655                              i1l720 01C4  
                            i1l721 01D8                              i1l707 0635  
                            i1l715 01A2                              i1l716 01A9  
                            i1l747 03CC                              i1l756 0427  
                            i1l845 0460                              i1l858 05C0  
                            _RCREG 0199                       vfpfcnvrt@fmt 0041  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISB 008D  
                            _TRISC 008E                              _WPUC3 1073  
                            _WPUC4 1074                              _RXSEL 08E9  
                            _TXREG 019A                              _TXSEL 08EA  
                  ?_display_update 0070                              _TX_en 00E9  
             ?i1_timer_Timer0Reset 0070                _timer_IsTimer0Itrpt 0E74  
              _timer_IsTimer1Itrpt 0E78                              _flags 00E2  
                            _fputc 0670                              _fputs 0F64  
                            pad@fp 002B                              _width 0163  
                            _putch 07FF                              main@i 02A0  
                            dtoa@d 002C                              dtoa@i 003F  
                            dtoa@n 003B                              dtoa@p 0035  
                            dtoa@s 0039                              dtoa@w 0037  
                            stoa@i 0027                              stoa@l 0030  
                            stoa@p 002E                              stoa@s 0078  
                            stoa@w 0029                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 1000  
             ?_timer_IsTimer0Itrpt 0070               ?_timer_IsTimer1Itrpt 0070  
                  __initialization 012B                       __end_of_main 0FD7  
                     __end_of_dtoa 0291                       __end_of_stoa 044F  
             display_write_once@HL 02D1               display_write_once@HR 02CE  
             display_write_once@ML 02CF               display_write_once@MR 02D0  
                   __CFG_LPBOR$OFF 0000            __size_ofi1_data_getdata 0002  
                           ??_main 02DD                             ??_dtoa 0030  
                           ??_stoa 007A              ??i1_timer_Timer0Reset 0070  
                           ISR@buf 00A0                             ISR@cnt 01E0  
           __size_of_key_isPressed 0041                             ?_fputc 0070  
                           ?_fputs 0078                             _CCPR2H 0299  
                           _CCPR2L 0298                             ?_putch 0070  
            _timer_Timer1ClrIntrpt 0E6E                             i1l4000 043C  
                           i1l4002 0449                             i1l4120 079F  
                           i1l4036 0301                             i1l4028 02D3  
                           i1l4046 0331                             i1l4062 0363  
                           i1l4118 0781                             i1l4142 0F48  
                           i1l4056 0358                             i1l4080 07BA  
                           i1l4242 004D                             i1l4084 07C6  
                           i1l4244 007A                             i1l4078 07AE  
                           i1l4270 00F0                             i1l4246 007D  
                           i1l4088 07CF                             i1l4272 0120  
                           i1l4274 0125                             i1l3804 062B  
                           i1l3814 0637                             i1l3808 0633  
                           i1l3818 0661                             i1l3914 01D3  
                           i1l3844 0481                             i1l3836 0471  
                           i1l3772 0679                             i1l3908 01BC  
                           i1l3862 04C8                             i1l3854 04AF  
                           i1l3846 048F                             i1l3942 0266  
                           i1l3918 01E4                             i1l3880 05D5  
                           i1l3776 069D                             i1l3952 027E  
                           i1l3928 0232                             i1l3858 04BA  
                           i1l3882 05E3                             i1l3890 0606  
                           i1l3874 05CD                             i1l3786 0F26  
                           i1l3938 025E                             i1l3788 0F32  
                           i1l3948 0271                             i1l3964 03A5  
                           i1l3894 0614                             i1l3886 05FB  
                           i1l3798 0F68                             i1l3982 03EE  
                           i1l3992 03FE                             i1l3984 03FB  
                           i1l3978 03DD                             i1l3996 042B  
                           u400_25 0EF7                             u420_20 018C  
                           u404_25 0484                             u421_20 018D  
                           u406_25 0490                             u414_25 05D8  
                           u430_25 0259                             u407_25 04A4  
                           u408_25 04B0                             u416_25 05F1  
                           u424_25 01B4                             u440_25 03F9  
                           u417_25 05FC                             u441_25 0408  
                           u435_20 0395                             u427_25 023B  
                           u443_25 0447                             u444_20 0EAD  
                           u452_25 07B1                             u429_25 024D  
                           u438_25 03C5                             u454_25 07C0  
                           u455_25 07C7                             u480_20 003E  
                           u393_25 069B                             u485_20 00B0  
                           u486_20 00E1                             u398_25 0641  
                           u479_20 0017                             _SPBRGH 019C  
                           _SPBRGL 019B                             _TRISC3 0473  
                           _TRISC4 0474                     __CFG_PWRTE$OFF 0000  
            ??_timer_IsTimer0Itrpt 0070              ??_timer_IsTimer1Itrpt 0070  
                     vfprintf@cfmt 0055          key_isPressed@key_time_cnt 0165  
                        ??___aldiv 0078                          ??___almod 0078  
             __end_of_led_SetState 0EC6                             _g_data 0320  
                   __CFG_STVREN$ON 0000        __end_of_timer_Timer0Handdle 0E6E  
                        ??___awmod 02CB         ??_display_control595_delay 02C7  
                           _flg_rc 00E8                          ??___lwmod 0074  
                 __end_of_init_env 05B0                    ___awmod@divisor 02C7  
                           _temp_h 006F                             _temp_l 00EC  
                  ___awmod@counter 02CC                             pad@buf 0024  
                           dtoa@fp 0032                             _strcpy 0F40  
                           _strlen 0F22               __size_of_display_set 0009  
                 __end_of_segmcode 074D              __size_of_data_getdata 0002  
                           fputc@c 0070                             fputs@c 0020  
                           fputs@i 0021                             fputs@s 0023  
                           stoa@cp 002C                             stoa@fp 002B  
                           putch@c 0070                   __end_of_vfprintf 07A8  
                        ??_sprintf 007D            __end_of__initialization 017A  
                   __pcstackCOMMON 0070                      _key_isPressed 0701  
                     __pidataBANK2 0E96                       _data_getdata 0002  
                    __end_of_fputc 06BB                      __end_of_fputs 0F8A  
       __end_of_display_write_byte 07FF         __end_of_display_write_once 0FB0  
                    __end_of_putch 0800                   led_SetState@isOn 02C7  
                   _OPTION_REGbits 0095                 __size_of_led_Blink 000B  
                      ISR@send_578 0220              tmp_change@history_key 02A6  
          capture_handdle@last_cnt 00E4             ?_timer_Timer1ClrIntrpt 0070  
                          ??_fputc 0073                            ??_fputs 0079  
                          ??_putch 0070                         __pbssBANK0 006F  
                       __pbssBANK1 00E0                         __pbssBANK2 0161  
                       __pbssBANK3 01E0                         __pbssBANK5 02A0  
                       __pbssBANK6 0320                         __pbssBANK7 03A0  
                       __pbssBANK8 0420                         __pbssBANK9 04A0  
          __size_ofi1_led_SetState 000A                    __CFG_VCAPEN$OFF 0000  
                          ISR@send 01A0                     ?_key_isPressed 0070  
                       __pmaintext 0FB0                         __pintentry 0004  
                   i1_data_getdata 0E69                   ??_display_update 02D2  
                ?_timer_Timer0Init 0070                            ?_strcpy 0070  
                          ?_strlen 0070                  ?_timer_Timer1Init 0070  
               __size_of_uart_init 001C                            _ODCONC3 1473  
                          _ODCONC4 1474                 ??_timer_Timer0Init 02C7  
               ??_timer_Timer1Init 02C7                 __size_of_vfpfcnvrt 00F8  
                          _RX_data 00EA                          ?_init_env 0070  
                          _TX_data 00EB              __size_of_led_SetState 000B  
                __end_of_led_Blink 0EBB   __end_of_display_control595_delay 0ED3  
                          ___aldiv 044F             __end_ofi1_data_getdata 0E6B  
                          ___almod 05B0                            ___awmod 06BB  
                          ___lwmod 07A8                          ?_vfprintf 004F  
                          __ptext1 0F06                            __ptext2 0E71  
                          __ptext3 0EE0                            __ptext4 0E7C  
                          __ptext5 0E85                            __ptext6 0ED3  
                          __ptext7 0EBB                            __ptext8 0543  
                          __ptext9 0E9D                    __size_of_strcpy 0024  
                  __size_of_strlen 001E                       __size_of_ISR 0125  
                        _T1CONbits 0018                       __size_of_abs 0019  
                     __size_of_pad 0053                   ___awmod@dividend 02C9  
                 ___aldiv@dividend 0074                          _IOCCFbits 0399  
                        _IOCCPbits 0397                            main@cnt 00ED  
                          _sprintf 0FD7                            clrloop0 0E8B  
                     _led_SetState 0EBB               end_of_initialization 017A  
                          fputc@fp 0072                            init_ram 0E90  
                       ??_init_env 02C8                            fputs@fp 0078  
                          initloop 0E91                    ??_key_isPressed 0076  
                __end_of_uart_init 0F22                 i1led_SetState@isOn 0070  
                __end_of_vfpfcnvrt 0389                   ___aldiv@quotient 0022  
                  ?i1_data_getdata 0070                         ??_vfprintf 0052  
                          strcpy@d 007A                            strlen@a 0074  
                          strcpy@s 0078                            strlen@s 0070  
      __end_ofi1_timer_Timer0Reset 0E85                          _PORTAbits 000C  
                        _PORTCbits 000E                          _TRISCbits 008E  
      __end_of_timer_IsTimer0Itrpt 0E78        __end_of_timer_IsTimer1Itrpt 0E7C  
                   i1_led_SetState 0EA6                        _CCP2CONbits 029A  
                        _TXSTAbits 019E                      ??_display_set 02C7  
                      vfpfcnvrt@ap 0042                        vfpfcnvrt@cp 004C  
                      vfpfcnvrt@fp 004E                        vfpfcnvrt@ll 0048  
     __size_of_timer_Timer0Handdle 0003            ??_timer_Timer1ClrIntrpt 0070  
                   __end_of_strcpy 0F64                     __end_of_strlen 0F40  
              start_initialization 012B              receive_decode@cnt_low 02A4  
                      __end_of_ISR 0129                        __end_of_abs 0F06  
                      __end_of_pad 0670                display_write_byte@i 02CC  
__size_of_display_control595_delay 000D                 _display_write_byte 07D4  
           display_write_byte@data 02CB                 _display_write_once 0F8A  
        ?_display_control595_delay 0070             __end_ofi1_led_SetState 0EB0  
           tmp_change@key_time_cnt 02A2                ?_display_write_byte 0070  
              ?_display_write_once 02CE                        vfprintf@fmt 004F  
                      __pdataBANK2 0169               ??_display_write_byte 02C9  
             ??_display_write_once 02D1                           ??_strcpy 0074  
                         ??_strlen 0072                        __pbssBANK10 0520  
              __end_of_display_set 0EA6                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                    __pcstackBANK2 0120                      __pcstackBANK3 01A0  
                    __pcstackBANK4 0220                      __pcstackBANK5 02C7  
                       ISR@buf_572 0120                           ISR@F5503 03A0  
                         ISR@F5512 0520                           ISR@F5506 0420  
                         ISR@F5509 04A0                    ?i1_led_SetState 0070  
        __size_of_timer_Timer0Init 000D          __size_of_timer_Timer1Init 000D  
                         ISR@i_576 0160                  __size_of_init_env 006D  
                        _dtoa$1699 0033                           ?___aldiv 0070  
                         ?___almod 0070                           ?___awmod 02C7  
                        _led_Blink 0EB0                           ?___lwmod 0070  
                 ___almod@dividend 0074                  __size_of_vfprintf 0030  
                _timer_Timer0Reset 0E85                  _timer_Timer0Start 0E7C  
                _timer_Timer1Start 0E71                           ?_sprintf 0057  
                   __size_of_fputc 004B                     __size_of_fputs 0026  
               ?_timer_Timer0Reset 0070                     __size_of_putch 0001  
               ?_timer_Timer0Start 0070                 ?_timer_Timer1Start 0070  
                  ___aldiv@divisor 0070                    ___aldiv@counter 0020  
                         _LATAbits 010C                           _LATBbits 010D  
                        clear_ram0 0E8A                   ??i1_data_getdata 0070  
                         _PIE1bits 0091                           _PIE2bits 0092  
              ??_timer_Timer0Reset 02C7                ??_timer_Timer0Start 02C7  
              ??_timer_Timer1Start 02C7                           _PIR1bits 0011  
                         _PIR2bits 0012                          _uart_init 0F06  
                       ?_led_Blink 0070                        _display_set 0E9D  
                        _vfpfcnvrt 0291          __end_of_timer_Timer0Reset 0E8A  
                         _WPUCbits 020E          __end_of_timer_Timer0Start 0E80  
        __end_of_timer_Timer1Start 0E74            __size_of_display_update 0072  
              _timer_Timer0Handdle 0E6B              __end_of_key_isPressed 0742  
                       vfprintf@ap 0051                         vfprintf@fp 0054  
                        init_env@i 02CB                      ?_data_getdata 0070  
                       ?_uart_init 0070                   __size_of___aldiv 0082  
                 __size_of___almod 006D           key_isPressed@history_key 00E6  
                 __size_of___awmod 0046                         ?_vfpfcnvrt 0041  
                 __size_of___lwmod 002C                     led_Blink@State 00E7  
             ?_timer_Timer0Handdle 0070                         sprintf@fmt 0059  
                       sprintf@ret 0063     __size_of_timer_Timer1ClrIntrpt 0003  
    __end_of_timer_Timer1ClrIntrpt 0E71       __size_ofi1_timer_Timer0Reset 0005  
                         __ptext10 0002                           __ptext11 04D1  
                         __ptext20 0701                           __ptext12 0F8A  
                         __ptext21 0E69                           __ptext13 07D4  
                         __ptext30 0291                           __ptext22 0EB0  
                         __ptext14 0EC6                           __ptext31 0389  
                         __ptext23 0EA6                           __ptext15 06BB  
                         __ptext40 044F                           __ptext32 017E  
                         __ptext24 07A8                           __ptext33 061D  
                         __ptext25 0E78                           __ptext17 0E80  
                         __ptext34 0F22                           __ptext26 0E74  
                         __ptext18 0E6E                           __ptext35 0F64  
                         __ptext27 0F40                           __ptext19 0E6B  
                         __ptext36 0670                           __ptext28 0FD7  
                         __ptext37 07FF                           __ptext29 0778  
                         __ptext38 0EED                           __ptext39 05B0  
                  ___almod@divisor 0070                   __size_of_sprintf 0029  
                  ___almod@counter 0079                         strcpy@dest 0070  
    display_control595_delay@times 02C8                   _timer_Timer0Init 0ED3  
                 _timer_Timer1Init 0EE0                           _init_env 0543  
                    __size_of_main 0027                      __size_of_dtoa 0113  
                    __size_of_stoa 00C6                           _segmcode 0742  
                    init_env@pdata 02CA       __size_of_timer_IsTimer0Itrpt 0004  
     __size_of_timer_IsTimer1Itrpt 0004                     ??_data_getdata 02C7  
                        stoa@F1129 0169                           int$flags 007E  
                      ??_led_Blink 0071                           _vfprintf 0778  
            ??_timer_Timer0Handdle 0079         __size_of_timer_Timer0Reset 0005  
                 ??i1_led_SetState 0070                         _INTCONbits 000B  
       __size_of_timer_Timer0Start 0004         __size_of_timer_Timer1Start 0003  
                         intlevel1 0000                          sprintf@ap 0065  
                 ___lwmod@dividend 0072                  __CFG_CLKOUTEN$OFF 0000  
                        strcpy@src 0072                         _OSCCONbits 0099  
               key_isPressed@pdata 0078                        ??_uart_init 02C7  
                  display_set@ison 02C7                        ??_vfpfcnvrt 0043  
                         stoa@nuls 0020                      __pstringtext1 0742  
                    __pstringtext2 1000                      __pstringtext3 101A  
                    __pstringtext4 1021                      __pstringtext5 0000  
      __size_of_display_write_byte 002B        __size_of_display_write_once 0026  
                         sprintf@f 0066                           sprintf@s 0057  
                  display_update@i 02A5                    ___lwmod@divisor 0070  
         _display_control595_delay 0EC6                    ___lwmod@counter 0075  
                     ___aldiv@sign 0021                     _display_update 04D1  
                    ?_led_SetState 0070                       ___almod@sign 007A  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 17 21:36:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F1786 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0115                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0118                     	;# 
   154  0119                     	;# 
   155  011A                     	;# 
   156  011B                     	;# 
   157  011C                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  011F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0191                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0193                     	;# 
   169  0193                     	;# 
   170  0193                     	;# 
   171  0194                     	;# 
   172  0195                     	;# 
   173  0196                     	;# 
   174  0197                     	;# 
   175  0199                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019D                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  020C                     	;# 
   201  020D                     	;# 
   202  020E                     	;# 
   203  0210                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028E                     	;# 
   223  0291                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0298                     	;# 
   228  0298                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  030C                     	;# 
   232  030D                     	;# 
   233  030E                     	;# 
   234  0311                     	;# 
   235  0311                     	;# 
   236  0312                     	;# 
   237  0313                     	;# 
   238  038C                     	;# 
   239  038D                     	;# 
   240  038E                     	;# 
   241  0390                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  039D                     	;# 
   252  039E                     	;# 
   253  039F                     	;# 
   254  0511                     	;# 
   255  0513                     	;# 
   256  051A                     	;# 
   257  0811                     	;# 
   258  0812                     	;# 
   259  0813                     	;# 
   260  0814                     	;# 
   261  0815                     	;# 
   262  0816                     	;# 
   263  0817                     	;# 
   264  0818                     	;# 
   265  0819                     	;# 
   266  081A                     	;# 
   267  081B                     	;# 
   268  081C                     	;# 
   269  081D                     	;# 
   270  081E                     	;# 
   271  081F                     	;# 
   272  0820                     	;# 
   273  0821                     	;# 
   274  0821                     	;# 
   275  0822                     	;# 
   276  0823                     	;# 
   277  0823                     	;# 
   278  0824                     	;# 
   279  0825                     	;# 
   280  0825                     	;# 
   281  0826                     	;# 
   282  0827                     	;# 
   283  0827                     	;# 
   284  0828                     	;# 
   285  0829                     	;# 
   286  082A                     	;# 
   287  082B                     	;# 
   288  082C                     	;# 
   289  082D                     	;# 
   290  082E                     	;# 
   291  082F                     	;# 
   292  0831                     	;# 
   293  0832                     	;# 
   294  0833                     	;# 
   295  0834                     	;# 
   296  0835                     	;# 
   297  0836                     	;# 
   298  0837                     	;# 
   299  0838                     	;# 
   300  0839                     	;# 
   301  083A                     	;# 
   302  083B                     	;# 
   303  083C                     	;# 
   304  083D                     	;# 
   305  083E                     	;# 
   306  083F                     	;# 
   307  0840                     	;# 
   308  0841                     	;# 
   309  0841                     	;# 
   310  0842                     	;# 
   311  0843                     	;# 
   312  0843                     	;# 
   313  0844                     	;# 
   314  0845                     	;# 
   315  0845                     	;# 
   316  0846                     	;# 
   317  0847                     	;# 
   318  0847                     	;# 
   319  0848                     	;# 
   320  0849                     	;# 
   321  084A                     	;# 
   322  084B                     	;# 
   323  084C                     	;# 
   324  084D                     	;# 
   325  084E                     	;# 
   326  084F                     	;# 
   327  0851                     	;# 
   328  0852                     	;# 
   329  0853                     	;# 
   330  0854                     	;# 
   331  0855                     	;# 
   332  0856                     	;# 
   333  0857                     	;# 
   334  0858                     	;# 
   335  0859                     	;# 
   336  085A                     	;# 
   337  085B                     	;# 
   338  085C                     	;# 
   339  085D                     	;# 
   340  085E                     	;# 
   341  085F                     	;# 
   342  0860                     	;# 
   343  0861                     	;# 
   344  0861                     	;# 
   345  0862                     	;# 
   346  0863                     	;# 
   347  0863                     	;# 
   348  0864                     	;# 
   349  0865                     	;# 
   350  0865                     	;# 
   351  0866                     	;# 
   352  0867                     	;# 
   353  0867                     	;# 
   354  0868                     	;# 
   355  0869                     	;# 
   356  086A                     	;# 
   357  086B                     	;# 
   358  086C                     	;# 
   359  086D                     	;# 
   360  086E                     	;# 
   361  086F                     	;# 
   362  0FE4                     	;# 
   363  0FE5                     	;# 
   364  0FE6                     	;# 
   365  0FE7                     	;# 
   366  0FE8                     	;# 
   367  0FE9                     	;# 
   368  0FEA                     	;# 
   369  0FEB                     	;# 
   370  0FED                     	;# 
   371  0FEE                     	;# 
   372  0FEF                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0090                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0094                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  010D                     	;# 
   424  010E                     	;# 
   425  0111                     	;# 
   426  0112                     	;# 
   427  0113                     	;# 
   428  0114                     	;# 
   429  0115                     	;# 
   430  0116                     	;# 
   431  0117                     	;# 
   432  0118                     	;# 
   433  0119                     	;# 
   434  011A                     	;# 
   435  011B                     	;# 
   436  011C                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  011F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0197                     	;# 
   454  0199                     	;# 
   455  0199                     	;# 
   456  0199                     	;# 
   457  019A                     	;# 
   458  019A                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019C                     	;# 
   468  019D                     	;# 
   469  019D                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019E                     	;# 
   473  019E                     	;# 
   474  019F                     	;# 
   475  019F                     	;# 
   476  019F                     	;# 
   477  019F                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020D                     	;# 
   481  020E                     	;# 
   482  0210                     	;# 
   483  0211                     	;# 
   484  0211                     	;# 
   485  0212                     	;# 
   486  0212                     	;# 
   487  0213                     	;# 
   488  0213                     	;# 
   489  0214                     	;# 
   490  0214                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  028C                     	;# 
   500  028D                     	;# 
   501  028E                     	;# 
   502  0291                     	;# 
   503  0291                     	;# 
   504  0292                     	;# 
   505  0293                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  030C                     	;# 
   511  030D                     	;# 
   512  030E                     	;# 
   513  0311                     	;# 
   514  0311                     	;# 
   515  0312                     	;# 
   516  0313                     	;# 
   517  038C                     	;# 
   518  038D                     	;# 
   519  038E                     	;# 
   520  0390                     	;# 
   521  0391                     	;# 
   522  0392                     	;# 
   523  0393                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  0397                     	;# 
   528  0398                     	;# 
   529  0399                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0511                     	;# 
   534  0513                     	;# 
   535  051A                     	;# 
   536  0811                     	;# 
   537  0812                     	;# 
   538  0813                     	;# 
   539  0814                     	;# 
   540  0815                     	;# 
   541  0816                     	;# 
   542  0817                     	;# 
   543  0818                     	;# 
   544  0819                     	;# 
   545  081A                     	;# 
   546  081B                     	;# 
   547  081C                     	;# 
   548  081D                     	;# 
   549  081E                     	;# 
   550  081F                     	;# 
   551  0820                     	;# 
   552  0821                     	;# 
   553  0821                     	;# 
   554  0822                     	;# 
   555  0823                     	;# 
   556  0823                     	;# 
   557  0824                     	;# 
   558  0825                     	;# 
   559  0825                     	;# 
   560  0826                     	;# 
   561  0827                     	;# 
   562  0827                     	;# 
   563  0828                     	;# 
   564  0829                     	;# 
   565  082A                     	;# 
   566  082B                     	;# 
   567  082C                     	;# 
   568  082D                     	;# 
   569  082E                     	;# 
   570  082F                     	;# 
   571  0831                     	;# 
   572  0832                     	;# 
   573  0833                     	;# 
   574  0834                     	;# 
   575  0835                     	;# 
   576  0836                     	;# 
   577  0837                     	;# 
   578  0838                     	;# 
   579  0839                     	;# 
   580  083A                     	;# 
   581  083B                     	;# 
   582  083C                     	;# 
   583  083D                     	;# 
   584  083E                     	;# 
   585  083F                     	;# 
   586  0840                     	;# 
   587  0841                     	;# 
   588  0841                     	;# 
   589  0842                     	;# 
   590  0843                     	;# 
   591  0843                     	;# 
   592  0844                     	;# 
   593  0845                     	;# 
   594  0845                     	;# 
   595  0846                     	;# 
   596  0847                     	;# 
   597  0847                     	;# 
   598  0848                     	;# 
   599  0849                     	;# 
   600  084A                     	;# 
   601  084B                     	;# 
   602  084C                     	;# 
   603  084D                     	;# 
   604  084E                     	;# 
   605  084F                     	;# 
   606  0851                     	;# 
   607  0852                     	;# 
   608  0853                     	;# 
   609  0854                     	;# 
   610  0855                     	;# 
   611  0856                     	;# 
   612  0857                     	;# 
   613  0858                     	;# 
   614  0859                     	;# 
   615  085A                     	;# 
   616  085B                     	;# 
   617  085C                     	;# 
   618  085D                     	;# 
   619  085E                     	;# 
   620  085F                     	;# 
   621  0860                     	;# 
   622  0861                     	;# 
   623  0861                     	;# 
   624  0862                     	;# 
   625  0863                     	;# 
   626  0863                     	;# 
   627  0864                     	;# 
   628  0865                     	;# 
   629  0865                     	;# 
   630  0866                     	;# 
   631  0867                     	;# 
   632  0867                     	;# 
   633  0868                     	;# 
   634  0869                     	;# 
   635  086A                     	;# 
   636  086B                     	;# 
   637  086C                     	;# 
   638  086D                     	;# 
   639  086E                     	;# 
   640  086F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  000D                     	;# 
   666  000E                     	;# 
   667  0010                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0013                     	;# 
   671  0014                     	;# 
   672  0015                     	;# 
   673  0016                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001C                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0118                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011B                     	;# 
   715  011C                     	;# 
   716  011D                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011E                     	;# 
   720  011F                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0191                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0193                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0194                     	;# 
   730  0195                     	;# 
   731  0196                     	;# 
   732  0197                     	;# 
   733  0199                     	;# 
   734  0199                     	;# 
   735  0199                     	;# 
   736  019A                     	;# 
   737  019A                     	;# 
   738  019A                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019B                     	;# 
   743  019B                     	;# 
   744  019C                     	;# 
   745  019C                     	;# 
   746  019C                     	;# 
   747  019D                     	;# 
   748  019D                     	;# 
   749  019D                     	;# 
   750  019E                     	;# 
   751  019E                     	;# 
   752  019E                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  019F                     	;# 
   757  019F                     	;# 
   758  020C                     	;# 
   759  020D                     	;# 
   760  020E                     	;# 
   761  0210                     	;# 
   762  0211                     	;# 
   763  0211                     	;# 
   764  0212                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  028C                     	;# 
   779  028D                     	;# 
   780  028E                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  0311                     	;# 
   793  0311                     	;# 
   794  0312                     	;# 
   795  0313                     	;# 
   796  038C                     	;# 
   797  038D                     	;# 
   798  038E                     	;# 
   799  0390                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  0393                     	;# 
   803  0394                     	;# 
   804  0395                     	;# 
   805  0396                     	;# 
   806  0397                     	;# 
   807  0398                     	;# 
   808  0399                     	;# 
   809  039D                     	;# 
   810  039E                     	;# 
   811  039F                     	;# 
   812  0511                     	;# 
   813  0513                     	;# 
   814  051A                     	;# 
   815  0811                     	;# 
   816  0812                     	;# 
   817  0813                     	;# 
   818  0814                     	;# 
   819  0815                     	;# 
   820  0816                     	;# 
   821  0817                     	;# 
   822  0818                     	;# 
   823  0819                     	;# 
   824  081A                     	;# 
   825  081B                     	;# 
   826  081C                     	;# 
   827  081D                     	;# 
   828  081E                     	;# 
   829  081F                     	;# 
   830  0820                     	;# 
   831  0821                     	;# 
   832  0821                     	;# 
   833  0822                     	;# 
   834  0823                     	;# 
   835  0823                     	;# 
   836  0824                     	;# 
   837  0825                     	;# 
   838  0825                     	;# 
   839  0826                     	;# 
   840  0827                     	;# 
   841  0827                     	;# 
   842  0828                     	;# 
   843  0829                     	;# 
   844  082A                     	;# 
   845  082B                     	;# 
   846  082C                     	;# 
   847  082D                     	;# 
   848  082E                     	;# 
   849  082F                     	;# 
   850  0831                     	;# 
   851  0832                     	;# 
   852  0833                     	;# 
   853  0834                     	;# 
   854  0835                     	;# 
   855  0836                     	;# 
   856  0837                     	;# 
   857  0838                     	;# 
   858  0839                     	;# 
   859  083A                     	;# 
   860  083B                     	;# 
   861  083C                     	;# 
   862  083D                     	;# 
   863  083E                     	;# 
   864  083F                     	;# 
   865  0840                     	;# 
   866  0841                     	;# 
   867  0841                     	;# 
   868  0842                     	;# 
   869  0843                     	;# 
   870  0843                     	;# 
   871  0844                     	;# 
   872  0845                     	;# 
   873  0845                     	;# 
   874  0846                     	;# 
   875  0847                     	;# 
   876  0847                     	;# 
   877  0848                     	;# 
   878  0849                     	;# 
   879  084A                     	;# 
   880  084B                     	;# 
   881  084C                     	;# 
   882  084D                     	;# 
   883  084E                     	;# 
   884  084F                     	;# 
   885  0851                     	;# 
   886  0852                     	;# 
   887  0853                     	;# 
   888  0854                     	;# 
   889  0855                     	;# 
   890  0856                     	;# 
   891  0857                     	;# 
   892  0858                     	;# 
   893  0859                     	;# 
   894  085A                     	;# 
   895  085B                     	;# 
   896  085C                     	;# 
   897  085D                     	;# 
   898  085E                     	;# 
   899  085F                     	;# 
   900  0860                     	;# 
   901  0861                     	;# 
   902  0861                     	;# 
   903  0862                     	;# 
   904  0863                     	;# 
   905  0863                     	;# 
   906  0864                     	;# 
   907  0865                     	;# 
   908  0865                     	;# 
   909  0866                     	;# 
   910  0867                     	;# 
   911  0867                     	;# 
   912  0868                     	;# 
   913  0869                     	;# 
   914  086A                     	;# 
   915  086B                     	;# 
   916  086C                     	;# 
   917  086D                     	;# 
   918  086E                     	;# 
   919  086F                     	;# 
   920  0FE4                     	;# 
   921  0FE5                     	;# 
   922  0FE6                     	;# 
   923  0FE7                     	;# 
   924  0FE8                     	;# 
   925  0FE9                     	;# 
   926  0FEA                     	;# 
   927  0FEB                     	;# 
   928  0FED                     	;# 
   929  0FEE                     	;# 
   930  0FEF                     	;# 
   931  0000                     	;# 
   932  0001                     	;# 
   933  0002                     	;# 
   934  0003                     	;# 
   935  0004                     	;# 
   936  0005                     	;# 
   937  0006                     	;# 
   938  0007                     	;# 
   939  0008                     	;# 
   940  0009                     	;# 
   941  000A                     	;# 
   942  000B                     	;# 
   943  000C                     	;# 
   944  000D                     	;# 
   945  000E                     	;# 
   946  0010                     	;# 
   947  0011                     	;# 
   948  0012                     	;# 
   949  0013                     	;# 
   950  0014                     	;# 
   951  0015                     	;# 
   952  0016                     	;# 
   953  0016                     	;# 
   954  0017                     	;# 
   955  0018                     	;# 
   956  0019                     	;# 
   957  001A                     	;# 
   958  001B                     	;# 
   959  001C                     	;# 
   960  008C                     	;# 
   961  008D                     	;# 
   962  008E                     	;# 
   963  0090                     	;# 
   964  0091                     	;# 
   965  0092                     	;# 
   966  0093                     	;# 
   967  0094                     	;# 
   968  0095                     	;# 
   969  0096                     	;# 
   970  0097                     	;# 
   971  0098                     	;# 
   972  0099                     	;# 
   973  009A                     	;# 
   974  009B                     	;# 
   975  009B                     	;# 
   976  009C                     	;# 
   977  009D                     	;# 
   978  009E                     	;# 
   979  009F                     	;# 
   980  010C                     	;# 
   981  010D                     	;# 
   982  010E                     	;# 
   983  0111                     	;# 
   984  0112                     	;# 
   985  0113                     	;# 
   986  0114                     	;# 
   987  0115                     	;# 
   988  0116                     	;# 
   989  0117                     	;# 
   990  0118                     	;# 
   991  0119                     	;# 
   992  011A                     	;# 
   993  011B                     	;# 
   994  011C                     	;# 
   995  011D                     	;# 
   996  011D                     	;# 
   997  011D                     	;# 
   998  011E                     	;# 
   999  011F                     	;# 
  1000  018C                     	;# 
  1001  018D                     	;# 
  1002  0191                     	;# 
  1003  0191                     	;# 
  1004  0192                     	;# 
  1005  0193                     	;# 
  1006  0193                     	;# 
  1007  0193                     	;# 
  1008  0194                     	;# 
  1009  0195                     	;# 
  1010  0196                     	;# 
  1011  0197                     	;# 
  1012  0199                     	;# 
  1013  0199                     	;# 
  1014  0199                     	;# 
  1015  019A                     	;# 
  1016  019A                     	;# 
  1017  019A                     	;# 
  1018  019B                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019C                     	;# 
  1024  019C                     	;# 
  1025  019C                     	;# 
  1026  019D                     	;# 
  1027  019D                     	;# 
  1028  019D                     	;# 
  1029  019E                     	;# 
  1030  019E                     	;# 
  1031  019E                     	;# 
  1032  019F                     	;# 
  1033  019F                     	;# 
  1034  019F                     	;# 
  1035  019F                     	;# 
  1036  019F                     	;# 
  1037  020C                     	;# 
  1038  020D                     	;# 
  1039  020E                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  0212                     	;# 
  1044  0212                     	;# 
  1045  0213                     	;# 
  1046  0213                     	;# 
  1047  0214                     	;# 
  1048  0214                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0215                     	;# 
  1052  0215                     	;# 
  1053  0216                     	;# 
  1054  0216                     	;# 
  1055  0217                     	;# 
  1056  0217                     	;# 
  1057  028C                     	;# 
  1058  028D                     	;# 
  1059  028E                     	;# 
  1060  0291                     	;# 
  1061  0291                     	;# 
  1062  0292                     	;# 
  1063  0293                     	;# 
  1064  0298                     	;# 
  1065  0298                     	;# 
  1066  0299                     	;# 
  1067  029A                     	;# 
  1068  030C                     	;# 
  1069  030D                     	;# 
  1070  030E                     	;# 
  1071  0311                     	;# 
  1072  0311                     	;# 
  1073  0312                     	;# 
  1074  0313                     	;# 
  1075  038C                     	;# 
  1076  038D                     	;# 
  1077  038E                     	;# 
  1078  0390                     	;# 
  1079  0391                     	;# 
  1080  0392                     	;# 
  1081  0393                     	;# 
  1082  0394                     	;# 
  1083  0395                     	;# 
  1084  0396                     	;# 
  1085  0397                     	;# 
  1086  0398                     	;# 
  1087  0399                     	;# 
  1088  039D                     	;# 
  1089  039E                     	;# 
  1090  039F                     	;# 
  1091  0511                     	;# 
  1092  0513                     	;# 
  1093  051A                     	;# 
  1094  0811                     	;# 
  1095  0812                     	;# 
  1096  0813                     	;# 
  1097  0814                     	;# 
  1098  0815                     	;# 
  1099  0816                     	;# 
  1100  0817                     	;# 
  1101  0818                     	;# 
  1102  0819                     	;# 
  1103  081A                     	;# 
  1104  081B                     	;# 
  1105  081C                     	;# 
  1106  081D                     	;# 
  1107  081E                     	;# 
  1108  081F                     	;# 
  1109  0820                     	;# 
  1110  0821                     	;# 
  1111  0821                     	;# 
  1112  0822                     	;# 
  1113  0823                     	;# 
  1114  0823                     	;# 
  1115  0824                     	;# 
  1116  0825                     	;# 
  1117  0825                     	;# 
  1118  0826                     	;# 
  1119  0827                     	;# 
  1120  0827                     	;# 
  1121  0828                     	;# 
  1122  0829                     	;# 
  1123  082A                     	;# 
  1124  082B                     	;# 
  1125  082C                     	;# 
  1126  082D                     	;# 
  1127  082E                     	;# 
  1128  082F                     	;# 
  1129  0831                     	;# 
  1130  0832                     	;# 
  1131  0833                     	;# 
  1132  0834                     	;# 
  1133  0835                     	;# 
  1134  0836                     	;# 
  1135  0837                     	;# 
  1136  0838                     	;# 
  1137  0839                     	;# 
  1138  083A                     	;# 
  1139  083B                     	;# 
  1140  083C                     	;# 
  1141  083D                     	;# 
  1142  083E                     	;# 
  1143  083F                     	;# 
  1144  0840                     	;# 
  1145  0841                     	;# 
  1146  0841                     	;# 
  1147  0842                     	;# 
  1148  0843                     	;# 
  1149  0843                     	;# 
  1150  0844                     	;# 
  1151  0845                     	;# 
  1152  0845                     	;# 
  1153  0846                     	;# 
  1154  0847                     	;# 
  1155  0847                     	;# 
  1156  0848                     	;# 
  1157  0849                     	;# 
  1158  084A                     	;# 
  1159  084B                     	;# 
  1160  084C                     	;# 
  1161  084D                     	;# 
  1162  084E                     	;# 
  1163  084F                     	;# 
  1164  0851                     	;# 
  1165  0852                     	;# 
  1166  0853                     	;# 
  1167  0854                     	;# 
  1168  0855                     	;# 
  1169  0856                     	;# 
  1170  0857                     	;# 
  1171  0858                     	;# 
  1172  0859                     	;# 
  1173  085A                     	;# 
  1174  085B                     	;# 
  1175  085C                     	;# 
  1176  085D                     	;# 
  1177  085E                     	;# 
  1178  085F                     	;# 
  1179  0860                     	;# 
  1180  0861                     	;# 
  1181  0861                     	;# 
  1182  0862                     	;# 
  1183  0863                     	;# 
  1184  0863                     	;# 
  1185  0864                     	;# 
  1186  0865                     	;# 
  1187  0865                     	;# 
  1188  0866                     	;# 
  1189  0867                     	;# 
  1190  0867                     	;# 
  1191  0868                     	;# 
  1192  0869                     	;# 
  1193  086A                     	;# 
  1194  086B                     	;# 
  1195  086C                     	;# 
  1196  086D                     	;# 
  1197  086E                     	;# 
  1198  086F                     	;# 
  1199  0FE4                     	;# 
  1200  0FE5                     	;# 
  1201  0FE6                     	;# 
  1202  0FE7                     	;# 
  1203  0FE8                     	;# 
  1204  0FE9                     	;# 
  1205  0FEA                     	;# 
  1206  0FEB                     	;# 
  1207  0FED                     	;# 
  1208  0FEE                     	;# 
  1209  0FEF                     	;# 
  1210  0000                     	;# 
  1211  0001                     	;# 
  1212  0002                     	;# 
  1213  0003                     	;# 
  1214  0004                     	;# 
  1215  0005                     	;# 
  1216  0006                     	;# 
  1217  0007                     	;# 
  1218  0008                     	;# 
  1219  0009                     	;# 
  1220  000A                     	;# 
  1221  000B                     	;# 
  1222  000C                     	;# 
  1223  000D                     	;# 
  1224  000E                     	;# 
  1225  0010                     	;# 
  1226  0011                     	;# 
  1227  0012                     	;# 
  1228  0013                     	;# 
  1229  0014                     	;# 
  1230  0015                     	;# 
  1231  0016                     	;# 
  1232  0016                     	;# 
  1233  0017                     	;# 
  1234  0018                     	;# 
  1235  0019                     	;# 
  1236  001A                     	;# 
  1237  001B                     	;# 
  1238  001C                     	;# 
  1239  008C                     	;# 
  1240  008D                     	;# 
  1241  008E                     	;# 
  1242  0090                     	;# 
  1243  0091                     	;# 
  1244  0092                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  009F                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  010E                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  011A                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011D                     	;# 
  1275  011D                     	;# 
  1276  011D                     	;# 
  1277  011E                     	;# 
  1278  011F                     	;# 
  1279  018C                     	;# 
  1280  018D                     	;# 
  1281  0191                     	;# 
  1282  0191                     	;# 
  1283  0192                     	;# 
  1284  0193                     	;# 
  1285  0193                     	;# 
  1286  0193                     	;# 
  1287  0194                     	;# 
  1288  0195                     	;# 
  1289  0196                     	;# 
  1290  0197                     	;# 
  1291  0199                     	;# 
  1292  0199                     	;# 
  1293  0199                     	;# 
  1294  019A                     	;# 
  1295  019A                     	;# 
  1296  019A                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019C                     	;# 
  1304  019C                     	;# 
  1305  019D                     	;# 
  1306  019D                     	;# 
  1307  019D                     	;# 
  1308  019E                     	;# 
  1309  019E                     	;# 
  1310  019E                     	;# 
  1311  019F                     	;# 
  1312  019F                     	;# 
  1313  019F                     	;# 
  1314  019F                     	;# 
  1315  019F                     	;# 
  1316  020C                     	;# 
  1317  020D                     	;# 
  1318  020E                     	;# 
  1319  0210                     	;# 
  1320  0211                     	;# 
  1321  0211                     	;# 
  1322  0212                     	;# 
  1323  0212                     	;# 
  1324  0213                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0214                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0216                     	;# 
  1333  0216                     	;# 
  1334  0217                     	;# 
  1335  0217                     	;# 
  1336  028C                     	;# 
  1337  028D                     	;# 
  1338  028E                     	;# 
  1339  0291                     	;# 
  1340  0291                     	;# 
  1341  0292                     	;# 
  1342  0293                     	;# 
  1343  0298                     	;# 
  1344  0298                     	;# 
  1345  0299                     	;# 
  1346  029A                     	;# 
  1347  030C                     	;# 
  1348  030D                     	;# 
  1349  030E                     	;# 
  1350  0311                     	;# 
  1351  0311                     	;# 
  1352  0312                     	;# 
  1353  0313                     	;# 
  1354  038C                     	;# 
  1355  038D                     	;# 
  1356  038E                     	;# 
  1357  0390                     	;# 
  1358  0391                     	;# 
  1359  0392                     	;# 
  1360  0393                     	;# 
  1361  0394                     	;# 
  1362  0395                     	;# 
  1363  0396                     	;# 
  1364  0397                     	;# 
  1365  0398                     	;# 
  1366  0399                     	;# 
  1367  039D                     	;# 
  1368  039E                     	;# 
  1369  039F                     	;# 
  1370  0511                     	;# 
  1371  0513                     	;# 
  1372  051A                     	;# 
  1373  0811                     	;# 
  1374  0812                     	;# 
  1375  0813                     	;# 
  1376  0814                     	;# 
  1377  0815                     	;# 
  1378  0816                     	;# 
  1379  0817                     	;# 
  1380  0818                     	;# 
  1381  0819                     	;# 
  1382  081A                     	;# 
  1383  081B                     	;# 
  1384  081C                     	;# 
  1385  081D                     	;# 
  1386  081E                     	;# 
  1387  081F                     	;# 
  1388  0820                     	;# 
  1389  0821                     	;# 
  1390  0821                     	;# 
  1391  0822                     	;# 
  1392  0823                     	;# 
  1393  0823                     	;# 
  1394  0824                     	;# 
  1395  0825                     	;# 
  1396  0825                     	;# 
  1397  0826                     	;# 
  1398  0827                     	;# 
  1399  0827                     	;# 
  1400  0828                     	;# 
  1401  0829                     	;# 
  1402  082A                     	;# 
  1403  082B                     	;# 
  1404  082C                     	;# 
  1405  082D                     	;# 
  1406  082E                     	;# 
  1407  082F                     	;# 
  1408  0831                     	;# 
  1409  0832                     	;# 
  1410  0833                     	;# 
  1411  0834                     	;# 
  1412  0835                     	;# 
  1413  0836                     	;# 
  1414  0837                     	;# 
  1415  0838                     	;# 
  1416  0839                     	;# 
  1417  083A                     	;# 
  1418  083B                     	;# 
  1419  083C                     	;# 
  1420  083D                     	;# 
  1421  083E                     	;# 
  1422  083F                     	;# 
  1423  0840                     	;# 
  1424  0841                     	;# 
  1425  0841                     	;# 
  1426  0842                     	;# 
  1427  0843                     	;# 
  1428  0843                     	;# 
  1429  0844                     	;# 
  1430  0845                     	;# 
  1431  0845                     	;# 
  1432  0846                     	;# 
  1433  0847                     	;# 
  1434  0847                     	;# 
  1435  0848                     	;# 
  1436  0849                     	;# 
  1437  084A                     	;# 
  1438  084B                     	;# 
  1439  084C                     	;# 
  1440  084D                     	;# 
  1441  084E                     	;# 
  1442  084F                     	;# 
  1443  0851                     	;# 
  1444  0852                     	;# 
  1445  0853                     	;# 
  1446  0854                     	;# 
  1447  0855                     	;# 
  1448  0856                     	;# 
  1449  0857                     	;# 
  1450  0858                     	;# 
  1451  0859                     	;# 
  1452  085A                     	;# 
  1453  085B                     	;# 
  1454  085C                     	;# 
  1455  085D                     	;# 
  1456  085E                     	;# 
  1457  085F                     	;# 
  1458  0860                     	;# 
  1459  0861                     	;# 
  1460  0861                     	;# 
  1461  0862                     	;# 
  1462  0863                     	;# 
  1463  0863                     	;# 
  1464  0864                     	;# 
  1465  0865                     	;# 
  1466  0865                     	;# 
  1467  0866                     	;# 
  1468  0867                     	;# 
  1469  0867                     	;# 
  1470  0868                     	;# 
  1471  0869                     	;# 
  1472  086A                     	;# 
  1473  086B                     	;# 
  1474  086C                     	;# 
  1475  086D                     	;# 
  1476  086E                     	;# 
  1477  086F                     	;# 
  1478  0FE4                     	;# 
  1479  0FE5                     	;# 
  1480  0FE6                     	;# 
  1481  0FE7                     	;# 
  1482  0FE8                     	;# 
  1483  0FE9                     	;# 
  1484  0FEA                     	;# 
  1485  0FEB                     	;# 
  1486  0FED                     	;# 
  1487  0FEE                     	;# 
  1488  0FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  0010                     	;# 
  1505  0011                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0015                     	;# 
  1510  0016                     	;# 
  1511  0016                     	;# 
  1512  0017                     	;# 
  1513  0018                     	;# 
  1514  0019                     	;# 
  1515  001A                     	;# 
  1516  001B                     	;# 
  1517  001C                     	;# 
  1518  008C                     	;# 
  1519  008D                     	;# 
  1520  008E                     	;# 
  1521  0090                     	;# 
  1522  0091                     	;# 
  1523  0092                     	;# 
  1524  0093                     	;# 
  1525  0094                     	;# 
  1526  0095                     	;# 
  1527  0096                     	;# 
  1528  0097                     	;# 
  1529  0098                     	;# 
  1530  0099                     	;# 
  1531  009A                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010D                     	;# 
  1540  010E                     	;# 
  1541  0111                     	;# 
  1542  0112                     	;# 
  1543  0113                     	;# 
  1544  0114                     	;# 
  1545  0115                     	;# 
  1546  0116                     	;# 
  1547  0117                     	;# 
  1548  0118                     	;# 
  1549  0119                     	;# 
  1550  011A                     	;# 
  1551  011B                     	;# 
  1552  011C                     	;# 
  1553  011D                     	;# 
  1554  011D                     	;# 
  1555  011D                     	;# 
  1556  011E                     	;# 
  1557  011F                     	;# 
  1558  018C                     	;# 
  1559  018D                     	;# 
  1560  0191                     	;# 
  1561  0191                     	;# 
  1562  0192                     	;# 
  1563  0193                     	;# 
  1564  0193                     	;# 
  1565  0193                     	;# 
  1566  0194                     	;# 
  1567  0195                     	;# 
  1568  0196                     	;# 
  1569  0197                     	;# 
  1570  0199                     	;# 
  1571  0199                     	;# 
  1572  0199                     	;# 
  1573  019A                     	;# 
  1574  019A                     	;# 
  1575  019A                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019C                     	;# 
  1582  019C                     	;# 
  1583  019C                     	;# 
  1584  019D                     	;# 
  1585  019D                     	;# 
  1586  019D                     	;# 
  1587  019E                     	;# 
  1588  019E                     	;# 
  1589  019E                     	;# 
  1590  019F                     	;# 
  1591  019F                     	;# 
  1592  019F                     	;# 
  1593  019F                     	;# 
  1594  019F                     	;# 
  1595  020C                     	;# 
  1596  020D                     	;# 
  1597  020E                     	;# 
  1598  0210                     	;# 
  1599  0211                     	;# 
  1600  0211                     	;# 
  1601  0212                     	;# 
  1602  0212                     	;# 
  1603  0213                     	;# 
  1604  0213                     	;# 
  1605  0214                     	;# 
  1606  0214                     	;# 
  1607  0215                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0216                     	;# 
  1612  0216                     	;# 
  1613  0217                     	;# 
  1614  0217                     	;# 
  1615  028C                     	;# 
  1616  028D                     	;# 
  1617  028E                     	;# 
  1618  0291                     	;# 
  1619  0291                     	;# 
  1620  0292                     	;# 
  1621  0293                     	;# 
  1622  0298                     	;# 
  1623  0298                     	;# 
  1624  0299                     	;# 
  1625  029A                     	;# 
  1626  030C                     	;# 
  1627  030D                     	;# 
  1628  030E                     	;# 
  1629  0311                     	;# 
  1630  0311                     	;# 
  1631  0312                     	;# 
  1632  0313                     	;# 
  1633  038C                     	;# 
  1634  038D                     	;# 
  1635  038E                     	;# 
  1636  0390                     	;# 
  1637  0391                     	;# 
  1638  0392                     	;# 
  1639  0393                     	;# 
  1640  0394                     	;# 
  1641  0395                     	;# 
  1642  0396                     	;# 
  1643  0397                     	;# 
  1644  0398                     	;# 
  1645  0399                     	;# 
  1646  039D                     	;# 
  1647  039E                     	;# 
  1648  039F                     	;# 
  1649  0511                     	;# 
  1650  0513                     	;# 
  1651  051A                     	;# 
  1652  0811                     	;# 
  1653  0812                     	;# 
  1654  0813                     	;# 
  1655  0814                     	;# 
  1656  0815                     	;# 
  1657  0816                     	;# 
  1658  0817                     	;# 
  1659  0818                     	;# 
  1660  0819                     	;# 
  1661  081A                     	;# 
  1662  081B                     	;# 
  1663  081C                     	;# 
  1664  081D                     	;# 
  1665  081E                     	;# 
  1666  081F                     	;# 
  1667  0820                     	;# 
  1668  0821                     	;# 
  1669  0821                     	;# 
  1670  0822                     	;# 
  1671  0823                     	;# 
  1672  0823                     	;# 
  1673  0824                     	;# 
  1674  0825                     	;# 
  1675  0825                     	;# 
  1676  0826                     	;# 
  1677  0827                     	;# 
  1678  0827                     	;# 
  1679  0828                     	;# 
  1680  0829                     	;# 
  1681  082A                     	;# 
  1682  082B                     	;# 
  1683  082C                     	;# 
  1684  082D                     	;# 
  1685  082E                     	;# 
  1686  082F                     	;# 
  1687  0831                     	;# 
  1688  0832                     	;# 
  1689  0833                     	;# 
  1690  0834                     	;# 
  1691  0835                     	;# 
  1692  0836                     	;# 
  1693  0837                     	;# 
  1694  0838                     	;# 
  1695  0839                     	;# 
  1696  083A                     	;# 
  1697  083B                     	;# 
  1698  083C                     	;# 
  1699  083D                     	;# 
  1700  083E                     	;# 
  1701  083F                     	;# 
  1702  0840                     	;# 
  1703  0841                     	;# 
  1704  0841                     	;# 
  1705  0842                     	;# 
  1706  0843                     	;# 
  1707  0843                     	;# 
  1708  0844                     	;# 
  1709  0845                     	;# 
  1710  0845                     	;# 
  1711  0846                     	;# 
  1712  0847                     	;# 
  1713  0847                     	;# 
  1714  0848                     	;# 
  1715  0849                     	;# 
  1716  084A                     	;# 
  1717  084B                     	;# 
  1718  084C                     	;# 
  1719  084D                     	;# 
  1720  084E                     	;# 
  1721  084F                     	;# 
  1722  0851                     	;# 
  1723  0852                     	;# 
  1724  0853                     	;# 
  1725  0854                     	;# 
  1726  0855                     	;# 
  1727  0856                     	;# 
  1728  0857                     	;# 
  1729  0858                     	;# 
  1730  0859                     	;# 
  1731  085A                     	;# 
  1732  085B                     	;# 
  1733  085C                     	;# 
  1734  085D                     	;# 
  1735  085E                     	;# 
  1736  085F                     	;# 
  1737  0860                     	;# 
  1738  0861                     	;# 
  1739  0861                     	;# 
  1740  0862                     	;# 
  1741  0863                     	;# 
  1742  0863                     	;# 
  1743  0864                     	;# 
  1744  0865                     	;# 
  1745  0865                     	;# 
  1746  0866                     	;# 
  1747  0867                     	;# 
  1748  0867                     	;# 
  1749  0868                     	;# 
  1750  0869                     	;# 
  1751  086A                     	;# 
  1752  086B                     	;# 
  1753  086C                     	;# 
  1754  086D                     	;# 
  1755  086E                     	;# 
  1756  086F                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0014                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  008C                     	;# 
  1798  008D                     	;# 
  1799  008E                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0092                     	;# 
  1803  0093                     	;# 
  1804  0094                     	;# 
  1805  0095                     	;# 
  1806  0096                     	;# 
  1807  0097                     	;# 
  1808  0098                     	;# 
  1809  0099                     	;# 
  1810  009A                     	;# 
  1811  009B                     	;# 
  1812  009B                     	;# 
  1813  009C                     	;# 
  1814  009D                     	;# 
  1815  009E                     	;# 
  1816  009F                     	;# 
  1817  010C                     	;# 
  1818  010D                     	;# 
  1819  010E                     	;# 
  1820  0111                     	;# 
  1821  0112                     	;# 
  1822  0113                     	;# 
  1823  0114                     	;# 
  1824  0115                     	;# 
  1825  0116                     	;# 
  1826  0117                     	;# 
  1827  0118                     	;# 
  1828  0119                     	;# 
  1829  011A                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011D                     	;# 
  1833  011D                     	;# 
  1834  011D                     	;# 
  1835  011E                     	;# 
  1836  011F                     	;# 
  1837  018C                     	;# 
  1838  018D                     	;# 
  1839  0191                     	;# 
  1840  0191                     	;# 
  1841  0192                     	;# 
  1842  0193                     	;# 
  1843  0193                     	;# 
  1844  0193                     	;# 
  1845  0194                     	;# 
  1846  0195                     	;# 
  1847  0196                     	;# 
  1848  0197                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  0199                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019A                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019C                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019E                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  019F                     	;# 
  1874  020C                     	;# 
  1875  020D                     	;# 
  1876  020E                     	;# 
  1877  0210                     	;# 
  1878  0211                     	;# 
  1879  0211                     	;# 
  1880  0212                     	;# 
  1881  0212                     	;# 
  1882  0213                     	;# 
  1883  0213                     	;# 
  1884  0214                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0216                     	;# 
  1891  0216                     	;# 
  1892  0217                     	;# 
  1893  0217                     	;# 
  1894  028C                     	;# 
  1895  028D                     	;# 
  1896  028E                     	;# 
  1897  0291                     	;# 
  1898  0291                     	;# 
  1899  0292                     	;# 
  1900  0293                     	;# 
  1901  0298                     	;# 
  1902  0298                     	;# 
  1903  0299                     	;# 
  1904  029A                     	;# 
  1905  030C                     	;# 
  1906  030D                     	;# 
  1907  030E                     	;# 
  1908  0311                     	;# 
  1909  0311                     	;# 
  1910  0312                     	;# 
  1911  0313                     	;# 
  1912  038C                     	;# 
  1913  038D                     	;# 
  1914  038E                     	;# 
  1915  0390                     	;# 
  1916  0391                     	;# 
  1917  0392                     	;# 
  1918  0393                     	;# 
  1919  0394                     	;# 
  1920  0395                     	;# 
  1921  0396                     	;# 
  1922  0397                     	;# 
  1923  0398                     	;# 
  1924  0399                     	;# 
  1925  039D                     	;# 
  1926  039E                     	;# 
  1927  039F                     	;# 
  1928  0511                     	;# 
  1929  0513                     	;# 
  1930  051A                     	;# 
  1931  0811                     	;# 
  1932  0812                     	;# 
  1933  0813                     	;# 
  1934  0814                     	;# 
  1935  0815                     	;# 
  1936  0816                     	;# 
  1937  0817                     	;# 
  1938  0818                     	;# 
  1939  0819                     	;# 
  1940  081A                     	;# 
  1941  081B                     	;# 
  1942  081C                     	;# 
  1943  081D                     	;# 
  1944  081E                     	;# 
  1945  081F                     	;# 
  1946  0820                     	;# 
  1947  0821                     	;# 
  1948  0821                     	;# 
  1949  0822                     	;# 
  1950  0823                     	;# 
  1951  0823                     	;# 
  1952  0824                     	;# 
  1953  0825                     	;# 
  1954  0825                     	;# 
  1955  0826                     	;# 
  1956  0827                     	;# 
  1957  0827                     	;# 
  1958  0828                     	;# 
  1959  0829                     	;# 
  1960  082A                     	;# 
  1961  082B                     	;# 
  1962  082C                     	;# 
  1963  082D                     	;# 
  1964  082E                     	;# 
  1965  082F                     	;# 
  1966  0831                     	;# 
  1967  0832                     	;# 
  1968  0833                     	;# 
  1969  0834                     	;# 
  1970  0835                     	;# 
  1971  0836                     	;# 
  1972  0837                     	;# 
  1973  0838                     	;# 
  1974  0839                     	;# 
  1975  083A                     	;# 
  1976  083B                     	;# 
  1977  083C                     	;# 
  1978  083D                     	;# 
  1979  083E                     	;# 
  1980  083F                     	;# 
  1981  0840                     	;# 
  1982  0841                     	;# 
  1983  0841                     	;# 
  1984  0842                     	;# 
  1985  0843                     	;# 
  1986  0843                     	;# 
  1987  0844                     	;# 
  1988  0845                     	;# 
  1989  0845                     	;# 
  1990  0846                     	;# 
  1991  0847                     	;# 
  1992  0847                     	;# 
  1993  0848                     	;# 
  1994  0849                     	;# 
  1995  084A                     	;# 
  1996  084B                     	;# 
  1997  084C                     	;# 
  1998  084D                     	;# 
  1999  084E                     	;# 
  2000  084F                     	;# 
  2001  0851                     	;# 
  2002  0852                     	;# 
  2003  0853                     	;# 
  2004  0854                     	;# 
  2005  0855                     	;# 
  2006  0856                     	;# 
  2007  0857                     	;# 
  2008  0858                     	;# 
  2009  0859                     	;# 
  2010  085A                     	;# 
  2011  085B                     	;# 
  2012  085C                     	;# 
  2013  085D                     	;# 
  2014  085E                     	;# 
  2015  085F                     	;# 
  2016  0860                     	;# 
  2017  0861                     	;# 
  2018  0861                     	;# 
  2019  0862                     	;# 
  2020  0863                     	;# 
  2021  0863                     	;# 
  2022  0864                     	;# 
  2023  0865                     	;# 
  2024  0865                     	;# 
  2025  0866                     	;# 
  2026  0867                     	;# 
  2027  0867                     	;# 
  2028  0868                     	;# 
  2029  0869                     	;# 
  2030  086A                     	;# 
  2031  086B                     	;# 
  2032  086C                     	;# 
  2033  086D                     	;# 
  2034  086E                     	;# 
  2035  086F                     	;# 
  2036  0FE4                     	;# 
  2037  0FE5                     	;# 
  2038  0FE6                     	;# 
  2039  0FE7                     	;# 
  2040  0FE8                     	;# 
  2041  0FE9                     	;# 
  2042  0FEA                     	;# 
  2043  0FEB                     	;# 
  2044  0FED                     	;# 
  2045  0FEE                     	;# 
  2046  0FEF                     	;# 
  2047  0000                     	;# 
  2048  0001                     	;# 
  2049  0002                     	;# 
  2050  0003                     	;# 
  2051  0004                     	;# 
  2052  0005                     	;# 
  2053  0006                     	;# 
  2054  0007                     	;# 
  2055  0008                     	;# 
  2056  0009                     	;# 
  2057  000A                     	;# 
  2058  000B                     	;# 
  2059  000C                     	;# 
  2060  000D                     	;# 
  2061  000E                     	;# 
  2062  0010                     	;# 
  2063  0011                     	;# 
  2064  0012                     	;# 
  2065  0013                     	;# 
  2066  0014                     	;# 
  2067  0015                     	;# 
  2068  0016                     	;# 
  2069  0016                     	;# 
  2070  0017                     	;# 
  2071  0018                     	;# 
  2072  0019                     	;# 
  2073  001A                     	;# 
  2074  001B                     	;# 
  2075  001C                     	;# 
  2076  008C                     	;# 
  2077  008D                     	;# 
  2078  008E                     	;# 
  2079  0090                     	;# 
  2080  0091                     	;# 
  2081  0092                     	;# 
  2082  0093                     	;# 
  2083  0094                     	;# 
  2084  0095                     	;# 
  2085  0096                     	;# 
  2086  0097                     	;# 
  2087  0098                     	;# 
  2088  0099                     	;# 
  2089  009A                     	;# 
  2090  009B                     	;# 
  2091  009B                     	;# 
  2092  009C                     	;# 
  2093  009D                     	;# 
  2094  009E                     	;# 
  2095  009F                     	;# 
  2096  010C                     	;# 
  2097  010D                     	;# 
  2098  010E                     	;# 
  2099  0111                     	;# 
  2100  0112                     	;# 
  2101  0113                     	;# 
  2102  0114                     	;# 
  2103  0115                     	;# 
  2104  0116                     	;# 
  2105  0117                     	;# 
  2106  0118                     	;# 
  2107  0119                     	;# 
  2108  011A                     	;# 
  2109  011B                     	;# 
  2110  011C                     	;# 
  2111  011D                     	;# 
  2112  011D                     	;# 
  2113  011D                     	;# 
  2114  011E                     	;# 
  2115  011F                     	;# 
  2116  018C                     	;# 
  2117  018D                     	;# 
  2118  0191                     	;# 
  2119  0191                     	;# 
  2120  0192                     	;# 
  2121  0193                     	;# 
  2122  0193                     	;# 
  2123  0193                     	;# 
  2124  0194                     	;# 
  2125  0195                     	;# 
  2126  0196                     	;# 
  2127  0197                     	;# 
  2128  0199                     	;# 
  2129  0199                     	;# 
  2130  0199                     	;# 
  2131  019A                     	;# 
  2132  019A                     	;# 
  2133  019A                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019C                     	;# 
  2140  019C                     	;# 
  2141  019C                     	;# 
  2142  019D                     	;# 
  2143  019D                     	;# 
  2144  019D                     	;# 
  2145  019E                     	;# 
  2146  019E                     	;# 
  2147  019E                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  020C                     	;# 
  2154  020D                     	;# 
  2155  020E                     	;# 
  2156  0210                     	;# 
  2157  0211                     	;# 
  2158  0211                     	;# 
  2159  0212                     	;# 
  2160  0212                     	;# 
  2161  0213                     	;# 
  2162  0213                     	;# 
  2163  0214                     	;# 
  2164  0214                     	;# 
  2165  0215                     	;# 
  2166  0215                     	;# 
  2167  0215                     	;# 
  2168  0215                     	;# 
  2169  0216                     	;# 
  2170  0216                     	;# 
  2171  0217                     	;# 
  2172  0217                     	;# 
  2173  028C                     	;# 
  2174  028D                     	;# 
  2175  028E                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0298                     	;# 
  2181  0298                     	;# 
  2182  0299                     	;# 
  2183  029A                     	;# 
  2184  030C                     	;# 
  2185  030D                     	;# 
  2186  030E                     	;# 
  2187  0311                     	;# 
  2188  0311                     	;# 
  2189  0312                     	;# 
  2190  0313                     	;# 
  2191  038C                     	;# 
  2192  038D                     	;# 
  2193  038E                     	;# 
  2194  0390                     	;# 
  2195  0391                     	;# 
  2196  0392                     	;# 
  2197  0393                     	;# 
  2198  0394                     	;# 
  2199  0395                     	;# 
  2200  0396                     	;# 
  2201  0397                     	;# 
  2202  0398                     	;# 
  2203  0399                     	;# 
  2204  039D                     	;# 
  2205  039E                     	;# 
  2206  039F                     	;# 
  2207  0511                     	;# 
  2208  0513                     	;# 
  2209  051A                     	;# 
  2210  0811                     	;# 
  2211  0812                     	;# 
  2212  0813                     	;# 
  2213  0814                     	;# 
  2214  0815                     	;# 
  2215  0816                     	;# 
  2216  0817                     	;# 
  2217  0818                     	;# 
  2218  0819                     	;# 
  2219  081A                     	;# 
  2220  081B                     	;# 
  2221  081C                     	;# 
  2222  081D                     	;# 
  2223  081E                     	;# 
  2224  081F                     	;# 
  2225  0820                     	;# 
  2226  0821                     	;# 
  2227  0821                     	;# 
  2228  0822                     	;# 
  2229  0823                     	;# 
  2230  0823                     	;# 
  2231  0824                     	;# 
  2232  0825                     	;# 
  2233  0825                     	;# 
  2234  0826                     	;# 
  2235  0827                     	;# 
  2236  0827                     	;# 
  2237  0828                     	;# 
  2238  0829                     	;# 
  2239  082A                     	;# 
  2240  082B                     	;# 
  2241  082C                     	;# 
  2242  082D                     	;# 
  2243  082E                     	;# 
  2244  082F                     	;# 
  2245  0831                     	;# 
  2246  0832                     	;# 
  2247  0833                     	;# 
  2248  0834                     	;# 
  2249  0835                     	;# 
  2250  0836                     	;# 
  2251  0837                     	;# 
  2252  0838                     	;# 
  2253  0839                     	;# 
  2254  083A                     	;# 
  2255  083B                     	;# 
  2256  083C                     	;# 
  2257  083D                     	;# 
  2258  083E                     	;# 
  2259  083F                     	;# 
  2260  0840                     	;# 
  2261  0841                     	;# 
  2262  0841                     	;# 
  2263  0842                     	;# 
  2264  0843                     	;# 
  2265  0843                     	;# 
  2266  0844                     	;# 
  2267  0845                     	;# 
  2268  0845                     	;# 
  2269  0846                     	;# 
  2270  0847                     	;# 
  2271  0847                     	;# 
  2272  0848                     	;# 
  2273  0849                     	;# 
  2274  084A                     	;# 
  2275  084B                     	;# 
  2276  084C                     	;# 
  2277  084D                     	;# 
  2278  084E                     	;# 
  2279  084F                     	;# 
  2280  0851                     	;# 
  2281  0852                     	;# 
  2282  0853                     	;# 
  2283  0854                     	;# 
  2284  0855                     	;# 
  2285  0856                     	;# 
  2286  0857                     	;# 
  2287  0858                     	;# 
  2288  0859                     	;# 
  2289  085A                     	;# 
  2290  085B                     	;# 
  2291  085C                     	;# 
  2292  085D                     	;# 
  2293  085E                     	;# 
  2294  085F                     	;# 
  2295  0860                     	;# 
  2296  0861                     	;# 
  2297  0861                     	;# 
  2298  0862                     	;# 
  2299  0863                     	;# 
  2300  0863                     	;# 
  2301  0864                     	;# 
  2302  0865                     	;# 
  2303  0865                     	;# 
  2304  0866                     	;# 
  2305  0867                     	;# 
  2306  0867                     	;# 
  2307  0868                     	;# 
  2308  0869                     	;# 
  2309  086A                     	;# 
  2310  086B                     	;# 
  2311  086C                     	;# 
  2312  086D                     	;# 
  2313  086E                     	;# 
  2314  086F                     	;# 
  2315  0FE4                     	;# 
  2316  0FE5                     	;# 
  2317  0FE6                     	;# 
  2318  0FE7                     	;# 
  2319  0FE8                     	;# 
  2320  0FE9                     	;# 
  2321  0FEA                     	;# 
  2322  0FEB                     	;# 
  2323  0FED                     	;# 
  2324  0FEE                     	;# 
  2325  0FEF                     	;# 
  2326  0000                     	;# 
  2327  0001                     	;# 
  2328  0002                     	;# 
  2329  0003                     	;# 
  2330  0004                     	;# 
  2331  0005                     	;# 
  2332  0006                     	;# 
  2333  0007                     	;# 
  2334  0008                     	;# 
  2335  0009                     	;# 
  2336  000A                     	;# 
  2337  000B                     	;# 
  2338  000C                     	;# 
  2339  000D                     	;# 
  2340  000E                     	;# 
  2341  0010                     	;# 
  2342  0011                     	;# 
  2343  0012                     	;# 
  2344  0013                     	;# 
  2345  0014                     	;# 
  2346  0015                     	;# 
  2347  0016                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0019                     	;# 
  2352  001A                     	;# 
  2353  001B                     	;# 
  2354  001C                     	;# 
  2355  008C                     	;# 
  2356  008D                     	;# 
  2357  008E                     	;# 
  2358  0090                     	;# 
  2359  0091                     	;# 
  2360  0092                     	;# 
  2361  0093                     	;# 
  2362  0094                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0097                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009B                     	;# 
  2371  009C                     	;# 
  2372  009D                     	;# 
  2373  009E                     	;# 
  2374  009F                     	;# 
  2375  010C                     	;# 
  2376  010D                     	;# 
  2377  010E                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0115                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0118                     	;# 
  2386  0119                     	;# 
  2387  011A                     	;# 
  2388  011B                     	;# 
  2389  011C                     	;# 
  2390  011D                     	;# 
  2391  011D                     	;# 
  2392  011D                     	;# 
  2393  011E                     	;# 
  2394  011F                     	;# 
  2395  018C                     	;# 
  2396  018D                     	;# 
  2397  0191                     	;# 
  2398  0191                     	;# 
  2399  0192                     	;# 
  2400  0193                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0194                     	;# 
  2404  0195                     	;# 
  2405  0196                     	;# 
  2406  0197                     	;# 
  2407  0199                     	;# 
  2408  0199                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019A                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019C                     	;# 
  2419  019C                     	;# 
  2420  019C                     	;# 
  2421  019D                     	;# 
  2422  019D                     	;# 
  2423  019D                     	;# 
  2424  019E                     	;# 
  2425  019E                     	;# 
  2426  019E                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  020C                     	;# 
  2433  020D                     	;# 
  2434  020E                     	;# 
  2435  0210                     	;# 
  2436  0211                     	;# 
  2437  0211                     	;# 
  2438  0212                     	;# 
  2439  0212                     	;# 
  2440  0213                     	;# 
  2441  0213                     	;# 
  2442  0214                     	;# 
  2443  0214                     	;# 
  2444  0215                     	;# 
  2445  0215                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0216                     	;# 
  2449  0216                     	;# 
  2450  0217                     	;# 
  2451  0217                     	;# 
  2452  028C                     	;# 
  2453  028D                     	;# 
  2454  028E                     	;# 
  2455  0291                     	;# 
  2456  0291                     	;# 
  2457  0292                     	;# 
  2458  0293                     	;# 
  2459  0298                     	;# 
  2460  0298                     	;# 
  2461  0299                     	;# 
  2462  029A                     	;# 
  2463  030C                     	;# 
  2464  030D                     	;# 
  2465  030E                     	;# 
  2466  0311                     	;# 
  2467  0311                     	;# 
  2468  0312                     	;# 
  2469  0313                     	;# 
  2470  038C                     	;# 
  2471  038D                     	;# 
  2472  038E                     	;# 
  2473  0390                     	;# 
  2474  0391                     	;# 
  2475  0392                     	;# 
  2476  0393                     	;# 
  2477  0394                     	;# 
  2478  0395                     	;# 
  2479  0396                     	;# 
  2480  0397                     	;# 
  2481  0398                     	;# 
  2482  0399                     	;# 
  2483  039D                     	;# 
  2484  039E                     	;# 
  2485  039F                     	;# 
  2486  0511                     	;# 
  2487  0513                     	;# 
  2488  051A                     	;# 
  2489  0811                     	;# 
  2490  0812                     	;# 
  2491  0813                     	;# 
  2492  0814                     	;# 
  2493  0815                     	;# 
  2494  0816                     	;# 
  2495  0817                     	;# 
  2496  0818                     	;# 
  2497  0819                     	;# 
  2498  081A                     	;# 
  2499  081B                     	;# 
  2500  081C                     	;# 
  2501  081D                     	;# 
  2502  081E                     	;# 
  2503  081F                     	;# 
  2504  0820                     	;# 
  2505  0821                     	;# 
  2506  0821                     	;# 
  2507  0822                     	;# 
  2508  0823                     	;# 
  2509  0823                     	;# 
  2510  0824                     	;# 
  2511  0825                     	;# 
  2512  0825                     	;# 
  2513  0826                     	;# 
  2514  0827                     	;# 
  2515  0827                     	;# 
  2516  0828                     	;# 
  2517  0829                     	;# 
  2518  082A                     	;# 
  2519  082B                     	;# 
  2520  082C                     	;# 
  2521  082D                     	;# 
  2522  082E                     	;# 
  2523  082F                     	;# 
  2524  0831                     	;# 
  2525  0832                     	;# 
  2526  0833                     	;# 
  2527  0834                     	;# 
  2528  0835                     	;# 
  2529  0836                     	;# 
  2530  0837                     	;# 
  2531  0838                     	;# 
  2532  0839                     	;# 
  2533  083A                     	;# 
  2534  083B                     	;# 
  2535  083C                     	;# 
  2536  083D                     	;# 
  2537  083E                     	;# 
  2538  083F                     	;# 
  2539  0840                     	;# 
  2540  0841                     	;# 
  2541  0841                     	;# 
  2542  0842                     	;# 
  2543  0843                     	;# 
  2544  0843                     	;# 
  2545  0844                     	;# 
  2546  0845                     	;# 
  2547  0845                     	;# 
  2548  0846                     	;# 
  2549  0847                     	;# 
  2550  0847                     	;# 
  2551  0848                     	;# 
  2552  0849                     	;# 
  2553  084A                     	;# 
  2554  084B                     	;# 
  2555  084C                     	;# 
  2556  084D                     	;# 
  2557  084E                     	;# 
  2558  084F                     	;# 
  2559  0851                     	;# 
  2560  0852                     	;# 
  2561  0853                     	;# 
  2562  0854                     	;# 
  2563  0855                     	;# 
  2564  0856                     	;# 
  2565  0857                     	;# 
  2566  0858                     	;# 
  2567  0859                     	;# 
  2568  085A                     	;# 
  2569  085B                     	;# 
  2570  085C                     	;# 
  2571  085D                     	;# 
  2572  085E                     	;# 
  2573  085F                     	;# 
  2574  0860                     	;# 
  2575  0861                     	;# 
  2576  0861                     	;# 
  2577  0862                     	;# 
  2578  0863                     	;# 
  2579  0863                     	;# 
  2580  0864                     	;# 
  2581  0865                     	;# 
  2582  0865                     	;# 
  2583  0866                     	;# 
  2584  0867                     	;# 
  2585  0867                     	;# 
  2586  0868                     	;# 
  2587  0869                     	;# 
  2588  086A                     	;# 
  2589  086B                     	;# 
  2590  086C                     	;# 
  2591  086D                     	;# 
  2592  086E                     	;# 
  2593  086F                     	;# 
  2594  0FE4                     	;# 
  2595  0FE5                     	;# 
  2596  0FE6                     	;# 
  2597  0FE7                     	;# 
  2598  0FE8                     	;# 
  2599  0FE9                     	;# 
  2600  0FEA                     	;# 
  2601  0FEB                     	;# 
  2602  0FED                     	;# 
  2603  0FEE                     	;# 
  2604  0FEF                     	;# 
  2605  0000                     	;# 
  2606  0001                     	;# 
  2607  0002                     	;# 
  2608  0003                     	;# 
  2609  0004                     	;# 
  2610  0005                     	;# 
  2611  0006                     	;# 
  2612  0007                     	;# 
  2613  0008                     	;# 
  2614  0009                     	;# 
  2615  000A                     	;# 
  2616  000B                     	;# 
  2617  000C                     	;# 
  2618  000D                     	;# 
  2619  000E                     	;# 
  2620  0010                     	;# 
  2621  0011                     	;# 
  2622  0012                     	;# 
  2623  0013                     	;# 
  2624  0014                     	;# 
  2625  0015                     	;# 
  2626  0016                     	;# 
  2627  0016                     	;# 
  2628  0017                     	;# 
  2629  0018                     	;# 
  2630  0019                     	;# 
  2631  001A                     	;# 
  2632  001B                     	;# 
  2633  001C                     	;# 
  2634  008C                     	;# 
  2635  008D                     	;# 
  2636  008E                     	;# 
  2637  0090                     	;# 
  2638  0091                     	;# 
  2639  0092                     	;# 
  2640  0093                     	;# 
  2641  0094                     	;# 
  2642  0095                     	;# 
  2643  0096                     	;# 
  2644  0097                     	;# 
  2645  0098                     	;# 
  2646  0099                     	;# 
  2647  009A                     	;# 
  2648  009B                     	;# 
  2649  009B                     	;# 
  2650  009C                     	;# 
  2651  009D                     	;# 
  2652  009E                     	;# 
  2653  009F                     	;# 
  2654  010C                     	;# 
  2655  010D                     	;# 
  2656  010E                     	;# 
  2657  0111                     	;# 
  2658  0112                     	;# 
  2659  0113                     	;# 
  2660  0114                     	;# 
  2661  0115                     	;# 
  2662  0116                     	;# 
  2663  0117                     	;# 
  2664  0118                     	;# 
  2665  0119                     	;# 
  2666  011A                     	;# 
  2667  011B                     	;# 
  2668  011C                     	;# 
  2669  011D                     	;# 
  2670  011D                     	;# 
  2671  011D                     	;# 
  2672  011E                     	;# 
  2673  011F                     	;# 
  2674  018C                     	;# 
  2675  018D                     	;# 
  2676  0191                     	;# 
  2677  0191                     	;# 
  2678  0192                     	;# 
  2679  0193                     	;# 
  2680  0193                     	;# 
  2681  0193                     	;# 
  2682  0194                     	;# 
  2683  0195                     	;# 
  2684  0196                     	;# 
  2685  0197                     	;# 
  2686  0199                     	;# 
  2687  0199                     	;# 
  2688  0199                     	;# 
  2689  019A                     	;# 
  2690  019A                     	;# 
  2691  019A                     	;# 
  2692  019B                     	;# 
  2693  019B                     	;# 
  2694  019B                     	;# 
  2695  019B                     	;# 
  2696  019B                     	;# 
  2697  019C                     	;# 
  2698  019C                     	;# 
  2699  019C                     	;# 
  2700  019D                     	;# 
  2701  019D                     	;# 
  2702  019D                     	;# 
  2703  019E                     	;# 
  2704  019E                     	;# 
  2705  019E                     	;# 
  2706  019F                     	;# 
  2707  019F                     	;# 
  2708  019F                     	;# 
  2709  019F                     	;# 
  2710  019F                     	;# 
  2711  020C                     	;# 
  2712  020D                     	;# 
  2713  020E                     	;# 
  2714  0210                     	;# 
  2715  0211                     	;# 
  2716  0211                     	;# 
  2717  0212                     	;# 
  2718  0212                     	;# 
  2719  0213                     	;# 
  2720  0213                     	;# 
  2721  0214                     	;# 
  2722  0214                     	;# 
  2723  0215                     	;# 
  2724  0215                     	;# 
  2725  0215                     	;# 
  2726  0215                     	;# 
  2727  0216                     	;# 
  2728  0216                     	;# 
  2729  0217                     	;# 
  2730  0217                     	;# 
  2731  028C                     	;# 
  2732  028D                     	;# 
  2733  028E                     	;# 
  2734  0291                     	;# 
  2735  0291                     	;# 
  2736  0292                     	;# 
  2737  0293                     	;# 
  2738  0298                     	;# 
  2739  0298                     	;# 
  2740  0299                     	;# 
  2741  029A                     	;# 
  2742  030C                     	;# 
  2743  030D                     	;# 
  2744  030E                     	;# 
  2745  0311                     	;# 
  2746  0311                     	;# 
  2747  0312                     	;# 
  2748  0313                     	;# 
  2749  038C                     	;# 
  2750  038D                     	;# 
  2751  038E                     	;# 
  2752  0390                     	;# 
  2753  0391                     	;# 
  2754  0392                     	;# 
  2755  0393                     	;# 
  2756  0394                     	;# 
  2757  0395                     	;# 
  2758  0396                     	;# 
  2759  0397                     	;# 
  2760  0398                     	;# 
  2761  0399                     	;# 
  2762  039D                     	;# 
  2763  039E                     	;# 
  2764  039F                     	;# 
  2765  0511                     	;# 
  2766  0513                     	;# 
  2767  051A                     	;# 
  2768  0811                     	;# 
  2769  0812                     	;# 
  2770  0813                     	;# 
  2771  0814                     	;# 
  2772  0815                     	;# 
  2773  0816                     	;# 
  2774  0817                     	;# 
  2775  0818                     	;# 
  2776  0819                     	;# 
  2777  081A                     	;# 
  2778  081B                     	;# 
  2779  081C                     	;# 
  2780  081D                     	;# 
  2781  081E                     	;# 
  2782  081F                     	;# 
  2783  0820                     	;# 
  2784  0821                     	;# 
  2785  0821                     	;# 
  2786  0822                     	;# 
  2787  0823                     	;# 
  2788  0823                     	;# 
  2789  0824                     	;# 
  2790  0825                     	;# 
  2791  0825                     	;# 
  2792  0826                     	;# 
  2793  0827                     	;# 
  2794  0827                     	;# 
  2795  0828                     	;# 
  2796  0829                     	;# 
  2797  082A                     	;# 
  2798  082B                     	;# 
  2799  082C                     	;# 
  2800  082D                     	;# 
  2801  082E                     	;# 
  2802  082F                     	;# 
  2803  0831                     	;# 
  2804  0832                     	;# 
  2805  0833                     	;# 
  2806  0834                     	;# 
  2807  0835                     	;# 
  2808  0836                     	;# 
  2809  0837                     	;# 
  2810  0838                     	;# 
  2811  0839                     	;# 
  2812  083A                     	;# 
  2813  083B                     	;# 
  2814  083C                     	;# 
  2815  083D                     	;# 
  2816  083E                     	;# 
  2817  083F                     	;# 
  2818  0840                     	;# 
  2819  0841                     	;# 
  2820  0841                     	;# 
  2821  0842                     	;# 
  2822  0843                     	;# 
  2823  0843                     	;# 
  2824  0844                     	;# 
  2825  0845                     	;# 
  2826  0845                     	;# 
  2827  0846                     	;# 
  2828  0847                     	;# 
  2829  0847                     	;# 
  2830  0848                     	;# 
  2831  0849                     	;# 
  2832  084A                     	;# 
  2833  084B                     	;# 
  2834  084C                     	;# 
  2835  084D                     	;# 
  2836  084E                     	;# 
  2837  084F                     	;# 
  2838  0851                     	;# 
  2839  0852                     	;# 
  2840  0853                     	;# 
  2841  0854                     	;# 
  2842  0855                     	;# 
  2843  0856                     	;# 
  2844  0857                     	;# 
  2845  0858                     	;# 
  2846  0859                     	;# 
  2847  085A                     	;# 
  2848  085B                     	;# 
  2849  085C                     	;# 
  2850  085D                     	;# 
  2851  085E                     	;# 
  2852  085F                     	;# 
  2853  0860                     	;# 
  2854  0861                     	;# 
  2855  0861                     	;# 
  2856  0862                     	;# 
  2857  0863                     	;# 
  2858  0863                     	;# 
  2859  0864                     	;# 
  2860  0865                     	;# 
  2861  0865                     	;# 
  2862  0866                     	;# 
  2863  0867                     	;# 
  2864  0867                     	;# 
  2865  0868                     	;# 
  2866  0869                     	;# 
  2867  086A                     	;# 
  2868  086B                     	;# 
  2869  086C                     	;# 
  2870  086D                     	;# 
  2871  086E                     	;# 
  2872  086F                     	;# 
  2873  0FE4                     	;# 
  2874  0FE5                     	;# 
  2875  0FE6                     	;# 
  2876  0FE7                     	;# 
  2877  0FE8                     	;# 
  2878  0FE9                     	;# 
  2879  0FEA                     	;# 
  2880  0FEB                     	;# 
  2881  0FED                     	;# 
  2882  0FEE                     	;# 
  2883  0FEF                     	;# 
  2884  0000                     	;# 
  2885  0001                     	;# 
  2886  0002                     	;# 
  2887  0003                     	;# 
  2888  0004                     	;# 
  2889  0005                     	;# 
  2890  0006                     	;# 
  2891  0007                     	;# 
  2892  0008                     	;# 
  2893  0009                     	;# 
  2894  000A                     	;# 
  2895  000B                     	;# 
  2896  000C                     	;# 
  2897  000D                     	;# 
  2898  000E                     	;# 
  2899  0010                     	;# 
  2900  0011                     	;# 
  2901  0012                     	;# 
  2902  0013                     	;# 
  2903  0014                     	;# 
  2904  0015                     	;# 
  2905  0016                     	;# 
  2906  0016                     	;# 
  2907  0017                     	;# 
  2908  0018                     	;# 
  2909  0019                     	;# 
  2910  001A                     	;# 
  2911  001B                     	;# 
  2912  001C                     	;# 
  2913  008C                     	;# 
  2914  008D                     	;# 
  2915  008E                     	;# 
  2916  0090                     	;# 
  2917  0091                     	;# 
  2918  0092                     	;# 
  2919  0093                     	;# 
  2920  0094                     	;# 
  2921  0095                     	;# 
  2922  0096                     	;# 
  2923  0097                     	;# 
  2924  0098                     	;# 
  2925  0099                     	;# 
  2926  009A                     	;# 
  2927  009B                     	;# 
  2928  009B                     	;# 
  2929  009C                     	;# 
  2930  009D                     	;# 
  2931  009E                     	;# 
  2932  009F                     	;# 
  2933  010C                     	;# 
  2934  010D                     	;# 
  2935  010E                     	;# 
  2936  0111                     	;# 
  2937  0112                     	;# 
  2938  0113                     	;# 
  2939  0114                     	;# 
  2940  0115                     	;# 
  2941  0116                     	;# 
  2942  0117                     	;# 
  2943  0118                     	;# 
  2944  0119                     	;# 
  2945  011A                     	;# 
  2946  011B                     	;# 
  2947  011C                     	;# 
  2948  011D                     	;# 
  2949  011D                     	;# 
  2950  011D                     	;# 
  2951  011E                     	;# 
  2952  011F                     	;# 
  2953  018C                     	;# 
  2954  018D                     	;# 
  2955  0191                     	;# 
  2956  0191                     	;# 
  2957  0192                     	;# 
  2958  0193                     	;# 
  2959  0193                     	;# 
  2960  0193                     	;# 
  2961  0194                     	;# 
  2962  0195                     	;# 
  2963  0196                     	;# 
  2964  0197                     	;# 
  2965  0199                     	;# 
  2966  0199                     	;# 
  2967  0199                     	;# 
  2968  019A                     	;# 
  2969  019A                     	;# 
  2970  019A                     	;# 
  2971  019B                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019B                     	;# 
  2975  019B                     	;# 
  2976  019C                     	;# 
  2977  019C                     	;# 
  2978  019C                     	;# 
  2979  019D                     	;# 
  2980  019D                     	;# 
  2981  019D                     	;# 
  2982  019E                     	;# 
  2983  019E                     	;# 
  2984  019E                     	;# 
  2985  019F                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  019F                     	;# 
  2989  019F                     	;# 
  2990  020C                     	;# 
  2991  020D                     	;# 
  2992  020E                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0213                     	;# 
  3000  0214                     	;# 
  3001  0214                     	;# 
  3002  0215                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0215                     	;# 
  3006  0216                     	;# 
  3007  0216                     	;# 
  3008  0217                     	;# 
  3009  0217                     	;# 
  3010  028C                     	;# 
  3011  028D                     	;# 
  3012  028E                     	;# 
  3013  0291                     	;# 
  3014  0291                     	;# 
  3015  0292                     	;# 
  3016  0293                     	;# 
  3017  0298                     	;# 
  3018  0298                     	;# 
  3019  0299                     	;# 
  3020  029A                     	;# 
  3021  030C                     	;# 
  3022  030D                     	;# 
  3023  030E                     	;# 
  3024  0311                     	;# 
  3025  0311                     	;# 
  3026  0312                     	;# 
  3027  0313                     	;# 
  3028  038C                     	;# 
  3029  038D                     	;# 
  3030  038E                     	;# 
  3031  0390                     	;# 
  3032  0391                     	;# 
  3033  0392                     	;# 
  3034  0393                     	;# 
  3035  0394                     	;# 
  3036  0395                     	;# 
  3037  0396                     	;# 
  3038  0397                     	;# 
  3039  0398                     	;# 
  3040  0399                     	;# 
  3041  039D                     	;# 
  3042  039E                     	;# 
  3043  039F                     	;# 
  3044  0511                     	;# 
  3045  0513                     	;# 
  3046  051A                     	;# 
  3047  0811                     	;# 
  3048  0812                     	;# 
  3049  0813                     	;# 
  3050  0814                     	;# 
  3051  0815                     	;# 
  3052  0816                     	;# 
  3053  0817                     	;# 
  3054  0818                     	;# 
  3055  0819                     	;# 
  3056  081A                     	;# 
  3057  081B                     	;# 
  3058  081C                     	;# 
  3059  081D                     	;# 
  3060  081E                     	;# 
  3061  081F                     	;# 
  3062  0820                     	;# 
  3063  0821                     	;# 
  3064  0821                     	;# 
  3065  0822                     	;# 
  3066  0823                     	;# 
  3067  0823                     	;# 
  3068  0824                     	;# 
  3069  0825                     	;# 
  3070  0825                     	;# 
  3071  0826                     	;# 
  3072  0827                     	;# 
  3073  0827                     	;# 
  3074  0828                     	;# 
  3075  0829                     	;# 
  3076  082A                     	;# 
  3077  082B                     	;# 
  3078  082C                     	;# 
  3079  082D                     	;# 
  3080  082E                     	;# 
  3081  082F                     	;# 
  3082  0831                     	;# 
  3083  0832                     	;# 
  3084  0833                     	;# 
  3085  0834                     	;# 
  3086  0835                     	;# 
  3087  0836                     	;# 
  3088  0837                     	;# 
  3089  0838                     	;# 
  3090  0839                     	;# 
  3091  083A                     	;# 
  3092  083B                     	;# 
  3093  083C                     	;# 
  3094  083D                     	;# 
  3095  083E                     	;# 
  3096  083F                     	;# 
  3097  0840                     	;# 
  3098  0841                     	;# 
  3099  0841                     	;# 
  3100  0842                     	;# 
  3101  0843                     	;# 
  3102  0843                     	;# 
  3103  0844                     	;# 
  3104  0845                     	;# 
  3105  0845                     	;# 
  3106  0846                     	;# 
  3107  0847                     	;# 
  3108  0847                     	;# 
  3109  0848                     	;# 
  3110  0849                     	;# 
  3111  084A                     	;# 
  3112  084B                     	;# 
  3113  084C                     	;# 
  3114  084D                     	;# 
  3115  084E                     	;# 
  3116  084F                     	;# 
  3117  0851                     	;# 
  3118  0852                     	;# 
  3119  0853                     	;# 
  3120  0854                     	;# 
  3121  0855                     	;# 
  3122  0856                     	;# 
  3123  0857                     	;# 
  3124  0858                     	;# 
  3125  0859                     	;# 
  3126  085A                     	;# 
  3127  085B                     	;# 
  3128  085C                     	;# 
  3129  085D                     	;# 
  3130  085E                     	;# 
  3131  085F                     	;# 
  3132  0860                     	;# 
  3133  0861                     	;# 
  3134  0861                     	;# 
  3135  0862                     	;# 
  3136  0863                     	;# 
  3137  0863                     	;# 
  3138  0864                     	;# 
  3139  0865                     	;# 
  3140  0865                     	;# 
  3141  0866                     	;# 
  3142  0867                     	;# 
  3143  0867                     	;# 
  3144  0868                     	;# 
  3145  0869                     	;# 
  3146  086A                     	;# 
  3147  086B                     	;# 
  3148  086C                     	;# 
  3149  086D                     	;# 
  3150  086E                     	;# 
  3151  086F                     	;# 
  3152  0FE4                     	;# 
  3153  0FE5                     	;# 
  3154  0FE6                     	;# 
  3155  0FE7                     	;# 
  3156  0FE8                     	;# 
  3157  0FE9                     	;# 
  3158  0FEA                     	;# 
  3159  0FEB                     	;# 
  3160  0FED                     	;# 
  3161  0FEE                     	;# 
  3162  0FEF                     	;# 
  3163                           
  3164                           	psect	stringtext1
  3165  1000                     __pstringtext1:	
  3166  1000                     _segmcode:	
  3167  1000  3408               	retlw	8
  3168  1001  347C               	retlw	124
  3169  1002  3411               	retlw	17
  3170  1003  3430               	retlw	48
  3171  1004  3464               	retlw	100
  3172  1005  3422               	retlw	34
  3173  1006  3402               	retlw	2
  3174  1007  3478               	retlw	120
  3175  1008  3400               	retlw	0
  3176  1009  3420               	retlw	32
  3177  100A  34FF               	retlw	255
  3178  100B                     __end_of_segmcode:	
  3179  000C                     _PORTAbits	set	12
  3180  0012                     _PIR2bits	set	18
  3181  0015                     _TMR0	set	21
  3182  0018                     _T1CONbits	set	24
  3183  0016                     _TMR1L	set	22
  3184  0017                     _TMR1H	set	23
  3185  0011                     _PIR1bits	set	17
  3186  000E                     _PORTCbits	set	14
  3187  000B                     _INTCONbits	set	11
  3188  005E                     _PEIE	set	94
  3189  005F                     _GIE	set	95
  3190  0074                     _RC4	set	116
  3191  0092                     _PIE2bits	set	146
  3192  0091                     _PIE1bits	set	145
  3193  008E                     _TRISCbits	set	142
  3194  008E                     _TRISC	set	142
  3195  008D                     _TRISB	set	141
  3196  008C                     _TRISA	set	140
  3197  0095                     _OPTION_REGbits	set	149
  3198  0099                     _OSCCONbits	set	153
  3199  048D                     _RCIE	set	1165
  3200  048C                     _TXIE	set	1164
  3201  0473                     _TRISC3	set	1139
  3202  0474                     _TRISC4	set	1140
  3203  010D                     _LATBbits	set	269
  3204  010E                     _LATC	set	270
  3205  010D                     _LATB	set	269
  3206  010C                     _LATA	set	268
  3207  08E9                     _RXSEL	set	2281
  3208  08EA                     _TXSEL	set	2282
  3209  0874                     _LATC4	set	2164
  3210  0873                     _LATC3	set	2163
  3211  0199                     _RCREG	set	409
  3212  019A                     _TXREG	set	410
  3213  019B                     _SPBRGL	set	411
  3214  019C                     _SPBRGH	set	412
  3215  0CEC                     _CREN	set	3308
  3216  0CEF                     _SPEN	set	3311
  3217  0CF5                     _TXEN	set	3317
  3218  0CFB                     _BRG16	set	3323
  3219  0CF2                     _BRGH	set	3314
  3220  0CF4                     _SYNC	set	3316
  3221  020E                     _WPUCbits	set	526
  3222  020E                     _WPUC	set	526
  3223  020D                     _WPUB	set	525
  3224  020C                     _WPUA	set	524
  3225  1073                     _WPUC3	set	4211
  3226  1074                     _WPUC4	set	4212
  3227  029A                     _CCP2CONbits	set	666
  3228  0298                     _CCPR2L	set	664
  3229  0299                     _CCPR2H	set	665
  3230  1474                     _ODCONC4	set	5236
  3231  1473                     _ODCONC3	set	5235
  3232  0399                     _IOCCFbits	set	921
  3233  0397                     _IOCCPbits	set	919
  3234  0398                     _IOCCN	set	920
  3235  0397                     _IOCCP	set	919
  3236  0395                     _IOCBN	set	917
  3237  0394                     _IOCBP	set	916
  3238  0392                     _IOCAN	set	914
  3239  0391                     _IOCAP	set	913
  3240                           
  3241                           ; #config settings
  3242  0000                     
  3243                           	psect	cinit
  3244  0059                     start_initialization:	
  3245  0059                     __initialization:	
  3246                           
  3247                           ; Clear objects allocated to BANK0
  3248  0059  303E               	movlw	low __pbssBANK0
  3249  005A  0084               	movwf	4
  3250  005B  3000               	movlw	high __pbssBANK0
  3251  005C  0085               	movwf	5
  3252  005D  3018               	movlw	24
  3253  005E  318F  277C  3180   	fcall	clear_ram0
  3254                           
  3255                           ; Clear objects allocated to BANK1
  3256  0061  30A0               	movlw	low __pbssBANK1
  3257  0062  0084               	movwf	4
  3258  0063  3000               	movlw	high __pbssBANK1
  3259  0064  0085               	movwf	5
  3260  0065  3027               	movlw	39
  3261  0066  318F  277C         	fcall	clear_ram0
  3262  0068                     end_of_initialization:	
  3263                           ;End of C runtime variable initialization code
  3264                           
  3265  0068                     __end_of__initialization:	
  3266  0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3267  0069  0020               	movlb	0
  3268  006A  3187  2F1A         	ljmp	_main	;jump to C main() function
  3269                           
  3270                           	psect	bssBANK0
  3271  003E                     __pbssBANK0:	
  3272  003E                     key_checkPressed@key_time_cnt:	
  3273  003E                     	ds	2
  3274  0040                     capture_handdle@last_cnt:	
  3275  0040                     	ds	2
  3276  0042                     _Temp:	
  3277  0042                     	ds	2
  3278  0044                     main@i:	
  3279  0044                     	ds	2
  3280  0046                     ISR@cnt:	
  3281  0046                     	ds	2
  3282  0048                     tmp_change@key_time_cnt:	
  3283  0048                     	ds	2
  3284  004A                     key_checkPressed@history_key:	
  3285  004A                     	ds	1
  3286  004B                     led_Blink@State:	
  3287  004B                     	ds	1
  3288  004C                     _flg_rc:	
  3289  004C                     	ds	1
  3290  004D                     _TX_en:	
  3291  004D                     	ds	1
  3292  004E                     _RX_data:	
  3293  004E                     	ds	1
  3294  004F                     _TX_data:	
  3295  004F                     	ds	1
  3296  0050                     _temp_l:	
  3297  0050                     	ds	1
  3298  0051                     _temp_h:	
  3299  0051                     	ds	1
  3300  0052                     main@cnt:	
  3301  0052                     	ds	1
  3302  0053                     ISR@tx:	
  3303  0053                     	ds	1
  3304  0054                     tmp_change@history_key:	
  3305  0054                     	ds	1
  3306  0055                     _ENUM:	
  3307  0055                     	ds	1
  3308                           
  3309                           	psect	bssBANK1
  3310  00A0                     __pbssBANK1:	
  3311  00A0                     _g_data:	
  3312  00A0                     	ds	39
  3313                           
  3314                           	psect	clrtext
  3315  0F7C                     clear_ram0:	
  3316                           ;	Called with FSR0 containing the base address, and
  3317                           ;	WREG with the size to clear
  3318                           
  3319  0F7C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3320  0F7D                     clrloop0:	
  3321  0F7D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3322  0F7E  3101               	addfsr 0,1
  3323  0F7F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3324  0F80  2F7D               	goto	clrloop0	;have we reached the end yet?
  3325  0F81  3400               	retlw	0	;all done for this memory range, return
  3326                           
  3327                           	psect	cstackBANK1
  3328  00C7                     __pcstackBANK1:	
  3329  00C7                     ??___awdiv:	
  3330  00C7                     ??___awmod:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333  00C7                     init_env@pdata:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336  00C7                     display_write_byte@data:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339                           
  3340                           ; 1 bytes @ 0x0
  3341  00C7                     	ds	1
  3342  00C8                     display_write_byte@i:	
  3343  00C8                     ___awdiv@counter:	
  3344                           ; 1 bytes @ 0x1
  3345                           
  3346  00C8                     ___awmod@counter:	
  3347                           ; 1 bytes @ 0x1
  3348                           
  3349  00C8                     init_env@i:	
  3350                           ; 1 bytes @ 0x1
  3351                           
  3352                           
  3353                           ; 2 bytes @ 0x1
  3354  00C8                     	ds	1
  3355  00C9                     ___awdiv@sign:	
  3356  00C9                     ___awmod@sign:	
  3357                           ; 1 bytes @ 0x2
  3358                           
  3359                           
  3360                           ; 1 bytes @ 0x2
  3361  00C9                     	ds	1
  3362  00CA                     ___awdiv@quotient:	
  3363                           
  3364                           ; 2 bytes @ 0x3
  3365  00CA                     	ds	2
  3366  00CC                     ?_display_write_once:	
  3367  00CC                     display_write_once@HR:	
  3368                           ; 1 bytes @ 0x5
  3369                           
  3370                           
  3371                           ; 1 bytes @ 0x5
  3372  00CC                     	ds	1
  3373  00CD                     display_write_once@ML:	
  3374                           
  3375                           ; 1 bytes @ 0x6
  3376  00CD                     	ds	1
  3377  00CE                     display_write_once@MR:	
  3378                           
  3379                           ; 1 bytes @ 0x7
  3380  00CE                     	ds	1
  3381  00CF                     display_write_once@HL:	
  3382                           
  3383                           ; 1 bytes @ 0x8
  3384  00CF                     	ds	1
  3385  00D0                     ??_display_update:	
  3386                           
  3387                           ; 1 bytes @ 0x9
  3388  00D0                     	ds	9
  3389  00D9                     _display_update$1481:	
  3390                           
  3391                           ; 2 bytes @ 0x12
  3392  00D9                     	ds	2
  3393  00DB                     display_update@pdata:	
  3394                           
  3395                           ; 1 bytes @ 0x14
  3396  00DB                     	ds	1
  3397                           
  3398                           	psect	cstackCOMMON
  3399  0070                     __pcstackCOMMON:	
  3400  0070                     ?_data_getdata:	
  3401  0070                     ?_display_set:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ?_timer_Timer0Start:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     ?_timer_Timer0Reset:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_timer_IsTimer1Itrpt:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ??_timer_IsTimer1Itrpt:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?_timer_Timer1ClrIntrpt:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0070                     ??_timer_Timer1ClrIntrpt:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422  0070                     ?_timer_IsTimer0Itrpt:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     ??_timer_IsTimer0Itrpt:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     ?_key_isPressed:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     ??_key_isPressed:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     ?_capture_init:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0070                     ?_capture_Set:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0070                     ??_capture_Set:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0070                     ?_led_Blink:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446  0070                     ?_capture_IsIntrpt:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0070                     ??_capture_IsIntrpt:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0070                     ?_capture_clrIntrpt:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0070                     ??_capture_clrIntrpt:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0070                     ?_timer_Timer0Init:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0070                     ?_timer_Timer1Init:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0070                     ?_timer_Timer1Start:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0070                     ?_uart_init:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0070                     ?_display_update:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0070                     ?_led_SetState:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0070                     ?_key_checkPressed:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0070                     ?_capture_IsNegEdge:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0070                     ??_capture_IsNegEdge:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0070                     ?_init_env:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0070                     ?_ISR:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0070                     ?_main:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  0070                     ?_bpc_Cnt2Qua:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  0070                     ??_capture_setEdge:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0070                     ?_display_control595_delay:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0070                     ?_display_write_byte:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0070                     ?i1_timer_Timer0Reset:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0070                     ??i1_timer_Timer0Reset:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0070                     ?i1_data_getdata:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0070                     ??i1_data_getdata:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0070                     ?i1_led_SetState:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  0070                     ??i1_led_SetState:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  0070                     ?i1_display_control595_delay:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  0070                     ??i1_display_control595_delay:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530  0070                     ?i1_display_write_byte:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533  0070                     ?i1_display_update:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536  0070                     ?_timer_Timer0Handdle:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  0070                     ?_capture_handdle:	
  3540                           ; 2 bytes @ 0x0
  3541                           
  3542  0070                     ?_bpc_proc:	
  3543                           ; 2 bytes @ 0x0
  3544                           
  3545  0070                     ?_cnt_abs:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548  0070                     ?_check_err:	
  3549                           ; 2 bytes @ 0x0
  3550                           
  3551  0070                     ?_capture_setEdge:	
  3552                           ; 2 bytes @ 0x0
  3553                           
  3554  0070                     ?___lwmod:	
  3555                           ; 2 bytes @ 0x0
  3556                           
  3557  0070                     ?i1___awdiv:	
  3558                           ; 2 bytes @ 0x0
  3559                           
  3560  0070                     ?i1___awmod:	
  3561                           ; 2 bytes @ 0x0
  3562                           
  3563  0070                     capture_setEdge@edge:	
  3564                           ; 2 bytes @ 0x0
  3565                           
  3566  0070                     capture_Set@isON:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0070                     i1led_SetState@isOn:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0070                     cnt_abs@a:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0070                     ___lwmod@divisor:	
  3576                           ; 2 bytes @ 0x0
  3577                           
  3578  0070                     i1___awdiv@divisor:	
  3579                           ; 2 bytes @ 0x0
  3580                           
  3581  0070                     i1___awmod@divisor:	
  3582                           ; 2 bytes @ 0x0
  3583                           
  3584                           
  3585                           ; 2 bytes @ 0x0
  3586  0070                     	ds	1
  3587  0071                     ??_capture_init:	
  3588  0071                     ??_led_Blink:	
  3589                           ; 1 bytes @ 0x1
  3590                           
  3591  0071                     ??_capture_handdle:	
  3592                           ; 1 bytes @ 0x1
  3593                           
  3594  0071                     key_isPressed@pdata:	
  3595                           ; 1 bytes @ 0x1
  3596                           
  3597  0071                     i1display_control595_delay@times:	
  3598                           ; 1 bytes @ 0x1
  3599                           
  3600                           
  3601                           ; 1 bytes @ 0x1
  3602  0071                     	ds	1
  3603  0072                     ??_check_err:	
  3604  0072                     ??i1_display_write_byte:	
  3605                           ; 1 bytes @ 0x2
  3606                           
  3607  0072                     cnt_abs@b:	
  3608                           ; 1 bytes @ 0x2
  3609                           
  3610  0072                     ___lwmod@dividend:	
  3611                           ; 2 bytes @ 0x2
  3612                           
  3613  0072                     i1___awdiv@dividend:	
  3614                           ; 2 bytes @ 0x2
  3615                           
  3616  0072                     i1___awmod@dividend:	
  3617                           ; 2 bytes @ 0x2
  3618                           
  3619                           
  3620                           ; 2 bytes @ 0x2
  3621  0072                     	ds	2
  3622  0074                     ??_cnt_abs:	
  3623  0074                     ??_bpc_Cnt2Qua:	
  3624                           ; 1 bytes @ 0x4
  3625                           
  3626  0074                     ??___lwmod:	
  3627                           ; 1 bytes @ 0x4
  3628                           
  3629  0074                     ??i1___awdiv:	
  3630                           ; 1 bytes @ 0x4
  3631                           
  3632  0074                     ??i1___awmod:	
  3633                           ; 1 bytes @ 0x4
  3634                           
  3635  0074                     i1display_write_byte@data:	
  3636                           ; 1 bytes @ 0x4
  3637                           
  3638                           
  3639                           ; 1 bytes @ 0x4
  3640  0074                     	ds	1
  3641  0075                     ___lwmod@counter:	
  3642  0075                     i1display_write_byte@i:	
  3643                           ; 1 bytes @ 0x5
  3644                           
  3645  0075                     i1___awdiv@counter:	
  3646                           ; 1 bytes @ 0x5
  3647                           
  3648  0075                     i1___awmod@counter:	
  3649                           ; 1 bytes @ 0x5
  3650                           
  3651                           
  3652                           ; 1 bytes @ 0x5
  3653  0075                     	ds	1
  3654  0076                     ??_key_checkPressed:	
  3655  0076                     bpc_Cnt2Qua@pdata:	
  3656                           ; 1 bytes @ 0x6
  3657                           
  3658  0076                     i1___awdiv@sign:	
  3659                           ; 1 bytes @ 0x6
  3660                           
  3661  0076                     i1___awmod@sign:	
  3662                           ; 1 bytes @ 0x6
  3663                           
  3664                           
  3665                           ; 1 bytes @ 0x6
  3666  0076                     	ds	1
  3667  0077                     _capture_handdle$1313:	
  3668  0077                     i1___awdiv@quotient:	
  3669                           ; 2 bytes @ 0x7
  3670                           
  3671                           
  3672                           ; 2 bytes @ 0x7
  3673  0077                     	ds	1
  3674  0078                     key_checkPressed@pdata:	
  3675                           
  3676                           ; 1 bytes @ 0x8
  3677  0078                     	ds	1
  3678  0079                     ??_timer_Timer0Handdle:	
  3679  0079                     ?i1_display_write_once:	
  3680                           ; 1 bytes @ 0x9
  3681                           
  3682  0079                     capture_handdle@pdata:	
  3683                           ; 1 bytes @ 0x9
  3684                           
  3685  0079                     i1display_write_once@HR:	
  3686                           ; 1 bytes @ 0x9
  3687                           
  3688                           
  3689                           ; 1 bytes @ 0x9
  3690  0079                     	ds	1
  3691  007A                     i1display_write_once@ML:	
  3692  007A                     capture_handdle@cnt_int:	
  3693                           ; 1 bytes @ 0xA
  3694                           
  3695                           
  3696                           ; 2 bytes @ 0xA
  3697  007A                     	ds	1
  3698  007B                     i1display_write_once@MR:	
  3699                           
  3700                           ; 1 bytes @ 0xB
  3701  007B                     	ds	1
  3702  007C                     ??i1_display_write_once:	
  3703  007C                     i1display_write_once@HL:	
  3704                           ; 1 bytes @ 0xC
  3705                           
  3706  007C                     capture_handdle@cnt_tmp:	
  3707                           ; 1 bytes @ 0xC
  3708                           
  3709                           
  3710                           ; 2 bytes @ 0xC
  3711  007C                     	ds	2
  3712                           
  3713                           	psect	cstackBANK0
  3714  0020                     __pcstackBANK0:	
  3715  0020                     ??i1_display_update:	
  3716  0020                     _check_err$1077:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719                           
  3720                           ; 2 bytes @ 0x0
  3721  0020                     	ds	2
  3722  0022                     _check_err$1078:	
  3723                           
  3724                           ; 2 bytes @ 0x2
  3725  0022                     	ds	2
  3726  0024                     _check_err$1081:	
  3727                           
  3728                           ; 2 bytes @ 0x4
  3729  0024                     	ds	2
  3730  0026                     _check_err$1082:	
  3731                           
  3732                           ; 2 bytes @ 0x6
  3733  0026                     	ds	2
  3734  0028                     check_err@i:	
  3735                           
  3736                           ; 1 bytes @ 0x8
  3737  0028                     	ds	1
  3738  0029                     check_err@check:	
  3739  0029                     i1_display_update$1481:	
  3740                           ; 1 bytes @ 0x9
  3741                           
  3742                           
  3743                           ; 2 bytes @ 0x9
  3744  0029                     	ds	1
  3745  002A                     check_err@pdata:	
  3746                           
  3747                           ; 1 bytes @ 0xA
  3748  002A                     	ds	1
  3749  002B                     i1display_update@pdata:	
  3750                           
  3751                           ; 1 bytes @ 0xB
  3752  002B                     	ds	1
  3753  002C                     ??_bpc_proc:	
  3754                           
  3755                           ; 1 bytes @ 0xC
  3756  002C                     	ds	2
  3757  002E                     bpc_proc@last_time_s:	
  3758                           
  3759                           ; 2 bytes @ 0xE
  3760  002E                     	ds	2
  3761  0030                     bpc_proc@last_time_h:	
  3762                           
  3763                           ; 2 bytes @ 0x10
  3764  0030                     	ds	2
  3765  0032                     bpc_proc@last_time_m:	
  3766                           
  3767                           ; 2 bytes @ 0x12
  3768  0032                     	ds	2
  3769  0034                     bpc_proc@i:	
  3770                           
  3771                           ; 2 bytes @ 0x14
  3772  0034                     	ds	2
  3773  0036                     bpc_proc@number:	
  3774                           
  3775                           ; 1 bytes @ 0x16
  3776  0036                     	ds	1
  3777  0037                     bpc_proc@pdata:	
  3778                           
  3779                           ; 1 bytes @ 0x17
  3780  0037                     	ds	1
  3781  0038                     ??_ISR:	
  3782                           
  3783                           ; 1 bytes @ 0x18
  3784  0038                     	ds	2
  3785  003A                     ??_data_getdata:	
  3786  003A                     ??_display_set:	
  3787                           ; 1 bytes @ 0x1A
  3788                           
  3789  003A                     ??_timer_Timer0Start:	
  3790                           ; 1 bytes @ 0x1A
  3791                           
  3792  003A                     ??_timer_Timer0Reset:	
  3793                           ; 1 bytes @ 0x1A
  3794                           
  3795  003A                     ??_timer_Timer0Init:	
  3796                           ; 1 bytes @ 0x1A
  3797                           
  3798  003A                     ??_timer_Timer1Init:	
  3799                           ; 1 bytes @ 0x1A
  3800                           
  3801  003A                     ??_timer_Timer1Start:	
  3802                           ; 1 bytes @ 0x1A
  3803                           
  3804  003A                     ??_uart_init:	
  3805                           ; 1 bytes @ 0x1A
  3806                           
  3807  003A                     ??_led_SetState:	
  3808                           ; 1 bytes @ 0x1A
  3809                           
  3810  003A                     ??_display_control595_delay:	
  3811                           ; 1 bytes @ 0x1A
  3812                           
  3813  003A                     ?___awdiv:	
  3814                           ; 1 bytes @ 0x1A
  3815                           
  3816  003A                     ?___awmod:	
  3817                           ; 2 bytes @ 0x1A
  3818                           
  3819  003A                     led_SetState@isOn:	
  3820                           ; 2 bytes @ 0x1A
  3821                           
  3822  003A                     display_set@ison:	
  3823                           ; 1 bytes @ 0x1A
  3824                           
  3825  003A                     ___awdiv@divisor:	
  3826                           ; 1 bytes @ 0x1A
  3827                           
  3828  003A                     ___awmod@divisor:	
  3829                           ; 2 bytes @ 0x1A
  3830                           
  3831                           
  3832                           ; 2 bytes @ 0x1A
  3833  003A                     	ds	1
  3834  003B                     ??_init_env:	
  3835  003B                     display_control595_delay@times:	
  3836                           ; 1 bytes @ 0x1B
  3837                           
  3838                           
  3839                           ; 1 bytes @ 0x1B
  3840  003B                     	ds	1
  3841  003C                     ??_display_write_byte:	
  3842  003C                     ___awdiv@dividend:	
  3843                           ; 1 bytes @ 0x1C
  3844                           
  3845  003C                     ___awmod@dividend:	
  3846                           ; 2 bytes @ 0x1C
  3847                           
  3848                           
  3849                           ; 2 bytes @ 0x1C
  3850  003C                     	ds	2
  3851  003E                     ??_main:	
  3852  003E                     ??_display_write_once:	
  3853                           ; 1 bytes @ 0x1E
  3854                           
  3855                           
  3856                           	psect	maintext
  3857  071A                     __pmaintext:	
  3858                           ; 1 bytes @ 0x1E
  3859 ;;
  3860 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3861 ;;
  3862 ;; *************** function _main *****************
  3863 ;; Defined at:
  3864 ;;		line 242 in file "main.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : B1F/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels required when called:   10
  3884 ;; This function calls:
  3885 ;;		_display_set
  3886 ;;		_display_update
  3887 ;;		_init_env
  3888 ;;		_led_SetState
  3889 ;;		_timer_Timer0Init
  3890 ;;		_timer_Timer0Start
  3891 ;;		_timer_Timer1Init
  3892 ;;		_timer_Timer1Start
  3893 ;;		_uart_init
  3894 ;; This function is called by:
  3895 ;;		Startup code after reset
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _main
  3901  071A                     _main:	
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3905  071A  3184  24D2  3187   	fcall	_init_env
  3906  071D  318F  27D6  3187   	fcall	_timer_Timer0Init
  3907  0720  318F  276E  3187   	fcall	_timer_Timer0Start
  3908  0723  318F  27E3  3187   	fcall	_timer_Timer1Init
  3909  0726  318F  275F  3187   	fcall	_timer_Timer1Start
  3910  0729  3187  27B0  3187   	fcall	_uart_init
  3911  072C  3182  2284  3187   	fcall	_display_update
  3912  072F  3000               	movlw	0
  3913  0730  318F  27B2  3187   	fcall	_led_SetState
  3914  0733                     l3596:	
  3915  0733  3001               	movlw	1
  3916  0734  0020               	movlb	0	; select bank0
  3917  0735  07C4               	addwf	main@i,f
  3918  0736  3000               	movlw	0
  3919  0737  3DC5               	addwfc	main@i+1,f
  3920  0738  0844               	movf	main@i,w
  3921  0739  0445               	iorwf	main@i+1,w
  3922  073A  1D03               	btfss	3,2
  3923  073B  2F33               	goto	l3596
  3924  073C  3000               	movlw	0
  3925  073D  318F  278A  3187   	fcall	_display_set
  3926  0740  2F33               	goto	l3596
  3927  0741                     __end_of_main:	
  3928                           
  3929                           	psect	text1
  3930  07B0                     __ptext1:	
  3931 ;; *************** function _uart_init *****************
  3932 ;; Defined at:
  3933 ;;		line 14 in file "uart.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    6
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _uart_init
  3963  07B0                     _uart_init:	
  3964                           
  3965                           ;uart.c: 17:     TXSEL = 0;
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _uart_init: [wreg+status,2]
  3969  07B0  0022               	movlb	2	; select bank2
  3970  07B1  111D               	bcf	29,2	;volatile
  3971                           
  3972                           ;uart.c: 18:     RXSEL = 0;
  3973  07B2  109D               	bcf	29,1	;volatile
  3974                           
  3975                           ;uart.c: 19:     TRISCbits.TRISC7 = 1;
  3976  07B3  0021               	movlb	1	; select bank1
  3977  07B4  178E               	bsf	14,7	;volatile
  3978                           
  3979                           ;uart.c: 20:     TRISCbits.TRISC6 = 0;
  3980  07B5  130E               	bcf	14,6	;volatile
  3981                           
  3982                           ;uart.c: 21:     WPUCbits.WPUC7 = 0;
  3983  07B6  0024               	movlb	4	; select bank4
  3984  07B7  138E               	bcf	14,7	;volatile
  3985                           
  3986                           ;uart.c: 22:     WPUCbits.WPUC6 = 0;
  3987  07B8  130E               	bcf	14,6	;volatile
  3988                           
  3989                           ;uart.c: 26:     SYNC = 0;
  3990  07B9  0023               	movlb	3	; select bank3
  3991  07BA  121E               	bcf	30,4	;volatile
  3992                           
  3993                           ;uart.c: 27:     BRGH = 1;
  3994  07BB  151E               	bsf	30,2	;volatile
  3995                           
  3996                           ;uart.c: 28:     BRG16 = 1;
  3997  07BC  159F               	bsf	31,3	;volatile
  3998                           
  3999                           ;uart.c: 32:     SPBRGH = 0x00;
  4000  07BD  019C               	clrf	28	;volatile
  4001                           
  4002                           ;uart.c: 33:     SPBRGL = 23;
  4003  07BE  3017               	movlw	23
  4004  07BF  009B               	movwf	27	;volatile
  4005                           
  4006                           ;uart.c: 36:     TXEN = 1;
  4007  07C0  169E               	bsf	30,5	;volatile
  4008                           
  4009                           ;uart.c: 37:     SYNC = 0;
  4010  07C1  121E               	bcf	30,4	;volatile
  4011                           
  4012                           ;uart.c: 38:     SPEN = 1;
  4013  07C2  179D               	bsf	29,7	;volatile
  4014                           
  4015                           ;uart.c: 41:     TXIE = 1;
  4016  07C3  0021               	movlb	1	; select bank1
  4017  07C4  1611               	bsf	17,4	;volatile
  4018                           
  4019                           ;uart.c: 42:     GIE = 1;
  4020  07C5  178B               	bsf	11,7	;volatile
  4021                           
  4022                           ;uart.c: 43:     PEIE = 1;
  4023  07C6  170B               	bsf	11,6	;volatile
  4024                           
  4025                           ;uart.c: 46:     CREN = 1;
  4026  07C7  0023               	movlb	3	; select bank3
  4027  07C8  161D               	bsf	29,4	;volatile
  4028                           
  4029                           ;uart.c: 49:     RCIE = 1;
  4030  07C9  0021               	movlb	1	; select bank1
  4031  07CA  1691               	bsf	17,5	;volatile
  4032  07CB  0008               	return
  4033  07CC                     __end_of_uart_init:	
  4034                           
  4035                           	psect	text2
  4036  0F5F                     __ptext2:	
  4037 ;; *************** function _timer_Timer1Start *****************
  4038 ;; Defined at:
  4039 ;;		line 40 in file "timer.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		None
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    6
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _timer_Timer1Start
  4069  0F5F                     _timer_Timer1Start:	
  4070                           
  4071                           ;timer.c: 43:     T1CONbits.TMR1ON = 0b1;
  4072                           
  4073                           ;incstack = 0
  4074                           ; Regs used in _timer_Timer1Start: []
  4075  0F5F  0020               	movlb	0	; select bank0
  4076  0F60  1418               	bsf	24,0	;volatile
  4077  0F61  0008               	return
  4078  0F62                     __end_of_timer_Timer1Start:	
  4079                           
  4080                           	psect	text3
  4081  0FE3                     __ptext3:	
  4082 ;; *************** function _timer_Timer1Init *****************
  4083 ;; Defined at:
  4084 ;;		line 9 in file "timer.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    6
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           
  4113                           ;psect for function _timer_Timer1Init
  4114  0FE3                     _timer_Timer1Init:	
  4115                           
  4116                           ;timer.c: 12:     INTCONbits.GIE = 0b1;
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _timer_Timer1Init: [wreg+status,2+status,0]
  4120  0FE3  178B               	bsf	11,7	;volatile
  4121                           
  4122                           ;timer.c: 14:     INTCONbits.PEIE = 0b1;
  4123  0FE4  170B               	bsf	11,6	;volatile
  4124                           
  4125                           ;timer.c: 15:     PIE1bits.TMR1IE = 0b1;
  4126  0FE5  0021               	movlb	1	; select bank1
  4127  0FE6  1411               	bsf	17,0	;volatile
  4128                           
  4129                           ;timer.c: 17:     PIR1bits.TMR1IF = 0b0;
  4130  0FE7  0020               	movlb	0	; select bank0
  4131  0FE8  1011               	bcf	17,0	;volatile
  4132                           
  4133                           ;timer.c: 19:     TMR1H = 0b0;
  4134  0FE9  0197               	clrf	23	;volatile
  4135                           
  4136                           ;timer.c: 20:     TMR1L = 0b0;
  4137  0FEA  0196               	clrf	22	;volatile
  4138                           
  4139                           ;timer.c: 30:     T1CONbits.TMR1CS = 0b00;
  4140  0FEB  303F               	movlw	-193
  4141  0FEC  0598               	andwf	24,f	;volatile
  4142                           
  4143                           ;timer.c: 33:     T1CONbits.T1CKPS = 0b11;
  4144  0FED  3030               	movlw	48
  4145  0FEE  0498               	iorwf	24,f	;volatile
  4146  0FEF  0008               	return
  4147  0FF0                     __end_of_timer_Timer1Init:	
  4148                           
  4149                           	psect	text4
  4150  0F6E                     __ptext4:	
  4151 ;; *************** function _timer_Timer0Start *****************
  4152 ;; Defined at:
  4153 ;;		line 96 in file "timer.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    7
  4174 ;; This function calls:
  4175 ;;		_timer_Timer0Reset
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;;		_tmp_change
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _timer_Timer0Start
  4184  0F6E                     _timer_Timer0Start:	
  4185                           
  4186                           ;timer.c: 98:     timer_Timer0Reset();
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _timer_Timer0Start: [wreg+status,2+status,0+pclath+cstack]
  4190  0F6E  318F  2777         	fcall	_timer_Timer0Reset
  4191                           
  4192                           ;timer.c: 99:     INTCONbits.TMR0IE = 0b1;
  4193  0F70  168B               	bsf	11,5	;volatile
  4194  0F71  0008               	return
  4195  0F72                     __end_of_timer_Timer0Start:	
  4196                           
  4197                           	psect	text5
  4198  0F77                     __ptext5:	
  4199 ;; *************** function _timer_Timer0Reset *****************
  4200 ;; Defined at:
  4201 ;;		line 91 in file "timer.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    6
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_timer_Timer0Start
  4226 ;;		_tmp_change
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           
  4231                           ;psect for function _timer_Timer0Reset
  4232  0F77                     _timer_Timer0Reset:	
  4233                           
  4234                           ;timer.c: 93:     INTCONbits.TMR0IF = 0;
  4235                           
  4236                           ;incstack = 0
  4237                           ; Regs used in _timer_Timer0Reset: [wreg]
  4238  0F77  110B               	bcf	11,2	;volatile
  4239                           
  4240                           ;timer.c: 94:     TMR0 = (217 + 14);
  4241  0F78  30E7               	movlw	231
  4242  0F79  0020               	movlb	0	; select bank0
  4243  0F7A  0095               	movwf	21	;volatile
  4244  0F7B  0008               	return
  4245  0F7C                     __end_of_timer_Timer0Reset:	
  4246                           
  4247                           	psect	text6
  4248  0FD6                     __ptext6:	
  4249 ;; *************** function _timer_Timer0Init *****************
  4250 ;; Defined at:
  4251 ;;		line 63 in file "timer.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    6
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _timer_Timer0Init
  4281  0FD6                     _timer_Timer0Init:	
  4282                           
  4283                           ;timer.c: 66:     INTCONbits.GIE = 0b1;
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _timer_Timer0Init: [wreg+status,2+status,0]
  4287  0FD6  178B               	bsf	11,7	;volatile
  4288                           
  4289                           ;timer.c: 69:     INTCONbits.TMR0IE = 0b0;
  4290  0FD7  128B               	bcf	11,5	;volatile
  4291                           
  4292                           ;timer.c: 75:     OPTION_REGbits.PSA = 0;
  4293  0FD8  0021               	movlb	1	; select bank1
  4294  0FD9  1195               	bcf	21,3	;volatile
  4295                           
  4296                           ;timer.c: 76:     OPTION_REGbits.TMR0CS = 0;
  4297  0FDA  1295               	bcf	21,5	;volatile
  4298                           
  4299                           ;timer.c: 77:     OPTION_REGbits.PS = 4;
  4300  0FDB  0815               	movf	21,w	;volatile
  4301  0FDC  39F8               	andlw	-8
  4302  0FDD  3804               	iorlw	4
  4303  0FDE  0095               	movwf	21	;volatile
  4304                           
  4305                           ;timer.c: 78:     TMR0 = (217 + 14);
  4306  0FDF  30E7               	movlw	231
  4307  0FE0  0020               	movlb	0	; select bank0
  4308  0FE1  0095               	movwf	21	;volatile
  4309  0FE2  0008               	return
  4310  0FE3                     __end_of_timer_Timer0Init:	
  4311                           
  4312                           	psect	text7
  4313  0FB2                     __ptext7:	
  4314 ;; *************** function _led_SetState *****************
  4315 ;; Defined at:
  4316 ;;		line 107 in file "hardware.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  isOn            1    wreg     unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  isOn            1   26[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;Total ram usage:        1 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    6
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _led_SetState
  4346  0FB2                     _led_SetState:	
  4347                           
  4348                           ;incstack = 0
  4349                           ; Regs used in _led_SetState: [wreg+status,2+status,0]
  4350                           ;led_SetState@isOn stored from wreg
  4351  0FB2  0020               	movlb	0	; select bank0
  4352  0FB3  00BA               	movwf	led_SetState@isOn
  4353                           
  4354                           ;hardware.c: 107: u8 led_SetState(u8 isOn);hardware.c: 108: {;hardware.c: 109:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  4355  0FB4  083A               	movf	led_SetState@isOn,w
  4356  0FB5  1D03               	btfss	3,2
  4357  0FB6  2FBA               	goto	u2550
  4358  0FB7  0022               	movlb	2	; select bank2
  4359  0FB8  158D               	bsf	13,3	;volatile
  4360  0FB9  0008               	return
  4361  0FBA                     u2550:	
  4362  0FBA  0022               	movlb	2	; select bank2
  4363  0FBB  118D               	bcf	13,3	;volatile
  4364  0FBC  0008               	return
  4365  0FBD                     __end_of_led_SetState:	
  4366                           
  4367                           	psect	text8
  4368  04D2                     __ptext8:	
  4369 ;; *************** function _init_env *****************
  4370 ;; Defined at:
  4371 ;;		line 44 in file "main.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  i               2    1[BANK1 ] int 
  4376 ;;  pdata           1    0[BANK1 ] PTR volatile struct .
  4377 ;;		 -> g_data(39), 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;Total ram usage:        5 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    7
  4394 ;; This function calls:
  4395 ;;		_data_getdata
  4396 ;;		_display_set
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function _init_env
  4404  04D2                     _init_env:	
  4405                           
  4406                           ;main.c: 45:     IOCCP = 0;
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4410  04D2  3180  2002  3184   	fcall	_data_getdata
  4411  04D5  0020               	movlb	0	; select bank0
  4412  04D6  00BB               	movwf	??_init_env
  4413  04D7  083B               	movf	??_init_env,w
  4414  04D8  0021               	movlb	1	; select bank1
  4415  04D9  00C7               	movwf	init_env@pdata^(0+128)
  4416                           
  4417                           ;main.c: 51:     TRISCbits.TRISC5 = 1;
  4418  04DA  178B               	bsf	11,7	;volatile
  4419                           
  4420                           ;main.c: 58: 
  4421  04DB  0819               	movf	25,w	;volatile
  4422  04DC  39FC               	andlw	-4
  4423  04DD  3802               	iorlw	2
  4424  04DE  0099               	movwf	25	;volatile
  4425                           
  4426                           ;main.c: 62: 
  4427  04DF  0819               	movf	25,w	;volatile
  4428  04E0  3987               	andlw	-121
  4429  04E1  3858               	iorlw	88
  4430  04E2  0099               	movwf	25	;volatile
  4431                           
  4432                           ;main.c: 70: 
  4433  04E3  1395               	bcf	21,7	;volatile
  4434                           
  4435                           ;main.c: 72:     TRISCbits.TRISC0 = 1;
  4436  04E4  018C               	clrf	12	;volatile
  4437                           
  4438                           ;main.c: 73:     WPUCbits.WPUC0 = 1;
  4439  04E5  0022               	movlb	2	; select bank2
  4440  04E6  018C               	clrf	12	;volatile
  4441                           
  4442                           ;main.c: 74: 
  4443  04E7  0024               	movlb	4	; select bank4
  4444  04E8  018C               	clrf	12	;volatile
  4445                           
  4446                           ;main.c: 75: 
  4447  04E9  0027               	movlb	7	; select bank7
  4448  04EA  0191               	clrf	17	;volatile
  4449                           
  4450                           ;main.c: 76: 
  4451  04EB  0192               	clrf	18	;volatile
  4452                           
  4453                           ;main.c: 78: 
  4454  04EC  0021               	movlb	1	; select bank1
  4455  04ED  018D               	clrf	13	;volatile
  4456                           
  4457                           ;main.c: 79: 
  4458  04EE  0022               	movlb	2	; select bank2
  4459  04EF  018D               	clrf	13	;volatile
  4460                           
  4461                           ;main.c: 80:     display_set(TRUE);
  4462  04F0  0024               	movlb	4	; select bank4
  4463  04F1  018D               	clrf	13	;volatile
  4464                           
  4465                           ;main.c: 81: }
  4466  04F2  0027               	movlb	7	; select bank7
  4467  04F3  0194               	clrf	20	;volatile
  4468                           
  4469                           ;main.c: 82: 
  4470  04F4  0195               	clrf	21	;volatile
  4471                           
  4472                           ;main.c: 84: void tmp_change(void)
  4473  04F5  0021               	movlb	1	; select bank1
  4474  04F6  018E               	clrf	14	;volatile
  4475                           
  4476                           ;main.c: 85: {
  4477  04F7  0022               	movlb	2	; select bank2
  4478  04F8  018E               	clrf	14	;volatile
  4479                           
  4480                           ;main.c: 86:     static u8 history_key = 0;
  4481  04F9  3001               	movlw	1
  4482  04FA  0024               	movlb	4	; select bank4
  4483  04FB  008E               	movwf	14	;volatile
  4484                           
  4485                           ;main.c: 87:     static u16 key_time_cnt = 0;
  4486  04FC  0027               	movlb	7	; select bank7
  4487  04FD  0197               	clrf	23	;volatile
  4488                           
  4489                           ;main.c: 88:     G_DATA *pdata = data_getdata();
  4490  04FE  0198               	clrf	24	;volatile
  4491                           
  4492                           ;main.c: 93:     if( pdata->g_isDecoding == FALSE && ((pdata->g_flg_switch == TRUE)||(pd
      +                          ata->cnt_update >= 30)) )
  4493  04FF  0021               	movlb	1	; select bank1
  4494  0500  168E               	bsf	14,5	;volatile
  4495                           
  4496                           ;main.c: 94: 
  4497  0501  0024               	movlb	4	; select bank4
  4498  0502  168E               	bsf	14,5	;volatile
  4499                           
  4500                           ;main.c: 96: 
  4501  0503  0021               	movlb	1	; select bank1
  4502  0504  148E               	bsf	14,1	;volatile
  4503                           
  4504                           ;main.c: 97:         pdata->g_find_recv_start = FALSE;
  4505  0505  0024               	movlb	4	; select bank4
  4506  0506  108E               	bcf	14,1	;volatile
  4507                           
  4508                           ;main.c: 98:         pdata->g_isDecoding = TRUE;
  4509  0507  0027               	movlb	7	; select bank7
  4510  0508  1497               	bsf	23,1	;volatile
  4511                           
  4512                           ;main.c: 101:         pdata->g_recv_count = CODE_P0;
  4513  0509  0021               	movlb	1	; select bank1
  4514  050A  01C8               	clrf	init_env@i^(0+128)
  4515  050B  01C9               	clrf	(init_env@i+1)^(0+128)
  4516  050C                     l3466:	
  4517                           
  4518                           ;main.c: 102:         PORTCbits.RC2 = BPC_PWR_ON;
  4519  050C  3005               	movlw	5
  4520  050D  0020               	movlb	0	; select bank0
  4521  050E  00BB               	movwf	??_init_env
  4522  050F  0021               	movlb	1	; select bank1
  4523  0510  0848               	movf	init_env@i^(0+128),w
  4524  0511  0747               	addwf	init_env@pdata^(0+128),w
  4525  0512  0020               	movlb	0	; select bank0
  4526  0513  00BC               	movwf	??_init_env+1
  4527  0514  083C               	movf	??_init_env+1,w
  4528  0515  3E0D               	addlw	13
  4529  0516  0086               	movwf	6
  4530  0517  0187               	clrf	7
  4531  0518  083B               	movf	??_init_env,w
  4532  0519  0081               	movwf	1
  4533                           
  4534                           ;main.c: 103: 
  4535  051A  3001               	movlw	1
  4536  051B  0021               	movlb	1	; select bank1
  4537  051C  07C8               	addwf	init_env@i^(0+128),f
  4538  051D  3000               	movlw	0
  4539  051E  3DC9               	addwfc	(init_env@i+1)^(0+128),f
  4540  051F  0849               	movf	(init_env@i+1)^(0+128),w
  4541  0520  3A80               	xorlw	128
  4542  0521  0020               	movlb	0	; select bank0
  4543  0522  00BB               	movwf	??_init_env
  4544  0523  3080               	movlw	128
  4545  0524  023B               	subwf	??_init_env,w
  4546  0525  1D03               	skipz
  4547  0526  2D2A               	goto	u3105
  4548  0527  3014               	movlw	20
  4549  0528  0021               	movlb	1	; select bank1
  4550  0529  0248               	subwf	init_env@i^(0+128),w
  4551  052A                     u3105:	
  4552  052A  1C03               	skipc
  4553  052B  2D0C               	goto	l3466
  4554                           
  4555                           ;main.c: 108:     else if(pdata->g_isDecoding == TRUE && IOCCFbits.IOCCF1 == TRUE && TRU
      +                          E == pdata->g_find_recv_start)
  4556  052C  0022               	movlb	2	; select bank2
  4557  052D  110D               	bcf	13,2	;volatile
  4558                           
  4559                           ;main.c: 111:         {
  4560  052E  0020               	movlb	0	; select bank0
  4561  052F  110E               	bcf	14,2	;volatile
  4562                           
  4563                           ;main.c: 114:         timer_Timer0Start();
  4564  0530  0021               	movlb	1	; select bank1
  4565  0531  140E               	bsf	14,0	;volatile
  4566                           
  4567                           ;main.c: 115:     }
  4568  0532  0024               	movlb	4	; select bank4
  4569  0533  140E               	bsf	14,0	;volatile
  4570                           
  4571                           ;main.c: 122: 
  4572  0534  3001               	movlw	1
  4573  0535  318F  278A         	fcall	_display_set
  4574  0537  0008               	return
  4575  0538                     __end_of_init_env:	
  4576                           
  4577                           	psect	text9
  4578  0F8A                     __ptext9:	
  4579 ;; *************** function _display_set *****************
  4580 ;; Defined at:
  4581 ;;		line 14 in file "display.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  ison            1    wreg     enum E5232
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  ison            1   26[BANK0 ] enum E5232
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;Total ram usage:        1 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    6
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_init_env
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _display_set
  4612  0F8A                     _display_set:	
  4613                           
  4614                           ;incstack = 0
  4615                           ; Regs used in _display_set: [wreg+status,0]
  4616                           ;display_set@ison stored from wreg
  4617  0F8A  0020               	movlb	0	; select bank0
  4618  0F8B  00BA               	movwf	display_set@ison
  4619                           
  4620                           ;display.c: 14: void display_set(BOOL ison);display.c: 15: {;display.c: 16:     PORTAbit
      +                          s.RA0 = ison;
  4621  0F8C  0C3A               	rrf	display_set@ison,w
  4622  0F8D  1C03               	skipc
  4623  0F8E  100C               	bcf	12,0	;volatile
  4624  0F8F  1803               	skipnc
  4625  0F90  140C               	bsf	12,0	;volatile
  4626  0F91  0008               	return
  4627  0F92                     __end_of_display_set:	
  4628                           
  4629                           	psect	text10
  4630  0284                     __ptext10:	
  4631 ;; *************** function _display_update *****************
  4632 ;; Defined at:
  4633 ;;		line 72 in file "display.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  pdata           1   20[BANK1 ] PTR volatile struct .
  4638 ;;		 -> g_data(39), 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;Total ram usage:       12 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    9
  4655 ;; This function calls:
  4656 ;;		___awdiv
  4657 ;;		___awmod
  4658 ;;		_data_getdata
  4659 ;;		_display_write_once
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;;		_update_time
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _display_update
  4668  0284                     _display_update:	
  4669                           
  4670                           ;display.c: 86:     G_DATA *pdata = data_getdata();
  4671                           
  4672                           ;incstack = 0
  4673                           ; Regs used in _display_update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4674  0284  3180  2002  3182   	fcall	_data_getdata
  4675  0287  0021               	movlb	1	; select bank1
  4676  0288  00D0               	movwf	??_display_update^(0+128)
  4677  0289  0850               	movf	??_display_update^(0+128),w
  4678  028A  00DB               	movwf	display_update@pdata^(0+128)
  4679                           
  4680                           ;display.c: 87:     display_write_once(segmcode[(pdata->g_time_h/10 == 0? 10:pdata->g_ti
      +                          me_h/10)], segmcode[pdata->g_time_h%10], segmcode[pdata->g_time_m/10], segmcode[pdata->g
      +                          _time_m%10]);
  4681  028B  300A               	movlw	10
  4682  028C  0020               	movlb	0	; select bank0
  4683  028D  00BA               	movwf	___awdiv@divisor
  4684  028E  3000               	movlw	0
  4685  028F  00BB               	movwf	___awdiv@divisor+1
  4686  0290  0021               	movlb	1	; select bank1
  4687  0291  085B               	movf	display_update@pdata^(0+128),w
  4688  0292  3E03               	addlw	3
  4689  0293  0086               	movwf	6
  4690  0294  0187               	clrf	7
  4691  0295  0801               	movf	1,w
  4692  0296  00D0               	movwf	??_display_update^(0+128)
  4693  0297  01D1               	clrf	(??_display_update^(0+128)+1)
  4694  0298  0850               	movf	??_display_update^(0+128),w
  4695  0299  0020               	movlb	0	; select bank0
  4696  029A  00BC               	movwf	___awdiv@dividend
  4697  029B  0021               	movlb	1	; select bank1
  4698  029C  0851               	movf	(??_display_update+1)^(0+128),w
  4699  029D  0020               	movlb	0	; select bank0
  4700  029E  00BD               	movwf	___awdiv@dividend+1
  4701  029F  3185  2538  3182   	fcall	___awdiv
  4702  02A2  0020               	movlb	0	; select bank0
  4703  02A3  083A               	movf	?___awdiv,w
  4704  02A4  043B               	iorwf	?___awdiv+1,w
  4705  02A5  1903               	btfsc	3,2
  4706  02A6  2AC6               	goto	l3480
  4707  02A7  300A               	movlw	10
  4708  02A8  00BA               	movwf	___awdiv@divisor
  4709  02A9  3000               	movlw	0
  4710  02AA  00BB               	movwf	___awdiv@divisor+1
  4711  02AB  0021               	movlb	1	; select bank1
  4712  02AC  085B               	movf	display_update@pdata^(0+128),w
  4713  02AD  3E03               	addlw	3
  4714  02AE  0086               	movwf	6
  4715  02AF  0187               	clrf	7
  4716  02B0  0801               	movf	1,w
  4717  02B1  00D0               	movwf	??_display_update^(0+128)
  4718  02B2  01D1               	clrf	(??_display_update^(0+128)+1)
  4719  02B3  0850               	movf	??_display_update^(0+128),w
  4720  02B4  0020               	movlb	0	; select bank0
  4721  02B5  00BC               	movwf	___awdiv@dividend
  4722  02B6  0021               	movlb	1	; select bank1
  4723  02B7  0851               	movf	(??_display_update+1)^(0+128),w
  4724  02B8  0020               	movlb	0	; select bank0
  4725  02B9  00BD               	movwf	___awdiv@dividend+1
  4726  02BA  3185  2538  3182   	fcall	___awdiv
  4727  02BD  0020               	movlb	0	; select bank0
  4728  02BE  083B               	movf	?___awdiv+1,w
  4729  02BF  0021               	movlb	1	; select bank1
  4730  02C0  00DA               	movwf	(_display_update$1481+1)^(0+128)
  4731  02C1  0020               	movlb	0	; select bank0
  4732  02C2  083A               	movf	?___awdiv,w
  4733  02C3  0021               	movlb	1	; select bank1
  4734  02C4  00D9               	movwf	_display_update$1481^(0+128)
  4735  02C5  2ACB               	goto	l3482
  4736  02C6                     l3480:	
  4737  02C6  300A               	movlw	10
  4738  02C7  0021               	movlb	1	; select bank1
  4739  02C8  00D9               	movwf	_display_update$1481^(0+128)
  4740  02C9  3000               	movlw	0
  4741  02CA  00DA               	movwf	(_display_update$1481^(0+128)+1)
  4742  02CB                     l3482:	
  4743  02CB  300A               	movlw	10
  4744  02CC  0020               	movlb	0	; select bank0
  4745  02CD  00BA               	movwf	___awmod@divisor
  4746  02CE  3000               	movlw	0
  4747  02CF  00BB               	movwf	___awmod@divisor+1
  4748  02D0  0021               	movlb	1	; select bank1
  4749  02D1  085B               	movf	display_update@pdata^(0+128),w
  4750  02D2  3E03               	addlw	3
  4751  02D3  0086               	movwf	6
  4752  02D4  0187               	clrf	7
  4753  02D5  0801               	movf	1,w
  4754  02D6  00D0               	movwf	??_display_update^(0+128)
  4755  02D7  01D1               	clrf	(??_display_update^(0+128)+1)
  4756  02D8  0850               	movf	??_display_update^(0+128),w
  4757  02D9  0020               	movlb	0	; select bank0
  4758  02DA  00BC               	movwf	___awmod@dividend
  4759  02DB  0021               	movlb	1	; select bank1
  4760  02DC  0851               	movf	(??_display_update+1)^(0+128),w
  4761  02DD  0020               	movlb	0	; select bank0
  4762  02DE  00BD               	movwf	___awmod@dividend+1
  4763  02DF  3185  259C  3182   	fcall	___awmod
  4764  02E2  0020               	movlb	0	; select bank0
  4765  02E3  083B               	movf	?___awmod+1,w
  4766  02E4  0085               	movwf	5
  4767  02E5  083A               	movf	?___awmod,w
  4768  02E6  0084               	movwf	4
  4769  02E7  3000               	movlw	low (_segmcode| (0+32768))
  4770  02E8  0784               	addwf	4,f
  4771  02E9  3090               	movlw	high (_segmcode| (0+32768))
  4772  02EA  3D85               	addwfc	5,f
  4773  02EB  0800               	movf	0,w	;code access
  4774  02EC  0021               	movlb	1	; select bank1
  4775  02ED  00D2               	movwf	(??_display_update+2)^(0+128)
  4776  02EE  0852               	movf	(??_display_update+2)^(0+128),w
  4777  02EF  00CC               	movwf	display_write_once@HR^(0+128)
  4778  02F0  300A               	movlw	10
  4779  02F1  0020               	movlb	0	; select bank0
  4780  02F2  00BA               	movwf	___awdiv@divisor
  4781  02F3  3000               	movlw	0
  4782  02F4  00BB               	movwf	___awdiv@divisor+1
  4783  02F5  0021               	movlb	1	; select bank1
  4784  02F6  085B               	movf	display_update@pdata^(0+128),w
  4785  02F7  3E04               	addlw	4
  4786  02F8  0086               	movwf	6
  4787  02F9  0187               	clrf	7
  4788  02FA  0801               	movf	1,w
  4789  02FB  00D3               	movwf	(??_display_update+3)^(0+128)
  4790  02FC  01D4               	clrf	((??_display_update+3)^(0+128)+1)
  4791  02FD  0853               	movf	(??_display_update+3)^(0+128),w
  4792  02FE  0020               	movlb	0	; select bank0
  4793  02FF  00BC               	movwf	___awdiv@dividend
  4794  0300  0021               	movlb	1	; select bank1
  4795  0301  0854               	movf	(??_display_update+4)^(0+128),w
  4796  0302  0020               	movlb	0	; select bank0
  4797  0303  00BD               	movwf	___awdiv@dividend+1
  4798  0304  3185  2538  3182   	fcall	___awdiv
  4799  0307  0020               	movlb	0	; select bank0
  4800  0308  083B               	movf	?___awdiv+1,w
  4801  0309  0085               	movwf	5
  4802  030A  083A               	movf	?___awdiv,w
  4803  030B  0084               	movwf	4
  4804  030C  3000               	movlw	low (_segmcode| (0+32768))
  4805  030D  0784               	addwf	4,f
  4806  030E  3090               	movlw	high (_segmcode| (0+32768))
  4807  030F  3D85               	addwfc	5,f
  4808  0310  0800               	movf	0,w	;code access
  4809  0311  0021               	movlb	1	; select bank1
  4810  0312  00D5               	movwf	(??_display_update+5)^(0+128)
  4811  0313  0855               	movf	(??_display_update+5)^(0+128),w
  4812  0314  00CD               	movwf	display_write_once@ML^(0+128)
  4813  0315  300A               	movlw	10
  4814  0316  0020               	movlb	0	; select bank0
  4815  0317  00BA               	movwf	___awmod@divisor
  4816  0318  3000               	movlw	0
  4817  0319  00BB               	movwf	___awmod@divisor+1
  4818  031A  0021               	movlb	1	; select bank1
  4819  031B  085B               	movf	display_update@pdata^(0+128),w
  4820  031C  3E04               	addlw	4
  4821  031D  0086               	movwf	6
  4822  031E  0187               	clrf	7
  4823  031F  0801               	movf	1,w
  4824  0320  00D6               	movwf	(??_display_update+6)^(0+128)
  4825  0321  01D7               	clrf	((??_display_update+6)^(0+128)+1)
  4826  0322  0856               	movf	(??_display_update+6)^(0+128),w
  4827  0323  0020               	movlb	0	; select bank0
  4828  0324  00BC               	movwf	___awmod@dividend
  4829  0325  0021               	movlb	1	; select bank1
  4830  0326  0857               	movf	(??_display_update+7)^(0+128),w
  4831  0327  0020               	movlb	0	; select bank0
  4832  0328  00BD               	movwf	___awmod@dividend+1
  4833  0329  3185  259C  3182   	fcall	___awmod
  4834  032C  0020               	movlb	0	; select bank0
  4835  032D  083B               	movf	?___awmod+1,w
  4836  032E  0085               	movwf	5
  4837  032F  083A               	movf	?___awmod,w
  4838  0330  0084               	movwf	4
  4839  0331  3000               	movlw	low (_segmcode| (0+32768))
  4840  0332  0784               	addwf	4,f
  4841  0333  3090               	movlw	high (_segmcode| (0+32768))
  4842  0334  3D85               	addwfc	5,f
  4843  0335  0800               	movf	0,w	;code access
  4844  0336  0021               	movlb	1	; select bank1
  4845  0337  00D8               	movwf	(??_display_update+8)^(0+128)
  4846  0338  0858               	movf	(??_display_update+8)^(0+128),w
  4847  0339  00CE               	movwf	display_write_once@MR^(0+128)
  4848  033A  085A               	movf	(_display_update$1481+1)^(0+128),w
  4849  033B  0085               	movwf	5
  4850  033C  0859               	movf	_display_update$1481^(0+128),w
  4851  033D  0084               	movwf	4
  4852  033E  3000               	movlw	low (_segmcode| (0+32768))
  4853  033F  0784               	addwf	4,f
  4854  0340  3090               	movlw	high (_segmcode| (0+32768))
  4855  0341  3D85               	addwfc	5,f
  4856  0342  0800               	movf	0,w	;code access
  4857  0343  3187  2768         	fcall	_display_write_once
  4858  0345  0008               	return
  4859  0346                     __end_of_display_update:	
  4860                           
  4861                           	psect	text11
  4862  0768                     __ptext11:	
  4863 ;; *************** function _display_write_once *****************
  4864 ;; Defined at:
  4865 ;;		line 54 in file "display.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  HL              1    wreg     unsigned char 
  4868 ;;  HR              1    5[BANK1 ] unsigned char 
  4869 ;;  ML              1    6[BANK1 ] unsigned char 
  4870 ;;  MR              1    7[BANK1 ] unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  HL              1    8[BANK1 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4882 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;Total ram usage:        4 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    8
  4889 ;; This function calls:
  4890 ;;		_display_control595_delay
  4891 ;;		_display_write_byte
  4892 ;; This function is called by:
  4893 ;;		_display_update
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _display_write_once
  4899  0768                     _display_write_once:	
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _display_write_once: [wreg+status,2+status,0+pclath+cstack]
  4903                           ;display_write_once@HL stored from wreg
  4904  0768  0021               	movlb	1	; select bank1
  4905  0769  00CF               	movwf	display_write_once@HL^(0+128)
  4906                           
  4907                           ;display.c: 56:     display_write_byte(HL);
  4908  076A  084F               	movf	display_write_once@HL^(0+128),w
  4909  076B  3186  26C0  3187   	fcall	_display_write_byte
  4910                           
  4911                           ;display.c: 57:     display_write_byte(HR);
  4912  076E  0021               	movlb	1	; select bank1
  4913  076F  084C               	movf	display_write_once@HR^(0+128),w
  4914  0770  3186  26C0  3187   	fcall	_display_write_byte
  4915                           
  4916                           ;display.c: 58:     display_write_byte(ML);
  4917  0773  0021               	movlb	1	; select bank1
  4918  0774  084D               	movf	display_write_once@ML^(0+128),w
  4919  0775  3186  26C0  3187   	fcall	_display_write_byte
  4920                           
  4921                           ;display.c: 59:     display_write_byte(MR);
  4922  0778  0021               	movlb	1	; select bank1
  4923  0779  084E               	movf	display_write_once@MR^(0+128),w
  4924  077A  3186  26C0  3187   	fcall	_display_write_byte
  4925                           
  4926                           ;display.c: 62:     LATBbits.LATB0 = PIN_LOW;
  4927  077D  0022               	movlb	2	; select bank2
  4928  077E  100D               	bcf	13,0	;volatile
  4929                           
  4930                           ;display.c: 63:     display_control595_delay();
  4931  077F  318F  27C9  3187   	fcall	_display_control595_delay
  4932                           
  4933                           ;display.c: 64:     LATBbits.LATB0 = PIN_HIGH;
  4934  0782  0022               	movlb	2	; select bank2
  4935  0783  140D               	bsf	13,0	;volatile
  4936                           
  4937                           ;display.c: 65:     display_control595_delay();
  4938  0784  318F  27C9  3187   	fcall	_display_control595_delay
  4939                           
  4940                           ;display.c: 67:     LATBbits.LATB1 = PIN_HIGH;
  4941  0787  0022               	movlb	2	; select bank2
  4942  0788  148D               	bsf	13,1	;volatile
  4943                           
  4944                           ;display.c: 68:  display_control595_delay();
  4945  0789  318F  27C9         	fcall	_display_control595_delay
  4946                           
  4947                           ;display.c: 69:     LATBbits.LATB1 = PIN_LOW;
  4948  078B  0022               	movlb	2	; select bank2
  4949  078C  108D               	bcf	13,1	;volatile
  4950  078D  0008               	return
  4951  078E                     __end_of_display_write_once:	
  4952                           
  4953                           	psect	text12
  4954  06C0                     __ptext12:	
  4955 ;; *************** function _display_write_byte *****************
  4956 ;; Defined at:
  4957 ;;		line 42 in file "display.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  data            1    wreg     unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  data            1    0[BANK1 ] unsigned char 
  4962 ;;  i               1    1[BANK1 ] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0, pclath, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;Total ram usage:        4 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    7
  4979 ;; This function calls:
  4980 ;;		_display_control595_delay
  4981 ;; This function is called by:
  4982 ;;		_display_write_once
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _display_write_byte
  4988  06C0                     _display_write_byte:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in _display_write_byte: [wreg+status,2+status,0+pclath+cstack]
  4992                           ;display_write_byte@data stored from wreg
  4993  06C0  0021               	movlb	1	; select bank1
  4994  06C1  00C7               	movwf	display_write_byte@data^(0+128)
  4995                           
  4996                           ;display.c: 43:     u8 i;;display.c: 44:     for(i = 0; i < 8; i++){
  4997  06C2  01C8               	clrf	display_write_byte@i^(0+128)
  4998  06C3                     l3298:	
  4999                           
  5000                           ;display.c: 45:   LATBbits.LATB5 = (data & 0x80) >> 7;
  5001  06C3  0847               	movf	display_write_byte@data^(0+128),w
  5002  06C4  0020               	movlb	0	; select bank0
  5003  06C5  00BC               	movwf	??_display_write_byte
  5004  06C6  3007               	movlw	7
  5005  06C7                     u2895:	
  5006  06C7  36BC               	lsrf	??_display_write_byte,f
  5007  06C8  0B89               	decfsz	9,f
  5008  06C9  2EC7               	goto	u2895
  5009  06CA  083C               	movf	??_display_write_byte,w
  5010  06CB  3901               	andlw	1
  5011  06CC  00BD               	movwf	??_display_write_byte+1
  5012  06CD  0EBD               	swapf	??_display_write_byte+1,f
  5013  06CE  0DBD               	rlf	??_display_write_byte+1,f
  5014  06CF  0022               	movlb	2	; select bank2
  5015  06D0  080D               	movf	13,w	;volatile
  5016  06D1  0020               	movlb	0	; select bank0
  5017  06D2  063D               	xorwf	??_display_write_byte+1,w
  5018  06D3  39DF               	andlw	-33
  5019  06D4  063D               	xorwf	??_display_write_byte+1,w
  5020  06D5  0022               	movlb	2	; select bank2
  5021  06D6  008D               	movwf	13	;volatile
  5022                           
  5023                           ;display.c: 46:         LATBbits.LATB0 = PIN_LOW;
  5024  06D7  100D               	bcf	13,0	;volatile
  5025                           
  5026                           ;display.c: 47:   display_control595_delay();
  5027  06D8  318F  27C9  3186   	fcall	_display_control595_delay
  5028                           
  5029                           ;display.c: 48:         LATBbits.LATB0 = PIN_HIGH;
  5030  06DB  0022               	movlb	2	; select bank2
  5031  06DC  140D               	bsf	13,0	;volatile
  5032                           
  5033                           ;display.c: 49:   display_control595_delay();
  5034  06DD  318F  27C9  3186   	fcall	_display_control595_delay
  5035                           
  5036                           ;display.c: 50:         data <<= 1;
  5037  06E0  1003               	clrc
  5038  06E1  0021               	movlb	1	; select bank1
  5039  06E2  0DC7               	rlf	display_write_byte@data^(0+128),f
  5040                           
  5041                           ;display.c: 51:     }
  5042  06E3  3001               	movlw	1
  5043  06E4  0020               	movlb	0	; select bank0
  5044  06E5  00BC               	movwf	??_display_write_byte
  5045  06E6  083C               	movf	??_display_write_byte,w
  5046  06E7  0021               	movlb	1	; select bank1
  5047  06E8  07C8               	addwf	display_write_byte@i^(0+128),f
  5048  06E9  3008               	movlw	8
  5049  06EA  0248               	subwf	display_write_byte@i^(0+128),w
  5050  06EB  1803               	btfsc	3,0
  5051  06EC  0008               	return
  5052  06ED  2EC3               	goto	l3298
  5053  06EE                     __end_of_display_write_byte:	
  5054                           
  5055                           	psect	text13
  5056  0FC9                     __ptext13:	
  5057 ;; *************** function _display_control595_delay *****************
  5058 ;; Defined at:
  5059 ;;		line 26 in file "display.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  times           1   27[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        2 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_display_write_byte
  5084 ;;		_display_write_once
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           
  5089                           ;psect for function _display_control595_delay
  5090  0FC9                     _display_control595_delay:	
  5091                           
  5092                           ;display.c: 27:    u8 times = 10;
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _display_control595_delay: [wreg+status,2+status,0]
  5096  0FC9  300A               	movlw	10
  5097  0FCA  0020               	movlb	0	; select bank0
  5098  0FCB  00BA               	movwf	??_display_control595_delay
  5099  0FCC  083A               	movf	??_display_control595_delay,w
  5100  0FCD  00BB               	movwf	display_control595_delay@times
  5101  0FCE                     l538:	
  5102                           ;display.c: 31:    }
  5103                           
  5104                           ;display.c: 28:    while(times > 0){
  5105                           
  5106                           
  5107                           ;display.c: 28:    while(times > 0){
  5108  0FCE  083B               	movf	display_control595_delay@times,w
  5109  0FCF  1903               	btfsc	3,2
  5110  0FD0  0008               	return
  5111                           
  5112                           ;display.c: 29:     __nop();
  5113  0FD1  0000               	nop
  5114                           
  5115                           ;display.c: 30:        times--;
  5116  0FD2  3001               	movlw	1
  5117  0FD3  0020               	movlb	0	; select bank0
  5118  0FD4  02BB               	subwf	display_control595_delay@times,f
  5119  0FD5  2FCE               	goto	l538
  5120  0FD6                     __end_of_display_control595_delay:	
  5121                           
  5122                           	psect	text14
  5123  0002                     __ptext14:	
  5124 ;; *************** function _data_getdata *****************
  5125 ;; Defined at:
  5126 ;;		line 9 in file "data.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      PTR volatile struct .
  5133 ;; Registers used:
  5134 ;;		wreg
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    6
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_init_env
  5151 ;;		_display_update
  5152 ;;		_tmp_change
  5153 ;;		_update_time
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _data_getdata
  5159  0002                     _data_getdata:	
  5160                           
  5161                           ;data.c: 11:     return &g_data;
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _data_getdata: [wreg]
  5165  0002  30A0               	movlw	(low (_g_data| 0))& (0+255)
  5166  0003  0008               	return
  5167  0004                     __end_of_data_getdata:	
  5168                           
  5169                           	psect	text15
  5170  059C                     __ptext15:	
  5171 ;; *************** function ___awmod *****************
  5172 ;; Defined at:
  5173 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  divisor         2   26[BANK0 ] int 
  5176 ;;  dividend        2   28[BANK0 ] int 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  sign            1    2[BANK1 ] unsigned char 
  5179 ;;  counter         1    1[BANK1 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  2   26[BANK0 ] int 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;Total ram usage:        7 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    6
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_display_update
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function ___awmod
  5205  059C                     ___awmod:	
  5206                           
  5207                           ;incstack = 0
  5208                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5209  059C  0021               	movlb	1	; select bank1
  5210  059D  01C9               	clrf	___awmod@sign^(0+128)
  5211  059E  0020               	movlb	0	; select bank0
  5212  059F  1FBD               	btfss	___awmod@dividend+1,7
  5213  05A0  2DA9               	goto	l3380
  5214  05A1  09BC               	comf	___awmod@dividend,f
  5215  05A2  09BD               	comf	___awmod@dividend+1,f
  5216  05A3  0ABC               	incf	___awmod@dividend,f
  5217  05A4  1903               	skipnz
  5218  05A5  0ABD               	incf	___awmod@dividend+1,f
  5219  05A6  0021               	movlb	1	; select bank1
  5220  05A7  01C9               	clrf	___awmod@sign^(0+128)
  5221  05A8  0AC9               	incf	___awmod@sign^(0+128),f
  5222  05A9                     l3380:	
  5223  05A9  0020               	movlb	0	; select bank0
  5224  05AA  1FBB               	btfss	___awmod@divisor+1,7
  5225  05AB  2DB1               	goto	l3384
  5226  05AC  09BA               	comf	___awmod@divisor,f
  5227  05AD  09BB               	comf	___awmod@divisor+1,f
  5228  05AE  0ABA               	incf	___awmod@divisor,f
  5229  05AF  1903               	skipnz
  5230  05B0  0ABB               	incf	___awmod@divisor+1,f
  5231  05B1                     l3384:	
  5232  05B1  083A               	movf	___awmod@divisor,w
  5233  05B2  043B               	iorwf	___awmod@divisor+1,w
  5234  05B3  1903               	btfsc	3,2
  5235  05B4  2DDD               	goto	l3402
  5236  05B5  0021               	movlb	1	; select bank1
  5237  05B6  01C8               	clrf	___awmod@counter^(0+128)
  5238  05B7  0AC8               	incf	___awmod@counter^(0+128),f
  5239  05B8                     l3392:	
  5240  05B8  0020               	movlb	0	; select bank0
  5241  05B9  1BBB               	btfsc	___awmod@divisor+1,7
  5242  05BA  2DC6               	goto	l3394
  5243  05BB  3001               	movlw	1
  5244  05BC                     u3045:	
  5245  05BC  35BA               	lslf	___awmod@divisor,f
  5246  05BD  0DBB               	rlf	___awmod@divisor+1,f
  5247  05BE  0B89               	decfsz	9,f
  5248  05BF  2DBC               	goto	u3045
  5249  05C0  3001               	movlw	1
  5250  05C1  0021               	movlb	1	; select bank1
  5251  05C2  00C7               	movwf	??___awmod^(0+128)
  5252  05C3  0847               	movf	??___awmod^(0+128),w
  5253  05C4  07C8               	addwf	___awmod@counter^(0+128),f
  5254  05C5  2DB8               	goto	l3392
  5255  05C6                     l3394:	
  5256  05C6  0020               	movlb	0	; select bank0
  5257  05C7  083B               	movf	___awmod@divisor+1,w
  5258  05C8  023D               	subwf	___awmod@dividend+1,w
  5259  05C9  1D03               	skipz
  5260  05CA  2DCD               	goto	u3065
  5261  05CB  083A               	movf	___awmod@divisor,w
  5262  05CC  023C               	subwf	___awmod@dividend,w
  5263  05CD                     u3065:	
  5264  05CD  1C03               	skipc
  5265  05CE  2DD3               	goto	l3398
  5266  05CF  083A               	movf	___awmod@divisor,w
  5267  05D0  02BC               	subwf	___awmod@dividend,f
  5268  05D1  083B               	movf	___awmod@divisor+1,w
  5269  05D2  3BBD               	subwfb	___awmod@dividend+1,f
  5270  05D3                     l3398:	
  5271  05D3  3001               	movlw	1
  5272  05D4                     u3075:	
  5273  05D4  36BB               	lsrf	___awmod@divisor+1,f
  5274  05D5  0CBA               	rrf	___awmod@divisor,f
  5275  05D6  0B89               	decfsz	9,f
  5276  05D7  2DD4               	goto	u3075
  5277  05D8  3001               	movlw	1
  5278  05D9  0021               	movlb	1	; select bank1
  5279  05DA  02C8               	subwf	___awmod@counter^(0+128),f
  5280  05DB  1D03               	btfss	3,2
  5281  05DC  2DC6               	goto	l3394
  5282  05DD                     l3402:	
  5283  05DD  0021               	movlb	1	; select bank1
  5284  05DE  0849               	movf	___awmod@sign^(0+128),w
  5285  05DF  1903               	btfsc	3,2
  5286  05E0  2DE7               	goto	l3406
  5287  05E1  0020               	movlb	0	; select bank0
  5288  05E2  09BC               	comf	___awmod@dividend,f
  5289  05E3  09BD               	comf	___awmod@dividend+1,f
  5290  05E4  0ABC               	incf	___awmod@dividend,f
  5291  05E5  1903               	skipnz
  5292  05E6  0ABD               	incf	___awmod@dividend+1,f
  5293  05E7                     l3406:	
  5294  05E7  0020               	movlb	0	; select bank0
  5295  05E8  083D               	movf	___awmod@dividend+1,w
  5296  05E9  00BB               	movwf	?___awmod+1
  5297  05EA  083C               	movf	___awmod@dividend,w
  5298  05EB  00BA               	movwf	?___awmod
  5299  05EC  0008               	return
  5300  05ED                     __end_of___awmod:	
  5301                           
  5302                           	psect	text16
  5303  0538                     __ptext16:	
  5304 ;; *************** function ___awdiv *****************
  5305 ;; Defined at:
  5306 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  divisor         2   26[BANK0 ] int 
  5309 ;;  dividend        2   28[BANK0 ] int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  quotient        2    3[BANK1 ] int 
  5312 ;;  sign            1    2[BANK1 ] unsigned char 
  5313 ;;  counter         1    1[BANK1 ] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2   26[BANK0 ] int 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5323 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;Total ram usage:        9 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    6
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_display_update
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function ___awdiv
  5339  0538                     ___awdiv:	
  5340                           
  5341                           ;incstack = 0
  5342                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5343  0538  0021               	movlb	1	; select bank1
  5344  0539  01C9               	clrf	___awdiv@sign^(0+128)
  5345  053A  0020               	movlb	0	; select bank0
  5346  053B  1FBB               	btfss	___awdiv@divisor+1,7
  5347  053C  2D45               	goto	l3336
  5348  053D  09BA               	comf	___awdiv@divisor,f
  5349  053E  09BB               	comf	___awdiv@divisor+1,f
  5350  053F  0ABA               	incf	___awdiv@divisor,f
  5351  0540  1903               	skipnz
  5352  0541  0ABB               	incf	___awdiv@divisor+1,f
  5353  0542  0021               	movlb	1	; select bank1
  5354  0543  01C9               	clrf	___awdiv@sign^(0+128)
  5355  0544  0AC9               	incf	___awdiv@sign^(0+128),f
  5356  0545                     l3336:	
  5357  0545  0020               	movlb	0	; select bank0
  5358  0546  1FBD               	btfss	___awdiv@dividend+1,7
  5359  0547  2D52               	goto	l3342
  5360  0548  09BC               	comf	___awdiv@dividend,f
  5361  0549  09BD               	comf	___awdiv@dividend+1,f
  5362  054A  0ABC               	incf	___awdiv@dividend,f
  5363  054B  1903               	skipnz
  5364  054C  0ABD               	incf	___awdiv@dividend+1,f
  5365  054D  3001               	movlw	1
  5366  054E  0021               	movlb	1	; select bank1
  5367  054F  00C7               	movwf	??___awdiv^(0+128)
  5368  0550  0847               	movf	??___awdiv^(0+128),w
  5369  0551  06C9               	xorwf	___awdiv@sign^(0+128),f
  5370  0552                     l3342:	
  5371  0552  0021               	movlb	1	; select bank1
  5372  0553  01CA               	clrf	___awdiv@quotient^(0+128)
  5373  0554  01CB               	clrf	(___awdiv@quotient+1)^(0+128)
  5374  0555  0020               	movlb	0	; select bank0
  5375  0556  083A               	movf	___awdiv@divisor,w
  5376  0557  043B               	iorwf	___awdiv@divisor+1,w
  5377  0558  1903               	btfsc	3,2
  5378  0559  2D8B               	goto	l3364
  5379  055A  0021               	movlb	1	; select bank1
  5380  055B  01C8               	clrf	___awdiv@counter^(0+128)
  5381  055C  0AC8               	incf	___awdiv@counter^(0+128),f
  5382  055D                     l3352:	
  5383  055D  0020               	movlb	0	; select bank0
  5384  055E  1BBB               	btfsc	___awdiv@divisor+1,7
  5385  055F  2D6B               	goto	l3354
  5386  0560  3001               	movlw	1
  5387  0561                     u2945:	
  5388  0561  35BA               	lslf	___awdiv@divisor,f
  5389  0562  0DBB               	rlf	___awdiv@divisor+1,f
  5390  0563  0B89               	decfsz	9,f
  5391  0564  2D61               	goto	u2945
  5392  0565  3001               	movlw	1
  5393  0566  0021               	movlb	1	; select bank1
  5394  0567  00C7               	movwf	??___awdiv^(0+128)
  5395  0568  0847               	movf	??___awdiv^(0+128),w
  5396  0569  07C8               	addwf	___awdiv@counter^(0+128),f
  5397  056A  2D5D               	goto	l3352
  5398  056B                     l3354:	
  5399  056B  3001               	movlw	1
  5400  056C  0021               	movlb	1	; select bank1
  5401  056D                     u2965:	
  5402  056D  35CA               	lslf	___awdiv@quotient^(0+128),f
  5403  056E  0DCB               	rlf	(___awdiv@quotient+1)^(0+128),f
  5404  056F  0B89               	decfsz	9,f
  5405  0570  2D6D               	goto	u2965
  5406  0571  0020               	movlb	0	; select bank0
  5407  0572  083B               	movf	___awdiv@divisor+1,w
  5408  0573  023D               	subwf	___awdiv@dividend+1,w
  5409  0574  1D03               	skipz
  5410  0575  2D78               	goto	u2975
  5411  0576  083A               	movf	___awdiv@divisor,w
  5412  0577  023C               	subwf	___awdiv@dividend,w
  5413  0578                     u2975:	
  5414  0578  1C03               	skipc
  5415  0579  2D80               	goto	l3360
  5416  057A  083A               	movf	___awdiv@divisor,w
  5417  057B  02BC               	subwf	___awdiv@dividend,f
  5418  057C  083B               	movf	___awdiv@divisor+1,w
  5419  057D  3BBD               	subwfb	___awdiv@dividend+1,f
  5420  057E  0021               	movlb	1	; select bank1
  5421  057F  144A               	bsf	___awdiv@quotient^(0+128),0
  5422  0580                     l3360:	
  5423  0580  3001               	movlw	1
  5424  0581  0020               	movlb	0	; select bank0
  5425  0582                     u2985:	
  5426  0582  36BB               	lsrf	___awdiv@divisor+1,f
  5427  0583  0CBA               	rrf	___awdiv@divisor,f
  5428  0584  0B89               	decfsz	9,f
  5429  0585  2D82               	goto	u2985
  5430  0586  3001               	movlw	1
  5431  0587  0021               	movlb	1	; select bank1
  5432  0588  02C8               	subwf	___awdiv@counter^(0+128),f
  5433  0589  1D03               	btfss	3,2
  5434  058A  2D6B               	goto	l3354
  5435  058B                     l3364:	
  5436  058B  0021               	movlb	1	; select bank1
  5437  058C  0849               	movf	___awdiv@sign^(0+128),w
  5438  058D  1903               	btfsc	3,2
  5439  058E  2D94               	goto	l3368
  5440  058F  09CA               	comf	___awdiv@quotient^(0+128),f
  5441  0590  09CB               	comf	(___awdiv@quotient+1)^(0+128),f
  5442  0591  0ACA               	incf	___awdiv@quotient^(0+128),f
  5443  0592  1903               	skipnz
  5444  0593  0ACB               	incf	(___awdiv@quotient+1)^(0+128),f
  5445  0594                     l3368:	
  5446  0594  084B               	movf	(___awdiv@quotient+1)^(0+128),w
  5447  0595  0020               	movlb	0	; select bank0
  5448  0596  00BB               	movwf	?___awdiv+1
  5449  0597  0021               	movlb	1	; select bank1
  5450  0598  084A               	movf	___awdiv@quotient^(0+128),w
  5451  0599  0020               	movlb	0	; select bank0
  5452  059A  00BA               	movwf	?___awdiv
  5453  059B  0008               	return
  5454  059C                     __end_of___awdiv:	
  5455                           
  5456                           	psect	intentry
  5457  0004                     __pintentry:	
  5458 ;; *************** function _ISR *****************
  5459 ;; Defined at:
  5460 ;;		line 193 in file "main.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:        2 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    5
  5481 ;; This function calls:
  5482 ;;		___lwmod
  5483 ;;		_bpc_proc
  5484 ;;		_capture_IsIntrpt
  5485 ;;		_capture_Set
  5486 ;;		_capture_clrIntrpt
  5487 ;;		_capture_handdle
  5488 ;;		_capture_init
  5489 ;;		_key_isPressed
  5490 ;;		_led_Blink
  5491 ;;		_timer_IsTimer0Itrpt
  5492 ;;		_timer_IsTimer1Itrpt
  5493 ;;		_timer_Timer0Handdle
  5494 ;;		_timer_Timer1ClrIntrpt
  5495 ;;		i1_timer_Timer0Reset
  5496 ;; This function is called by:
  5497 ;;		Interrupt level 1
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501  0004                     _ISR:	
  5502                           
  5503                           ;incstack = 0
  5504  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5505                           
  5506                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5507  0005  3180               	pagesel	$
  5508                           
  5509                           ;main.c: 195:     };main.c: 198: 
  5510  0006  318F  276A  3180   	fcall	_timer_IsTimer1Itrpt
  5511  0009  3A00               	xorlw	0
  5512  000A  1903               	skipnz
  5513  000B  280F               	goto	i1l3216
  5514                           
  5515                           ;main.c: 199: ;main.c: 202:     static u16 i = 0;
  5516  000C  318F  275C  3180   	fcall	_timer_Timer1ClrIntrpt
  5517  000F                     i1l3216:	
  5518                           
  5519                           ;main.c: 207:     init_env();
  5520  000F  318F  2766  3180   	fcall	_timer_IsTimer0Itrpt
  5521  0012  3A00               	xorlw	0
  5522  0013  1903               	skipnz
  5523  0014  2847               	goto	i1l3228
  5524                           
  5525                           ;main.c: 208: ;main.c: 209: 
  5526  0015  318F  2759  3180   	fcall	_timer_Timer0Handdle
  5527                           
  5528                           ;main.c: 211:     timer_Timer0Start();
  5529  0018  3187  27E2  3180   	fcall	_key_isPressed
  5530  001B  3A00               	xorlw	0
  5531  001C  1903               	skipnz
  5532  001D  2825               	goto	i1l135
  5533                           
  5534                           ;main.c: 212: ;main.c: 213: 
  5535  001E  318F  2782  3180   	fcall	_capture_init
  5536                           
  5537                           ;main.c: 214:     timer_Timer1Init();
  5538  0021  3001               	movlw	1
  5539  0022  318F  27BD  3180   	fcall	_capture_Set
  5540  0025                     i1l135:	
  5541                           ;main.c: 215:     timer_Timer1Start();
  5542                           
  5543                           
  5544                           ;main.c: 217: 
  5545  0025  3064               	movlw	100
  5546  0026  00F0               	movwf	___lwmod@divisor
  5547  0027  3000               	movlw	0
  5548  0028  00F1               	movwf	___lwmod@divisor+1
  5549  0029  0020               	movlb	0	; select bank0
  5550  002A  0847               	movf	ISR@cnt+1,w
  5551  002B  00B9               	movwf	??_ISR+1
  5552  002C  0846               	movf	ISR@cnt,w
  5553  002D  00B8               	movwf	??_ISR
  5554  002E  0AC6               	incf	ISR@cnt,f
  5555  002F  1903               	skipnz
  5556  0030  0AC7               	incf	ISR@cnt+1,f
  5557  0031  0838               	movf	??_ISR,w
  5558  0032  00F2               	movwf	___lwmod@dividend
  5559  0033  0839               	movf	??_ISR+1,w
  5560  0034  00F3               	movwf	___lwmod@dividend+1
  5561  0035  3186  26EE  3180   	fcall	___lwmod
  5562  0038  0870               	movf	?___lwmod,w
  5563  0039  0471               	iorwf	?___lwmod+1,w
  5564  003A  1D03               	btfss	3,2
  5565  003B  2844               	goto	i1l3226
  5566                           
  5567                           ;main.c: 218: ;main.c: 220: ;main.c: 221: 
  5568  003C  318F  27A7  3180   	fcall	_led_Blink
  5569                           
  5570                           ;main.c: 225:     display_update();
  5571  003F  3001               	movlw	1
  5572  0040  0020               	movlb	0	; select bank0
  5573  0041  00B8               	movwf	??_ISR
  5574  0042  0838               	movf	??_ISR,w
  5575  0043  07D3               	addwf	ISR@tx,f
  5576  0044                     i1l3226:	
  5577                           
  5578                           ;main.c: 227: 
  5579  0044  318F  2772  3180   	fcall	i1_timer_Timer0Reset
  5580  0047                     i1l3228:	
  5581                           
  5582                           ;main.c: 230:         if(i++ == 65535)
  5583  0047  318F  2762  3180   	fcall	_capture_IsIntrpt
  5584  004A  3A00               	xorlw	0
  5585  004B  1903               	skipnz
  5586  004C  2855               	goto	i1l140
  5587                           
  5588                           ;main.c: 231:         {;main.c: 232: 
  5589  004D  3184  246B  3180   	fcall	_capture_handdle
  5590                           
  5591                           ;main.c: 234: 
  5592  0050  3180  206C  3180   	fcall	_bpc_proc
  5593                           
  5594                           ;main.c: 236:     }
  5595  0053  318F  2756         	fcall	_capture_clrIntrpt
  5596  0055                     i1l140:	
  5597  0055  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5598  0056  0009               	retfie
  5599  0057                     __end_of_ISR:	
  5600                           
  5601                           	psect	text18
  5602  0F72                     __ptext18:	
  5603 ;; *************** function i1_timer_Timer0Reset *****************
  5604 ;; Defined at:
  5605 ;;		line 91 in file "timer.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_ISR
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function i1_timer_Timer0Reset
  5634  0F72                     i1_timer_Timer0Reset:	
  5635                           
  5636                           ;timer.c: 93:     INTCONbits.TMR0IF = 0;
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in i1_timer_Timer0Reset: [wreg]
  5640  0F72  110B               	bcf	11,2	;volatile
  5641                           
  5642                           ;timer.c: 94:     TMR0 = (217 + 14);
  5643  0F73  30E7               	movlw	231
  5644  0F74  0020               	movlb	0	; select bank0
  5645  0F75  0095               	movwf	21	;volatile
  5646  0F76  0008               	return
  5647  0F77                     __end_ofi1_timer_Timer0Reset:	
  5648                           
  5649                           	psect	text19
  5650  0F5C                     __ptext19:	
  5651 ;; *************** function _timer_Timer1ClrIntrpt *****************
  5652 ;; Defined at:
  5653 ;;		line 51 in file "timer.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		None
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_ISR
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _timer_Timer1ClrIntrpt
  5682  0F5C                     _timer_Timer1ClrIntrpt:	
  5683                           
  5684                           ;timer.c: 53:     PIR1bits.TMR1IF = 0b0;
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _timer_Timer1ClrIntrpt: []
  5688  0F5C  0020               	movlb	0	; select bank0
  5689  0F5D  1011               	bcf	17,0	;volatile
  5690  0F5E  0008               	return
  5691  0F5F                     __end_of_timer_Timer1ClrIntrpt:	
  5692                           
  5693                           	psect	text20
  5694  0F59                     __ptext20:	
  5695 ;; *************** function _timer_Timer0Handdle *****************
  5696 ;; Defined at:
  5697 ;;		line 109 in file "timer.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  2   68[None  ] int 
  5704 ;; Registers used:
  5705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    3
  5718 ;; This function calls:
  5719 ;;		_key_checkPressed
  5720 ;; This function is called by:
  5721 ;;		_ISR
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _timer_Timer0Handdle
  5727  0F59                     _timer_Timer0Handdle:	
  5728                           
  5729                           ;timer.c: 111:     key_checkPressed();
  5730                           
  5731                           ;incstack = 0
  5732                           ; Regs used in _timer_Timer0Handdle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5733  0F59  3186  2683         	fcall	_key_checkPressed
  5734  0F5B  0008               	return
  5735  0F5C                     __end_of_timer_Timer0Handdle:	
  5736                           
  5737                           	psect	text21
  5738  0683                     __ptext21:	
  5739 ;; *************** function _key_checkPressed *****************
  5740 ;; Defined at:
  5741 ;;		line 123 in file "hardware.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  pdata           1    8[COMMON] PTR volatile struct .
  5746 ;;		 -> g_data(39), 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;Total ram usage:        3 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    2
  5763 ;; This function calls:
  5764 ;;		___lwmod
  5765 ;;		_led_Blink
  5766 ;;		i1_data_getdata
  5767 ;; This function is called by:
  5768 ;;		_timer_Timer0Handdle
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _key_checkPressed
  5774  0683                     _key_checkPressed:	
  5775                           
  5776                           ;hardware.c: 125:     static u8 history_key = 0;;hardware.c: 126:     static u16 key_tim
      +                          e_cnt = 0;;hardware.c: 127:     G_DATA *pdata = data_getdata();
  5777                           
  5778                           ;incstack = 0
  5779                           ; Regs used in _key_checkPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5780  0683  318F  2754  3186   	fcall	i1_data_getdata
  5781  0686  00F6               	movwf	??_key_checkPressed
  5782  0687  0876               	movf	??_key_checkPressed,w
  5783  0688  00F8               	movwf	key_checkPressed@pdata
  5784                           
  5785                           ;hardware.c: 129:     if(key_time_cnt++ % 10 == 0)
  5786  0689  300A               	movlw	10
  5787  068A  00F0               	movwf	___lwmod@divisor
  5788  068B  3000               	movlw	0
  5789  068C  00F1               	movwf	___lwmod@divisor+1
  5790  068D  0020               	movlb	0	; select bank0
  5791  068E  083F               	movf	key_checkPressed@key_time_cnt+1,w
  5792  068F  00F7               	movwf	??_key_checkPressed+1
  5793  0690  083E               	movf	key_checkPressed@key_time_cnt,w
  5794  0691  00F6               	movwf	??_key_checkPressed
  5795  0692  0ABE               	incf	key_checkPressed@key_time_cnt,f
  5796  0693  1903               	skipnz
  5797  0694  0ABF               	incf	key_checkPressed@key_time_cnt+1,f
  5798  0695  0876               	movf	??_key_checkPressed,w
  5799  0696  00F2               	movwf	___lwmod@dividend
  5800  0697  0877               	movf	??_key_checkPressed+1,w
  5801  0698  00F3               	movwf	___lwmod@dividend+1
  5802  0699  3186  26EE  3186   	fcall	___lwmod
  5803  069C  0870               	movf	?___lwmod,w
  5804  069D  0471               	iorwf	?___lwmod+1,w
  5805  069E  1D03               	btfss	3,2
  5806  069F  0008               	return
  5807                           
  5808                           ;hardware.c: 130:     {;hardware.c: 131:         history_key <<= 1;
  5809  06A0  1003               	clrc
  5810  06A1  0020               	movlb	0	; select bank0
  5811  06A2  0DCA               	rlf	key_checkPressed@history_key,f
  5812                           
  5813                           ;hardware.c: 132:         history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  5814  06A3  0E0E               	swapf	14,w	;volatile
  5815  06A4  0C89               	rrf	9,f
  5816  06A5  3901               	andlw	1
  5817  06A6  00F6               	movwf	??_key_checkPressed
  5818  06A7  0876               	movf	??_key_checkPressed,w
  5819  06A8  04CA               	iorwf	key_checkPressed@history_key,f
  5820                           
  5821                           ;hardware.c: 135:         if(((0x03) == (history_key & (0x0f))) && (FALSE == pdata->g_fl
      +                          g_switch))
  5822  06A9  300F               	movlw	15
  5823  06AA  054A               	andwf	key_checkPressed@history_key,w
  5824  06AB  00F6               	movwf	??_key_checkPressed
  5825  06AC  3003               	movlw	3
  5826  06AD  0676               	xorwf	??_key_checkPressed,w
  5827  06AE  1D03               	btfss	3,2
  5828  06AF  0008               	return
  5829  06B0  0878               	movf	key_checkPressed@pdata,w
  5830  06B1  0086               	movwf	6
  5831  06B2  0187               	clrf	7
  5832  06B3  0801               	movf	1,w
  5833  06B4  1D03               	btfss	3,2
  5834  06B5  0008               	return
  5835                           
  5836                           ;hardware.c: 136:         {;hardware.c: 137:             pdata->g_flg_switch = TRUE;
  5837  06B6  3001               	movlw	1
  5838  06B7  00F6               	movwf	??_key_checkPressed
  5839  06B8  0878               	movf	key_checkPressed@pdata,w
  5840  06B9  0086               	movwf	6
  5841  06BA  0187               	clrf	7
  5842  06BB  0876               	movf	??_key_checkPressed,w
  5843  06BC  0081               	movwf	1
  5844                           
  5845                           ;hardware.c: 139:             led_Blink();
  5846  06BD  318F  27A7         	fcall	_led_Blink
  5847  06BF  0008               	return
  5848  06C0                     __end_of_key_checkPressed:	
  5849                           
  5850                           	psect	text22
  5851  0FA7                     __ptext22:	
  5852 ;; *************** function _led_Blink *****************
  5853 ;; Defined at:
  5854 ;;		line 113 in file "hardware.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      unsigned char 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;Total ram usage:        1 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    1
  5875 ;; This function calls:
  5876 ;;		i1_led_SetState
  5877 ;; This function is called by:
  5878 ;;		_ISR
  5879 ;;		_key_checkPressed
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           
  5884                           ;psect for function _led_Blink
  5885  0FA7                     _led_Blink:	
  5886                           
  5887                           ;hardware.c: 115:     static u8 State = 0;;hardware.c: 116:     led_SetState(State++ & 0
      +                          x01);
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _led_Blink: [wreg+status,2+status,0+pclath+cstack]
  5891  0FA7  0020               	movlb	0	; select bank0
  5892  0FA8  084B               	movf	led_Blink@State,w
  5893  0FA9  3901               	andlw	1
  5894  0FAA  3187  27F6         	fcall	i1_led_SetState
  5895  0FAC  3001               	movlw	1
  5896  0FAD  00F1               	movwf	??_led_Blink
  5897  0FAE  0871               	movf	??_led_Blink,w
  5898  0FAF  0020               	movlb	0	; select bank0
  5899  0FB0  07CB               	addwf	led_Blink@State,f
  5900  0FB1  0008               	return
  5901  0FB2                     __end_of_led_Blink:	
  5902                           
  5903                           	psect	text23
  5904  06EE                     __ptext23:	
  5905 ;; *************** function ___lwmod *****************
  5906 ;; Defined at:
  5907 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  divisor         2    0[COMMON] unsigned int 
  5910 ;;  dividend        2    2[COMMON] unsigned int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  counter         1    5[COMMON] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2    0[COMMON] unsigned int 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;Total ram usage:        6 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_ISR
  5932 ;;		_key_checkPressed
  5933 ;;		_tmp_change
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function ___lwmod
  5939  06EE                     ___lwmod:	
  5940                           
  5941                           ;incstack = 0
  5942                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5943  06EE  0870               	movf	___lwmod@divisor,w
  5944  06EF  0471               	iorwf	___lwmod@divisor+1,w
  5945  06F0  1903               	btfsc	3,2
  5946  06F1  2F15               	goto	i1l2352
  5947  06F2  01F5               	clrf	___lwmod@counter
  5948  06F3  0AF5               	incf	___lwmod@counter,f
  5949  06F4                     i1l2342:	
  5950  06F4  1BF1               	btfsc	___lwmod@divisor+1,7
  5951  06F5  2F00               	goto	i1l2344
  5952  06F6  3001               	movlw	1
  5953  06F7                     u157_25:	
  5954  06F7  35F0               	lslf	___lwmod@divisor,f
  5955  06F8  0DF1               	rlf	___lwmod@divisor+1,f
  5956  06F9  0B89               	decfsz	9,f
  5957  06FA  2EF7               	goto	u157_25
  5958  06FB  3001               	movlw	1
  5959  06FC  00F4               	movwf	??___lwmod
  5960  06FD  0874               	movf	??___lwmod,w
  5961  06FE  07F5               	addwf	___lwmod@counter,f
  5962  06FF  2EF4               	goto	i1l2342
  5963  0700                     i1l2344:	
  5964  0700  0871               	movf	___lwmod@divisor+1,w
  5965  0701  0273               	subwf	___lwmod@dividend+1,w
  5966  0702  1D03               	skipz
  5967  0703  2F06               	goto	u159_25
  5968  0704  0870               	movf	___lwmod@divisor,w
  5969  0705  0272               	subwf	___lwmod@dividend,w
  5970  0706                     u159_25:	
  5971  0706  1C03               	skipc
  5972  0707  2F0C               	goto	i1l2348
  5973  0708  0870               	movf	___lwmod@divisor,w
  5974  0709  02F2               	subwf	___lwmod@dividend,f
  5975  070A  0871               	movf	___lwmod@divisor+1,w
  5976  070B  3BF3               	subwfb	___lwmod@dividend+1,f
  5977  070C                     i1l2348:	
  5978  070C  3001               	movlw	1
  5979  070D                     u160_25:	
  5980  070D  36F1               	lsrf	___lwmod@divisor+1,f
  5981  070E  0CF0               	rrf	___lwmod@divisor,f
  5982  070F  0B89               	decfsz	9,f
  5983  0710  2F0D               	goto	u160_25
  5984  0711  3001               	movlw	1
  5985  0712  02F5               	subwf	___lwmod@counter,f
  5986  0713  1D03               	btfss	3,2
  5987  0714  2F00               	goto	i1l2344
  5988  0715                     i1l2352:	
  5989  0715  0873               	movf	___lwmod@dividend+1,w
  5990  0716  00F1               	movwf	?___lwmod+1
  5991  0717  0872               	movf	___lwmod@dividend,w
  5992  0718  00F0               	movwf	?___lwmod
  5993  0719  0008               	return
  5994  071A                     __end_of___lwmod:	
  5995                           
  5996                           	psect	text24
  5997  0F6A                     __ptext24:	
  5998 ;; *************** function _timer_IsTimer1Itrpt *****************
  5999 ;; Defined at:
  6000 ;;		line 46 in file "timer.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      enum E5232
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_ISR
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function _timer_IsTimer1Itrpt
  6029  0F6A                     _timer_IsTimer1Itrpt:	
  6030                           
  6031                           ;timer.c: 48:     return (PIR1bits.TMR1IF == 0b1)? TRUE : FALSE;
  6032                           
  6033                           ;incstack = 0
  6034                           ; Regs used in _timer_IsTimer1Itrpt: [wreg+status,2+status,0]
  6035  0F6A  0020               	movlb	0	; select bank0
  6036  0F6B  0811               	movf	17,w	;volatile
  6037  0F6C  3901               	andlw	1
  6038  0F6D  0008               	return
  6039  0F6E                     __end_of_timer_IsTimer1Itrpt:	
  6040                           
  6041                           	psect	text25
  6042  0F66                     __ptext25:	
  6043 ;; *************** function _timer_IsTimer0Itrpt *****************
  6044 ;; Defined at:
  6045 ;;		line 102 in file "timer.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      enum E5232
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_ISR
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _timer_IsTimer0Itrpt
  6074  0F66                     _timer_IsTimer0Itrpt:	
  6075                           
  6076                           ;timer.c: 104:     return (INTCONbits.TMR0IF == 0b1)? TRUE : FALSE;
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _timer_IsTimer0Itrpt: [wreg+status,2+status,0]
  6080  0F66  0C0B               	rrf	11,w	;volatile
  6081  0F67  0C89               	rrf	9,f
  6082  0F68  3901               	andlw	1
  6083  0F69  0008               	return
  6084  0F6A                     __end_of_timer_IsTimer0Itrpt:	
  6085                           
  6086                           	psect	text26
  6087  07E2                     __ptext26:	
  6088 ;; *************** function _key_isPressed *****************
  6089 ;; Defined at:
  6090 ;;		line 144 in file "hardware.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  pdata           1    1[COMMON] PTR volatile struct .
  6095 ;;		 -> g_data(39), 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      enum E5232
  6098 ;; Registers used:
  6099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;Total ram usage:        2 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    1
  6112 ;; This function calls:
  6113 ;;		i1_data_getdata
  6114 ;; This function is called by:
  6115 ;;		_ISR
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           
  6120                           ;psect for function _key_isPressed
  6121  07E2                     _key_isPressed:	
  6122                           
  6123                           ;hardware.c: 146:     G_DATA *pdata = data_getdata();
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in _key_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6127  07E2  318F  2754  3187   	fcall	i1_data_getdata
  6128  07E5  00F0               	movwf	??_key_isPressed
  6129  07E6  0870               	movf	??_key_isPressed,w
  6130  07E7  00F1               	movwf	key_isPressed@pdata
  6131                           
  6132                           ;hardware.c: 147:     if(pdata->g_flg_switch == TRUE){
  6133  07E8  0871               	movf	key_isPressed@pdata,w
  6134  07E9  0086               	movwf	6
  6135  07EA  0187               	clrf	7
  6136  07EB  0301               	decf	1,w
  6137  07EC  1D03               	btfss	3,2
  6138  07ED  2FF4               	goto	i1l2910
  6139                           
  6140                           ;hardware.c: 148:         pdata->g_flg_switch = FALSE;
  6141  07EE  0871               	movf	key_isPressed@pdata,w
  6142  07EF  0086               	movwf	6
  6143  07F0  0187               	clrf	7
  6144  07F1  0181               	clrf	1
  6145                           
  6146                           ;hardware.c: 149:         return TRUE;
  6147  07F2  3001               	movlw	1
  6148  07F3  0008               	return
  6149  07F4                     i1l2910:	
  6150                           
  6151                           ;hardware.c: 151:         return FALSE;
  6152  07F4  3000               	movlw	0
  6153  07F5  0008               	return
  6154  07F6                     __end_of_key_isPressed:	
  6155                           
  6156                           	psect	text27
  6157  0F82                     __ptext27:	
  6158 ;; *************** function _capture_init *****************
  6159 ;; Defined at:
  6160 ;;		line 25 in file "hardware.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    1
  6181 ;; This function calls:
  6182 ;;		_capture_setEdge
  6183 ;; This function is called by:
  6184 ;;		_ISR
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           
  6189                           ;psect for function _capture_init
  6190  0F82                     _capture_init:	
  6191                           
  6192                           ;hardware.c: 30:     capture_setEdge((0b0100));
  6193                           
  6194                           ;incstack = 0
  6195                           ; Regs used in _capture_init: [wreg+status,2+status,0+pclath+cstack]
  6196  0F82  3004               	movlw	4
  6197  0F83  318F  27F0         	fcall	_capture_setEdge
  6198                           
  6199                           ;hardware.c: 31:     TRISCbits.TRISC1 = 1;
  6200  0F85  0021               	movlb	1	; select bank1
  6201  0F86  148E               	bsf	14,1	;volatile
  6202                           
  6203                           ;hardware.c: 33:     PIR2bits.CCP2IF = 0;
  6204  0F87  0020               	movlb	0	; select bank0
  6205  0F88  1012               	bcf	18,0	;volatile
  6206  0F89  0008               	return
  6207  0F8A                     __end_of_capture_init:	
  6208                           
  6209                           	psect	text28
  6210  046B                     __ptext28:	
  6211 ;; *************** function _capture_handdle *****************
  6212 ;; Defined at:
  6213 ;;		line 62 in file "hardware.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  cnt_tmp         2   12[COMMON] unsigned short 
  6218 ;;  cnt_int         2   10[COMMON] unsigned short 
  6219 ;;  pdata           1    9[COMMON] PTR volatile struct .
  6220 ;;		 -> g_data(39), 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  2   80[None  ] int 
  6223 ;; Registers used:
  6224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;Total ram usage:       13 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    1
  6237 ;; This function calls:
  6238 ;;		_capture_IsNegEdge
  6239 ;;		_capture_setEdge
  6240 ;;		i1_data_getdata
  6241 ;;		i1_led_SetState
  6242 ;; This function is called by:
  6243 ;;		_ISR
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _capture_handdle
  6249  046B                     _capture_handdle:	
  6250                           
  6251                           ;hardware.c: 64:     G_DATA *pdata = data_getdata();
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _capture_handdle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6255  046B  318F  2754  3184   	fcall	i1_data_getdata
  6256  046E  00F1               	movwf	??_capture_handdle
  6257  046F  0871               	movf	??_capture_handdle,w
  6258  0470  00F9               	movwf	capture_handdle@pdata
  6259                           
  6260                           ;hardware.c: 69:     cnt_tmp = CCPR2H;
  6261  0471  0025               	movlb	5	; select bank5
  6262  0472  0819               	movf	25,w	;volatile
  6263  0473  00F1               	movwf	??_capture_handdle
  6264  0474  01F2               	clrf	??_capture_handdle+1
  6265  0475  0871               	movf	??_capture_handdle,w
  6266  0476  00FC               	movwf	capture_handdle@cnt_tmp
  6267  0477  0872               	movf	??_capture_handdle+1,w
  6268  0478  00FD               	movwf	capture_handdle@cnt_tmp+1
  6269                           
  6270                           ;hardware.c: 70:     cnt_tmp = (cnt_tmp << 8) + CCPR2L;
  6271  0479  0818               	movf	24,w	;volatile
  6272  047A  00F1               	movwf	??_capture_handdle
  6273  047B  01F2               	clrf	??_capture_handdle+1
  6274  047C  087C               	movf	capture_handdle@cnt_tmp,w
  6275  047D  00F4               	movwf	??_capture_handdle+3
  6276  047E  01F3               	clrf	??_capture_handdle+2
  6277  047F  0871               	movf	??_capture_handdle,w
  6278  0480  0773               	addwf	??_capture_handdle+2,w
  6279  0481  00F5               	movwf	??_capture_handdle+4
  6280  0482  0872               	movf	??_capture_handdle+1,w
  6281  0483  3D74               	addwfc	??_capture_handdle+3,w
  6282  0484  00F6               	movwf	??_capture_handdle+5
  6283  0485  0875               	movf	??_capture_handdle+4,w
  6284  0486  00FC               	movwf	capture_handdle@cnt_tmp
  6285  0487  0876               	movf	??_capture_handdle+5,w
  6286  0488  00FD               	movwf	capture_handdle@cnt_tmp+1
  6287                           
  6288                           ;hardware.c: 72:     if(cnt_tmp > last_cnt)
  6289  0489  087D               	movf	capture_handdle@cnt_tmp+1,w
  6290  048A  0020               	movlb	0	; select bank0
  6291  048B  0241               	subwf	capture_handdle@last_cnt+1,w
  6292  048C  1D03               	skipz
  6293  048D  2C90               	goto	u240_25
  6294  048E  087C               	movf	capture_handdle@cnt_tmp,w
  6295  048F  0240               	subwf	capture_handdle@last_cnt,w
  6296  0490                     u240_25:	
  6297  0490  1803               	skipnc
  6298  0491  2C99               	goto	i1l2940
  6299                           
  6300                           ;hardware.c: 73:     {;hardware.c: 74:         cnt_int = cnt_tmp - last_cnt;
  6301  0492  0840               	movf	capture_handdle@last_cnt,w
  6302  0493  027C               	subwf	capture_handdle@cnt_tmp,w
  6303  0494  00FA               	movwf	capture_handdle@cnt_int
  6304  0495  0841               	movf	capture_handdle@last_cnt+1,w
  6305  0496  3B7D               	subwfb	capture_handdle@cnt_tmp+1,w
  6306  0497  00FB               	movwf	capture_handdle@cnt_int+1
  6307                           
  6308                           ;hardware.c: 75:     }
  6309  0498  2CA1               	goto	i1l2944
  6310  0499                     i1l2940:	
  6311                           
  6312                           ;hardware.c: 77:     {;hardware.c: 78:         cnt_int = 0xffff - last_cnt;
  6313  0499  0940               	comf	capture_handdle@last_cnt,w
  6314  049A  00FA               	movwf	capture_handdle@cnt_int
  6315  049B  0941               	comf	capture_handdle@last_cnt+1,w
  6316  049C  00FB               	movwf	capture_handdle@cnt_int+1
  6317                           
  6318                           ;hardware.c: 79:         cnt_int += cnt_tmp;
  6319  049D  087C               	movf	capture_handdle@cnt_tmp,w
  6320  049E  07FA               	addwf	capture_handdle@cnt_int,f
  6321  049F  087D               	movf	capture_handdle@cnt_tmp+1,w
  6322  04A0  3DFB               	addwfc	capture_handdle@cnt_int+1,f
  6323  04A1                     i1l2944:	
  6324                           
  6325                           ;hardware.c: 84:     if(capture_IsNegEdge())
  6326  04A1  318F  2792  3184   	fcall	_capture_IsNegEdge
  6327  04A4  3A00               	xorlw	0
  6328  04A5  1903               	skipnz
  6329  04A6  2CB1               	goto	i1l2950
  6330                           
  6331                           ;hardware.c: 85:     {;hardware.c: 86:         pdata->cnt_high = cnt_int;
  6332  04A7  0879               	movf	capture_handdle@pdata,w
  6333  04A8  3E23               	addlw	35
  6334  04A9  0086               	movwf	6
  6335  04AA  0187               	clrf	7
  6336  04AB  087A               	movf	capture_handdle@cnt_int,w
  6337  04AC  3FC0               	movwi [0]fsr1
  6338  04AD  087B               	movf	capture_handdle@cnt_int+1,w
  6339  04AE  3FC1               	movwi [1]fsr1
  6340                           
  6341                           ;hardware.c: 87:         led_SetState(FALSE);
  6342  04AF  3000               	movlw	0
  6343  04B0  2CBA               	goto	L1
  6344  04B1                     i1l2950:	
  6345                           ;hardware.c: 88:     }
  6346                           
  6347                           
  6348                           ;hardware.c: 90:     {;hardware.c: 91:         pdata->cnt_low = cnt_int;
  6349  04B1  0879               	movf	capture_handdle@pdata,w
  6350  04B2  3E25               	addlw	37
  6351  04B3  0086               	movwf	6
  6352  04B4  0187               	clrf	7
  6353  04B5  087A               	movf	capture_handdle@cnt_int,w
  6354  04B6  3FC0               	movwi [0]fsr1
  6355  04B7  087B               	movf	capture_handdle@cnt_int+1,w
  6356  04B8  3FC1               	movwi [1]fsr1
  6357                           
  6358                           ;hardware.c: 92:         led_SetState(TRUE);
  6359  04B9  3001               	movlw	1
  6360  04BA                     L1:	
  6361  04BA  3187  27F6  3184   	fcall	i1_led_SetState
  6362                           
  6363                           ;hardware.c: 95:     last_cnt = cnt_tmp;
  6364  04BD  087D               	movf	capture_handdle@cnt_tmp+1,w
  6365  04BE  0020               	movlb	0	; select bank0
  6366  04BF  00C1               	movwf	capture_handdle@last_cnt+1
  6367  04C0  087C               	movf	capture_handdle@cnt_tmp,w
  6368  04C1  00C0               	movwf	capture_handdle@last_cnt
  6369                           
  6370                           ;hardware.c: 98:     capture_setEdge( (capture_IsNegEdge())? (0b0101) : (0b0100));
  6371  04C2  318F  2792  3184   	fcall	_capture_IsNegEdge
  6372  04C5  3A00               	xorlw	0
  6373  04C6  1D03               	skipz
  6374  04C7  2CCA               	goto	i1l2960
  6375  04C8  3004               	movlw	4
  6376  04C9  2CCB               	goto	L2
  6377  04CA                     i1l2960:	
  6378  04CA  3005               	movlw	5
  6379  04CB                     L2:	
  6380  04CB  00F7               	movwf	_capture_handdle$1313
  6381  04CC  3000               	movlw	0
  6382  04CD  00F8               	movwf	_capture_handdle$1313+1
  6383  04CE  0877               	movf	_capture_handdle$1313,w
  6384  04CF  318F  27F0         	fcall	_capture_setEdge
  6385  04D1  0008               	return
  6386  04D2                     __end_of_capture_handdle:	
  6387                           
  6388                           	psect	text29
  6389  07F6                     __ptext29:	
  6390 ;; *************** function i1_led_SetState *****************
  6391 ;; Defined at:
  6392 ;;		line 107 in file "hardware.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  isOn            1    wreg     unsigned char 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  isOn            1    0[COMMON] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      unsigned char 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;Total ram usage:        1 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_capture_handdle
  6416 ;;		_led_Blink
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function i1_led_SetState
  6422  07F6                     i1_led_SetState:	
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in i1_led_SetState: [wreg+status,2+status,0]
  6426                           ;i1led_SetState@isOn stored from wreg
  6427  07F6  00F0               	movwf	i1led_SetState@isOn
  6428                           
  6429                           ;hardware.c: 107: u8 led_SetState(u8 isOn);hardware.c: 108: {;hardware.c: 109:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  6430  07F7  0870               	movf	i1led_SetState@isOn,w
  6431  07F8  1D03               	btfss	3,2
  6432  07F9  2FFD               	goto	u147_20
  6433  07FA  0022               	movlb	2	; select bank2
  6434  07FB  158D               	bsf	13,3	;volatile
  6435  07FC  0008               	return
  6436  07FD                     u147_20:	
  6437  07FD  0022               	movlb	2	; select bank2
  6438  07FE  118D               	bcf	13,3	;volatile
  6439  07FF  0008               	return
  6440  0800                     __end_ofi1_led_SetState:	
  6441                           
  6442                           	psect	text30
  6443  0FF0                     __ptext30:	
  6444 ;; *************** function _capture_setEdge *****************
  6445 ;; Defined at:
  6446 ;;		line 12 in file "hardware.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  edge            1    wreg     unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  edge            1    0[COMMON] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  2  465[None  ] int 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;Total ram usage:        1 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_capture_init
  6470 ;;		_capture_handdle
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function _capture_setEdge
  6476  0FF0                     _capture_setEdge:	
  6477                           
  6478                           ;incstack = 0
  6479                           ; Regs used in _capture_setEdge: [wreg+status,2+status,0]
  6480                           ;capture_setEdge@edge stored from wreg
  6481  0FF0  00F0               	movwf	capture_setEdge@edge
  6482                           
  6483                           ;hardware.c: 12: static int capture_setEdge(u8 edge);hardware.c: 13: {;hardware.c: 14:  
      +                             if((edge == (0b0101)) || (edge == (0b0100)))
  6484  0FF1  3005               	movlw	5
  6485  0FF2  0670               	xorwf	capture_setEdge@edge,w
  6486  0FF3  1903               	btfsc	3,2
  6487  0FF4  2FF9               	goto	i1l2706
  6488  0FF5  3004               	movlw	4
  6489  0FF6  0670               	xorwf	capture_setEdge@edge,w
  6490  0FF7  1D03               	btfss	3,2
  6491  0FF8  0008               	return
  6492  0FF9                     i1l2706:	
  6493                           
  6494                           ;hardware.c: 15:     {;hardware.c: 16:         CCP2CONbits.CCP2M = edge;
  6495  0FF9  0025               	movlb	5	; select bank5
  6496  0FFA  081A               	movf	26,w	;volatile
  6497  0FFB  0670               	xorwf	capture_setEdge@edge,w
  6498  0FFC  39F0               	andlw	-16
  6499  0FFD  0670               	xorwf	capture_setEdge@edge,w
  6500  0FFE  009A               	movwf	26	;volatile
  6501  0FFF  0008               	return
  6502  1000                     __end_of_capture_setEdge:	
  6503                           
  6504                           	psect	text31
  6505  0F56                     __ptext31:	
  6506 ;; *************** function _capture_clrIntrpt *****************
  6507 ;; Defined at:
  6508 ;;		line 53 in file "hardware.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		None
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;Total ram usage:        0 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_ISR
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function _capture_clrIntrpt
  6537  0F56                     _capture_clrIntrpt:	
  6538                           
  6539                           ;hardware.c: 55:     PIR2bits.CCP2IF = 0;
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _capture_clrIntrpt: []
  6543  0F56  0020               	movlb	0	; select bank0
  6544  0F57  1012               	bcf	18,0	;volatile
  6545  0F58  0008               	return
  6546  0F59                     __end_of_capture_clrIntrpt:	
  6547                           
  6548                           	psect	text32
  6549  0F62                     __ptext32:	
  6550 ;; *************** function _capture_IsIntrpt *****************
  6551 ;; Defined at:
  6552 ;;		line 49 in file "hardware.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      enum E5232
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;Total ram usage:        0 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_ISR
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function _capture_IsIntrpt
  6581  0F62                     _capture_IsIntrpt:	
  6582                           
  6583                           ;hardware.c: 51:     return (PIR2bits.CCP2IF == 0b1)? TRUE : FALSE;
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _capture_IsIntrpt: [wreg+status,2+status,0]
  6587  0F62  0020               	movlb	0	; select bank0
  6588  0F63  0812               	movf	18,w	;volatile
  6589  0F64  3901               	andlw	1
  6590  0F65  0008               	return
  6591  0F66                     __end_of_capture_IsIntrpt:	
  6592                           
  6593                           	psect	text33
  6594  006C                     __ptext33:	
  6595 ;; *************** function _bpc_proc *****************
  6596 ;; Defined at:
  6597 ;;		line 80 in file "bpc.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  i               2   20[BANK0 ] int 
  6602 ;;  last_time_m     2   18[BANK0 ] unsigned short 
  6603 ;;  last_time_h     2   16[BANK0 ] unsigned short 
  6604 ;;  last_time_s     2   14[BANK0 ] unsigned short 
  6605 ;;  pdata           1   23[BANK0 ] PTR volatile struct .
  6606 ;;		 -> g_data(39), 
  6607 ;;  number          1   22[BANK0 ] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2   82[None  ] int 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;Total ram usage:       12 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    4
  6624 ;; This function calls:
  6625 ;;		_bpc_Cnt2Qua
  6626 ;;		_capture_Set
  6627 ;;		_check_err
  6628 ;;		i1_data_getdata
  6629 ;;		i1_display_update
  6630 ;; This function is called by:
  6631 ;;		_ISR
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function _bpc_proc
  6637  006C                     _bpc_proc:	
  6638                           
  6639                           ;bpc.c: 82:     G_DATA *pdata = data_getdata();
  6640                           
  6641                           ;incstack = 0
  6642                           ; Regs used in _bpc_proc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6643  006C  318F  2754  3180   	fcall	i1_data_getdata
  6644  006F  0020               	movlb	0	; select bank0
  6645  0070  00AC               	movwf	??_bpc_proc
  6646  0071  082C               	movf	??_bpc_proc,w
  6647  0072  00B7               	movwf	bpc_proc@pdata
  6648                           
  6649                           ;bpc.c: 83:     u8 number = bpc_Cnt2Qua();
  6650  0073  3183  23EA  3180   	fcall	_bpc_Cnt2Qua
  6651  0076  0020               	movlb	0	; select bank0
  6652  0077  00AC               	movwf	??_bpc_proc
  6653  0078  082C               	movf	??_bpc_proc,w
  6654  0079  00B6               	movwf	bpc_proc@number
  6655                           
  6656                           ;bpc.c: 85:     if(6 == number){
  6657  007A  3006               	movlw	6
  6658  007B  0636               	xorwf	bpc_proc@number,w
  6659  007C  1903               	btfsc	3,2
  6660  007D  0008               	return
  6661  007E  3004               	movlw	4
  6662  007F  0636               	xorwf	bpc_proc@number,w
  6663  0080  1D03               	btfss	3,2
  6664  0081  288F               	goto	i1l2982
  6665                           
  6666                           ;bpc.c: 88:         pdata->g_find_recv_start = FALSE;
  6667  0082  0837               	movf	bpc_proc@pdata,w
  6668  0083  3E02               	addlw	2
  6669  0084  0086               	movwf	6
  6670  0085  0187               	clrf	7
  6671  0086  0181               	clrf	1
  6672                           
  6673                           ;bpc.c: 89:         pdata->g_recv_count = 0;
  6674  0087  0837               	movf	bpc_proc@pdata,w
  6675  0088  3E0B               	addlw	11
  6676  0089  0086               	movwf	6
  6677  008A  0187               	clrf	7
  6678  008B  3000               	movlw	0
  6679  008C  3FC0               	movwi [0]fsr1
  6680  008D  3FC1               	movwi [1]fsr1
  6681  008E  0008               	return
  6682  008F                     i1l2982:	
  6683                           
  6684                           ;bpc.c: 95:     if(pdata->g_find_recv_start || 5 == number){
  6685  008F  0837               	movf	bpc_proc@pdata,w
  6686  0090  3E02               	addlw	2
  6687  0091  0086               	movwf	6
  6688  0092  0187               	clrf	7
  6689  0093  0801               	movf	1,w
  6690  0094  1D03               	btfss	3,2
  6691  0095  289A               	goto	i1l2986
  6692  0096  3005               	movlw	5
  6693  0097  0636               	xorwf	bpc_proc@number,w
  6694  0098  1D03               	btfss	3,2
  6695  0099  28C2               	goto	i1l2992
  6696  009A                     i1l2986:	
  6697                           
  6698                           ;bpc.c: 96:         if(!pdata->g_find_recv_start){
  6699  009A  0837               	movf	bpc_proc@pdata,w
  6700  009B  3E02               	addlw	2
  6701  009C  0086               	movwf	6
  6702  009D  0187               	clrf	7
  6703  009E  0801               	movf	1,w
  6704  009F  1D03               	btfss	3,2
  6705  00A0  28CA               	goto	i1l2996
  6706                           
  6707                           ;bpc.c: 97:             pdata->g_find_recv_start = TRUE;
  6708  00A1  3001               	movlw	1
  6709  00A2  00AC               	movwf	??_bpc_proc
  6710  00A3  0837               	movf	bpc_proc@pdata,w
  6711  00A4  3E02               	addlw	2
  6712  00A5  0086               	movwf	6
  6713  00A6  0187               	clrf	7
  6714  00A7  082C               	movf	??_bpc_proc,w
  6715  00A8  0081               	movwf	1
  6716                           
  6717                           ;bpc.c: 98:             pdata->g_recv_buf[pdata->g_recv_count++] = number;
  6718  00A9  0836               	movf	bpc_proc@number,w
  6719  00AA  00AC               	movwf	??_bpc_proc
  6720  00AB  0837               	movf	bpc_proc@pdata,w
  6721  00AC  3E0B               	addlw	11
  6722  00AD  0086               	movwf	6
  6723  00AE  0187               	clrf	7
  6724  00AF  0801               	movf	1,w
  6725  00B0  0737               	addwf	bpc_proc@pdata,w
  6726  00B1  00AD               	movwf	??_bpc_proc+1
  6727  00B2  082D               	movf	??_bpc_proc+1,w
  6728  00B3  3E0D               	addlw	13
  6729  00B4  0086               	movwf	6
  6730  00B5  0187               	clrf	7
  6731  00B6  082C               	movf	??_bpc_proc,w
  6732  00B7  0081               	movwf	1
  6733  00B8  0837               	movf	bpc_proc@pdata,w
  6734  00B9  3E0B               	addlw	11
  6735  00BA  0086               	movwf	6
  6736  00BB  0187               	clrf	7
  6737  00BC  3001               	movlw	1
  6738  00BD  0781               	addwf	1,f
  6739  00BE  3141               	addfsr 1,1
  6740  00BF  1803               	skipnc
  6741  00C0  0A81               	incf	1,f
  6742  00C1  0008               	return
  6743  00C2                     i1l2992:	
  6744                           
  6745                           ;bpc.c: 102:         pdata->g_recv_count = 0;
  6746  00C2  0837               	movf	bpc_proc@pdata,w
  6747  00C3  3E0B               	addlw	11
  6748  00C4  0086               	movwf	6
  6749  00C5  0187               	clrf	7
  6750  00C6  3000               	movlw	0
  6751  00C7  3FC0               	movwi [0]fsr1
  6752  00C8  3FC1               	movwi [1]fsr1
  6753  00C9  0008               	return
  6754  00CA                     i1l2996:	
  6755                           
  6756                           ;bpc.c: 107:     pdata->g_recv_buf[pdata->g_recv_count++] = number;
  6757  00CA  0836               	movf	bpc_proc@number,w
  6758  00CB  00AC               	movwf	??_bpc_proc
  6759  00CC  0837               	movf	bpc_proc@pdata,w
  6760  00CD  3E0B               	addlw	11
  6761  00CE  0086               	movwf	6
  6762  00CF  0187               	clrf	7
  6763  00D0  0801               	movf	1,w
  6764  00D1  0737               	addwf	bpc_proc@pdata,w
  6765  00D2  00AD               	movwf	??_bpc_proc+1
  6766  00D3  082D               	movf	??_bpc_proc+1,w
  6767  00D4  3E0D               	addlw	13
  6768  00D5  0086               	movwf	6
  6769  00D6  0187               	clrf	7
  6770  00D7  082C               	movf	??_bpc_proc,w
  6771  00D8  0081               	movwf	1
  6772  00D9  0837               	movf	bpc_proc@pdata,w
  6773  00DA  3E0B               	addlw	11
  6774  00DB  0086               	movwf	6
  6775  00DC  0187               	clrf	7
  6776  00DD  3001               	movlw	1
  6777  00DE  0781               	addwf	1,f
  6778  00DF  3141               	addfsr 1,1
  6779  00E0  1803               	skipnc
  6780  00E1  0A81               	incf	1,f
  6781                           
  6782                           ;bpc.c: 108:     if(pdata->g_recv_count <= CODE_P3){
  6783  00E2  0837               	movf	bpc_proc@pdata,w
  6784  00E3  3E0B               	addlw	11
  6785  00E4  0086               	movwf	6
  6786  00E5  0187               	clrf	7
  6787  00E6  3F40               	moviw [0]fsr1
  6788  00E7  00AC               	movwf	??_bpc_proc
  6789  00E8  3F41               	moviw [1]fsr1
  6790  00E9  00AD               	movwf	??_bpc_proc+1
  6791  00EA  3000               	movlw	0
  6792  00EB  022D               	subwf	??_bpc_proc+1,w
  6793  00EC  300B               	movlw	11
  6794  00ED  1903               	skipnz
  6795  00EE  022C               	subwf	??_bpc_proc,w
  6796  00EF  1C03               	btfss	3,0
  6797  00F0  0008               	return
  6798                           
  6799                           ;bpc.c: 113:     if(pdata->g_recv_buf[CODE_P1] > 2)
  6800  00F1  0837               	movf	bpc_proc@pdata,w
  6801  00F2  3E0E               	addlw	14
  6802  00F3  0086               	movwf	6
  6803  00F4  0187               	clrf	7
  6804  00F5  3003               	movlw	3
  6805  00F6  0201               	subwf	1,w
  6806  00F7  1C03               	skipc
  6807  00F8  290A               	goto	i1l3010
  6808                           
  6809                           ;bpc.c: 114:     {;bpc.c: 115:         pdata->g_find_recv_start = FALSE;
  6810  00F9  0837               	movf	bpc_proc@pdata,w
  6811  00FA  3E02               	addlw	2
  6812  00FB  0086               	movwf	6
  6813  00FC  0187               	clrf	7
  6814  00FD  0181               	clrf	1
  6815                           
  6816                           ;bpc.c: 116:         pdata->g_isDecoding = 0;
  6817  00FE  0A37               	incf	bpc_proc@pdata,w
  6818  00FF  0086               	movwf	6
  6819  0100  0187               	clrf	7
  6820  0101  0181               	clrf	1
  6821                           
  6822                           ;bpc.c: 117:         pdata->g_recv_count = 0;
  6823  0102  0837               	movf	bpc_proc@pdata,w
  6824  0103  3E0B               	addlw	11
  6825  0104  0086               	movwf	6
  6826  0105  0187               	clrf	7
  6827  0106  3000               	movlw	0
  6828  0107  3FC0               	movwi [0]fsr1
  6829  0108  3FC1               	movwi [1]fsr1
  6830  0109  0008               	return
  6831  010A                     i1l3010:	
  6832                           
  6833                           ;bpc.c: 121:     u16 last_time_h = pdata->g_time_h;
  6834  010A  0837               	movf	bpc_proc@pdata,w
  6835  010B  3E03               	addlw	3
  6836  010C  0086               	movwf	6
  6837  010D  0187               	clrf	7
  6838  010E  0801               	movf	1,w
  6839  010F  00AC               	movwf	??_bpc_proc
  6840  0110  01AD               	clrf	??_bpc_proc+1
  6841  0111  082C               	movf	??_bpc_proc,w
  6842  0112  00B0               	movwf	bpc_proc@last_time_h
  6843  0113  082D               	movf	??_bpc_proc+1,w
  6844  0114  00B1               	movwf	bpc_proc@last_time_h+1
  6845                           
  6846                           ;bpc.c: 122:     u16 last_time_m = pdata->g_time_m;
  6847  0115  0837               	movf	bpc_proc@pdata,w
  6848  0116  3E04               	addlw	4
  6849  0117  0086               	movwf	6
  6850  0118  0187               	clrf	7
  6851  0119  0801               	movf	1,w
  6852  011A  00AC               	movwf	??_bpc_proc
  6853  011B  01AD               	clrf	??_bpc_proc+1
  6854  011C  082C               	movf	??_bpc_proc,w
  6855  011D  00B2               	movwf	bpc_proc@last_time_m
  6856  011E  082D               	movf	??_bpc_proc+1,w
  6857  011F  00B3               	movwf	bpc_proc@last_time_m+1
  6858                           
  6859                           ;bpc.c: 123:     u16 last_time_s = pdata->g_time_s;
  6860  0120  0837               	movf	bpc_proc@pdata,w
  6861  0121  3E05               	addlw	5
  6862  0122  0086               	movwf	6
  6863  0123  0187               	clrf	7
  6864  0124  0801               	movf	1,w
  6865  0125  00AC               	movwf	??_bpc_proc
  6866  0126  01AD               	clrf	??_bpc_proc+1
  6867  0127  082C               	movf	??_bpc_proc,w
  6868  0128  00AE               	movwf	bpc_proc@last_time_s
  6869  0129  082D               	movf	??_bpc_proc+1,w
  6870  012A  00AF               	movwf	bpc_proc@last_time_s+1
  6871                           
  6872                           ;bpc.c: 125:     if(check_err(pdata))
  6873  012B  0837               	movf	bpc_proc@pdata,w
  6874  012C  3181  21A5  3180   	fcall	_check_err
  6875  012F  0870               	movf	?_check_err,w
  6876  0130  0471               	iorwf	?_check_err+1,w
  6877  0131  1903               	btfsc	3,2
  6878  0132  294D               	goto	i1l3018
  6879                           
  6880                           ;bpc.c: 126:     {;bpc.c: 128:         pdata->g_time_h = last_time_h;
  6881  0133  0020               	movlb	0	; select bank0
  6882  0134  0830               	movf	bpc_proc@last_time_h,w
  6883  0135  00AC               	movwf	??_bpc_proc
  6884  0136  0837               	movf	bpc_proc@pdata,w
  6885  0137  3E03               	addlw	3
  6886  0138  0086               	movwf	6
  6887  0139  0187               	clrf	7
  6888  013A  082C               	movf	??_bpc_proc,w
  6889  013B  0081               	movwf	1
  6890                           
  6891                           ;bpc.c: 129:         pdata->g_time_m = last_time_m;
  6892  013C  0832               	movf	bpc_proc@last_time_m,w
  6893  013D  00AC               	movwf	??_bpc_proc
  6894  013E  0837               	movf	bpc_proc@pdata,w
  6895  013F  3E04               	addlw	4
  6896  0140  0086               	movwf	6
  6897  0141  0187               	clrf	7
  6898  0142  082C               	movf	??_bpc_proc,w
  6899  0143  0081               	movwf	1
  6900                           
  6901                           ;bpc.c: 130:         pdata->g_time_s = last_time_s;
  6902  0144  082E               	movf	bpc_proc@last_time_s,w
  6903  0145  00AC               	movwf	??_bpc_proc
  6904  0146  0837               	movf	bpc_proc@pdata,w
  6905  0147  3E05               	addlw	5
  6906  0148  0086               	movwf	6
  6907  0149  0187               	clrf	7
  6908  014A  082C               	movf	??_bpc_proc,w
  6909  014B  0081               	movwf	1
  6910  014C  0008               	return
  6911  014D                     i1l3018:	
  6912                           
  6913                           ;bpc.c: 135:     if(last_time_h != pdata->g_time_h || last_time_m != pdata->g_time_m)
  6914  014D  0020               	movlb	0	; select bank0
  6915  014E  0837               	movf	bpc_proc@pdata,w
  6916  014F  3E03               	addlw	3
  6917  0150  0086               	movwf	6
  6918  0151  0187               	clrf	7
  6919  0152  0801               	movf	1,w
  6920  0153  00AC               	movwf	??_bpc_proc
  6921  0154  01AD               	clrf	??_bpc_proc+1
  6922  0155  0831               	movf	bpc_proc@last_time_h+1,w
  6923  0156  062D               	xorwf	??_bpc_proc+1,w
  6924  0157  1D03               	skipz
  6925  0158  295B               	goto	u251_25
  6926  0159  0830               	movf	bpc_proc@last_time_h,w
  6927  015A  062C               	xorwf	??_bpc_proc,w
  6928  015B                     u251_25:	
  6929  015B  1D03               	skipz
  6930  015C  296C               	goto	i1l3022
  6931  015D  0837               	movf	bpc_proc@pdata,w
  6932  015E  3E04               	addlw	4
  6933  015F  0086               	movwf	6
  6934  0160  0187               	clrf	7
  6935  0161  0801               	movf	1,w
  6936  0162  00AC               	movwf	??_bpc_proc
  6937  0163  01AD               	clrf	??_bpc_proc+1
  6938  0164  0833               	movf	bpc_proc@last_time_m+1,w
  6939  0165  062D               	xorwf	??_bpc_proc+1,w
  6940  0166  1D03               	skipz
  6941  0167  296A               	goto	u252_25
  6942  0168  0832               	movf	bpc_proc@last_time_m,w
  6943  0169  062C               	xorwf	??_bpc_proc,w
  6944  016A                     u252_25:	
  6945  016A  1903               	skipnz
  6946  016B  296F               	goto	i1l3024
  6947  016C                     i1l3022:	
  6948                           
  6949                           ;bpc.c: 136:     {;bpc.c: 137:         display_update();
  6950  016C  3183  2346  3180   	fcall	i1_display_update
  6951  016F                     i1l3024:	
  6952                           
  6953                           ;bpc.c: 141:     pdata->g_find_recv_start = FALSE;
  6954  016F  0020               	movlb	0	; select bank0
  6955  0170  0837               	movf	bpc_proc@pdata,w
  6956  0171  3E02               	addlw	2
  6957  0172  0086               	movwf	6
  6958  0173  0187               	clrf	7
  6959  0174  0181               	clrf	1
  6960                           
  6961                           ;bpc.c: 143:     pdata->g_isDecoding = FALSE;
  6962  0175  0A37               	incf	bpc_proc@pdata,w
  6963  0176  0086               	movwf	6
  6964  0177  0187               	clrf	7
  6965  0178  0181               	clrf	1
  6966                           
  6967                           ;bpc.c: 146:  capture_Set(FALSE);
  6968  0179  3000               	movlw	0
  6969  017A  318F  27BD  3180   	fcall	_capture_Set
  6970                           
  6971                           ;bpc.c: 147:     TRISCbits.TRISC1 = 1;
  6972  017D  0021               	movlb	1	; select bank1
  6973  017E  148E               	bsf	14,1	;volatile
  6974                           
  6975                           ;bpc.c: 148:     pdata->g_recv_count = CODE_P0;
  6976  017F  0020               	movlb	0	; select bank0
  6977  0180  0837               	movf	bpc_proc@pdata,w
  6978  0181  3E0B               	addlw	11
  6979  0182  0086               	movwf	6
  6980  0183  0187               	clrf	7
  6981  0184  3000               	movlw	0
  6982  0185  3FC0               	movwi [0]fsr1
  6983  0186  3FC1               	movwi [1]fsr1
  6984                           
  6985                           ;bpc.c: 149:     for(int i = 0;i < 20; i++)
  6986  0187  01B4               	clrf	bpc_proc@i
  6987  0188  01B5               	clrf	bpc_proc@i+1
  6988  0189                     i1l3040:	
  6989                           
  6990                           ;bpc.c: 150:     {;bpc.c: 151:         pdata->g_recv_buf[i] = 5;
  6991  0189  3005               	movlw	5
  6992  018A  0020               	movlb	0	; select bank0
  6993  018B  00AC               	movwf	??_bpc_proc
  6994  018C  0834               	movf	bpc_proc@i,w
  6995  018D  0737               	addwf	bpc_proc@pdata,w
  6996  018E  00AD               	movwf	??_bpc_proc+1
  6997  018F  082D               	movf	??_bpc_proc+1,w
  6998  0190  3E0D               	addlw	13
  6999  0191  0086               	movwf	6
  7000  0192  0187               	clrf	7
  7001  0193  082C               	movf	??_bpc_proc,w
  7002  0194  0081               	movwf	1
  7003                           
  7004                           ;bpc.c: 152:     }
  7005  0195  3001               	movlw	1
  7006  0196  07B4               	addwf	bpc_proc@i,f
  7007  0197  3000               	movlw	0
  7008  0198  3DB5               	addwfc	bpc_proc@i+1,f
  7009  0199  0835               	movf	bpc_proc@i+1,w
  7010  019A  3A80               	xorlw	128
  7011  019B  00AC               	movwf	??_bpc_proc
  7012  019C  3080               	movlw	128
  7013  019D  022C               	subwf	??_bpc_proc,w
  7014  019E  1D03               	skipz
  7015  019F  29A2               	goto	u253_25
  7016  01A0  3014               	movlw	20
  7017  01A1  0234               	subwf	bpc_proc@i,w
  7018  01A2                     u253_25:	
  7019  01A2  1803               	btfsc	3,0
  7020  01A3  0008               	return
  7021  01A4  2989               	goto	i1l3040
  7022  01A5                     __end_of_bpc_proc:	
  7023                           
  7024                           	psect	text34
  7025  0346                     __ptext34:	
  7026 ;; *************** function i1_display_update *****************
  7027 ;; Defined at:
  7028 ;;		line 72 in file "display.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  display_upda    1   11[BANK0 ] PTR volatile struct .
  7033 ;;		 -> g_data(39), 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;Total ram usage:       12 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    3
  7050 ;; This function calls:
  7051 ;;		i1___awdiv
  7052 ;;		i1___awmod
  7053 ;;		i1_data_getdata
  7054 ;;		i1_display_write_once
  7055 ;; This function is called by:
  7056 ;;		_bpc_proc
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function i1_display_update
  7062  0346                     i1_display_update:	
  7063                           
  7064                           ;display.c: 86:     G_DATA *pdata = data_getdata();
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in i1_display_update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7068  0346  318F  2754  3183   	fcall	i1_data_getdata
  7069  0349  0020               	movlb	0	; select bank0
  7070  034A  00A0               	movwf	??i1_display_update
  7071  034B  0820               	movf	??i1_display_update,w
  7072  034C  00AB               	movwf	i1display_update@pdata
  7073                           
  7074                           ;display.c: 87:     display_write_once(segmcode[(pdata->g_time_h/10 == 0? 10:pdata->g_ti
      +                          me_h/10)], segmcode[pdata->g_time_h%10], segmcode[pdata->g_time_m/10], segmcode[pdata->g
      +                          _time_m%10]);
  7075  034D  300A               	movlw	10
  7076  034E  00F0               	movwf	i1___awdiv@divisor
  7077  034F  3000               	movlw	0
  7078  0350  00F1               	movwf	i1___awdiv@divisor+1
  7079  0351  082B               	movf	i1display_update@pdata,w
  7080  0352  3E03               	addlw	3
  7081  0353  0086               	movwf	6
  7082  0354  0187               	clrf	7
  7083  0355  0801               	movf	1,w
  7084  0356  00A0               	movwf	??i1_display_update
  7085  0357  01A1               	clrf	??i1_display_update+1
  7086  0358  0820               	movf	??i1_display_update,w
  7087  0359  00F2               	movwf	i1___awdiv@dividend
  7088  035A  0821               	movf	??i1_display_update+1,w
  7089  035B  00F3               	movwf	i1___awdiv@dividend+1
  7090  035C  3185  25ED  3183   	fcall	i1___awdiv
  7091  035F  0870               	movf	?i1___awdiv,w
  7092  0360  0471               	iorwf	?i1___awdiv+1,w
  7093  0361  1903               	btfsc	3,2
  7094  0362  2B7C               	goto	i1l2810
  7095  0363  300A               	movlw	10
  7096  0364  00F0               	movwf	i1___awdiv@divisor
  7097  0365  3000               	movlw	0
  7098  0366  00F1               	movwf	i1___awdiv@divisor+1
  7099  0367  0020               	movlb	0	; select bank0
  7100  0368  082B               	movf	i1display_update@pdata,w
  7101  0369  3E03               	addlw	3
  7102  036A  0086               	movwf	6
  7103  036B  0187               	clrf	7
  7104  036C  0801               	movf	1,w
  7105  036D  00A0               	movwf	??i1_display_update
  7106  036E  01A1               	clrf	??i1_display_update+1
  7107  036F  0820               	movf	??i1_display_update,w
  7108  0370  00F2               	movwf	i1___awdiv@dividend
  7109  0371  0821               	movf	??i1_display_update+1,w
  7110  0372  00F3               	movwf	i1___awdiv@dividend+1
  7111  0373  3185  25ED  3183   	fcall	i1___awdiv
  7112  0376  0871               	movf	?i1___awdiv+1,w
  7113  0377  0020               	movlb	0	; select bank0
  7114  0378  00AA               	movwf	i1_display_update$1481+1
  7115  0379  0870               	movf	?i1___awdiv,w
  7116  037A  00A9               	movwf	i1_display_update$1481
  7117  037B  2B81               	goto	i1l2812
  7118  037C                     i1l2810:	
  7119  037C  300A               	movlw	10
  7120  037D  0020               	movlb	0	; select bank0
  7121  037E  00A9               	movwf	i1_display_update$1481
  7122  037F  3000               	movlw	0
  7123  0380  00AA               	movwf	i1_display_update$1481+1
  7124  0381                     i1l2812:	
  7125  0381  300A               	movlw	10
  7126  0382  00F0               	movwf	i1___awmod@divisor
  7127  0383  3000               	movlw	0
  7128  0384  00F1               	movwf	i1___awmod@divisor+1
  7129  0385  082B               	movf	i1display_update@pdata,w
  7130  0386  3E03               	addlw	3
  7131  0387  0086               	movwf	6
  7132  0388  0187               	clrf	7
  7133  0389  0801               	movf	1,w
  7134  038A  00A0               	movwf	??i1_display_update
  7135  038B  01A1               	clrf	??i1_display_update+1
  7136  038C  0820               	movf	??i1_display_update,w
  7137  038D  00F2               	movwf	i1___awmod@dividend
  7138  038E  0821               	movf	??i1_display_update+1,w
  7139  038F  00F3               	movwf	i1___awmod@dividend+1
  7140  0390  3186  263E  3183   	fcall	i1___awmod
  7141  0393  0871               	movf	?i1___awmod+1,w
  7142  0394  0085               	movwf	5
  7143  0395  0870               	movf	?i1___awmod,w
  7144  0396  0084               	movwf	4
  7145  0397  3000               	movlw	low (_segmcode| (0+32768))
  7146  0398  0784               	addwf	4,f
  7147  0399  3090               	movlw	high (_segmcode| (0+32768))
  7148  039A  3D85               	addwfc	5,f
  7149  039B  0800               	movf	0,w	;code access
  7150  039C  0020               	movlb	0	; select bank0
  7151  039D  00A2               	movwf	??i1_display_update+2
  7152  039E  0822               	movf	??i1_display_update+2,w
  7153  039F  00F9               	movwf	i1display_write_once@HR
  7154  03A0  300A               	movlw	10
  7155  03A1  00F0               	movwf	i1___awdiv@divisor
  7156  03A2  3000               	movlw	0
  7157  03A3  00F1               	movwf	i1___awdiv@divisor+1
  7158  03A4  082B               	movf	i1display_update@pdata,w
  7159  03A5  3E04               	addlw	4
  7160  03A6  0086               	movwf	6
  7161  03A7  0187               	clrf	7
  7162  03A8  0801               	movf	1,w
  7163  03A9  00A3               	movwf	??i1_display_update+3
  7164  03AA  01A4               	clrf	??i1_display_update+4
  7165  03AB  0823               	movf	??i1_display_update+3,w
  7166  03AC  00F2               	movwf	i1___awdiv@dividend
  7167  03AD  0824               	movf	??i1_display_update+4,w
  7168  03AE  00F3               	movwf	i1___awdiv@dividend+1
  7169  03AF  3185  25ED  3183   	fcall	i1___awdiv
  7170  03B2  0871               	movf	?i1___awdiv+1,w
  7171  03B3  0085               	movwf	5
  7172  03B4  0870               	movf	?i1___awdiv,w
  7173  03B5  0084               	movwf	4
  7174  03B6  3000               	movlw	low (_segmcode| (0+32768))
  7175  03B7  0784               	addwf	4,f
  7176  03B8  3090               	movlw	high (_segmcode| (0+32768))
  7177  03B9  3D85               	addwfc	5,f
  7178  03BA  0800               	movf	0,w	;code access
  7179  03BB  0020               	movlb	0	; select bank0
  7180  03BC  00A5               	movwf	??i1_display_update+5
  7181  03BD  0825               	movf	??i1_display_update+5,w
  7182  03BE  00FA               	movwf	i1display_write_once@ML
  7183  03BF  300A               	movlw	10
  7184  03C0  00F0               	movwf	i1___awmod@divisor
  7185  03C1  3000               	movlw	0
  7186  03C2  00F1               	movwf	i1___awmod@divisor+1
  7187  03C3  082B               	movf	i1display_update@pdata,w
  7188  03C4  3E04               	addlw	4
  7189  03C5  0086               	movwf	6
  7190  03C6  0187               	clrf	7
  7191  03C7  0801               	movf	1,w
  7192  03C8  00A6               	movwf	??i1_display_update+6
  7193  03C9  01A7               	clrf	??i1_display_update+7
  7194  03CA  0826               	movf	??i1_display_update+6,w
  7195  03CB  00F2               	movwf	i1___awmod@dividend
  7196  03CC  0827               	movf	??i1_display_update+7,w
  7197  03CD  00F3               	movwf	i1___awmod@dividend+1
  7198  03CE  3186  263E  3183   	fcall	i1___awmod
  7199  03D1  0871               	movf	?i1___awmod+1,w
  7200  03D2  0085               	movwf	5
  7201  03D3  0870               	movf	?i1___awmod,w
  7202  03D4  0084               	movwf	4
  7203  03D5  3000               	movlw	low (_segmcode| (0+32768))
  7204  03D6  0784               	addwf	4,f
  7205  03D7  3090               	movlw	high (_segmcode| (0+32768))
  7206  03D8  3D85               	addwfc	5,f
  7207  03D9  0800               	movf	0,w	;code access
  7208  03DA  0020               	movlb	0	; select bank0
  7209  03DB  00A8               	movwf	??i1_display_update+8
  7210  03DC  0828               	movf	??i1_display_update+8,w
  7211  03DD  00FB               	movwf	i1display_write_once@MR
  7212  03DE  082A               	movf	i1_display_update$1481+1,w
  7213  03DF  0085               	movwf	5
  7214  03E0  0829               	movf	i1_display_update$1481,w
  7215  03E1  0084               	movwf	4
  7216  03E2  3000               	movlw	low (_segmcode| (0+32768))
  7217  03E3  0784               	addwf	4,f
  7218  03E4  3090               	movlw	high (_segmcode| (0+32768))
  7219  03E5  3D85               	addwfc	5,f
  7220  03E6  0800               	movf	0,w	;code access
  7221  03E7  3187  278E         	fcall	i1_display_write_once
  7222  03E9  0008               	return
  7223  03EA                     __end_ofi1_display_update:	
  7224                           
  7225                           	psect	text35
  7226  078E                     __ptext35:	
  7227 ;; *************** function i1_display_write_once *****************
  7228 ;; Defined at:
  7229 ;;		line 54 in file "display.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  HL              1    wreg     unsigned char 
  7232 ;;  HR              1    9[COMMON] unsigned char 
  7233 ;;  ML              1   10[COMMON] unsigned char 
  7234 ;;  MR              1   11[COMMON] unsigned char 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  HL              1   12[COMMON] unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7246 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;Total ram usage:        4 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    2
  7253 ;; This function calls:
  7254 ;;		i1_display_control595_delay
  7255 ;;		i1_display_write_byte
  7256 ;; This function is called by:
  7257 ;;		i1_display_update
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           
  7262                           ;psect for function i1_display_write_once
  7263  078E                     i1_display_write_once:	
  7264                           
  7265                           ;incstack = 0
  7266                           ; Regs used in i1_display_write_once: [wreg+status,2+status,0+pclath+cstack]
  7267                           ;i1display_write_once@HL stored from wreg
  7268  078E  00FC               	movwf	i1display_write_once@HL
  7269                           
  7270                           ;display.c: 56:     display_write_byte(HL);
  7271  078F  087C               	movf	i1display_write_once@HL,w
  7272  0790  3187  2741  3187   	fcall	i1_display_write_byte
  7273                           
  7274                           ;display.c: 57:     display_write_byte(HR);
  7275  0793  0879               	movf	i1display_write_once@HR,w
  7276  0794  3187  2741  3187   	fcall	i1_display_write_byte
  7277                           
  7278                           ;display.c: 58:     display_write_byte(ML);
  7279  0797  087A               	movf	i1display_write_once@ML,w
  7280  0798  3187  2741  3187   	fcall	i1_display_write_byte
  7281                           
  7282                           ;display.c: 59:     display_write_byte(MR);
  7283  079B  087B               	movf	i1display_write_once@MR,w
  7284  079C  3187  2741  3187   	fcall	i1_display_write_byte
  7285                           
  7286                           ;display.c: 62:     LATBbits.LATB0 = PIN_LOW;
  7287  079F  0022               	movlb	2	; select bank2
  7288  07A0  100D               	bcf	13,0	;volatile
  7289                           
  7290                           ;display.c: 63:     display_control595_delay();
  7291  07A1  318F  279C  3187   	fcall	i1_display_control595_delay
  7292                           
  7293                           ;display.c: 64:     LATBbits.LATB0 = PIN_HIGH;
  7294  07A4  0022               	movlb	2	; select bank2
  7295  07A5  140D               	bsf	13,0	;volatile
  7296                           
  7297                           ;display.c: 65:     display_control595_delay();
  7298  07A6  318F  279C  3187   	fcall	i1_display_control595_delay
  7299                           
  7300                           ;display.c: 67:     LATBbits.LATB1 = PIN_HIGH;
  7301  07A9  0022               	movlb	2	; select bank2
  7302  07AA  148D               	bsf	13,1	;volatile
  7303                           
  7304                           ;display.c: 68:  display_control595_delay();
  7305  07AB  318F  279C         	fcall	i1_display_control595_delay
  7306                           
  7307                           ;display.c: 69:     LATBbits.LATB1 = PIN_LOW;
  7308  07AD  0022               	movlb	2	; select bank2
  7309  07AE  108D               	bcf	13,1	;volatile
  7310  07AF  0008               	return
  7311  07B0                     __end_ofi1_display_write_once:	
  7312                           
  7313                           	psect	text36
  7314  0741                     __ptext36:	
  7315 ;; *************** function i1_display_write_byte *****************
  7316 ;; Defined at:
  7317 ;;		line 42 in file "display.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  data            1    wreg     unsigned char 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  data            1    4[COMMON] unsigned char 
  7322 ;;  display_writ    1    5[COMMON] unsigned char 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;Total ram usage:        4 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    1
  7339 ;; This function calls:
  7340 ;;		i1_display_control595_delay
  7341 ;; This function is called by:
  7342 ;;		i1_display_write_once
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           
  7347                           ;psect for function i1_display_write_byte
  7348  0741                     i1_display_write_byte:	
  7349                           
  7350                           ;incstack = 0
  7351                           ; Regs used in i1_display_write_byte: [wreg+status,2+status,0+pclath+cstack]
  7352                           ;i1display_write_byte@data stored from wreg
  7353  0741  00F4               	movwf	i1display_write_byte@data
  7354                           
  7355                           ;display.c: 43:     u8 i;;display.c: 44:     for(i = 0; i < 8; i++){
  7356  0742  01F5               	clrf	i1display_write_byte@i
  7357  0743                     i1l2258:	
  7358                           
  7359                           ;display.c: 45:   LATBbits.LATB5 = (data & 0x80) >> 7;
  7360  0743  0874               	movf	i1display_write_byte@data,w
  7361  0744  00F2               	movwf	??i1_display_write_byte
  7362  0745  3007               	movlw	7
  7363  0746                     u149_25:	
  7364  0746  36F2               	lsrf	??i1_display_write_byte,f
  7365  0747  0B89               	decfsz	9,f
  7366  0748  2F46               	goto	u149_25
  7367  0749  0872               	movf	??i1_display_write_byte,w
  7368  074A  3901               	andlw	1
  7369  074B  00F3               	movwf	??i1_display_write_byte+1
  7370  074C  0EF3               	swapf	??i1_display_write_byte+1,f
  7371  074D  0DF3               	rlf	??i1_display_write_byte+1,f
  7372  074E  0022               	movlb	2	; select bank2
  7373  074F  080D               	movf	13,w	;volatile
  7374  0750  0673               	xorwf	??i1_display_write_byte+1,w
  7375  0751  39DF               	andlw	-33
  7376  0752  0673               	xorwf	??i1_display_write_byte+1,w
  7377  0753  008D               	movwf	13	;volatile
  7378                           
  7379                           ;display.c: 46:         LATBbits.LATB0 = PIN_LOW;
  7380  0754  100D               	bcf	13,0	;volatile
  7381                           
  7382                           ;display.c: 47:   display_control595_delay();
  7383  0755  318F  279C  3187   	fcall	i1_display_control595_delay
  7384                           
  7385                           ;display.c: 48:         LATBbits.LATB0 = PIN_HIGH;
  7386  0758  0022               	movlb	2	; select bank2
  7387  0759  140D               	bsf	13,0	;volatile
  7388                           
  7389                           ;display.c: 49:   display_control595_delay();
  7390  075A  318F  279C  3187   	fcall	i1_display_control595_delay
  7391                           
  7392                           ;display.c: 50:         data <<= 1;
  7393  075D  1003               	clrc
  7394  075E  0DF4               	rlf	i1display_write_byte@data,f
  7395                           
  7396                           ;display.c: 51:     }
  7397  075F  3001               	movlw	1
  7398  0760  00F2               	movwf	??i1_display_write_byte
  7399  0761  0872               	movf	??i1_display_write_byte,w
  7400  0762  07F5               	addwf	i1display_write_byte@i,f
  7401  0763  3008               	movlw	8
  7402  0764  0275               	subwf	i1display_write_byte@i,w
  7403  0765  1803               	btfsc	3,0
  7404  0766  0008               	return
  7405  0767  2F43               	goto	i1l2258
  7406  0768                     __end_ofi1_display_write_byte:	
  7407                           
  7408                           	psect	text37
  7409  0F9C                     __ptext37:	
  7410 ;; *************** function i1_display_control595_delay *****************
  7411 ;; Defined at:
  7412 ;;		line 26 in file "display.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  display_cont    1    1[COMMON] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;Total ram usage:        2 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		i1_display_write_byte
  7436 ;;		i1_display_write_once
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           
  7441                           ;psect for function i1_display_control595_delay
  7442  0F9C                     i1_display_control595_delay:	
  7443                           
  7444                           ;display.c: 27:    u8 times = 10;
  7445                           
  7446                           ;incstack = 0
  7447                           ; Regs used in i1_display_control595_delay: [wreg+status,2+status,0]
  7448  0F9C  300A               	movlw	10
  7449  0F9D  00F0               	movwf	??i1_display_control595_delay
  7450  0F9E  0870               	movf	??i1_display_control595_delay,w
  7451  0F9F  00F1               	movwf	i1display_control595_delay@times
  7452  0FA0                     i1l538:	
  7453                           ;display.c: 31:    }
  7454                           
  7455                           ;display.c: 28:    while(times > 0){
  7456                           
  7457                           
  7458                           ;display.c: 28:    while(times > 0){
  7459  0FA0  0871               	movf	i1display_control595_delay@times,w
  7460  0FA1  1903               	btfsc	3,2
  7461  0FA2  0008               	return
  7462                           
  7463                           ;display.c: 29:     __nop();
  7464  0FA3  0000               	nop
  7465                           
  7466                           ;display.c: 30:        times--;
  7467  0FA4  3001               	movlw	1
  7468  0FA5  02F1               	subwf	i1display_control595_delay@times,f
  7469  0FA6  2FA0               	goto	i1l538
  7470  0FA7                     __end_ofi1_display_control595_delay:	
  7471                           
  7472                           	psect	text38
  7473  063E                     __ptext38:	
  7474 ;; *************** function i1___awmod *****************
  7475 ;; Defined at:
  7476 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  divisor         2    0[COMMON] int 
  7479 ;;  dividend        2    2[COMMON] int 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  __awmod         1    6[COMMON] unsigned char 
  7482 ;;  __awmod         1    5[COMMON] unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  2    0[COMMON] int 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;Total ram usage:        7 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		i1_display_update
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           
  7506                           ;psect for function i1___awmod
  7507  063E                     i1___awmod:	
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  7511  063E  01F6               	clrf	i1___awmod@sign
  7512  063F  1FF3               	btfss	i1___awmod@dividend+1,7
  7513  0640  2E48               	goto	i1l2422
  7514  0641  09F2               	comf	i1___awmod@dividend,f
  7515  0642  09F3               	comf	i1___awmod@dividend+1,f
  7516  0643  0AF2               	incf	i1___awmod@dividend,f
  7517  0644  1903               	skipnz
  7518  0645  0AF3               	incf	i1___awmod@dividend+1,f
  7519  0646  01F6               	clrf	i1___awmod@sign
  7520  0647  0AF6               	incf	i1___awmod@sign,f
  7521  0648                     i1l2422:	
  7522  0648  1FF1               	btfss	i1___awmod@divisor+1,7
  7523  0649  2E4F               	goto	i1l2426
  7524  064A  09F0               	comf	i1___awmod@divisor,f
  7525  064B  09F1               	comf	i1___awmod@divisor+1,f
  7526  064C  0AF0               	incf	i1___awmod@divisor,f
  7527  064D  1903               	skipnz
  7528  064E  0AF1               	incf	i1___awmod@divisor+1,f
  7529  064F                     i1l2426:	
  7530  064F  0870               	movf	i1___awmod@divisor,w
  7531  0650  0471               	iorwf	i1___awmod@divisor+1,w
  7532  0651  1903               	btfsc	3,2
  7533  0652  2E76               	goto	i1l2444
  7534  0653  01F5               	clrf	i1___awmod@counter
  7535  0654  0AF5               	incf	i1___awmod@counter,f
  7536  0655                     i1l2434:	
  7537  0655  1BF1               	btfsc	i1___awmod@divisor+1,7
  7538  0656  2E61               	goto	i1l2436
  7539  0657  3001               	movlw	1
  7540  0658                     u175_25:	
  7541  0658  35F0               	lslf	i1___awmod@divisor,f
  7542  0659  0DF1               	rlf	i1___awmod@divisor+1,f
  7543  065A  0B89               	decfsz	9,f
  7544  065B  2E58               	goto	u175_25
  7545  065C  3001               	movlw	1
  7546  065D  00F4               	movwf	??i1___awmod
  7547  065E  0874               	movf	??i1___awmod,w
  7548  065F  07F5               	addwf	i1___awmod@counter,f
  7549  0660  2E55               	goto	i1l2434
  7550  0661                     i1l2436:	
  7551  0661  0871               	movf	i1___awmod@divisor+1,w
  7552  0662  0273               	subwf	i1___awmod@dividend+1,w
  7553  0663  1D03               	skipz
  7554  0664  2E67               	goto	u177_25
  7555  0665  0870               	movf	i1___awmod@divisor,w
  7556  0666  0272               	subwf	i1___awmod@dividend,w
  7557  0667                     u177_25:	
  7558  0667  1C03               	skipc
  7559  0668  2E6D               	goto	i1l2440
  7560  0669  0870               	movf	i1___awmod@divisor,w
  7561  066A  02F2               	subwf	i1___awmod@dividend,f
  7562  066B  0871               	movf	i1___awmod@divisor+1,w
  7563  066C  3BF3               	subwfb	i1___awmod@dividend+1,f
  7564  066D                     i1l2440:	
  7565  066D  3001               	movlw	1
  7566  066E                     u178_25:	
  7567  066E  36F1               	lsrf	i1___awmod@divisor+1,f
  7568  066F  0CF0               	rrf	i1___awmod@divisor,f
  7569  0670  0B89               	decfsz	9,f
  7570  0671  2E6E               	goto	u178_25
  7571  0672  3001               	movlw	1
  7572  0673  02F5               	subwf	i1___awmod@counter,f
  7573  0674  1D03               	btfss	3,2
  7574  0675  2E61               	goto	i1l2436
  7575  0676                     i1l2444:	
  7576  0676  0876               	movf	i1___awmod@sign,w
  7577  0677  1903               	btfsc	3,2
  7578  0678  2E7E               	goto	i1l2448
  7579  0679  09F2               	comf	i1___awmod@dividend,f
  7580  067A  09F3               	comf	i1___awmod@dividend+1,f
  7581  067B  0AF2               	incf	i1___awmod@dividend,f
  7582  067C  1903               	skipnz
  7583  067D  0AF3               	incf	i1___awmod@dividend+1,f
  7584  067E                     i1l2448:	
  7585  067E  0873               	movf	i1___awmod@dividend+1,w
  7586  067F  00F1               	movwf	?i1___awmod+1
  7587  0680  0872               	movf	i1___awmod@dividend,w
  7588  0681  00F0               	movwf	?i1___awmod
  7589  0682  0008               	return
  7590  0683                     __end_ofi1___awmod:	
  7591                           
  7592                           	psect	text39
  7593  05ED                     __ptext39:	
  7594 ;; *************** function i1___awdiv *****************
  7595 ;; Defined at:
  7596 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  divisor         2    0[COMMON] int 
  7599 ;;  dividend        2    2[COMMON] int 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  __awdiv         2    7[COMMON] int 
  7602 ;;  __awdiv         1    6[COMMON] unsigned char 
  7603 ;;  __awdiv         1    5[COMMON] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2    0[COMMON] int 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;Total ram usage:        9 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		i1_display_update
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           
  7627                           ;psect for function i1___awdiv
  7628  05ED                     i1___awdiv:	
  7629                           
  7630                           ;incstack = 0
  7631                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  7632  05ED  01F6               	clrf	i1___awdiv@sign
  7633  05EE  1FF1               	btfss	i1___awdiv@divisor+1,7
  7634  05EF  2DF7               	goto	i1l2378
  7635  05F0  09F0               	comf	i1___awdiv@divisor,f
  7636  05F1  09F1               	comf	i1___awdiv@divisor+1,f
  7637  05F2  0AF0               	incf	i1___awdiv@divisor,f
  7638  05F3  1903               	skipnz
  7639  05F4  0AF1               	incf	i1___awdiv@divisor+1,f
  7640  05F5  01F6               	clrf	i1___awdiv@sign
  7641  05F6  0AF6               	incf	i1___awdiv@sign,f
  7642  05F7                     i1l2378:	
  7643  05F7  1FF3               	btfss	i1___awdiv@dividend+1,7
  7644  05F8  2E02               	goto	i1l2384
  7645  05F9  09F2               	comf	i1___awdiv@dividend,f
  7646  05FA  09F3               	comf	i1___awdiv@dividend+1,f
  7647  05FB  0AF2               	incf	i1___awdiv@dividend,f
  7648  05FC  1903               	skipnz
  7649  05FD  0AF3               	incf	i1___awdiv@dividend+1,f
  7650  05FE  3001               	movlw	1
  7651  05FF  00F4               	movwf	??i1___awdiv
  7652  0600  0874               	movf	??i1___awdiv,w
  7653  0601  06F6               	xorwf	i1___awdiv@sign,f
  7654  0602                     i1l2384:	
  7655  0602  01F7               	clrf	i1___awdiv@quotient
  7656  0603  01F8               	clrf	i1___awdiv@quotient+1
  7657  0604  0870               	movf	i1___awdiv@divisor,w
  7658  0605  0471               	iorwf	i1___awdiv@divisor+1,w
  7659  0606  1903               	btfsc	3,2
  7660  0607  2E31               	goto	i1l2406
  7661  0608  01F5               	clrf	i1___awdiv@counter
  7662  0609  0AF5               	incf	i1___awdiv@counter,f
  7663  060A                     i1l2394:	
  7664  060A  1BF1               	btfsc	i1___awdiv@divisor+1,7
  7665  060B  2E16               	goto	i1l2396
  7666  060C  3001               	movlw	1
  7667  060D                     u165_25:	
  7668  060D  35F0               	lslf	i1___awdiv@divisor,f
  7669  060E  0DF1               	rlf	i1___awdiv@divisor+1,f
  7670  060F  0B89               	decfsz	9,f
  7671  0610  2E0D               	goto	u165_25
  7672  0611  3001               	movlw	1
  7673  0612  00F4               	movwf	??i1___awdiv
  7674  0613  0874               	movf	??i1___awdiv,w
  7675  0614  07F5               	addwf	i1___awdiv@counter,f
  7676  0615  2E0A               	goto	i1l2394
  7677  0616                     i1l2396:	
  7678  0616  3001               	movlw	1
  7679  0617                     u167_25:	
  7680  0617  35F7               	lslf	i1___awdiv@quotient,f
  7681  0618  0DF8               	rlf	i1___awdiv@quotient+1,f
  7682  0619  0B89               	decfsz	9,f
  7683  061A  2E17               	goto	u167_25
  7684  061B  0871               	movf	i1___awdiv@divisor+1,w
  7685  061C  0273               	subwf	i1___awdiv@dividend+1,w
  7686  061D  1D03               	skipz
  7687  061E  2E21               	goto	u168_25
  7688  061F  0870               	movf	i1___awdiv@divisor,w
  7689  0620  0272               	subwf	i1___awdiv@dividend,w
  7690  0621                     u168_25:	
  7691  0621  1C03               	skipc
  7692  0622  2E28               	goto	i1l2402
  7693  0623  0870               	movf	i1___awdiv@divisor,w
  7694  0624  02F2               	subwf	i1___awdiv@dividend,f
  7695  0625  0871               	movf	i1___awdiv@divisor+1,w
  7696  0626  3BF3               	subwfb	i1___awdiv@dividend+1,f
  7697  0627  1477               	bsf	i1___awdiv@quotient,0
  7698  0628                     i1l2402:	
  7699  0628  3001               	movlw	1
  7700  0629                     u169_25:	
  7701  0629  36F1               	lsrf	i1___awdiv@divisor+1,f
  7702  062A  0CF0               	rrf	i1___awdiv@divisor,f
  7703  062B  0B89               	decfsz	9,f
  7704  062C  2E29               	goto	u169_25
  7705  062D  3001               	movlw	1
  7706  062E  02F5               	subwf	i1___awdiv@counter,f
  7707  062F  1D03               	btfss	3,2
  7708  0630  2E16               	goto	i1l2396
  7709  0631                     i1l2406:	
  7710  0631  0876               	movf	i1___awdiv@sign,w
  7711  0632  1903               	btfsc	3,2
  7712  0633  2E39               	goto	i1l2410
  7713  0634  09F7               	comf	i1___awdiv@quotient,f
  7714  0635  09F8               	comf	i1___awdiv@quotient+1,f
  7715  0636  0AF7               	incf	i1___awdiv@quotient,f
  7716  0637  1903               	skipnz
  7717  0638  0AF8               	incf	i1___awdiv@quotient+1,f
  7718  0639                     i1l2410:	
  7719  0639  0878               	movf	i1___awdiv@quotient+1,w
  7720  063A  00F1               	movwf	?i1___awdiv+1
  7721  063B  0877               	movf	i1___awdiv@quotient,w
  7722  063C  00F0               	movwf	?i1___awdiv
  7723  063D  0008               	return
  7724  063E                     __end_ofi1___awdiv:	
  7725                           
  7726                           	psect	text40
  7727  01A5                     __ptext40:	
  7728 ;; *************** function _check_err *****************
  7729 ;; Defined at:
  7730 ;;		line 50 in file "bpc.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  pdata           1    wreg     PTR volatile struct .
  7733 ;;		 -> g_data(39), 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  pdata           1   10[BANK0 ] PTR volatile struct .
  7736 ;;		 -> g_data(39), 
  7737 ;;  i               1    8[BANK0 ] unsigned char 
  7738 ;;  check           1    9[BANK0 ] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  2    0[COMMON] int 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;Total ram usage:       16 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_bpc_proc
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _check_err
  7763  01A5                     _check_err:	
  7764                           
  7765                           ;incstack = 0
  7766                           ; Regs used in _check_err: [wreg-fsr1h+status,2+status,0]
  7767                           ;check_err@pdata stored from wreg
  7768  01A5  0020               	movlb	0	; select bank0
  7769  01A6  00AA               	movwf	check_err@pdata
  7770                           
  7771                           ;bpc.c: 50: static int check_err(G_DATA *pdata);bpc.c: 51: {;bpc.c: 53:     pdata->g_tim
      +                          e_h = pdata->g_recv_buf[CODE_H_1] * 4 + pdata->g_recv_buf[CODE_H_2];
  7772  01A7  082A               	movf	check_err@pdata,w
  7773  01A8  3E11               	addlw	17
  7774  01A9  0086               	movwf	6
  7775  01AA  0187               	clrf	7
  7776  01AB  082A               	movf	check_err@pdata,w
  7777  01AC  3E10               	addlw	16
  7778  01AD  0084               	movwf	4
  7779  01AE  0185               	clrf	5
  7780  01AF  0800               	movf	0,w
  7781  01B0  00F2               	movwf	??_check_err
  7782  01B1  3001               	movlw	1
  7783  01B2                     u201_25:	
  7784  01B2  35F2               	lslf	??_check_err,f
  7785  01B3  3EFF               	addlw	-1
  7786  01B4  1D03               	skipz
  7787  01B5  29B2               	goto	u201_25
  7788  01B6  3572               	lslf	??_check_err,w
  7789  01B7  0701               	addwf	1,w
  7790  01B8  00F3               	movwf	??_check_err+1
  7791  01B9  082A               	movf	check_err@pdata,w
  7792  01BA  3E03               	addlw	3
  7793  01BB  0086               	movwf	6
  7794  01BC  0187               	clrf	7
  7795  01BD  0873               	movf	??_check_err+1,w
  7796  01BE  0081               	movwf	1
  7797                           
  7798                           ;bpc.c: 54:     pdata->g_time_m = pdata->g_recv_buf[CODE_M_1] * 16 + pdata->g_recv_buf[C
      +                          ODE_M_2] * 4 + pdata->g_recv_buf[CODE_M_3];
  7799  01BF  082A               	movf	check_err@pdata,w
  7800  01C0  3E14               	addlw	20
  7801  01C1  0086               	movwf	6
  7802  01C2  0187               	clrf	7
  7803  01C3  082A               	movf	check_err@pdata,w
  7804  01C4  3E13               	addlw	19
  7805  01C5  0084               	movwf	4
  7806  01C6  0185               	clrf	5
  7807  01C7  0800               	movf	0,w
  7808  01C8  00F2               	movwf	??_check_err
  7809  01C9  3002               	movlw	2
  7810  01CA                     u202_25:	
  7811  01CA  35F2               	lslf	??_check_err,f
  7812  01CB  0B89               	decfsz	9,f
  7813  01CC  29CA               	goto	u202_25
  7814  01CD  082A               	movf	check_err@pdata,w
  7815  01CE  3E12               	addlw	18
  7816  01CF  0084               	movwf	4
  7817  01D0  0185               	clrf	5
  7818  01D1  0800               	movf	0,w
  7819  01D2  00F3               	movwf	??_check_err+1
  7820  01D3  3003               	movlw	3
  7821  01D4                     u203_25:	
  7822  01D4  35F3               	lslf	??_check_err+1,f
  7823  01D5  3EFF               	addlw	-1
  7824  01D6  1D03               	skipz
  7825  01D7  29D4               	goto	u203_25
  7826  01D8  3573               	lslf	??_check_err+1,w
  7827  01D9  0772               	addwf	??_check_err,w
  7828  01DA  0701               	addwf	1,w
  7829  01DB  00F4               	movwf	??_check_err+2
  7830  01DC  082A               	movf	check_err@pdata,w
  7831  01DD  3E04               	addlw	4
  7832  01DE  0086               	movwf	6
  7833  01DF  0187               	clrf	7
  7834  01E0  0874               	movf	??_check_err+2,w
  7835  01E1  0081               	movwf	1
  7836                           
  7837                           ;bpc.c: 55:     pdata->g_time_s = 10 + ((pdata->g_recv_buf[CODE_P1] == 1)? 20: (pdata->g
      +                          _recv_buf[CODE_P1] == 2)? 40: 0);
  7838  01E2  082A               	movf	check_err@pdata,w
  7839  01E3  3E0E               	addlw	14
  7840  01E4  0086               	movwf	6
  7841  01E5  0187               	clrf	7
  7842  01E6  0301               	decf	1,w
  7843  01E7  1903               	btfsc	3,2
  7844  01E8  29FD               	goto	i1l2640
  7845  01E9  082A               	movf	check_err@pdata,w
  7846  01EA  3E0E               	addlw	14
  7847  01EB  0086               	movwf	6
  7848  01EC  0187               	clrf	7
  7849  01ED  3002               	movlw	2
  7850  01EE  0601               	xorwf	1,w
  7851  01EF  1903               	btfsc	3,2
  7852  01F0  29F4               	goto	i1l2638
  7853  01F1  01A2               	clrf	_check_err$1078
  7854  01F2  01A3               	clrf	_check_err$1078+1
  7855  01F3  29F8               	goto	i1l401
  7856  01F4                     i1l2638:	
  7857  01F4  3028               	movlw	40
  7858  01F5  00A2               	movwf	_check_err$1078
  7859  01F6  3000               	movlw	0
  7860  01F7  00A3               	movwf	_check_err$1078+1
  7861  01F8                     i1l401:	
  7862  01F8  0823               	movf	_check_err$1078+1,w
  7863  01F9  00A1               	movwf	_check_err$1077+1
  7864  01FA  0822               	movf	_check_err$1078,w
  7865  01FB  00A0               	movwf	_check_err$1077
  7866  01FC  2A01               	goto	i1l2642
  7867  01FD                     i1l2640:	
  7868  01FD  3014               	movlw	20
  7869  01FE  00A0               	movwf	_check_err$1077
  7870  01FF  3000               	movlw	0
  7871  0200  00A1               	movwf	_check_err$1077+1
  7872  0201                     i1l2642:	
  7873  0201  0820               	movf	_check_err$1077,w
  7874  0202  3E0A               	addlw	10
  7875  0203  00F2               	movwf	??_check_err
  7876  0204  082A               	movf	check_err@pdata,w
  7877  0205  3E05               	addlw	5
  7878  0206  0086               	movwf	6
  7879  0207  0187               	clrf	7
  7880  0208  0872               	movf	??_check_err,w
  7881  0209  0081               	movwf	1
  7882                           
  7883                           ;bpc.c: 57:     u8 check = 0;
  7884  020A  01A9               	clrf	check_err@check
  7885                           
  7886                           ;bpc.c: 58:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  7887  020B  01A8               	clrf	check_err@i
  7888  020C  0AA8               	incf	check_err@i,f
  7889  020D                     i1l2652:	
  7890                           
  7891                           ;bpc.c: 59:     {;bpc.c: 60:         check ^= pdata->g_recv_buf[i];
  7892  020D  0828               	movf	check_err@i,w
  7893  020E  072A               	addwf	check_err@pdata,w
  7894  020F  00F2               	movwf	??_check_err
  7895  0210  0872               	movf	??_check_err,w
  7896  0211  3E0D               	addlw	13
  7897  0212  0086               	movwf	6
  7898  0213  0187               	clrf	7
  7899  0214  0801               	movf	1,w
  7900  0215  00F3               	movwf	??_check_err+1
  7901  0216  0873               	movf	??_check_err+1,w
  7902  0217  06A9               	xorwf	check_err@check,f
  7903                           
  7904                           ;bpc.c: 61:     }
  7905  0218  3001               	movlw	1
  7906  0219  00F2               	movwf	??_check_err
  7907  021A  0872               	movf	??_check_err,w
  7908  021B  07A8               	addwf	check_err@i,f
  7909  021C  300A               	movlw	10
  7910  021D  0228               	subwf	check_err@i,w
  7911  021E  1C03               	skipc
  7912  021F  2A0D               	goto	i1l2652
  7913                           
  7914                           ;bpc.c: 62:     if( (((0 == check) || (3 == check))) && (pdata->g_recv_buf[CODE_P3] % 2 
      +                          == 0) )
  7915  0220  0829               	movf	check_err@check,w
  7916  0221  1903               	btfsc	3,2
  7917  0222  2A27               	goto	i1l2662
  7918  0223  3003               	movlw	3
  7919  0224  0629               	xorwf	check_err@check,w
  7920  0225  1D03               	btfss	3,2
  7921  0226  2A3E               	goto	i1l2672
  7922  0227                     i1l2662:	
  7923  0227  082A               	movf	check_err@pdata,w
  7924  0228  3E17               	addlw	23
  7925  0229  0086               	movwf	6
  7926  022A  0187               	clrf	7
  7927  022B  1801               	btfsc	1,0
  7928  022C  2A3E               	goto	i1l2672
  7929                           
  7930                           ;bpc.c: 63:     {;bpc.c: 64:         pdata->g_time_h += (2 ==pdata->g_recv_buf[CODE_P3])
      +                          ? 12 : 0;
  7931  022D  082A               	movf	check_err@pdata,w
  7932  022E  3E17               	addlw	23
  7933  022F  0086               	movwf	6
  7934  0230  0187               	clrf	7
  7935  0231  3002               	movlw	2
  7936  0232  0601               	xorwf	1,w
  7937  0233  1903               	btfsc	3,2
  7938  0234  2A38               	goto	i1l2668
  7939  0235  01A4               	clrf	_check_err$1081
  7940  0236  01A5               	clrf	_check_err$1081+1
  7941  0237  2A3C               	goto	i1l2670
  7942  0238                     i1l2668:	
  7943  0238  300C               	movlw	12
  7944  0239  00A4               	movwf	_check_err$1081
  7945  023A  3000               	movlw	0
  7946  023B  00A5               	movwf	_check_err$1081+1
  7947  023C                     i1l2670:	
  7948  023C  0824               	movf	_check_err$1081,w
  7949  023D  2A64               	goto	L3
  7950  023E                     i1l2672:	
  7951                           ;bpc.c: 65:     }else if( (((1 == check) || (2 == check))) && ((pdata->g_recv_buf[CODE_P
      +                          3] == 1) || (pdata->g_recv_buf[CODE_P3] == 3)) )
  7952                           
  7953  023E  0329               	decf	check_err@check,w
  7954  023F  1903               	btfsc	3,2
  7955  0240  2A45               	goto	i1l2676
  7956  0241  3002               	movlw	2
  7957  0242  0629               	xorwf	check_err@check,w
  7958  0243  1D03               	btfss	3,2
  7959  0244  2A6C               	goto	i1l2688
  7960  0245                     i1l2676:	
  7961  0245  082A               	movf	check_err@pdata,w
  7962  0246  3E17               	addlw	23
  7963  0247  0086               	movwf	6
  7964  0248  0187               	clrf	7
  7965  0249  0301               	decf	1,w
  7966  024A  1903               	btfsc	3,2
  7967  024B  2A54               	goto	i1l2680
  7968  024C  082A               	movf	check_err@pdata,w
  7969  024D  3E17               	addlw	23
  7970  024E  0086               	movwf	6
  7971  024F  0187               	clrf	7
  7972  0250  3003               	movlw	3
  7973  0251  0601               	xorwf	1,w
  7974  0252  1D03               	btfss	3,2
  7975  0253  2A6C               	goto	i1l2688
  7976  0254                     i1l2680:	
  7977                           
  7978                           ;bpc.c: 67:     {;bpc.c: 68:         pdata->g_time_h += (3 ==pdata->g_recv_buf[CODE_P3])
      +                          ? 12 : 0;
  7979  0254  082A               	movf	check_err@pdata,w
  7980  0255  3E17               	addlw	23
  7981  0256  0086               	movwf	6
  7982  0257  0187               	clrf	7
  7983  0258  3003               	movlw	3
  7984  0259  0601               	xorwf	1,w
  7985  025A  1903               	btfsc	3,2
  7986  025B  2A5F               	goto	i1l2684
  7987  025C  01A6               	clrf	_check_err$1082
  7988  025D  01A7               	clrf	_check_err$1082+1
  7989  025E  2A63               	goto	i1l2686
  7990  025F                     i1l2684:	
  7991  025F  300C               	movlw	12
  7992  0260  00A6               	movwf	_check_err$1082
  7993  0261  3000               	movlw	0
  7994  0262  00A7               	movwf	_check_err$1082+1
  7995  0263                     i1l2686:	
  7996  0263  0826               	movf	_check_err$1082,w
  7997  0264                     L3:	
  7998  0264  00F2               	movwf	??_check_err
  7999  0265  082A               	movf	check_err@pdata,w
  8000  0266  3E03               	addlw	3
  8001  0267  0086               	movwf	6
  8002  0268  0187               	clrf	7
  8003  0269  0872               	movf	??_check_err,w
  8004  026A  0781               	addwf	1,f
  8005                           
  8006                           ;bpc.c: 69:     }
  8007  026B  2A81               	goto	i1l2698
  8008  026C                     i1l2688:	
  8009                           
  8010                           ;bpc.c: 71:     {;bpc.c: 72:         pdata->g_find_recv_start = FALSE;
  8011  026C  082A               	movf	check_err@pdata,w
  8012  026D  3E02               	addlw	2
  8013  026E  0086               	movwf	6
  8014  026F  0187               	clrf	7
  8015  0270  0181               	clrf	1
  8016                           
  8017                           ;bpc.c: 73:         pdata->g_isDecoding = 0;
  8018  0271  0A2A               	incf	check_err@pdata,w
  8019  0272  0086               	movwf	6
  8020  0273  0187               	clrf	7
  8021  0274  0181               	clrf	1
  8022                           
  8023                           ;bpc.c: 74:         pdata->g_recv_count = 0;
  8024  0275  082A               	movf	check_err@pdata,w
  8025  0276  3E0B               	addlw	11
  8026  0277  0086               	movwf	6
  8027  0278  0187               	clrf	7
  8028  0279  3000               	movlw	0
  8029  027A  3FC0               	movwi [0]fsr1
  8030  027B  3FC1               	movwi [1]fsr1
  8031                           
  8032                           ;bpc.c: 75:         return -1;
  8033  027C  30FF               	movlw	255
  8034  027D  00F0               	movwf	?_check_err
  8035  027E  30FF               	movlw	255
  8036  027F  00F1               	movwf	?_check_err+1
  8037  0280  0008               	return
  8038  0281                     i1l2698:	
  8039                           
  8040                           ;bpc.c: 77:     return 0;
  8041  0281  01F0               	clrf	?_check_err
  8042  0282  01F1               	clrf	?_check_err+1
  8043  0283  0008               	return
  8044  0284                     __end_of_check_err:	
  8045                           
  8046                           	psect	text41
  8047  0FBD                     __ptext41:	
  8048 ;; *************** function _capture_Set *****************
  8049 ;; Defined at:
  8050 ;;		line 38 in file "hardware.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  isON            1    wreg     unsigned char 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  isON            1    0[COMMON] unsigned char 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      unsigned char 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;Total ram usage:        1 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_ISR
  8074 ;;		_bpc_proc
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           
  8079                           ;psect for function _capture_Set
  8080  0FBD                     _capture_Set:	
  8081                           
  8082                           ;incstack = 0
  8083                           ; Regs used in _capture_Set: [wreg+status,2+status,0]
  8084                           ;capture_Set@isON stored from wreg
  8085  0FBD  00F0               	movwf	capture_Set@isON
  8086                           
  8087                           ;hardware.c: 38: u8 capture_Set(u8 isON);hardware.c: 39: {;hardware.c: 42:     PIR2bits.
      +                          CCP2IF = 0;
  8088  0FBE  0020               	movlb	0	; select bank0
  8089  0FBF  1012               	bcf	18,0	;volatile
  8090                           
  8091                           ;hardware.c: 45:     PIE2bits.CCP2IE = (isON)? 1 : 0;
  8092  0FC0  0870               	movf	capture_Set@isON,w
  8093  0FC1  1903               	btfsc	3,2
  8094  0FC2  2FC6               	goto	u181_20
  8095  0FC3  0021               	movlb	1	; select bank1
  8096  0FC4  1412               	bsf	18,0	;volatile
  8097  0FC5  0008               	return
  8098  0FC6                     u181_20:	
  8099  0FC6  0021               	movlb	1	; select bank1
  8100  0FC7  1012               	bcf	18,0	;volatile
  8101  0FC8  0008               	return
  8102  0FC9                     __end_of_capture_Set:	
  8103                           
  8104                           	psect	text42
  8105  03EA                     __ptext42:	
  8106 ;; *************** function _bpc_Cnt2Qua *****************
  8107 ;; Defined at:
  8108 ;;		line 22 in file "bpc.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  pdata           1    6[COMMON] PTR volatile struct .
  8113 ;;		 -> g_data(39), 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      unsigned char 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;Total ram usage:        3 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    1
  8130 ;; This function calls:
  8131 ;;		_capture_IsNegEdge
  8132 ;;		_cnt_abs
  8133 ;;		i1_data_getdata
  8134 ;; This function is called by:
  8135 ;;		_bpc_proc
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _bpc_Cnt2Qua
  8141  03EA                     _bpc_Cnt2Qua:	
  8142                           
  8143                           ;bpc.c: 24:     G_DATA *pdata = data_getdata();
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _bpc_Cnt2Qua: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8147  03EA  318F  2754  3183   	fcall	i1_data_getdata
  8148  03ED  00F4               	movwf	??_bpc_Cnt2Qua
  8149  03EE  0874               	movf	??_bpc_Cnt2Qua,w
  8150  03EF  00F6               	movwf	bpc_Cnt2Qua@pdata
  8151                           
  8152                           ;bpc.c: 25:     if(capture_IsNegEdge()){
  8153  03F0  318F  2792  3183   	fcall	_capture_IsNegEdge
  8154  03F3  3A00               	xorlw	0
  8155  03F4  1903               	skipnz
  8156  03F5  2C09               	goto	i1l2594
  8157                           
  8158                           ;bpc.c: 27:         if(pdata->cnt_low > 31030 - 1550){
  8159  03F6  0876               	movf	bpc_Cnt2Qua@pdata,w
  8160  03F7  3E25               	addlw	37
  8161  03F8  0086               	movwf	6
  8162  03F9  0187               	clrf	7
  8163  03FA  3F40               	moviw [0]fsr1
  8164  03FB  00F4               	movwf	??_bpc_Cnt2Qua
  8165  03FC  3F41               	moviw [1]fsr1
  8166  03FD  00F5               	movwf	??_bpc_Cnt2Qua+1
  8167  03FE  3073               	movlw	115
  8168  03FF  0275               	subwf	??_bpc_Cnt2Qua+1,w
  8169  0400  3029               	movlw	41
  8170  0401  1903               	skipnz
  8171  0402  0274               	subwf	??_bpc_Cnt2Qua,w
  8172  0403  1C03               	skipc
  8173  0404  2C07               	goto	i1l2590
  8174                           
  8175                           ;bpc.c: 28:             return 5;
  8176  0405  3005               	movlw	5
  8177  0406  0008               	return
  8178  0407                     i1l2590:	
  8179                           
  8180                           ;bpc.c: 30:             return 6;
  8181  0407  3006               	movlw	6
  8182  0408  0008               	return
  8183  0409                     i1l2594:	
  8184                           
  8185                           ;bpc.c: 35:         if(cnt_abs(pdata->cnt_high, 3103) < 1550){
  8186  0409  0876               	movf	bpc_Cnt2Qua@pdata,w
  8187  040A  3E23               	addlw	35
  8188  040B  0086               	movwf	6
  8189  040C  0187               	clrf	7
  8190  040D  3F40               	moviw [0]fsr1
  8191  040E  00F0               	movwf	cnt_abs@a
  8192  040F  3F41               	moviw [1]fsr1
  8193  0410  00F1               	movwf	cnt_abs@a+1
  8194  0411  301F               	movlw	31
  8195  0412  00F2               	movwf	cnt_abs@b
  8196  0413  300C               	movlw	12
  8197  0414  00F3               	movwf	cnt_abs@b+1
  8198  0415  3187  27CC  3183   	fcall	_cnt_abs
  8199  0418  3006               	movlw	6
  8200  0419  0271               	subwf	?_cnt_abs+1,w
  8201  041A  300E               	movlw	14
  8202  041B  1903               	skipnz
  8203  041C  0270               	subwf	?_cnt_abs,w
  8204  041D  1803               	skipnc
  8205  041E  2C21               	goto	i1l2602
  8206                           
  8207                           ;bpc.c: 36:             return 0;
  8208  041F  3000               	movlw	0
  8209  0420  0008               	return
  8210  0421                     i1l2602:	
  8211  0421  0876               	movf	bpc_Cnt2Qua@pdata,w
  8212  0422  3E23               	addlw	35
  8213  0423  0086               	movwf	6
  8214  0424  0187               	clrf	7
  8215  0425  3F40               	moviw [0]fsr1
  8216  0426  00F0               	movwf	cnt_abs@a
  8217  0427  3F41               	moviw [1]fsr1
  8218  0428  00F1               	movwf	cnt_abs@a+1
  8219  0429  3040               	movlw	64
  8220  042A  00F2               	movwf	cnt_abs@b
  8221  042B  3018               	movlw	24
  8222  042C  00F3               	movwf	cnt_abs@b+1
  8223  042D  3187  27CC  3183   	fcall	_cnt_abs
  8224  0430  3006               	movlw	6
  8225  0431  0271               	subwf	?_cnt_abs+1,w
  8226  0432  300E               	movlw	14
  8227  0433  1903               	skipnz
  8228  0434  0270               	subwf	?_cnt_abs,w
  8229  0435  1803               	skipnc
  8230  0436  2C39               	goto	i1l2610
  8231                           
  8232                           ;bpc.c: 38:             return 1;
  8233  0437  3001               	movlw	1
  8234  0438  0008               	return
  8235  0439                     i1l2610:	
  8236  0439  0876               	movf	bpc_Cnt2Qua@pdata,w
  8237  043A  3E23               	addlw	35
  8238  043B  0086               	movwf	6
  8239  043C  0187               	clrf	7
  8240  043D  3F40               	moviw [0]fsr1
  8241  043E  00F0               	movwf	cnt_abs@a
  8242  043F  3F41               	moviw [1]fsr1
  8243  0440  00F1               	movwf	cnt_abs@a+1
  8244  0441  305F               	movlw	95
  8245  0442  00F2               	movwf	cnt_abs@b
  8246  0443  3024               	movlw	36
  8247  0444  00F3               	movwf	cnt_abs@b+1
  8248  0445  3187  27CC  3183   	fcall	_cnt_abs
  8249  0448  3006               	movlw	6
  8250  0449  0271               	subwf	?_cnt_abs+1,w
  8251  044A  300E               	movlw	14
  8252  044B  1903               	skipnz
  8253  044C  0270               	subwf	?_cnt_abs,w
  8254  044D  1803               	skipnc
  8255  044E  2C51               	goto	i1l2618
  8256                           
  8257                           ;bpc.c: 40:             return 2;
  8258  044F  3002               	movlw	2
  8259  0450  0008               	return
  8260  0451                     i1l2618:	
  8261  0451  0876               	movf	bpc_Cnt2Qua@pdata,w
  8262  0452  3E23               	addlw	35
  8263  0453  0086               	movwf	6
  8264  0454  0187               	clrf	7
  8265  0455  3F40               	moviw [0]fsr1
  8266  0456  00F0               	movwf	cnt_abs@a
  8267  0457  3F41               	moviw [1]fsr1
  8268  0458  00F1               	movwf	cnt_abs@a+1
  8269  0459  3081               	movlw	129
  8270  045A  00F2               	movwf	cnt_abs@b
  8271  045B  3030               	movlw	48
  8272  045C  00F3               	movwf	cnt_abs@b+1
  8273  045D  3187  27CC  3183   	fcall	_cnt_abs
  8274  0460  3006               	movlw	6
  8275  0461  0271               	subwf	?_cnt_abs+1,w
  8276  0462  300E               	movlw	14
  8277  0463  1903               	skipnz
  8278  0464  0270               	subwf	?_cnt_abs,w
  8279  0465  1803               	skipnc
  8280  0466  2C69               	goto	i1l2626
  8281                           
  8282                           ;bpc.c: 42:             return 3;
  8283  0467  3003               	movlw	3
  8284  0468  0008               	return
  8285  0469                     i1l2626:	
  8286                           
  8287                           ;bpc.c: 44:             return 4;
  8288  0469  3004               	movlw	4
  8289  046A  0008               	return
  8290  046B                     __end_of_bpc_Cnt2Qua:	
  8291                           
  8292                           	psect	text43
  8293  0F54                     __ptext43:	
  8294 ;; *************** function i1_data_getdata *****************
  8295 ;; Defined at:
  8296 ;;		line 9 in file "data.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      PTR volatile struct .
  8303 ;; Registers used:
  8304 ;;		wreg
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;Total ram usage:        0 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_bpc_Cnt2Qua
  8320 ;;		_bpc_proc
  8321 ;;		_capture_handdle
  8322 ;;		_key_checkPressed
  8323 ;;		_key_isPressed
  8324 ;;		i1_display_update
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function i1_data_getdata
  8330  0F54                     i1_data_getdata:	
  8331                           
  8332                           ;data.c: 11:     return &g_data;
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in i1_data_getdata: [wreg]
  8336  0F54  30A0               	movlw	(low (_g_data| 0))& (0+255)
  8337  0F55  0008               	return
  8338  0F56                     __end_ofi1_data_getdata:	
  8339                           
  8340                           	psect	text44
  8341  07CC                     __ptext44:	
  8342 ;; *************** function _cnt_abs *****************
  8343 ;; Defined at:
  8344 ;;		line 18 in file "bpc.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  a               2    0[COMMON] unsigned short 
  8347 ;;  b               2    2[COMMON] unsigned short 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  2    0[COMMON] unsigned short 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;Total ram usage:        4 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_bpc_Cnt2Qua
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function _cnt_abs
  8374  07CC                     _cnt_abs:	
  8375                           
  8376                           ;bpc.c: 19:     return a>b? (a-b):(b-a);
  8377                           
  8378                           ;incstack = 0
  8379                           ; Regs used in _cnt_abs: [wreg+status,2+status,0]
  8380  07CC  0871               	movf	cnt_abs@a+1,w
  8381  07CD  0273               	subwf	cnt_abs@b+1,w
  8382  07CE  1D03               	skipz
  8383  07CF  2FD2               	goto	u151_25
  8384  07D0  0870               	movf	cnt_abs@a,w
  8385  07D1  0272               	subwf	cnt_abs@b,w
  8386  07D2                     u151_25:	
  8387  07D2  1C03               	skipc
  8388  07D3  2FDB               	goto	i1l2306
  8389  07D4  0870               	movf	cnt_abs@a,w
  8390  07D5  0272               	subwf	cnt_abs@b,w
  8391  07D6  00F0               	movwf	?_cnt_abs
  8392  07D7  0871               	movf	cnt_abs@a+1,w
  8393  07D8  3B73               	subwfb	cnt_abs@b+1,w
  8394  07D9  00F1               	movwf	?_cnt_abs+1
  8395  07DA  0008               	return
  8396  07DB                     i1l2306:	
  8397  07DB  0872               	movf	cnt_abs@b,w
  8398  07DC  0270               	subwf	cnt_abs@a,w
  8399  07DD  00F0               	movwf	?_cnt_abs
  8400  07DE  0873               	movf	cnt_abs@b+1,w
  8401  07DF  3B71               	subwfb	cnt_abs@a+1,w
  8402  07E0  00F1               	movwf	?_cnt_abs+1
  8403  07E1  0008               	return
  8404  07E2                     __end_of_cnt_abs:	
  8405                           
  8406                           	psect	text45
  8407  0F92                     __ptext45:	
  8408 ;; *************** function _capture_IsNegEdge *****************
  8409 ;; Defined at:
  8410 ;;		line 57 in file "hardware.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      enum E5232
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        0 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_bpc_Cnt2Qua
  8434 ;;		_capture_handdle
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _capture_IsNegEdge
  8440  0F92                     _capture_IsNegEdge:	
  8441                           
  8442                           ;hardware.c: 59:     return (CCP2CONbits.CCP2M == (0b0100))? TRUE : FALSE;
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _capture_IsNegEdge: [wreg+status,2+status,0]
  8446  0F92  0025               	movlb	5	; select bank5
  8447  0F93  081A               	movf	26,w	;volatile
  8448  0F94  390F               	andlw	15
  8449  0F95  3A04               	xorlw	4
  8450  0F96  1D03               	btfss	3,2
  8451  0F97  2F9A               	goto	u152_20
  8452  0F98  3001               	movlw	1
  8453  0F99  0008               	return
  8454  0F9A                     u152_20:	
  8455  0F9A  3000               	movlw	0
  8456  0F9B  0008               	return
  8457  0F9C                     __end_of_capture_IsNegEdge:	
  8458  007E                     btemp	set	126	;btemp
  8459  007E                     int$flags	set	126
  8460  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         63
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      54
    BANK1            80     21      60
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    display_update@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    key_isPressed@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    key_checkPressed@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    capture_handdle@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_proc@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    check_err@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_Cnt2Qua@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    sp__data_getdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    init_env@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_capture_handdle
    _timer_Timer0Handdle->_key_checkPressed
    _key_checkPressed->___lwmod
    _led_Blink->i1_led_SetState
    _capture_init->_capture_setEdge
    _capture_handdle->_capture_setEdge
    _capture_handdle->i1_led_SetState
    i1_display_update->i1_display_write_once
    i1_display_write_once->i1___awdiv
    i1_display_write_byte->i1_display_control595_delay
    _bpc_Cnt2Qua->_cnt_abs

Critical Paths under _main in BANK0

    _init_env->_display_set
    _display_update->___awdiv
    _display_update->___awmod
    _display_write_once->___awdiv
    _display_write_once->___awmod
    _display_write_once->_display_write_byte
    _display_write_byte->_display_control595_delay

Critical Paths under _ISR in BANK0

    _ISR->_bpc_proc
    _bpc_proc->i1_display_update

Critical Paths under _main in BANK1

    _main->_display_update
    _display_update->_display_write_once
    _display_write_once->___awdiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2760
                        _display_set
                     _display_update
                           _init_env
                       _led_SetState
                   _timer_Timer0Init
                  _timer_Timer0Start
                   _timer_Timer1Init
                  _timer_Timer1Start
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Start                                    0     0      0       0
                  _timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (2) _timer_Timer0Reset                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_SetState                                         1     1      0      22
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             5     5      0     164
                                             27 BANK0      2     2      0
                                              0 BANK1      3     3      0
                       _data_getdata
                        _display_set
 ---------------------------------------------------------------------------------
 (2) _display_set                                          1     1      0      31
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_update                                      12    12      0    2543
                                              9 BANK1     12    12      0
                            ___awdiv
                            ___awmod
                       _data_getdata
                 _display_write_once
 ---------------------------------------------------------------------------------
 (2) _display_write_once                                   4     1      3     570
                                              5 BANK1      4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
           _display_control595_delay
                 _display_write_byte
 ---------------------------------------------------------------------------------
 (3) _display_write_byte                                   4     4      0     139
                                             28 BANK0      2     2      0
                                              0 BANK1      2     2      0
           _display_control595_delay
 ---------------------------------------------------------------------------------
 (4) _display_control595_delay                             2     2      0      37
                                             26 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _data_getdata                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             26 BANK0      4     0      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                             26 BANK0      4     0      4
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0    5619
                                             24 BANK0      2     2      0
                            ___lwmod
                           _bpc_proc
                   _capture_IsIntrpt
                        _capture_Set
                  _capture_clrIntrpt
                    _capture_handdle
                       _capture_init
                      _key_isPressed
                          _led_Blink
                _timer_IsTimer0Itrpt
                _timer_IsTimer1Itrpt
                _timer_Timer0Handdle
              _timer_Timer1ClrIntrpt
                i1_timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (6) i1_timer_Timer0Reset                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_Timer1ClrIntrpt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_Timer0Handdle                                  0     0      0     682
                   _key_checkPressed
 ---------------------------------------------------------------------------------
 (7) _key_checkPressed                                     3     3      0     682
                                              6 COMMON     3     3      0
                            ___lwmod
                          _led_Blink
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (8) _led_Blink                                            1     1      0      22
                                              1 COMMON     1     1      0
                     i1_led_SetState
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _timer_IsTimer1Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer_IsTimer0Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _key_isPressed                                        2     2      0      45
                                              0 COMMON     2     2      0
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (6) _capture_init                                         0     0      0      66
                    _capture_setEdge
 ---------------------------------------------------------------------------------
 (6) _capture_handdle                                     13    13      0     318
                                              1 COMMON    13    13      0
                  _capture_IsNegEdge
                    _capture_setEdge
                     i1_data_getdata
                     i1_led_SetState
 ---------------------------------------------------------------------------------
 (9) i1_led_SetState                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _capture_setEdge                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _capture_clrIntrpt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _capture_IsIntrpt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bpc_proc                                            12    12      0    3849
                                             12 BANK0     12    12      0
                        _bpc_Cnt2Qua
                        _capture_Set
                          _check_err
                     i1_data_getdata
                   i1_display_update
 ---------------------------------------------------------------------------------
 (7) i1_display_update                                    12    12      0    1274
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                     i1_data_getdata
               i1_display_write_once
 ---------------------------------------------------------------------------------
 (8) i1_display_write_once                                 4     1      3     283
                                              9 COMMON     4     1      3
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
         i1_display_control595_delay
               i1_display_write_byte
 ---------------------------------------------------------------------------------
 (9) i1_display_write_byte                                 4     4      0      93
                                              2 COMMON     4     4      0
         i1_display_control595_delay
 ---------------------------------------------------------------------------------
 (10) i1_display_control595_delay                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1___awmod                                            7     3      4     400
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     456
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _check_err                                           16    14      2     749
                                              0 COMMON     5     3      2
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (6) _capture_Set                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _bpc_Cnt2Qua                                          3     3      0     851
                                              4 COMMON     3     3      0
                  _capture_IsNegEdge
                            _cnt_abs
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (8) i1_data_getdata                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _cnt_abs                                              4     0      4     740
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) _capture_IsNegEdge                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_set
   _display_update
     ___awdiv
     ___awmod
     _data_getdata
     _display_write_once
       ___awdiv (ARG)
       ___awmod (ARG)
       _display_control595_delay (ARG)
       _display_write_byte (ARG)
         _display_control595_delay
   _init_env
     _data_getdata
     _display_set
   _led_SetState
   _timer_Timer0Init
   _timer_Timer0Start
     _timer_Timer0Reset
   _timer_Timer1Init
   _timer_Timer1Start
   _uart_init

 _ISR (ROOT)
   ___lwmod
   _bpc_proc
     _bpc_Cnt2Qua
       _capture_IsNegEdge
       _cnt_abs
       i1_data_getdata
     _capture_Set
     _check_err
     i1_data_getdata
     i1_display_update
       i1___awdiv
       i1___awmod
       i1_data_getdata
       i1_display_write_once
         i1___awdiv (ARG)
         i1___awmod (ARG)
         i1_display_control595_delay (ARG)
         i1_display_write_byte (ARG)
           i1_display_control595_delay
   _capture_IsIntrpt
   _capture_Set
   _capture_clrIntrpt
   _capture_handdle
     _capture_IsNegEdge
     _capture_setEdge
     i1_data_getdata
     i1_led_SetState
   _capture_init
     _capture_setEdge
   _key_isPressed
     i1_data_getdata
   _led_Blink
     i1_led_SetState
   _timer_IsTimer0Itrpt
   _timer_IsTimer1Itrpt
   _timer_Timer0Handdle
     _key_checkPressed
       ___lwmod
       _led_Blink
         i1_led_SetState
       i1_data_getdata
   _timer_Timer1ClrIntrpt
   i1_timer_Timer0Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      36       5       67.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      3C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      80      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      80      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 17 21:36:37 2019

 __end_ofi1_display_control595_delay 0FA7           i1_display_control595_delay 0F9C  
                        __CFG_CP$OFF 0000                         ?_display_set 0070  
                       ___awdiv@sign 00C9                  _display_update$1481 00D9  
                        __CFG_LVP$ON 0000                                  l538 0FCE  
                                _GIE 005F                                  _RC4 0074  
                       __CFG_CPD$OFF 0000                                  _ISR 0004  
                       ___awmod@sign 00C9               __end_of_display_update 0346  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         __CFG_FOSC$HS 0000  
         __size_of_capture_clrIntrpt 0003                       ??_led_SetState 003A  
              i1display_write_byte@i 0075                 __end_of_data_getdata 0004  
               capture_handdle@pdata 0079                                 ?_ISR 0070  
       key_checkPressed@key_time_cnt 003E                                 l3402 05DD  
                               l3342 0552                                 l3406 05E7  
                               l3360 0580                                 l3352 055D  
                               l3336 0545                                 l3354 056B  
                               l3364 058B                                 l3380 05A9  
                               l3368 0594                                 l3392 05B8  
                               l3384 05B1                                 l3480 02C6  
                               l3394 05C6                                 l3298 06C3  
                               l3482 02CB                                 l3466 050C  
                               l3398 05D3                                 l3596 0733  
                               _BRGH 0CF2                                 _CREN 0CEC  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u3105 052A  
                               u3045 05BC                                 _ENUM 0055  
                               u3065 05CD                                 u3075 05D4  
                               u2550 0FBA                                 _PEIE 005E  
                               u2945 0561                                 _RCIE 048D  
                               u2965 056D                                 u2975 0578  
                               u2895 06C7                                 u2985 0582  
                               _TMR0 0015                                 _SPEN 0CEF  
                               _TXIE 048C                                 _TXEN 0CF5  
                               _SYNC 0CF4                                 _WPUA 020C  
                               _WPUB 020D                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Temp 0042                                 _main 071A  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0057                        __CFG_MCLRE$ON 0000  
          __size_ofi1_display_update 00A4                  i1_timer_Timer0Reset 0F72  
                              ??_ISR 0038               i1display_write_once@HL 007C  
             i1display_write_once@HR 0079               i1display_write_once@ML 007A  
             i1display_write_once@MR 007B                        __CFG_PLLEN$ON 0000  
                              ISR@tx 0053             __end_of_timer_Timer0Init 0FE3  
           __end_of_timer_Timer1Init 0FF0                                ?_main 0070  
                     i1___awdiv@sign 0076                      __end_of___awdiv 059C  
                              _BRG16 0CFB                        __CFG_WDTE$OFF 0000  
                    __end_of___awmod 05ED                      ___awdiv@divisor 003A  
                              _LATC3 0873                                _LATC4 0874  
                              _IOCAN 0392                                _IOCAP 0391  
                              _IOCBN 0395                                _IOCBP 0394  
                              _IOCCN 0398                                _IOCCP 0397  
                              i1l140 0055                                i1l135 0025  
                              i1l401 01F8                      __end_of___lwmod 071A  
                              i1l538 0FA0                      ___awdiv@counter 00C8  
                              _RCREG 0199                                _TMR1H 0017  
                              _TMR1L 0016                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _WPUC3 1073                                _WPUC4 1074  
                              _RXSEL 08E9                                _TXREG 019A  
                              _TXSEL 08EA                      ?_display_update 0070  
                              _TX_en 004D                 __size_of_bpc_Cnt2Qua 0081  
               ?i1_timer_Timer0Reset 0070                  _timer_IsTimer0Itrpt 0F66  
                    __end_of_cnt_abs 07E2             __end_of_key_checkPressed 06C0  
                _timer_IsTimer1Itrpt 0F6A                       i1___awmod@sign 0076  
               __end_of_capture_init 0F8A                                main@i 0044  
                              status 0003                                wtemp0 007E  
                 __size_ofi1___awdiv 0051                   __size_ofi1___awmod 0045  
               ?_timer_IsTimer0Itrpt 0070                 ?_timer_IsTimer1Itrpt 0070  
       __end_ofi1_display_write_byte 0768         __end_ofi1_display_write_once 07B0  
                    __initialization 0059                         __end_of_main 0741  
               __size_of_capture_Set 000C                 display_write_once@HL 00CF  
               display_write_once@HR 00CC                 display_write_once@ML 00CD  
               display_write_once@MR 00CE                       __CFG_LPBOR$OFF 0000  
             capture_handdle@cnt_int 007A               capture_handdle@cnt_tmp 007C  
            __size_ofi1_data_getdata 0002                               ??_main 003E  
          __size_of_capture_IsIntrpt 0004                ??i1_timer_Timer0Reset 0070  
                             ISR@cnt 0046               __size_of_key_isPressed 0014  
                             _CCPR2H 0299                               _CCPR2L 0298  
                   ___awdiv@dividend 003C                  bpc_proc@last_time_h 0030  
                bpc_proc@last_time_m 0032                  bpc_proc@last_time_s 002E  
              _timer_Timer1ClrIntrpt 0F5C                               i1l3010 010A  
                             i1l3022 016C                               i1l3040 0189  
                             i1l3024 016F                               i1l2306 07DB  
                             i1l2410 0639                               i1l2402 0628  
                             i1l3018 014D                               i1l2406 0631  
                             i1l2422 0648                               i1l2342 06F4  
                             i1l2440 066D                               i1l2344 0700  
                             i1l2352 0715                               i1l3216 000F  
                             i1l2610 0439                               i1l2602 0421  
                             i1l2434 0655                               i1l2426 064F  
                             i1l2258 0743                               i1l3226 0044  
                             i1l2436 0661                               i1l2444 0676  
                             i1l2348 070C                               i1l3228 0047  
                             u201_25 01B2                               i1l2640 01FD  
                             i1l2384 0602                               i1l2448 067E  
                             i1l2626 0469                               i1l2618 0451  
                             i1l2642 0201                               i1l2394 060A  
                             i1l2378 05F7                               i1l2810 037C  
                             i1l2706 0FF9                               i1l2652 020D  
                             i1l2396 0616                               i1l2812 0381  
                             u202_25 01CA                               i1l2590 0407  
                             i1l2670 023C                               i1l2662 0227  
                             i1l2638 01F4                               i1l2910 07F4  
                             i1l2680 0254                               i1l2672 023E  
                             i1l2594 0409                               i1l2684 025F  
                             i1l2676 0245                               i1l2668 0238  
                             i1l2940 0499                               u203_25 01D4  
                             i1l2686 0263                               i1l2950 04B1  
                             i1l2688 026C                               i1l2960 04CA  
                             i1l2944 04A1                               i1l2698 0281  
                             i1l2982 008F                               i1l2992 00C2  
                             i1l2986 009A                               i1l2996 00CA  
                             u151_25 07D2                               u152_20 0F9A  
                             u240_25 0490                               u160_25 070D  
                             u147_20 07FD                               u251_25 015B  
                             u252_25 016A                               u181_20 0FC6  
                             u165_25 060D                               u149_25 0746  
                             u253_25 01A2                               u157_25 06F7  
                             u167_25 0617                               u175_25 0658  
                             u159_25 0706                               u168_25 0621  
                             u169_25 0629                               u177_25 0667  
                             u178_25 066E                               _SPBRGH 019C  
                             _SPBRGL 019B                               _TRISC3 0473  
                             _TRISC4 0474                       __CFG_PWRTE$OFF 0000  
                   __end_of_bpc_proc 01A5                ??_timer_IsTimer0Itrpt 0070  
              ??_timer_IsTimer1Itrpt 0070                 __end_of_led_SetState 0FBD  
                          ??___awdiv 00C7                               _g_data 00A0  
                     __CFG_STVREN$ON 0000          __end_of_timer_Timer0Handdle 0F5C  
                          ??___awmod 00C7           ??_display_control595_delay 003A  
                             _flg_rc 004C                            ??___lwmod 0074  
                   __end_of_init_env 0538                     ___awdiv@quotient 00CA  
                    ___awmod@divisor 003A                               _temp_h 0051  
                             _temp_l 0050                      ___awmod@counter 00C8  
                          ??_cnt_abs 0074                 __size_of_display_set 0008  
                   __end_of_segmcode 100B                    __end_ofi1___awdiv 063E  
              __size_of_data_getdata 0002                    __end_ofi1___awmod 0683  
            __end_of__initialization 0068                     i1_display_update 0346  
                     __pcstackCOMMON 0070                        _key_isPressed 07E2  
                       _data_getdata 0002                   __size_of_check_err 00DF  
        ?i1_display_control595_delay 0070           __end_of_display_write_byte 06EE  
         __end_of_display_write_once 078E                     led_SetState@isOn 003A  
           i1display_write_byte@data 0074                __size_of_capture_init 0008  
                     _OPTION_REGbits 0095                   __size_of_led_Blink 000B  
              tmp_change@history_key 0054              capture_handdle@last_cnt 0040  
               i1_display_write_byte 0741               ?_timer_Timer1ClrIntrpt 0070  
               i1_display_write_once 078E                           __pbssBANK0 003E  
                         __pbssBANK1 00A0             __size_of_capture_handdle 0067  
            __size_ofi1_led_SetState 000A                      __CFG_VCAPEN$OFF 0000  
           __size_of_capture_setEdge 0010                       ?_key_isPressed 0070  
                         __pmaintext 071A                         _capture_init 0F82  
                         __pintentry 0004                       i1_data_getdata 0F54  
                   ??_display_update 00D0                       bpc_proc@number 0036  
                  ?_timer_Timer0Init 0070                    ?_timer_Timer1Init 0070  
                 i1___awdiv@dividend 0072                   __size_of_uart_init 001C  
                            _ODCONC3 1473                              _ODCONC4 1474  
                   _capture_IsIntrpt 0F62                   ??_timer_Timer0Init 003A  
                 ??_timer_Timer1Init 003A                  display_update@pdata 00DB  
                          ?_bpc_proc 0070                ?i1_display_write_byte 0070  
              ?i1_display_write_once 0079                    ?_key_checkPressed 0070  
                capture_setEdge@edge 0070                    __end_of_check_err 0284  
                 ??_key_checkPressed 0076                              _RX_data 004E  
                          ?_init_env 0070                              _TX_data 004F  
              __size_of_led_SetState 000B                    __end_of_led_Blink 0FB2  
                 i1___awdiv@quotient 0077     __end_of_display_control595_delay 0FD6  
             __end_ofi1_data_getdata 0F56                              ___awdiv 0538  
                            ___awmod 059C      i1display_control595_delay@times 0071  
                            ___lwmod 06EE                           check_err@i 0028  
                            __ptext1 07B0                              __ptext2 0F5F  
                            __ptext3 0FE3                              __ptext4 0F6E  
                            __ptext5 0F77                              __ptext6 0FD6  
                            __ptext7 0FB2                              __ptext8 04D2  
                      ??_bpc_Cnt2Qua 0074                              __ptext9 0F8A  
                            _cnt_abs 07CC                         __size_of_ISR 0053  
                          _T1CONbits 0018                     ___awmod@dividend 003C  
                          _IOCCFbits 0399                           ??_bpc_proc 002C  
                          _IOCCPbits 0397                              main@cnt 0052  
                            clrloop0 0F7D                         _led_SetState 0FB2  
               end_of_initialization 0068  __size_ofi1_display_control595_delay 000B  
                         ??_init_env 003B                      capture_Set@isON 0070  
                    ??_key_isPressed 0070                    __end_of_uart_init 07CC  
                      ??_capture_Set 0070                    ??_capture_handdle 0071  
                 i1led_SetState@isOn 0070                      ?i1_data_getdata 0070  
                  ??_capture_setEdge 0070          __end_ofi1_timer_Timer0Reset 0F77  
              i1_display_update$1481 0029                            _PORTAbits 000C  
                          _PORTCbits 000E               ??i1_display_write_byte 0072  
             ??i1_display_write_once 007C                            _TRISCbits 008E  
           __end_ofi1_display_update 03EA                            i1___awdiv 05ED  
                          i1___awmod 063E                  __end_of_bpc_Cnt2Qua 046B  
        __end_of_timer_IsTimer0Itrpt 0F6A          __end_of_timer_IsTimer1Itrpt 0F6E  
                     i1_led_SetState 07F6                          _CCP2CONbits 029A  
                      ??_display_set 003A                  __end_of_capture_Set 0FC9  
       __size_of_timer_Timer0Handdle 0003              ??_timer_Timer1ClrIntrpt 0070  
                start_initialization 0059                          __end_of_ISR 0057  
                         ?i1___awdiv 0070                           ?i1___awmod 0070  
                display_write_byte@i 00C8    __size_of_display_control595_delay 000D  
                 _display_write_byte 06C0               display_write_byte@data 00C7  
                 _display_write_once 0768            ?_display_control595_delay 0070  
             __end_ofi1_led_SetState 0800                       check_err@check 0029  
              key_checkPressed@pdata 0078                       check_err@pdata 002A  
             tmp_change@key_time_cnt 0048                  ?_display_write_byte 0070  
                ?_display_write_once 00CC             __end_of_capture_IsIntrpt 0F66  
                 i1___awmod@dividend 0072                 ??_display_write_byte 003C  
               ??_display_write_once 003E                          _bpc_Cnt2Qua 03EA  
                __end_of_display_set 0F92                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00C7  
                    ?i1_led_SetState 0070                    __size_of_bpc_proc 0139  
          __size_of_timer_Timer0Init 000D            __size_of_timer_Timer1Init 000D  
                          _check_err 01A5                    __size_of_init_env 0066  
          __size_of_key_checkPressed 003D                          _capture_Set 0FBD  
                           ?___awdiv 003A                             ?___awmod 003A  
                      bpc_proc@pdata 0037                            _led_Blink 0FA7  
                           ?___lwmod 0070                    i1___awdiv@divisor 0070  
                  i1___awdiv@counter 0075                             ?_cnt_abs 0070  
                  _timer_Timer0Reset 0F77                          ??i1___awdiv 0074  
                        ??i1___awmod 0074                    _timer_Timer0Start 0F6E  
                  _timer_Timer1Start 0F5F                   ?_timer_Timer0Reset 0070  
                    _capture_handdle 046B                   ?_timer_Timer0Start 0070  
                 ?_timer_Timer1Start 0070                    _capture_IsNegEdge 0F92  
               _capture_handdle$1313 0077                   ?_capture_IsNegEdge 0070  
                           _LATBbits 010D                      _capture_setEdge 0FF0  
                         ?_check_err 0070                            clear_ram0 0F7C  
                   ??i1_data_getdata 0070                             _PIE1bits 0091  
                           _PIE2bits 0092                  ??_timer_Timer0Reset 003A  
                ??_timer_Timer0Start 003A                  ??_timer_Timer1Start 003A  
                          bpc_proc@i 0034          key_checkPressed@history_key 004A  
                           _PIR1bits 0011                             _PIR2bits 0012  
                ??_capture_IsNegEdge 0070                            _uart_init 07B0  
                         ?_led_Blink 0070                          _display_set 0F8A  
          __end_of_timer_Timer0Reset 0F7C                             _WPUCbits 020E  
          __end_of_timer_Timer0Start 0F72            __end_of_timer_Timer1Start 0F62  
                  ?i1_display_update 0070            __end_of_capture_IsNegEdge 0F9C  
            __size_of_display_update 00C2                   ??i1_display_update 0020  
                _timer_Timer0Handdle 0F59                __end_of_key_isPressed 07F6  
                          init_env@i 00C8                        ?_data_getdata 0070  
                         ?_uart_init 0070                    i1___awmod@divisor 0070  
                  i1___awmod@counter 0075                     __size_of___awdiv 0064  
                   __size_of___awmod 0051         ??i1_display_control595_delay 0070  
                   __size_of___lwmod 002C                       led_Blink@State 004B  
               ?_timer_Timer0Handdle 0070                     __size_of_cnt_abs 0016  
            __end_of_capture_handdle 04D2                i1display_update@pdata 002B  
     __size_of_timer_Timer1ClrIntrpt 0003        __end_of_timer_Timer1ClrIntrpt 0F5F  
       __size_ofi1_timer_Timer0Reset 0005                             _bpc_proc 006C  
      __size_ofi1_display_write_byte 0027                             __ptext10 0284  
                           __ptext11 0768                             __ptext20 0F59  
                           __ptext12 06C0                             __ptext21 0683  
                           __ptext13 0FC9                             __ptext30 0FF0  
                           __ptext22 0FA7                             __ptext14 0002  
                           __ptext31 0F56                             __ptext23 06EE  
                           __ptext15 059C                             __ptext40 01A5  
                           __ptext32 0F62                             __ptext24 0F6A  
                           __ptext16 0538                             __ptext41 0FBD  
                           __ptext33 006C                             __ptext25 0F66  
                           __ptext42 03EA                             __ptext34 0346  
                           __ptext26 07E2                             __ptext18 0F72  
                           __ptext43 0F54                             __ptext35 078E  
                           __ptext27 0F82                             __ptext19 0F5C  
                           __ptext44 07CC                             __ptext36 0741  
                           __ptext28 046B                             __ptext45 0F92  
                           __ptext37 0F9C                             __ptext29 07F6  
                           __ptext38 063E                             __ptext39 05ED  
      __size_ofi1_display_write_once 0022              __end_of_capture_setEdge 1000  
                  _capture_clrIntrpt 0F56                   ?_capture_clrIntrpt 0070  
      display_control595_delay@times 003B                     _timer_Timer0Init 0FD6  
                   _timer_Timer1Init 0FE3                             _init_env 04D2  
                      __size_of_main 0027                          ??_check_err 0072  
                           _segmcode 1000                  ??_capture_clrIntrpt 0070  
                      init_env@pdata 00C7                    ?_capture_IsIntrpt 0070  
                   _key_checkPressed 0683         __size_of_timer_IsTimer0Itrpt 0004  
       __size_of_timer_IsTimer1Itrpt 0004                       ??_data_getdata 003A  
                      ?_capture_init 0070                   ??_capture_IsIntrpt 0070  
                           int$flags 007E                          ??_led_Blink 0071  
                           cnt_abs@a 0070                             cnt_abs@b 0072  
                       ?_bpc_Cnt2Qua 0070                ??_timer_Timer0Handdle 0079  
         __size_of_timer_Timer0Reset 0005                     ??i1_led_SetState 0070  
                         _INTCONbits 000B           __size_of_timer_Timer0Start 0004  
         __size_of_timer_Timer1Start 0003            __end_of_capture_clrIntrpt 0F59  
         __size_of_capture_IsNegEdge 000A                             intlevel1 0000  
                   ___lwmod@dividend 0072                    __CFG_CLKOUTEN$OFF 0000  
                         _OSCCONbits 0099                         ?_capture_Set 0070  
                 key_isPressed@pdata 0071                       ??_capture_init 0071  
                        ??_uart_init 003A                      display_set@ison 003A  
                   bpc_Cnt2Qua@pdata 0076                        __pstringtext1 1000  
        __size_of_display_write_byte 002E          __size_of_display_write_once 0026  
                    ___lwmod@divisor 0070             _display_control595_delay 0FC9  
                   ?_capture_handdle 0070                      ___lwmod@counter 0075  
                     _display_update 0284                        ?_led_SetState 0070  
                   ?_capture_setEdge 0070                       _check_err$1081 0024  
                     _check_err$1082 0026                       _check_err$1077 0020  
                     _check_err$1078 0022  

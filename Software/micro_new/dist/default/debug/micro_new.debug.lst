

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jun 03 20:42:56 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.00
    37                           ; Generated 27/05/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1786 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011C                     	;# 
   134  011D                     	;# 
   135  011D                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  011F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0298                     	;# 
   204  0298                     	;# 
   205  0299                     	;# 
   206  029A                     	;# 
   207  030C                     	;# 
   208  030D                     	;# 
   209  030E                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  038C                     	;# 
   215  038D                     	;# 
   216  038E                     	;# 
   217  0390                     	;# 
   218  0391                     	;# 
   219  0392                     	;# 
   220  0393                     	;# 
   221  0394                     	;# 
   222  0395                     	;# 
   223  0396                     	;# 
   224  0397                     	;# 
   225  0398                     	;# 
   226  0399                     	;# 
   227  039D                     	;# 
   228  039E                     	;# 
   229  039F                     	;# 
   230  0511                     	;# 
   231  0513                     	;# 
   232  051A                     	;# 
   233  0811                     	;# 
   234  0812                     	;# 
   235  0813                     	;# 
   236  0814                     	;# 
   237  0815                     	;# 
   238  0816                     	;# 
   239  0817                     	;# 
   240  0818                     	;# 
   241  0819                     	;# 
   242  081A                     	;# 
   243  081B                     	;# 
   244  081C                     	;# 
   245  081D                     	;# 
   246  081E                     	;# 
   247  081F                     	;# 
   248  0820                     	;# 
   249  0821                     	;# 
   250  0821                     	;# 
   251  0822                     	;# 
   252  0823                     	;# 
   253  0823                     	;# 
   254  0824                     	;# 
   255  0825                     	;# 
   256  0825                     	;# 
   257  0826                     	;# 
   258  0827                     	;# 
   259  0827                     	;# 
   260  0828                     	;# 
   261  0829                     	;# 
   262  082A                     	;# 
   263  082B                     	;# 
   264  082C                     	;# 
   265  082D                     	;# 
   266  082E                     	;# 
   267  082F                     	;# 
   268  0831                     	;# 
   269  0832                     	;# 
   270  0833                     	;# 
   271  0834                     	;# 
   272  0835                     	;# 
   273  0836                     	;# 
   274  0837                     	;# 
   275  0838                     	;# 
   276  0839                     	;# 
   277  083A                     	;# 
   278  083B                     	;# 
   279  083C                     	;# 
   280  083D                     	;# 
   281  083E                     	;# 
   282  083F                     	;# 
   283  0840                     	;# 
   284  0841                     	;# 
   285  0841                     	;# 
   286  0842                     	;# 
   287  0843                     	;# 
   288  0843                     	;# 
   289  0844                     	;# 
   290  0845                     	;# 
   291  0845                     	;# 
   292  0846                     	;# 
   293  0847                     	;# 
   294  0847                     	;# 
   295  0848                     	;# 
   296  0849                     	;# 
   297  084A                     	;# 
   298  084B                     	;# 
   299  084C                     	;# 
   300  084D                     	;# 
   301  084E                     	;# 
   302  084F                     	;# 
   303  0851                     	;# 
   304  0852                     	;# 
   305  0853                     	;# 
   306  0854                     	;# 
   307  0855                     	;# 
   308  0856                     	;# 
   309  0857                     	;# 
   310  0858                     	;# 
   311  0859                     	;# 
   312  085A                     	;# 
   313  085B                     	;# 
   314  085C                     	;# 
   315  085D                     	;# 
   316  085E                     	;# 
   317  085F                     	;# 
   318  0860                     	;# 
   319  0861                     	;# 
   320  0861                     	;# 
   321  0862                     	;# 
   322  0863                     	;# 
   323  0863                     	;# 
   324  0864                     	;# 
   325  0865                     	;# 
   326  0865                     	;# 
   327  0866                     	;# 
   328  0867                     	;# 
   329  0867                     	;# 
   330  0868                     	;# 
   331  0869                     	;# 
   332  086A                     	;# 
   333  086B                     	;# 
   334  086C                     	;# 
   335  086D                     	;# 
   336  086E                     	;# 
   337  086F                     	;# 
   338  0FE4                     	;# 
   339  0FE5                     	;# 
   340  0FE6                     	;# 
   341  0FE7                     	;# 
   342  0FE8                     	;# 
   343  0FE9                     	;# 
   344  0FEA                     	;# 
   345  0FEB                     	;# 
   346  0FED                     	;# 
   347  0FEE                     	;# 
   348  0FEF                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000D                     	;# 
   363  000E                     	;# 
   364  0010                     	;# 
   365  0011                     	;# 
   366  0012                     	;# 
   367  0013                     	;# 
   368  0014                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  010C                     	;# 
   399  010D                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011C                     	;# 
   413  011D                     	;# 
   414  011D                     	;# 
   415  011D                     	;# 
   416  011E                     	;# 
   417  011F                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0194                     	;# 
   427  0195                     	;# 
   428  0196                     	;# 
   429  0197                     	;# 
   430  0199                     	;# 
   431  0199                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019A                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019C                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019D                     	;# 
   446  019D                     	;# 
   447  019E                     	;# 
   448  019E                     	;# 
   449  019E                     	;# 
   450  019F                     	;# 
   451  019F                     	;# 
   452  019F                     	;# 
   453  019F                     	;# 
   454  019F                     	;# 
   455  020C                     	;# 
   456  020D                     	;# 
   457  020E                     	;# 
   458  0210                     	;# 
   459  0211                     	;# 
   460  0211                     	;# 
   461  0212                     	;# 
   462  0212                     	;# 
   463  0213                     	;# 
   464  0213                     	;# 
   465  0214                     	;# 
   466  0214                     	;# 
   467  0215                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0216                     	;# 
   473  0217                     	;# 
   474  0217                     	;# 
   475  028C                     	;# 
   476  028D                     	;# 
   477  028E                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  030C                     	;# 
   487  030D                     	;# 
   488  030E                     	;# 
   489  0311                     	;# 
   490  0311                     	;# 
   491  0312                     	;# 
   492  0313                     	;# 
   493  038C                     	;# 
   494  038D                     	;# 
   495  038E                     	;# 
   496  0390                     	;# 
   497  0391                     	;# 
   498  0392                     	;# 
   499  0393                     	;# 
   500  0394                     	;# 
   501  0395                     	;# 
   502  0396                     	;# 
   503  0397                     	;# 
   504  0398                     	;# 
   505  0399                     	;# 
   506  039D                     	;# 
   507  039E                     	;# 
   508  039F                     	;# 
   509  0511                     	;# 
   510  0513                     	;# 
   511  051A                     	;# 
   512  0811                     	;# 
   513  0812                     	;# 
   514  0813                     	;# 
   515  0814                     	;# 
   516  0815                     	;# 
   517  0816                     	;# 
   518  0817                     	;# 
   519  0818                     	;# 
   520  0819                     	;# 
   521  081A                     	;# 
   522  081B                     	;# 
   523  081C                     	;# 
   524  081D                     	;# 
   525  081E                     	;# 
   526  081F                     	;# 
   527  0820                     	;# 
   528  0821                     	;# 
   529  0821                     	;# 
   530  0822                     	;# 
   531  0823                     	;# 
   532  0823                     	;# 
   533  0824                     	;# 
   534  0825                     	;# 
   535  0825                     	;# 
   536  0826                     	;# 
   537  0827                     	;# 
   538  0827                     	;# 
   539  0828                     	;# 
   540  0829                     	;# 
   541  082A                     	;# 
   542  082B                     	;# 
   543  082C                     	;# 
   544  082D                     	;# 
   545  082E                     	;# 
   546  082F                     	;# 
   547  0831                     	;# 
   548  0832                     	;# 
   549  0833                     	;# 
   550  0834                     	;# 
   551  0835                     	;# 
   552  0836                     	;# 
   553  0837                     	;# 
   554  0838                     	;# 
   555  0839                     	;# 
   556  083A                     	;# 
   557  083B                     	;# 
   558  083C                     	;# 
   559  083D                     	;# 
   560  083E                     	;# 
   561  083F                     	;# 
   562  0840                     	;# 
   563  0841                     	;# 
   564  0841                     	;# 
   565  0842                     	;# 
   566  0843                     	;# 
   567  0843                     	;# 
   568  0844                     	;# 
   569  0845                     	;# 
   570  0845                     	;# 
   571  0846                     	;# 
   572  0847                     	;# 
   573  0847                     	;# 
   574  0848                     	;# 
   575  0849                     	;# 
   576  084A                     	;# 
   577  084B                     	;# 
   578  084C                     	;# 
   579  084D                     	;# 
   580  084E                     	;# 
   581  084F                     	;# 
   582  0851                     	;# 
   583  0852                     	;# 
   584  0853                     	;# 
   585  0854                     	;# 
   586  0855                     	;# 
   587  0856                     	;# 
   588  0857                     	;# 
   589  0858                     	;# 
   590  0859                     	;# 
   591  085A                     	;# 
   592  085B                     	;# 
   593  085C                     	;# 
   594  085D                     	;# 
   595  085E                     	;# 
   596  085F                     	;# 
   597  0860                     	;# 
   598  0861                     	;# 
   599  0861                     	;# 
   600  0862                     	;# 
   601  0863                     	;# 
   602  0863                     	;# 
   603  0864                     	;# 
   604  0865                     	;# 
   605  0865                     	;# 
   606  0866                     	;# 
   607  0867                     	;# 
   608  0867                     	;# 
   609  0868                     	;# 
   610  0869                     	;# 
   611  086A                     	;# 
   612  086B                     	;# 
   613  086C                     	;# 
   614  086D                     	;# 
   615  086E                     	;# 
   616  086F                     	;# 
   617  0FE4                     	;# 
   618  0FE5                     	;# 
   619  0FE6                     	;# 
   620  0FE7                     	;# 
   621  0FE8                     	;# 
   622  0FE9                     	;# 
   623  0FEA                     	;# 
   624  0FEB                     	;# 
   625  0FED                     	;# 
   626  0FEE                     	;# 
   627  0FEF                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0008                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  0010                     	;# 
   644  0011                     	;# 
   645  0012                     	;# 
   646  0013                     	;# 
   647  0014                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0016                     	;# 
   651  0017                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0094                     	;# 
   665  0095                     	;# 
   666  0096                     	;# 
   667  0097                     	;# 
   668  0098                     	;# 
   669  0099                     	;# 
   670  009A                     	;# 
   671  009B                     	;# 
   672  009B                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  009F                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0113                     	;# 
   683  0114                     	;# 
   684  0115                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  0118                     	;# 
   688  0119                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011D                     	;# 
   693  011D                     	;# 
   694  011D                     	;# 
   695  011E                     	;# 
   696  011F                     	;# 
   697  018C                     	;# 
   698  018D                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0193                     	;# 
   705  0194                     	;# 
   706  0195                     	;# 
   707  0196                     	;# 
   708  0197                     	;# 
   709  0199                     	;# 
   710  0199                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019A                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019D                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019E                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  019F                     	;# 
   731  019F                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0213                     	;# 
   744  0214                     	;# 
   745  0214                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0216                     	;# 
   751  0216                     	;# 
   752  0217                     	;# 
   753  0217                     	;# 
   754  028C                     	;# 
   755  028D                     	;# 
   756  028E                     	;# 
   757  0291                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0293                     	;# 
   761  0298                     	;# 
   762  0298                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  030C                     	;# 
   766  030D                     	;# 
   767  030E                     	;# 
   768  0311                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  038C                     	;# 
   773  038D                     	;# 
   774  038E                     	;# 
   775  0390                     	;# 
   776  0391                     	;# 
   777  0392                     	;# 
   778  0393                     	;# 
   779  0394                     	;# 
   780  0395                     	;# 
   781  0396                     	;# 
   782  0397                     	;# 
   783  0398                     	;# 
   784  0399                     	;# 
   785  039D                     	;# 
   786  039E                     	;# 
   787  039F                     	;# 
   788  0511                     	;# 
   789  0513                     	;# 
   790  051A                     	;# 
   791  0811                     	;# 
   792  0812                     	;# 
   793  0813                     	;# 
   794  0814                     	;# 
   795  0815                     	;# 
   796  0816                     	;# 
   797  0817                     	;# 
   798  0818                     	;# 
   799  0819                     	;# 
   800  081A                     	;# 
   801  081B                     	;# 
   802  081C                     	;# 
   803  081D                     	;# 
   804  081E                     	;# 
   805  081F                     	;# 
   806  0820                     	;# 
   807  0821                     	;# 
   808  0821                     	;# 
   809  0822                     	;# 
   810  0823                     	;# 
   811  0823                     	;# 
   812  0824                     	;# 
   813  0825                     	;# 
   814  0825                     	;# 
   815  0826                     	;# 
   816  0827                     	;# 
   817  0827                     	;# 
   818  0828                     	;# 
   819  0829                     	;# 
   820  082A                     	;# 
   821  082B                     	;# 
   822  082C                     	;# 
   823  082D                     	;# 
   824  082E                     	;# 
   825  082F                     	;# 
   826  0831                     	;# 
   827  0832                     	;# 
   828  0833                     	;# 
   829  0834                     	;# 
   830  0835                     	;# 
   831  0836                     	;# 
   832  0837                     	;# 
   833  0838                     	;# 
   834  0839                     	;# 
   835  083A                     	;# 
   836  083B                     	;# 
   837  083C                     	;# 
   838  083D                     	;# 
   839  083E                     	;# 
   840  083F                     	;# 
   841  0840                     	;# 
   842  0841                     	;# 
   843  0841                     	;# 
   844  0842                     	;# 
   845  0843                     	;# 
   846  0843                     	;# 
   847  0844                     	;# 
   848  0845                     	;# 
   849  0845                     	;# 
   850  0846                     	;# 
   851  0847                     	;# 
   852  0847                     	;# 
   853  0848                     	;# 
   854  0849                     	;# 
   855  084A                     	;# 
   856  084B                     	;# 
   857  084C                     	;# 
   858  084D                     	;# 
   859  084E                     	;# 
   860  084F                     	;# 
   861  0851                     	;# 
   862  0852                     	;# 
   863  0853                     	;# 
   864  0854                     	;# 
   865  0855                     	;# 
   866  0856                     	;# 
   867  0857                     	;# 
   868  0858                     	;# 
   869  0859                     	;# 
   870  085A                     	;# 
   871  085B                     	;# 
   872  085C                     	;# 
   873  085D                     	;# 
   874  085E                     	;# 
   875  085F                     	;# 
   876  0860                     	;# 
   877  0861                     	;# 
   878  0861                     	;# 
   879  0862                     	;# 
   880  0863                     	;# 
   881  0863                     	;# 
   882  0864                     	;# 
   883  0865                     	;# 
   884  0865                     	;# 
   885  0866                     	;# 
   886  0867                     	;# 
   887  0867                     	;# 
   888  0868                     	;# 
   889  0869                     	;# 
   890  086A                     	;# 
   891  086B                     	;# 
   892  086C                     	;# 
   893  086D                     	;# 
   894  086E                     	;# 
   895  086F                     	;# 
   896  0FE4                     	;# 
   897  0FE5                     	;# 
   898  0FE6                     	;# 
   899  0FE7                     	;# 
   900  0FE8                     	;# 
   901  0FE9                     	;# 
   902  0FEA                     	;# 
   903  0FEB                     	;# 
   904  0FED                     	;# 
   905  0FEE                     	;# 
   906  0FEF                     	;# 
   907  0000                     	;# 
   908  0001                     	;# 
   909  0002                     	;# 
   910  0003                     	;# 
   911  0004                     	;# 
   912  0005                     	;# 
   913  0006                     	;# 
   914  0007                     	;# 
   915  0008                     	;# 
   916  0009                     	;# 
   917  000A                     	;# 
   918  000B                     	;# 
   919  000C                     	;# 
   920  000D                     	;# 
   921  000E                     	;# 
   922  0010                     	;# 
   923  0011                     	;# 
   924  0012                     	;# 
   925  0013                     	;# 
   926  0014                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  008C                     	;# 
   937  008D                     	;# 
   938  008E                     	;# 
   939  0090                     	;# 
   940  0091                     	;# 
   941  0092                     	;# 
   942  0093                     	;# 
   943  0094                     	;# 
   944  0095                     	;# 
   945  0096                     	;# 
   946  0097                     	;# 
   947  0098                     	;# 
   948  0099                     	;# 
   949  009A                     	;# 
   950  009B                     	;# 
   951  009B                     	;# 
   952  009C                     	;# 
   953  009D                     	;# 
   954  009E                     	;# 
   955  009F                     	;# 
   956  010C                     	;# 
   957  010D                     	;# 
   958  010E                     	;# 
   959  0111                     	;# 
   960  0112                     	;# 
   961  0113                     	;# 
   962  0114                     	;# 
   963  0115                     	;# 
   964  0116                     	;# 
   965  0117                     	;# 
   966  0118                     	;# 
   967  0119                     	;# 
   968  011A                     	;# 
   969  011B                     	;# 
   970  011C                     	;# 
   971  011D                     	;# 
   972  011D                     	;# 
   973  011D                     	;# 
   974  011E                     	;# 
   975  011F                     	;# 
   976  018C                     	;# 
   977  018D                     	;# 
   978  0191                     	;# 
   979  0191                     	;# 
   980  0192                     	;# 
   981  0193                     	;# 
   982  0193                     	;# 
   983  0193                     	;# 
   984  0194                     	;# 
   985  0195                     	;# 
   986  0196                     	;# 
   987  0197                     	;# 
   988  0199                     	;# 
   989  0199                     	;# 
   990  0199                     	;# 
   991  019A                     	;# 
   992  019A                     	;# 
   993  019A                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019C                     	;# 
  1000  019C                     	;# 
  1001  019C                     	;# 
  1002  019D                     	;# 
  1003  019D                     	;# 
  1004  019D                     	;# 
  1005  019E                     	;# 
  1006  019E                     	;# 
  1007  019E                     	;# 
  1008  019F                     	;# 
  1009  019F                     	;# 
  1010  019F                     	;# 
  1011  019F                     	;# 
  1012  019F                     	;# 
  1013  020C                     	;# 
  1014  020D                     	;# 
  1015  020E                     	;# 
  1016  0210                     	;# 
  1017  0211                     	;# 
  1018  0211                     	;# 
  1019  0212                     	;# 
  1020  0212                     	;# 
  1021  0213                     	;# 
  1022  0213                     	;# 
  1023  0214                     	;# 
  1024  0214                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0216                     	;# 
  1031  0217                     	;# 
  1032  0217                     	;# 
  1033  028C                     	;# 
  1034  028D                     	;# 
  1035  028E                     	;# 
  1036  0291                     	;# 
  1037  0291                     	;# 
  1038  0292                     	;# 
  1039  0293                     	;# 
  1040  0298                     	;# 
  1041  0298                     	;# 
  1042  0299                     	;# 
  1043  029A                     	;# 
  1044  030C                     	;# 
  1045  030D                     	;# 
  1046  030E                     	;# 
  1047  0311                     	;# 
  1048  0311                     	;# 
  1049  0312                     	;# 
  1050  0313                     	;# 
  1051  038C                     	;# 
  1052  038D                     	;# 
  1053  038E                     	;# 
  1054  0390                     	;# 
  1055  0391                     	;# 
  1056  0392                     	;# 
  1057  0393                     	;# 
  1058  0394                     	;# 
  1059  0395                     	;# 
  1060  0396                     	;# 
  1061  0397                     	;# 
  1062  0398                     	;# 
  1063  0399                     	;# 
  1064  039D                     	;# 
  1065  039E                     	;# 
  1066  039F                     	;# 
  1067  0511                     	;# 
  1068  0513                     	;# 
  1069  051A                     	;# 
  1070  0811                     	;# 
  1071  0812                     	;# 
  1072  0813                     	;# 
  1073  0814                     	;# 
  1074  0815                     	;# 
  1075  0816                     	;# 
  1076  0817                     	;# 
  1077  0818                     	;# 
  1078  0819                     	;# 
  1079  081A                     	;# 
  1080  081B                     	;# 
  1081  081C                     	;# 
  1082  081D                     	;# 
  1083  081E                     	;# 
  1084  081F                     	;# 
  1085  0820                     	;# 
  1086  0821                     	;# 
  1087  0821                     	;# 
  1088  0822                     	;# 
  1089  0823                     	;# 
  1090  0823                     	;# 
  1091  0824                     	;# 
  1092  0825                     	;# 
  1093  0825                     	;# 
  1094  0826                     	;# 
  1095  0827                     	;# 
  1096  0827                     	;# 
  1097  0828                     	;# 
  1098  0829                     	;# 
  1099  082A                     	;# 
  1100  082B                     	;# 
  1101  082C                     	;# 
  1102  082D                     	;# 
  1103  082E                     	;# 
  1104  082F                     	;# 
  1105  0831                     	;# 
  1106  0832                     	;# 
  1107  0833                     	;# 
  1108  0834                     	;# 
  1109  0835                     	;# 
  1110  0836                     	;# 
  1111  0837                     	;# 
  1112  0838                     	;# 
  1113  0839                     	;# 
  1114  083A                     	;# 
  1115  083B                     	;# 
  1116  083C                     	;# 
  1117  083D                     	;# 
  1118  083E                     	;# 
  1119  083F                     	;# 
  1120  0840                     	;# 
  1121  0841                     	;# 
  1122  0841                     	;# 
  1123  0842                     	;# 
  1124  0843                     	;# 
  1125  0843                     	;# 
  1126  0844                     	;# 
  1127  0845                     	;# 
  1128  0845                     	;# 
  1129  0846                     	;# 
  1130  0847                     	;# 
  1131  0847                     	;# 
  1132  0848                     	;# 
  1133  0849                     	;# 
  1134  084A                     	;# 
  1135  084B                     	;# 
  1136  084C                     	;# 
  1137  084D                     	;# 
  1138  084E                     	;# 
  1139  084F                     	;# 
  1140  0851                     	;# 
  1141  0852                     	;# 
  1142  0853                     	;# 
  1143  0854                     	;# 
  1144  0855                     	;# 
  1145  0856                     	;# 
  1146  0857                     	;# 
  1147  0858                     	;# 
  1148  0859                     	;# 
  1149  085A                     	;# 
  1150  085B                     	;# 
  1151  085C                     	;# 
  1152  085D                     	;# 
  1153  085E                     	;# 
  1154  085F                     	;# 
  1155  0860                     	;# 
  1156  0861                     	;# 
  1157  0861                     	;# 
  1158  0862                     	;# 
  1159  0863                     	;# 
  1160  0863                     	;# 
  1161  0864                     	;# 
  1162  0865                     	;# 
  1163  0865                     	;# 
  1164  0866                     	;# 
  1165  0867                     	;# 
  1166  0867                     	;# 
  1167  0868                     	;# 
  1168  0869                     	;# 
  1169  086A                     	;# 
  1170  086B                     	;# 
  1171  086C                     	;# 
  1172  086D                     	;# 
  1173  086E                     	;# 
  1174  086F                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  000E                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001C                     	;# 
  1215  008C                     	;# 
  1216  008D                     	;# 
  1217  008E                     	;# 
  1218  0090                     	;# 
  1219  0091                     	;# 
  1220  0092                     	;# 
  1221  0093                     	;# 
  1222  0094                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0097                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009B                     	;# 
  1231  009C                     	;# 
  1232  009D                     	;# 
  1233  009E                     	;# 
  1234  009F                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  010E                     	;# 
  1238  0111                     	;# 
  1239  0112                     	;# 
  1240  0113                     	;# 
  1241  0114                     	;# 
  1242  0115                     	;# 
  1243  0116                     	;# 
  1244  0117                     	;# 
  1245  0118                     	;# 
  1246  0119                     	;# 
  1247  011A                     	;# 
  1248  011B                     	;# 
  1249  011C                     	;# 
  1250  011D                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  011F                     	;# 
  1255  018C                     	;# 
  1256  018D                     	;# 
  1257  0191                     	;# 
  1258  0191                     	;# 
  1259  0192                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0193                     	;# 
  1263  0194                     	;# 
  1264  0195                     	;# 
  1265  0196                     	;# 
  1266  0197                     	;# 
  1267  0199                     	;# 
  1268  0199                     	;# 
  1269  0199                     	;# 
  1270  019A                     	;# 
  1271  019A                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019D                     	;# 
  1283  019D                     	;# 
  1284  019E                     	;# 
  1285  019E                     	;# 
  1286  019E                     	;# 
  1287  019F                     	;# 
  1288  019F                     	;# 
  1289  019F                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  020C                     	;# 
  1293  020D                     	;# 
  1294  020E                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0215                     	;# 
  1308  0216                     	;# 
  1309  0216                     	;# 
  1310  0217                     	;# 
  1311  0217                     	;# 
  1312  028C                     	;# 
  1313  028D                     	;# 
  1314  028E                     	;# 
  1315  0291                     	;# 
  1316  0291                     	;# 
  1317  0292                     	;# 
  1318  0293                     	;# 
  1319  0298                     	;# 
  1320  0298                     	;# 
  1321  0299                     	;# 
  1322  029A                     	;# 
  1323  030C                     	;# 
  1324  030D                     	;# 
  1325  030E                     	;# 
  1326  0311                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  038C                     	;# 
  1331  038D                     	;# 
  1332  038E                     	;# 
  1333  0390                     	;# 
  1334  0391                     	;# 
  1335  0392                     	;# 
  1336  0393                     	;# 
  1337  0394                     	;# 
  1338  0395                     	;# 
  1339  0396                     	;# 
  1340  0397                     	;# 
  1341  0398                     	;# 
  1342  0399                     	;# 
  1343  039D                     	;# 
  1344  039E                     	;# 
  1345  039F                     	;# 
  1346  0511                     	;# 
  1347  0513                     	;# 
  1348  051A                     	;# 
  1349  0811                     	;# 
  1350  0812                     	;# 
  1351  0813                     	;# 
  1352  0814                     	;# 
  1353  0815                     	;# 
  1354  0816                     	;# 
  1355  0817                     	;# 
  1356  0818                     	;# 
  1357  0819                     	;# 
  1358  081A                     	;# 
  1359  081B                     	;# 
  1360  081C                     	;# 
  1361  081D                     	;# 
  1362  081E                     	;# 
  1363  081F                     	;# 
  1364  0820                     	;# 
  1365  0821                     	;# 
  1366  0821                     	;# 
  1367  0822                     	;# 
  1368  0823                     	;# 
  1369  0823                     	;# 
  1370  0824                     	;# 
  1371  0825                     	;# 
  1372  0825                     	;# 
  1373  0826                     	;# 
  1374  0827                     	;# 
  1375  0827                     	;# 
  1376  0828                     	;# 
  1377  0829                     	;# 
  1378  082A                     	;# 
  1379  082B                     	;# 
  1380  082C                     	;# 
  1381  082D                     	;# 
  1382  082E                     	;# 
  1383  082F                     	;# 
  1384  0831                     	;# 
  1385  0832                     	;# 
  1386  0833                     	;# 
  1387  0834                     	;# 
  1388  0835                     	;# 
  1389  0836                     	;# 
  1390  0837                     	;# 
  1391  0838                     	;# 
  1392  0839                     	;# 
  1393  083A                     	;# 
  1394  083B                     	;# 
  1395  083C                     	;# 
  1396  083D                     	;# 
  1397  083E                     	;# 
  1398  083F                     	;# 
  1399  0840                     	;# 
  1400  0841                     	;# 
  1401  0841                     	;# 
  1402  0842                     	;# 
  1403  0843                     	;# 
  1404  0843                     	;# 
  1405  0844                     	;# 
  1406  0845                     	;# 
  1407  0845                     	;# 
  1408  0846                     	;# 
  1409  0847                     	;# 
  1410  0847                     	;# 
  1411  0848                     	;# 
  1412  0849                     	;# 
  1413  084A                     	;# 
  1414  084B                     	;# 
  1415  084C                     	;# 
  1416  084D                     	;# 
  1417  084E                     	;# 
  1418  084F                     	;# 
  1419  0851                     	;# 
  1420  0852                     	;# 
  1421  0853                     	;# 
  1422  0854                     	;# 
  1423  0855                     	;# 
  1424  0856                     	;# 
  1425  0857                     	;# 
  1426  0858                     	;# 
  1427  0859                     	;# 
  1428  085A                     	;# 
  1429  085B                     	;# 
  1430  085C                     	;# 
  1431  085D                     	;# 
  1432  085E                     	;# 
  1433  085F                     	;# 
  1434  0860                     	;# 
  1435  0861                     	;# 
  1436  0861                     	;# 
  1437  0862                     	;# 
  1438  0863                     	;# 
  1439  0863                     	;# 
  1440  0864                     	;# 
  1441  0865                     	;# 
  1442  0865                     	;# 
  1443  0866                     	;# 
  1444  0867                     	;# 
  1445  0867                     	;# 
  1446  0868                     	;# 
  1447  0869                     	;# 
  1448  086A                     	;# 
  1449  086B                     	;# 
  1450  086C                     	;# 
  1451  086D                     	;# 
  1452  086E                     	;# 
  1453  086F                     	;# 
  1454  0FE4                     	;# 
  1455  0FE5                     	;# 
  1456  0FE6                     	;# 
  1457  0FE7                     	;# 
  1458  0FE8                     	;# 
  1459  0FE9                     	;# 
  1460  0FEA                     	;# 
  1461  0FEB                     	;# 
  1462  0FED                     	;# 
  1463  0FEE                     	;# 
  1464  0FEF                     	;# 
  1465  0000                     	;# 
  1466  0001                     	;# 
  1467  0002                     	;# 
  1468  0003                     	;# 
  1469  0004                     	;# 
  1470  0005                     	;# 
  1471  0006                     	;# 
  1472  0007                     	;# 
  1473  0008                     	;# 
  1474  0009                     	;# 
  1475  000A                     	;# 
  1476  000B                     	;# 
  1477  000C                     	;# 
  1478  000D                     	;# 
  1479  000E                     	;# 
  1480  0010                     	;# 
  1481  0011                     	;# 
  1482  0012                     	;# 
  1483  0013                     	;# 
  1484  0014                     	;# 
  1485  0015                     	;# 
  1486  0016                     	;# 
  1487  0016                     	;# 
  1488  0017                     	;# 
  1489  0018                     	;# 
  1490  0019                     	;# 
  1491  001A                     	;# 
  1492  001B                     	;# 
  1493  001C                     	;# 
  1494  008C                     	;# 
  1495  008D                     	;# 
  1496  008E                     	;# 
  1497  0090                     	;# 
  1498  0091                     	;# 
  1499  0092                     	;# 
  1500  0093                     	;# 
  1501  0094                     	;# 
  1502  0095                     	;# 
  1503  0096                     	;# 
  1504  0097                     	;# 
  1505  0098                     	;# 
  1506  0099                     	;# 
  1507  009A                     	;# 
  1508  009B                     	;# 
  1509  009B                     	;# 
  1510  009C                     	;# 
  1511  009D                     	;# 
  1512  009E                     	;# 
  1513  009F                     	;# 
  1514  010C                     	;# 
  1515  010D                     	;# 
  1516  010E                     	;# 
  1517  0111                     	;# 
  1518  0112                     	;# 
  1519  0113                     	;# 
  1520  0114                     	;# 
  1521  0115                     	;# 
  1522  0116                     	;# 
  1523  0117                     	;# 
  1524  0118                     	;# 
  1525  0119                     	;# 
  1526  011A                     	;# 
  1527  011B                     	;# 
  1528  011C                     	;# 
  1529  011D                     	;# 
  1530  011D                     	;# 
  1531  011D                     	;# 
  1532  011E                     	;# 
  1533  011F                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  0191                     	;# 
  1537  0191                     	;# 
  1538  0192                     	;# 
  1539  0193                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  0199                     	;# 
  1548  0199                     	;# 
  1549  019A                     	;# 
  1550  019A                     	;# 
  1551  019A                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019C                     	;# 
  1558  019C                     	;# 
  1559  019C                     	;# 
  1560  019D                     	;# 
  1561  019D                     	;# 
  1562  019D                     	;# 
  1563  019E                     	;# 
  1564  019E                     	;# 
  1565  019E                     	;# 
  1566  019F                     	;# 
  1567  019F                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  019F                     	;# 
  1571  020C                     	;# 
  1572  020D                     	;# 
  1573  020E                     	;# 
  1574  0210                     	;# 
  1575  0211                     	;# 
  1576  0211                     	;# 
  1577  0212                     	;# 
  1578  0212                     	;# 
  1579  0213                     	;# 
  1580  0213                     	;# 
  1581  0214                     	;# 
  1582  0214                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0216                     	;# 
  1588  0216                     	;# 
  1589  0217                     	;# 
  1590  0217                     	;# 
  1591  028C                     	;# 
  1592  028D                     	;# 
  1593  028E                     	;# 
  1594  0291                     	;# 
  1595  0291                     	;# 
  1596  0292                     	;# 
  1597  0293                     	;# 
  1598  0298                     	;# 
  1599  0298                     	;# 
  1600  0299                     	;# 
  1601  029A                     	;# 
  1602  030C                     	;# 
  1603  030D                     	;# 
  1604  030E                     	;# 
  1605  0311                     	;# 
  1606  0311                     	;# 
  1607  0312                     	;# 
  1608  0313                     	;# 
  1609  038C                     	;# 
  1610  038D                     	;# 
  1611  038E                     	;# 
  1612  0390                     	;# 
  1613  0391                     	;# 
  1614  0392                     	;# 
  1615  0393                     	;# 
  1616  0394                     	;# 
  1617  0395                     	;# 
  1618  0396                     	;# 
  1619  0397                     	;# 
  1620  0398                     	;# 
  1621  0399                     	;# 
  1622  039D                     	;# 
  1623  039E                     	;# 
  1624  039F                     	;# 
  1625  0511                     	;# 
  1626  0513                     	;# 
  1627  051A                     	;# 
  1628  0811                     	;# 
  1629  0812                     	;# 
  1630  0813                     	;# 
  1631  0814                     	;# 
  1632  0815                     	;# 
  1633  0816                     	;# 
  1634  0817                     	;# 
  1635  0818                     	;# 
  1636  0819                     	;# 
  1637  081A                     	;# 
  1638  081B                     	;# 
  1639  081C                     	;# 
  1640  081D                     	;# 
  1641  081E                     	;# 
  1642  081F                     	;# 
  1643  0820                     	;# 
  1644  0821                     	;# 
  1645  0821                     	;# 
  1646  0822                     	;# 
  1647  0823                     	;# 
  1648  0823                     	;# 
  1649  0824                     	;# 
  1650  0825                     	;# 
  1651  0825                     	;# 
  1652  0826                     	;# 
  1653  0827                     	;# 
  1654  0827                     	;# 
  1655  0828                     	;# 
  1656  0829                     	;# 
  1657  082A                     	;# 
  1658  082B                     	;# 
  1659  082C                     	;# 
  1660  082D                     	;# 
  1661  082E                     	;# 
  1662  082F                     	;# 
  1663  0831                     	;# 
  1664  0832                     	;# 
  1665  0833                     	;# 
  1666  0834                     	;# 
  1667  0835                     	;# 
  1668  0836                     	;# 
  1669  0837                     	;# 
  1670  0838                     	;# 
  1671  0839                     	;# 
  1672  083A                     	;# 
  1673  083B                     	;# 
  1674  083C                     	;# 
  1675  083D                     	;# 
  1676  083E                     	;# 
  1677  083F                     	;# 
  1678  0840                     	;# 
  1679  0841                     	;# 
  1680  0841                     	;# 
  1681  0842                     	;# 
  1682  0843                     	;# 
  1683  0843                     	;# 
  1684  0844                     	;# 
  1685  0845                     	;# 
  1686  0845                     	;# 
  1687  0846                     	;# 
  1688  0847                     	;# 
  1689  0847                     	;# 
  1690  0848                     	;# 
  1691  0849                     	;# 
  1692  084A                     	;# 
  1693  084B                     	;# 
  1694  084C                     	;# 
  1695  084D                     	;# 
  1696  084E                     	;# 
  1697  084F                     	;# 
  1698  0851                     	;# 
  1699  0852                     	;# 
  1700  0853                     	;# 
  1701  0854                     	;# 
  1702  0855                     	;# 
  1703  0856                     	;# 
  1704  0857                     	;# 
  1705  0858                     	;# 
  1706  0859                     	;# 
  1707  085A                     	;# 
  1708  085B                     	;# 
  1709  085C                     	;# 
  1710  085D                     	;# 
  1711  085E                     	;# 
  1712  085F                     	;# 
  1713  0860                     	;# 
  1714  0861                     	;# 
  1715  0861                     	;# 
  1716  0862                     	;# 
  1717  0863                     	;# 
  1718  0863                     	;# 
  1719  0864                     	;# 
  1720  0865                     	;# 
  1721  0865                     	;# 
  1722  0866                     	;# 
  1723  0867                     	;# 
  1724  0867                     	;# 
  1725  0868                     	;# 
  1726  0869                     	;# 
  1727  086A                     	;# 
  1728  086B                     	;# 
  1729  086C                     	;# 
  1730  086D                     	;# 
  1731  086E                     	;# 
  1732  086F                     	;# 
  1733  0FE4                     	;# 
  1734  0FE5                     	;# 
  1735  0FE6                     	;# 
  1736  0FE7                     	;# 
  1737  0FE8                     	;# 
  1738  0FE9                     	;# 
  1739  0FEA                     	;# 
  1740  0FEB                     	;# 
  1741  0FED                     	;# 
  1742  0FEE                     	;# 
  1743  0FEF                     	;# 
  1744  0000                     	;# 
  1745  0001                     	;# 
  1746  0002                     	;# 
  1747  0003                     	;# 
  1748  0004                     	;# 
  1749  0005                     	;# 
  1750  0006                     	;# 
  1751  0007                     	;# 
  1752  0008                     	;# 
  1753  0009                     	;# 
  1754  000A                     	;# 
  1755  000B                     	;# 
  1756  000C                     	;# 
  1757  000D                     	;# 
  1758  000E                     	;# 
  1759  0010                     	;# 
  1760  0011                     	;# 
  1761  0012                     	;# 
  1762  0013                     	;# 
  1763  0014                     	;# 
  1764  0015                     	;# 
  1765  0016                     	;# 
  1766  0016                     	;# 
  1767  0017                     	;# 
  1768  0018                     	;# 
  1769  0019                     	;# 
  1770  001A                     	;# 
  1771  001B                     	;# 
  1772  001C                     	;# 
  1773  008C                     	;# 
  1774  008D                     	;# 
  1775  008E                     	;# 
  1776  0090                     	;# 
  1777  0091                     	;# 
  1778  0092                     	;# 
  1779  0093                     	;# 
  1780  0094                     	;# 
  1781  0095                     	;# 
  1782  0096                     	;# 
  1783  0097                     	;# 
  1784  0098                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  009F                     	;# 
  1793  010C                     	;# 
  1794  010D                     	;# 
  1795  010E                     	;# 
  1796  0111                     	;# 
  1797  0112                     	;# 
  1798  0113                     	;# 
  1799  0114                     	;# 
  1800  0115                     	;# 
  1801  0116                     	;# 
  1802  0117                     	;# 
  1803  0118                     	;# 
  1804  0119                     	;# 
  1805  011A                     	;# 
  1806  011B                     	;# 
  1807  011C                     	;# 
  1808  011D                     	;# 
  1809  011D                     	;# 
  1810  011D                     	;# 
  1811  011E                     	;# 
  1812  011F                     	;# 
  1813  018C                     	;# 
  1814  018D                     	;# 
  1815  0191                     	;# 
  1816  0191                     	;# 
  1817  0192                     	;# 
  1818  0193                     	;# 
  1819  0193                     	;# 
  1820  0193                     	;# 
  1821  0194                     	;# 
  1822  0195                     	;# 
  1823  0196                     	;# 
  1824  0197                     	;# 
  1825  0199                     	;# 
  1826  0199                     	;# 
  1827  0199                     	;# 
  1828  019A                     	;# 
  1829  019A                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019C                     	;# 
  1839  019D                     	;# 
  1840  019D                     	;# 
  1841  019D                     	;# 
  1842  019E                     	;# 
  1843  019E                     	;# 
  1844  019E                     	;# 
  1845  019F                     	;# 
  1846  019F                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  020C                     	;# 
  1851  020D                     	;# 
  1852  020E                     	;# 
  1853  0210                     	;# 
  1854  0211                     	;# 
  1855  0211                     	;# 
  1856  0212                     	;# 
  1857  0212                     	;# 
  1858  0213                     	;# 
  1859  0213                     	;# 
  1860  0214                     	;# 
  1861  0214                     	;# 
  1862  0215                     	;# 
  1863  0215                     	;# 
  1864  0215                     	;# 
  1865  0215                     	;# 
  1866  0216                     	;# 
  1867  0216                     	;# 
  1868  0217                     	;# 
  1869  0217                     	;# 
  1870  028C                     	;# 
  1871  028D                     	;# 
  1872  028E                     	;# 
  1873  0291                     	;# 
  1874  0291                     	;# 
  1875  0292                     	;# 
  1876  0293                     	;# 
  1877  0298                     	;# 
  1878  0298                     	;# 
  1879  0299                     	;# 
  1880  029A                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  0311                     	;# 
  1885  0311                     	;# 
  1886  0312                     	;# 
  1887  0313                     	;# 
  1888  038C                     	;# 
  1889  038D                     	;# 
  1890  038E                     	;# 
  1891  0390                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0397                     	;# 
  1899  0398                     	;# 
  1900  0399                     	;# 
  1901  039D                     	;# 
  1902  039E                     	;# 
  1903  039F                     	;# 
  1904  0511                     	;# 
  1905  0513                     	;# 
  1906  051A                     	;# 
  1907  0811                     	;# 
  1908  0812                     	;# 
  1909  0813                     	;# 
  1910  0814                     	;# 
  1911  0815                     	;# 
  1912  0816                     	;# 
  1913  0817                     	;# 
  1914  0818                     	;# 
  1915  0819                     	;# 
  1916  081A                     	;# 
  1917  081B                     	;# 
  1918  081C                     	;# 
  1919  081D                     	;# 
  1920  081E                     	;# 
  1921  081F                     	;# 
  1922  0820                     	;# 
  1923  0821                     	;# 
  1924  0821                     	;# 
  1925  0822                     	;# 
  1926  0823                     	;# 
  1927  0823                     	;# 
  1928  0824                     	;# 
  1929  0825                     	;# 
  1930  0825                     	;# 
  1931  0826                     	;# 
  1932  0827                     	;# 
  1933  0827                     	;# 
  1934  0828                     	;# 
  1935  0829                     	;# 
  1936  082A                     	;# 
  1937  082B                     	;# 
  1938  082C                     	;# 
  1939  082D                     	;# 
  1940  082E                     	;# 
  1941  082F                     	;# 
  1942  0831                     	;# 
  1943  0832                     	;# 
  1944  0833                     	;# 
  1945  0834                     	;# 
  1946  0835                     	;# 
  1947  0836                     	;# 
  1948  0837                     	;# 
  1949  0838                     	;# 
  1950  0839                     	;# 
  1951  083A                     	;# 
  1952  083B                     	;# 
  1953  083C                     	;# 
  1954  083D                     	;# 
  1955  083E                     	;# 
  1956  083F                     	;# 
  1957  0840                     	;# 
  1958  0841                     	;# 
  1959  0841                     	;# 
  1960  0842                     	;# 
  1961  0843                     	;# 
  1962  0843                     	;# 
  1963  0844                     	;# 
  1964  0845                     	;# 
  1965  0845                     	;# 
  1966  0846                     	;# 
  1967  0847                     	;# 
  1968  0847                     	;# 
  1969  0848                     	;# 
  1970  0849                     	;# 
  1971  084A                     	;# 
  1972  084B                     	;# 
  1973  084C                     	;# 
  1974  084D                     	;# 
  1975  084E                     	;# 
  1976  084F                     	;# 
  1977  0851                     	;# 
  1978  0852                     	;# 
  1979  0853                     	;# 
  1980  0854                     	;# 
  1981  0855                     	;# 
  1982  0856                     	;# 
  1983  0857                     	;# 
  1984  0858                     	;# 
  1985  0859                     	;# 
  1986  085A                     	;# 
  1987  085B                     	;# 
  1988  085C                     	;# 
  1989  085D                     	;# 
  1990  085E                     	;# 
  1991  085F                     	;# 
  1992  0860                     	;# 
  1993  0861                     	;# 
  1994  0861                     	;# 
  1995  0862                     	;# 
  1996  0863                     	;# 
  1997  0863                     	;# 
  1998  0864                     	;# 
  1999  0865                     	;# 
  2000  0865                     	;# 
  2001  0866                     	;# 
  2002  0867                     	;# 
  2003  0867                     	;# 
  2004  0868                     	;# 
  2005  0869                     	;# 
  2006  086A                     	;# 
  2007  086B                     	;# 
  2008  086C                     	;# 
  2009  086D                     	;# 
  2010  086E                     	;# 
  2011  086F                     	;# 
  2012  0FE4                     	;# 
  2013  0FE5                     	;# 
  2014  0FE6                     	;# 
  2015  0FE7                     	;# 
  2016  0FE8                     	;# 
  2017  0FE9                     	;# 
  2018  0FEA                     	;# 
  2019  0FEB                     	;# 
  2020  0FED                     	;# 
  2021  0FEE                     	;# 
  2022  0FEF                     	;# 
  2023  0000                     	;# 
  2024  0001                     	;# 
  2025  0002                     	;# 
  2026  0003                     	;# 
  2027  0004                     	;# 
  2028  0005                     	;# 
  2029  0006                     	;# 
  2030  0007                     	;# 
  2031  0008                     	;# 
  2032  0009                     	;# 
  2033  000A                     	;# 
  2034  000B                     	;# 
  2035  000C                     	;# 
  2036  000D                     	;# 
  2037  000E                     	;# 
  2038  0010                     	;# 
  2039  0011                     	;# 
  2040  0012                     	;# 
  2041  0013                     	;# 
  2042  0014                     	;# 
  2043  0015                     	;# 
  2044  0016                     	;# 
  2045  0016                     	;# 
  2046  0017                     	;# 
  2047  0018                     	;# 
  2048  0019                     	;# 
  2049  001A                     	;# 
  2050  001B                     	;# 
  2051  001C                     	;# 
  2052  008C                     	;# 
  2053  008D                     	;# 
  2054  008E                     	;# 
  2055  0090                     	;# 
  2056  0091                     	;# 
  2057  0092                     	;# 
  2058  0093                     	;# 
  2059  0094                     	;# 
  2060  0095                     	;# 
  2061  0096                     	;# 
  2062  0097                     	;# 
  2063  0098                     	;# 
  2064  0099                     	;# 
  2065  009A                     	;# 
  2066  009B                     	;# 
  2067  009B                     	;# 
  2068  009C                     	;# 
  2069  009D                     	;# 
  2070  009E                     	;# 
  2071  009F                     	;# 
  2072  010C                     	;# 
  2073  010D                     	;# 
  2074  010E                     	;# 
  2075  0111                     	;# 
  2076  0112                     	;# 
  2077  0113                     	;# 
  2078  0114                     	;# 
  2079  0115                     	;# 
  2080  0116                     	;# 
  2081  0117                     	;# 
  2082  0118                     	;# 
  2083  0119                     	;# 
  2084  011A                     	;# 
  2085  011B                     	;# 
  2086  011C                     	;# 
  2087  011D                     	;# 
  2088  011D                     	;# 
  2089  011D                     	;# 
  2090  011E                     	;# 
  2091  011F                     	;# 
  2092  018C                     	;# 
  2093  018D                     	;# 
  2094  0191                     	;# 
  2095  0191                     	;# 
  2096  0192                     	;# 
  2097  0193                     	;# 
  2098  0193                     	;# 
  2099  0193                     	;# 
  2100  0194                     	;# 
  2101  0195                     	;# 
  2102  0196                     	;# 
  2103  0197                     	;# 
  2104  0199                     	;# 
  2105  0199                     	;# 
  2106  0199                     	;# 
  2107  019A                     	;# 
  2108  019A                     	;# 
  2109  019A                     	;# 
  2110  019B                     	;# 
  2111  019B                     	;# 
  2112  019B                     	;# 
  2113  019B                     	;# 
  2114  019B                     	;# 
  2115  019C                     	;# 
  2116  019C                     	;# 
  2117  019C                     	;# 
  2118  019D                     	;# 
  2119  019D                     	;# 
  2120  019D                     	;# 
  2121  019E                     	;# 
  2122  019E                     	;# 
  2123  019E                     	;# 
  2124  019F                     	;# 
  2125  019F                     	;# 
  2126  019F                     	;# 
  2127  019F                     	;# 
  2128  019F                     	;# 
  2129  020C                     	;# 
  2130  020D                     	;# 
  2131  020E                     	;# 
  2132  0210                     	;# 
  2133  0211                     	;# 
  2134  0211                     	;# 
  2135  0212                     	;# 
  2136  0212                     	;# 
  2137  0213                     	;# 
  2138  0213                     	;# 
  2139  0214                     	;# 
  2140  0214                     	;# 
  2141  0215                     	;# 
  2142  0215                     	;# 
  2143  0215                     	;# 
  2144  0215                     	;# 
  2145  0216                     	;# 
  2146  0216                     	;# 
  2147  0217                     	;# 
  2148  0217                     	;# 
  2149  028C                     	;# 
  2150  028D                     	;# 
  2151  028E                     	;# 
  2152  0291                     	;# 
  2153  0291                     	;# 
  2154  0292                     	;# 
  2155  0293                     	;# 
  2156  0298                     	;# 
  2157  0298                     	;# 
  2158  0299                     	;# 
  2159  029A                     	;# 
  2160  030C                     	;# 
  2161  030D                     	;# 
  2162  030E                     	;# 
  2163  0311                     	;# 
  2164  0311                     	;# 
  2165  0312                     	;# 
  2166  0313                     	;# 
  2167  038C                     	;# 
  2168  038D                     	;# 
  2169  038E                     	;# 
  2170  0390                     	;# 
  2171  0391                     	;# 
  2172  0392                     	;# 
  2173  0393                     	;# 
  2174  0394                     	;# 
  2175  0395                     	;# 
  2176  0396                     	;# 
  2177  0397                     	;# 
  2178  0398                     	;# 
  2179  0399                     	;# 
  2180  039D                     	;# 
  2181  039E                     	;# 
  2182  039F                     	;# 
  2183  0511                     	;# 
  2184  0513                     	;# 
  2185  051A                     	;# 
  2186  0811                     	;# 
  2187  0812                     	;# 
  2188  0813                     	;# 
  2189  0814                     	;# 
  2190  0815                     	;# 
  2191  0816                     	;# 
  2192  0817                     	;# 
  2193  0818                     	;# 
  2194  0819                     	;# 
  2195  081A                     	;# 
  2196  081B                     	;# 
  2197  081C                     	;# 
  2198  081D                     	;# 
  2199  081E                     	;# 
  2200  081F                     	;# 
  2201  0820                     	;# 
  2202  0821                     	;# 
  2203  0821                     	;# 
  2204  0822                     	;# 
  2205  0823                     	;# 
  2206  0823                     	;# 
  2207  0824                     	;# 
  2208  0825                     	;# 
  2209  0825                     	;# 
  2210  0826                     	;# 
  2211  0827                     	;# 
  2212  0827                     	;# 
  2213  0828                     	;# 
  2214  0829                     	;# 
  2215  082A                     	;# 
  2216  082B                     	;# 
  2217  082C                     	;# 
  2218  082D                     	;# 
  2219  082E                     	;# 
  2220  082F                     	;# 
  2221  0831                     	;# 
  2222  0832                     	;# 
  2223  0833                     	;# 
  2224  0834                     	;# 
  2225  0835                     	;# 
  2226  0836                     	;# 
  2227  0837                     	;# 
  2228  0838                     	;# 
  2229  0839                     	;# 
  2230  083A                     	;# 
  2231  083B                     	;# 
  2232  083C                     	;# 
  2233  083D                     	;# 
  2234  083E                     	;# 
  2235  083F                     	;# 
  2236  0840                     	;# 
  2237  0841                     	;# 
  2238  0841                     	;# 
  2239  0842                     	;# 
  2240  0843                     	;# 
  2241  0843                     	;# 
  2242  0844                     	;# 
  2243  0845                     	;# 
  2244  0845                     	;# 
  2245  0846                     	;# 
  2246  0847                     	;# 
  2247  0847                     	;# 
  2248  0848                     	;# 
  2249  0849                     	;# 
  2250  084A                     	;# 
  2251  084B                     	;# 
  2252  084C                     	;# 
  2253  084D                     	;# 
  2254  084E                     	;# 
  2255  084F                     	;# 
  2256  0851                     	;# 
  2257  0852                     	;# 
  2258  0853                     	;# 
  2259  0854                     	;# 
  2260  0855                     	;# 
  2261  0856                     	;# 
  2262  0857                     	;# 
  2263  0858                     	;# 
  2264  0859                     	;# 
  2265  085A                     	;# 
  2266  085B                     	;# 
  2267  085C                     	;# 
  2268  085D                     	;# 
  2269  085E                     	;# 
  2270  085F                     	;# 
  2271  0860                     	;# 
  2272  0861                     	;# 
  2273  0861                     	;# 
  2274  0862                     	;# 
  2275  0863                     	;# 
  2276  0863                     	;# 
  2277  0864                     	;# 
  2278  0865                     	;# 
  2279  0865                     	;# 
  2280  0866                     	;# 
  2281  0867                     	;# 
  2282  0867                     	;# 
  2283  0868                     	;# 
  2284  0869                     	;# 
  2285  086A                     	;# 
  2286  086B                     	;# 
  2287  086C                     	;# 
  2288  086D                     	;# 
  2289  086E                     	;# 
  2290  086F                     	;# 
  2291  0FE4                     	;# 
  2292  0FE5                     	;# 
  2293  0FE6                     	;# 
  2294  0FE7                     	;# 
  2295  0FE8                     	;# 
  2296  0FE9                     	;# 
  2297  0FEA                     	;# 
  2298  0FEB                     	;# 
  2299  0FED                     	;# 
  2300  0FEE                     	;# 
  2301  0FEF                     	;# 
  2302  0000                     	;# 
  2303  0001                     	;# 
  2304  0002                     	;# 
  2305  0003                     	;# 
  2306  0004                     	;# 
  2307  0005                     	;# 
  2308  0006                     	;# 
  2309  0007                     	;# 
  2310  0008                     	;# 
  2311  0009                     	;# 
  2312  000A                     	;# 
  2313  000B                     	;# 
  2314  000C                     	;# 
  2315  000D                     	;# 
  2316  000E                     	;# 
  2317  0010                     	;# 
  2318  0011                     	;# 
  2319  0012                     	;# 
  2320  0013                     	;# 
  2321  0014                     	;# 
  2322  0015                     	;# 
  2323  0016                     	;# 
  2324  0016                     	;# 
  2325  0017                     	;# 
  2326  0018                     	;# 
  2327  0019                     	;# 
  2328  001A                     	;# 
  2329  001B                     	;# 
  2330  001C                     	;# 
  2331  008C                     	;# 
  2332  008D                     	;# 
  2333  008E                     	;# 
  2334  0090                     	;# 
  2335  0091                     	;# 
  2336  0092                     	;# 
  2337  0093                     	;# 
  2338  0094                     	;# 
  2339  0095                     	;# 
  2340  0096                     	;# 
  2341  0097                     	;# 
  2342  0098                     	;# 
  2343  0099                     	;# 
  2344  009A                     	;# 
  2345  009B                     	;# 
  2346  009B                     	;# 
  2347  009C                     	;# 
  2348  009D                     	;# 
  2349  009E                     	;# 
  2350  009F                     	;# 
  2351  010C                     	;# 
  2352  010D                     	;# 
  2353  010E                     	;# 
  2354  0111                     	;# 
  2355  0112                     	;# 
  2356  0113                     	;# 
  2357  0114                     	;# 
  2358  0115                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  0118                     	;# 
  2362  0119                     	;# 
  2363  011A                     	;# 
  2364  011B                     	;# 
  2365  011C                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011E                     	;# 
  2370  011F                     	;# 
  2371  018C                     	;# 
  2372  018D                     	;# 
  2373  0191                     	;# 
  2374  0191                     	;# 
  2375  0192                     	;# 
  2376  0193                     	;# 
  2377  0193                     	;# 
  2378  0193                     	;# 
  2379  0194                     	;# 
  2380  0195                     	;# 
  2381  0196                     	;# 
  2382  0197                     	;# 
  2383  0199                     	;# 
  2384  0199                     	;# 
  2385  0199                     	;# 
  2386  019A                     	;# 
  2387  019A                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019B                     	;# 
  2391  019B                     	;# 
  2392  019B                     	;# 
  2393  019B                     	;# 
  2394  019C                     	;# 
  2395  019C                     	;# 
  2396  019C                     	;# 
  2397  019D                     	;# 
  2398  019D                     	;# 
  2399  019D                     	;# 
  2400  019E                     	;# 
  2401  019E                     	;# 
  2402  019E                     	;# 
  2403  019F                     	;# 
  2404  019F                     	;# 
  2405  019F                     	;# 
  2406  019F                     	;# 
  2407  019F                     	;# 
  2408  020C                     	;# 
  2409  020D                     	;# 
  2410  020E                     	;# 
  2411  0210                     	;# 
  2412  0211                     	;# 
  2413  0211                     	;# 
  2414  0212                     	;# 
  2415  0212                     	;# 
  2416  0213                     	;# 
  2417  0213                     	;# 
  2418  0214                     	;# 
  2419  0214                     	;# 
  2420  0215                     	;# 
  2421  0215                     	;# 
  2422  0215                     	;# 
  2423  0215                     	;# 
  2424  0216                     	;# 
  2425  0216                     	;# 
  2426  0217                     	;# 
  2427  0217                     	;# 
  2428  028C                     	;# 
  2429  028D                     	;# 
  2430  028E                     	;# 
  2431  0291                     	;# 
  2432  0291                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0298                     	;# 
  2436  0298                     	;# 
  2437  0299                     	;# 
  2438  029A                     	;# 
  2439  030C                     	;# 
  2440  030D                     	;# 
  2441  030E                     	;# 
  2442  0311                     	;# 
  2443  0311                     	;# 
  2444  0312                     	;# 
  2445  0313                     	;# 
  2446  038C                     	;# 
  2447  038D                     	;# 
  2448  038E                     	;# 
  2449  0390                     	;# 
  2450  0391                     	;# 
  2451  0392                     	;# 
  2452  0393                     	;# 
  2453  0394                     	;# 
  2454  0395                     	;# 
  2455  0396                     	;# 
  2456  0397                     	;# 
  2457  0398                     	;# 
  2458  0399                     	;# 
  2459  039D                     	;# 
  2460  039E                     	;# 
  2461  039F                     	;# 
  2462  0511                     	;# 
  2463  0513                     	;# 
  2464  051A                     	;# 
  2465  0811                     	;# 
  2466  0812                     	;# 
  2467  0813                     	;# 
  2468  0814                     	;# 
  2469  0815                     	;# 
  2470  0816                     	;# 
  2471  0817                     	;# 
  2472  0818                     	;# 
  2473  0819                     	;# 
  2474  081A                     	;# 
  2475  081B                     	;# 
  2476  081C                     	;# 
  2477  081D                     	;# 
  2478  081E                     	;# 
  2479  081F                     	;# 
  2480  0820                     	;# 
  2481  0821                     	;# 
  2482  0821                     	;# 
  2483  0822                     	;# 
  2484  0823                     	;# 
  2485  0823                     	;# 
  2486  0824                     	;# 
  2487  0825                     	;# 
  2488  0825                     	;# 
  2489  0826                     	;# 
  2490  0827                     	;# 
  2491  0827                     	;# 
  2492  0828                     	;# 
  2493  0829                     	;# 
  2494  082A                     	;# 
  2495  082B                     	;# 
  2496  082C                     	;# 
  2497  082D                     	;# 
  2498  082E                     	;# 
  2499  082F                     	;# 
  2500  0831                     	;# 
  2501  0832                     	;# 
  2502  0833                     	;# 
  2503  0834                     	;# 
  2504  0835                     	;# 
  2505  0836                     	;# 
  2506  0837                     	;# 
  2507  0838                     	;# 
  2508  0839                     	;# 
  2509  083A                     	;# 
  2510  083B                     	;# 
  2511  083C                     	;# 
  2512  083D                     	;# 
  2513  083E                     	;# 
  2514  083F                     	;# 
  2515  0840                     	;# 
  2516  0841                     	;# 
  2517  0841                     	;# 
  2518  0842                     	;# 
  2519  0843                     	;# 
  2520  0843                     	;# 
  2521  0844                     	;# 
  2522  0845                     	;# 
  2523  0845                     	;# 
  2524  0846                     	;# 
  2525  0847                     	;# 
  2526  0847                     	;# 
  2527  0848                     	;# 
  2528  0849                     	;# 
  2529  084A                     	;# 
  2530  084B                     	;# 
  2531  084C                     	;# 
  2532  084D                     	;# 
  2533  084E                     	;# 
  2534  084F                     	;# 
  2535  0851                     	;# 
  2536  0852                     	;# 
  2537  0853                     	;# 
  2538  0854                     	;# 
  2539  0855                     	;# 
  2540  0856                     	;# 
  2541  0857                     	;# 
  2542  0858                     	;# 
  2543  0859                     	;# 
  2544  085A                     	;# 
  2545  085B                     	;# 
  2546  085C                     	;# 
  2547  085D                     	;# 
  2548  085E                     	;# 
  2549  085F                     	;# 
  2550  0860                     	;# 
  2551  0861                     	;# 
  2552  0861                     	;# 
  2553  0862                     	;# 
  2554  0863                     	;# 
  2555  0863                     	;# 
  2556  0864                     	;# 
  2557  0865                     	;# 
  2558  0865                     	;# 
  2559  0866                     	;# 
  2560  0867                     	;# 
  2561  0867                     	;# 
  2562  0868                     	;# 
  2563  0869                     	;# 
  2564  086A                     	;# 
  2565  086B                     	;# 
  2566  086C                     	;# 
  2567  086D                     	;# 
  2568  086E                     	;# 
  2569  086F                     	;# 
  2570  0FE4                     	;# 
  2571  0FE5                     	;# 
  2572  0FE6                     	;# 
  2573  0FE7                     	;# 
  2574  0FE8                     	;# 
  2575  0FE9                     	;# 
  2576  0FEA                     	;# 
  2577  0FEB                     	;# 
  2578  0FED                     	;# 
  2579  0FEE                     	;# 
  2580  0FEF                     	;# 
  2581  0000                     	;# 
  2582  0001                     	;# 
  2583  0002                     	;# 
  2584  0003                     	;# 
  2585  0004                     	;# 
  2586  0005                     	;# 
  2587  0006                     	;# 
  2588  0007                     	;# 
  2589  0008                     	;# 
  2590  0009                     	;# 
  2591  000A                     	;# 
  2592  000B                     	;# 
  2593  000C                     	;# 
  2594  000D                     	;# 
  2595  000E                     	;# 
  2596  0010                     	;# 
  2597  0011                     	;# 
  2598  0012                     	;# 
  2599  0013                     	;# 
  2600  0014                     	;# 
  2601  0015                     	;# 
  2602  0016                     	;# 
  2603  0016                     	;# 
  2604  0017                     	;# 
  2605  0018                     	;# 
  2606  0019                     	;# 
  2607  001A                     	;# 
  2608  001B                     	;# 
  2609  001C                     	;# 
  2610  008C                     	;# 
  2611  008D                     	;# 
  2612  008E                     	;# 
  2613  0090                     	;# 
  2614  0091                     	;# 
  2615  0092                     	;# 
  2616  0093                     	;# 
  2617  0094                     	;# 
  2618  0095                     	;# 
  2619  0096                     	;# 
  2620  0097                     	;# 
  2621  0098                     	;# 
  2622  0099                     	;# 
  2623  009A                     	;# 
  2624  009B                     	;# 
  2625  009B                     	;# 
  2626  009C                     	;# 
  2627  009D                     	;# 
  2628  009E                     	;# 
  2629  009F                     	;# 
  2630  010C                     	;# 
  2631  010D                     	;# 
  2632  010E                     	;# 
  2633  0111                     	;# 
  2634  0112                     	;# 
  2635  0113                     	;# 
  2636  0114                     	;# 
  2637  0115                     	;# 
  2638  0116                     	;# 
  2639  0117                     	;# 
  2640  0118                     	;# 
  2641  0119                     	;# 
  2642  011A                     	;# 
  2643  011B                     	;# 
  2644  011C                     	;# 
  2645  011D                     	;# 
  2646  011D                     	;# 
  2647  011D                     	;# 
  2648  011E                     	;# 
  2649  011F                     	;# 
  2650  018C                     	;# 
  2651  018D                     	;# 
  2652  0191                     	;# 
  2653  0191                     	;# 
  2654  0192                     	;# 
  2655  0193                     	;# 
  2656  0193                     	;# 
  2657  0193                     	;# 
  2658  0194                     	;# 
  2659  0195                     	;# 
  2660  0196                     	;# 
  2661  0197                     	;# 
  2662  0199                     	;# 
  2663  0199                     	;# 
  2664  0199                     	;# 
  2665  019A                     	;# 
  2666  019A                     	;# 
  2667  019A                     	;# 
  2668  019B                     	;# 
  2669  019B                     	;# 
  2670  019B                     	;# 
  2671  019B                     	;# 
  2672  019B                     	;# 
  2673  019C                     	;# 
  2674  019C                     	;# 
  2675  019C                     	;# 
  2676  019D                     	;# 
  2677  019D                     	;# 
  2678  019D                     	;# 
  2679  019E                     	;# 
  2680  019E                     	;# 
  2681  019E                     	;# 
  2682  019F                     	;# 
  2683  019F                     	;# 
  2684  019F                     	;# 
  2685  019F                     	;# 
  2686  019F                     	;# 
  2687  020C                     	;# 
  2688  020D                     	;# 
  2689  020E                     	;# 
  2690  0210                     	;# 
  2691  0211                     	;# 
  2692  0211                     	;# 
  2693  0212                     	;# 
  2694  0212                     	;# 
  2695  0213                     	;# 
  2696  0213                     	;# 
  2697  0214                     	;# 
  2698  0214                     	;# 
  2699  0215                     	;# 
  2700  0215                     	;# 
  2701  0215                     	;# 
  2702  0215                     	;# 
  2703  0216                     	;# 
  2704  0216                     	;# 
  2705  0217                     	;# 
  2706  0217                     	;# 
  2707  028C                     	;# 
  2708  028D                     	;# 
  2709  028E                     	;# 
  2710  0291                     	;# 
  2711  0291                     	;# 
  2712  0292                     	;# 
  2713  0293                     	;# 
  2714  0298                     	;# 
  2715  0298                     	;# 
  2716  0299                     	;# 
  2717  029A                     	;# 
  2718  030C                     	;# 
  2719  030D                     	;# 
  2720  030E                     	;# 
  2721  0311                     	;# 
  2722  0311                     	;# 
  2723  0312                     	;# 
  2724  0313                     	;# 
  2725  038C                     	;# 
  2726  038D                     	;# 
  2727  038E                     	;# 
  2728  0390                     	;# 
  2729  0391                     	;# 
  2730  0392                     	;# 
  2731  0393                     	;# 
  2732  0394                     	;# 
  2733  0395                     	;# 
  2734  0396                     	;# 
  2735  0397                     	;# 
  2736  0398                     	;# 
  2737  0399                     	;# 
  2738  039D                     	;# 
  2739  039E                     	;# 
  2740  039F                     	;# 
  2741  0511                     	;# 
  2742  0513                     	;# 
  2743  051A                     	;# 
  2744  0811                     	;# 
  2745  0812                     	;# 
  2746  0813                     	;# 
  2747  0814                     	;# 
  2748  0815                     	;# 
  2749  0816                     	;# 
  2750  0817                     	;# 
  2751  0818                     	;# 
  2752  0819                     	;# 
  2753  081A                     	;# 
  2754  081B                     	;# 
  2755  081C                     	;# 
  2756  081D                     	;# 
  2757  081E                     	;# 
  2758  081F                     	;# 
  2759  0820                     	;# 
  2760  0821                     	;# 
  2761  0821                     	;# 
  2762  0822                     	;# 
  2763  0823                     	;# 
  2764  0823                     	;# 
  2765  0824                     	;# 
  2766  0825                     	;# 
  2767  0825                     	;# 
  2768  0826                     	;# 
  2769  0827                     	;# 
  2770  0827                     	;# 
  2771  0828                     	;# 
  2772  0829                     	;# 
  2773  082A                     	;# 
  2774  082B                     	;# 
  2775  082C                     	;# 
  2776  082D                     	;# 
  2777  082E                     	;# 
  2778  082F                     	;# 
  2779  0831                     	;# 
  2780  0832                     	;# 
  2781  0833                     	;# 
  2782  0834                     	;# 
  2783  0835                     	;# 
  2784  0836                     	;# 
  2785  0837                     	;# 
  2786  0838                     	;# 
  2787  0839                     	;# 
  2788  083A                     	;# 
  2789  083B                     	;# 
  2790  083C                     	;# 
  2791  083D                     	;# 
  2792  083E                     	;# 
  2793  083F                     	;# 
  2794  0840                     	;# 
  2795  0841                     	;# 
  2796  0841                     	;# 
  2797  0842                     	;# 
  2798  0843                     	;# 
  2799  0843                     	;# 
  2800  0844                     	;# 
  2801  0845                     	;# 
  2802  0845                     	;# 
  2803  0846                     	;# 
  2804  0847                     	;# 
  2805  0847                     	;# 
  2806  0848                     	;# 
  2807  0849                     	;# 
  2808  084A                     	;# 
  2809  084B                     	;# 
  2810  084C                     	;# 
  2811  084D                     	;# 
  2812  084E                     	;# 
  2813  084F                     	;# 
  2814  0851                     	;# 
  2815  0852                     	;# 
  2816  0853                     	;# 
  2817  0854                     	;# 
  2818  0855                     	;# 
  2819  0856                     	;# 
  2820  0857                     	;# 
  2821  0858                     	;# 
  2822  0859                     	;# 
  2823  085A                     	;# 
  2824  085B                     	;# 
  2825  085C                     	;# 
  2826  085D                     	;# 
  2827  085E                     	;# 
  2828  085F                     	;# 
  2829  0860                     	;# 
  2830  0861                     	;# 
  2831  0861                     	;# 
  2832  0862                     	;# 
  2833  0863                     	;# 
  2834  0863                     	;# 
  2835  0864                     	;# 
  2836  0865                     	;# 
  2837  0865                     	;# 
  2838  0866                     	;# 
  2839  0867                     	;# 
  2840  0867                     	;# 
  2841  0868                     	;# 
  2842  0869                     	;# 
  2843  086A                     	;# 
  2844  086B                     	;# 
  2845  086C                     	;# 
  2846  086D                     	;# 
  2847  086E                     	;# 
  2848  086F                     	;# 
  2849  0FE4                     	;# 
  2850  0FE5                     	;# 
  2851  0FE6                     	;# 
  2852  0FE7                     	;# 
  2853  0FE8                     	;# 
  2854  0FE9                     	;# 
  2855  0FEA                     	;# 
  2856  0FEB                     	;# 
  2857  0FED                     	;# 
  2858  0FEE                     	;# 
  2859  0FEF                     	;# 
  2860  0000                     	;# 
  2861  0001                     	;# 
  2862  0002                     	;# 
  2863  0003                     	;# 
  2864  0004                     	;# 
  2865  0005                     	;# 
  2866  0006                     	;# 
  2867  0007                     	;# 
  2868  0008                     	;# 
  2869  0009                     	;# 
  2870  000A                     	;# 
  2871  000B                     	;# 
  2872  000C                     	;# 
  2873  000D                     	;# 
  2874  000E                     	;# 
  2875  0010                     	;# 
  2876  0011                     	;# 
  2877  0012                     	;# 
  2878  0013                     	;# 
  2879  0014                     	;# 
  2880  0015                     	;# 
  2881  0016                     	;# 
  2882  0016                     	;# 
  2883  0017                     	;# 
  2884  0018                     	;# 
  2885  0019                     	;# 
  2886  001A                     	;# 
  2887  001B                     	;# 
  2888  001C                     	;# 
  2889  008C                     	;# 
  2890  008D                     	;# 
  2891  008E                     	;# 
  2892  0090                     	;# 
  2893  0091                     	;# 
  2894  0092                     	;# 
  2895  0093                     	;# 
  2896  0094                     	;# 
  2897  0095                     	;# 
  2898  0096                     	;# 
  2899  0097                     	;# 
  2900  0098                     	;# 
  2901  0099                     	;# 
  2902  009A                     	;# 
  2903  009B                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009E                     	;# 
  2908  009F                     	;# 
  2909  010C                     	;# 
  2910  010D                     	;# 
  2911  010E                     	;# 
  2912  0111                     	;# 
  2913  0112                     	;# 
  2914  0113                     	;# 
  2915  0114                     	;# 
  2916  0115                     	;# 
  2917  0116                     	;# 
  2918  0117                     	;# 
  2919  0118                     	;# 
  2920  0119                     	;# 
  2921  011A                     	;# 
  2922  011B                     	;# 
  2923  011C                     	;# 
  2924  011D                     	;# 
  2925  011D                     	;# 
  2926  011D                     	;# 
  2927  011E                     	;# 
  2928  011F                     	;# 
  2929  018C                     	;# 
  2930  018D                     	;# 
  2931  0191                     	;# 
  2932  0191                     	;# 
  2933  0192                     	;# 
  2934  0193                     	;# 
  2935  0193                     	;# 
  2936  0193                     	;# 
  2937  0194                     	;# 
  2938  0195                     	;# 
  2939  0196                     	;# 
  2940  0197                     	;# 
  2941  0199                     	;# 
  2942  0199                     	;# 
  2943  0199                     	;# 
  2944  019A                     	;# 
  2945  019A                     	;# 
  2946  019A                     	;# 
  2947  019B                     	;# 
  2948  019B                     	;# 
  2949  019B                     	;# 
  2950  019B                     	;# 
  2951  019B                     	;# 
  2952  019C                     	;# 
  2953  019C                     	;# 
  2954  019C                     	;# 
  2955  019D                     	;# 
  2956  019D                     	;# 
  2957  019D                     	;# 
  2958  019E                     	;# 
  2959  019E                     	;# 
  2960  019E                     	;# 
  2961  019F                     	;# 
  2962  019F                     	;# 
  2963  019F                     	;# 
  2964  019F                     	;# 
  2965  019F                     	;# 
  2966  020C                     	;# 
  2967  020D                     	;# 
  2968  020E                     	;# 
  2969  0210                     	;# 
  2970  0211                     	;# 
  2971  0211                     	;# 
  2972  0212                     	;# 
  2973  0212                     	;# 
  2974  0213                     	;# 
  2975  0213                     	;# 
  2976  0214                     	;# 
  2977  0214                     	;# 
  2978  0215                     	;# 
  2979  0215                     	;# 
  2980  0215                     	;# 
  2981  0215                     	;# 
  2982  0216                     	;# 
  2983  0216                     	;# 
  2984  0217                     	;# 
  2985  0217                     	;# 
  2986  028C                     	;# 
  2987  028D                     	;# 
  2988  028E                     	;# 
  2989  0291                     	;# 
  2990  0291                     	;# 
  2991  0292                     	;# 
  2992  0293                     	;# 
  2993  0298                     	;# 
  2994  0298                     	;# 
  2995  0299                     	;# 
  2996  029A                     	;# 
  2997  030C                     	;# 
  2998  030D                     	;# 
  2999  030E                     	;# 
  3000  0311                     	;# 
  3001  0311                     	;# 
  3002  0312                     	;# 
  3003  0313                     	;# 
  3004  038C                     	;# 
  3005  038D                     	;# 
  3006  038E                     	;# 
  3007  0390                     	;# 
  3008  0391                     	;# 
  3009  0392                     	;# 
  3010  0393                     	;# 
  3011  0394                     	;# 
  3012  0395                     	;# 
  3013  0396                     	;# 
  3014  0397                     	;# 
  3015  0398                     	;# 
  3016  0399                     	;# 
  3017  039D                     	;# 
  3018  039E                     	;# 
  3019  039F                     	;# 
  3020  0511                     	;# 
  3021  0513                     	;# 
  3022  051A                     	;# 
  3023  0811                     	;# 
  3024  0812                     	;# 
  3025  0813                     	;# 
  3026  0814                     	;# 
  3027  0815                     	;# 
  3028  0816                     	;# 
  3029  0817                     	;# 
  3030  0818                     	;# 
  3031  0819                     	;# 
  3032  081A                     	;# 
  3033  081B                     	;# 
  3034  081C                     	;# 
  3035  081D                     	;# 
  3036  081E                     	;# 
  3037  081F                     	;# 
  3038  0820                     	;# 
  3039  0821                     	;# 
  3040  0821                     	;# 
  3041  0822                     	;# 
  3042  0823                     	;# 
  3043  0823                     	;# 
  3044  0824                     	;# 
  3045  0825                     	;# 
  3046  0825                     	;# 
  3047  0826                     	;# 
  3048  0827                     	;# 
  3049  0827                     	;# 
  3050  0828                     	;# 
  3051  0829                     	;# 
  3052  082A                     	;# 
  3053  082B                     	;# 
  3054  082C                     	;# 
  3055  082D                     	;# 
  3056  082E                     	;# 
  3057  082F                     	;# 
  3058  0831                     	;# 
  3059  0832                     	;# 
  3060  0833                     	;# 
  3061  0834                     	;# 
  3062  0835                     	;# 
  3063  0836                     	;# 
  3064  0837                     	;# 
  3065  0838                     	;# 
  3066  0839                     	;# 
  3067  083A                     	;# 
  3068  083B                     	;# 
  3069  083C                     	;# 
  3070  083D                     	;# 
  3071  083E                     	;# 
  3072  083F                     	;# 
  3073  0840                     	;# 
  3074  0841                     	;# 
  3075  0841                     	;# 
  3076  0842                     	;# 
  3077  0843                     	;# 
  3078  0843                     	;# 
  3079  0844                     	;# 
  3080  0845                     	;# 
  3081  0845                     	;# 
  3082  0846                     	;# 
  3083  0847                     	;# 
  3084  0847                     	;# 
  3085  0848                     	;# 
  3086  0849                     	;# 
  3087  084A                     	;# 
  3088  084B                     	;# 
  3089  084C                     	;# 
  3090  084D                     	;# 
  3091  084E                     	;# 
  3092  084F                     	;# 
  3093  0851                     	;# 
  3094  0852                     	;# 
  3095  0853                     	;# 
  3096  0854                     	;# 
  3097  0855                     	;# 
  3098  0856                     	;# 
  3099  0857                     	;# 
  3100  0858                     	;# 
  3101  0859                     	;# 
  3102  085A                     	;# 
  3103  085B                     	;# 
  3104  085C                     	;# 
  3105  085D                     	;# 
  3106  085E                     	;# 
  3107  085F                     	;# 
  3108  0860                     	;# 
  3109  0861                     	;# 
  3110  0861                     	;# 
  3111  0862                     	;# 
  3112  0863                     	;# 
  3113  0863                     	;# 
  3114  0864                     	;# 
  3115  0865                     	;# 
  3116  0865                     	;# 
  3117  0866                     	;# 
  3118  0867                     	;# 
  3119  0867                     	;# 
  3120  0868                     	;# 
  3121  0869                     	;# 
  3122  086A                     	;# 
  3123  086B                     	;# 
  3124  086C                     	;# 
  3125  086D                     	;# 
  3126  086E                     	;# 
  3127  086F                     	;# 
  3128  0FE4                     	;# 
  3129  0FE5                     	;# 
  3130  0FE6                     	;# 
  3131  0FE7                     	;# 
  3132  0FE8                     	;# 
  3133  0FE9                     	;# 
  3134  0FEA                     	;# 
  3135  0FEB                     	;# 
  3136  0FED                     	;# 
  3137  0FEE                     	;# 
  3138  0FEF                     	;# 
  3139                           
  3140                           	psect	stringtext1
  3141  05E7                     __pstringtext1:	
  3142  05E7                     _segmcode:	
  3143  05E7  3408               	retlw	8
  3144  05E8  347C               	retlw	124
  3145  05E9  3411               	retlw	17
  3146  05EA  3430               	retlw	48
  3147  05EB  3424               	retlw	36
  3148  05EC  3422               	retlw	34
  3149  05ED  3402               	retlw	2
  3150  05EE  3478               	retlw	120
  3151  05EF  3400               	retlw	0
  3152  05F0  3420               	retlw	32
  3153  05F1                     __end_of_segmcode:	
  3154  0015                     _TMR0	set	21
  3155  000C                     _PORTAbits	set	12
  3156  000E                     _PORTCbits	set	14
  3157  000B                     _INTCONbits	set	11
  3158  005E                     _PEIE	set	94
  3159  005F                     _GIE	set	95
  3160  0074                     _RC4	set	116
  3161  008E                     _TRISCbits	set	142
  3162  008E                     _TRISC	set	142
  3163  008D                     _TRISB	set	141
  3164  008C                     _TRISA	set	140
  3165  0095                     _OPTION_REGbits	set	149
  3166  0099                     _OSCCONbits	set	153
  3167  048D                     _RCIE	set	1165
  3168  048C                     _TXIE	set	1164
  3169  0473                     _TRISC3	set	1139
  3170  0474                     _TRISC4	set	1140
  3171  010C                     _LATAbits	set	268
  3172  010D                     _LATBbits	set	269
  3173  010E                     _LATC	set	270
  3174  010D                     _LATB	set	269
  3175  010C                     _LATA	set	268
  3176  08E9                     _RXSEL	set	2281
  3177  08EA                     _TXSEL	set	2282
  3178  0874                     _LATC4	set	2164
  3179  0873                     _LATC3	set	2163
  3180  0199                     _RCREG	set	409
  3181  019A                     _TXREG	set	410
  3182  019B                     _SPBRGL	set	411
  3183  019C                     _SPBRGH	set	412
  3184  0CEC                     _CREN	set	3308
  3185  0CEF                     _SPEN	set	3311
  3186  0CF5                     _TXEN	set	3317
  3187  0CFB                     _BRG16	set	3323
  3188  0CF2                     _BRGH	set	3314
  3189  0CF4                     _SYNC	set	3316
  3190  020E                     _WPUCbits	set	526
  3191  020E                     _WPUC	set	526
  3192  020D                     _WPUB	set	525
  3193  020C                     _WPUA	set	524
  3194  1073                     _WPUC3	set	4211
  3195  1074                     _WPUC4	set	4212
  3196  1474                     _ODCONC4	set	5236
  3197  1473                     _ODCONC3	set	5235
  3198  0399                     _IOCCFbits	set	921
  3199  0397                     _IOCCPbits	set	919
  3200  0398                     _IOCCN	set	920
  3201  0397                     _IOCCP	set	919
  3202  0395                     _IOCBN	set	917
  3203  0394                     _IOCBP	set	916
  3204  0392                     _IOCAN	set	914
  3205  0391                     _IOCAP	set	913
  3206                           
  3207                           ; #config settings
  3208  0000                     
  3209                           	psect	cinit
  3210  00D5                     start_initialization:	
  3211  00D5                     __initialization:	
  3212                           
  3213                           ; Clear objects allocated to BANK0
  3214  00D5  3047               	movlw	low __pbssBANK0
  3215  00D6  0084               	movwf	4
  3216  00D7  3000               	movlw	high __pbssBANK0
  3217  00D8  0085               	movwf	5
  3218  00D9  300D               	movlw	13
  3219  00DA  3185  25F8  3180   	fcall	clear_ram0
  3220                           
  3221                           ; Clear objects allocated to BANK1
  3222  00DD  30A0               	movlw	low __pbssBANK1
  3223  00DE  0084               	movwf	4
  3224  00DF  3000               	movlw	high __pbssBANK1
  3225  00E0  0085               	movwf	5
  3226  00E1  3023               	movlw	35
  3227  00E2  3185  25F8         	fcall	clear_ram0
  3228  00E4                     end_of_initialization:	
  3229                           ;End of C runtime variable initialization code
  3230                           
  3231  00E4                     __end_of__initialization:	
  3232  00E4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3233  00E5  0020               	movlb	0
  3234  00E6  3185  2DF1         	ljmp	_main	;jump to C main() function
  3235                           
  3236                           	psect	bssBANK0
  3237  0047                     __pbssBANK0:	
  3238  0047                     _Temp:	
  3239  0047                     	ds	2
  3240  0049                     ISR@key_time_cnt:	
  3241  0049                     	ds	2
  3242  004B                     _flg_rc:	
  3243  004B                     	ds	1
  3244  004C                     _TX_en:	
  3245  004C                     	ds	1
  3246  004D                     _RX_data:	
  3247  004D                     	ds	1
  3248  004E                     _TX_data:	
  3249  004E                     	ds	1
  3250  004F                     _temp_l:	
  3251  004F                     	ds	1
  3252  0050                     _temp_h:	
  3253  0050                     	ds	1
  3254  0051                     receive_decode@cnt_low:	
  3255  0051                     	ds	1
  3256  0052                     ISR@history_key:	
  3257  0052                     	ds	1
  3258  0053                     _ENUM:	
  3259  0053                     	ds	1
  3260                           
  3261                           	psect	bssBANK1
  3262  00A0                     __pbssBANK1:	
  3263  00A0                     _g_data:	
  3264  00A0                     	ds	35
  3265                           
  3266                           	psect	clrtext
  3267  05F8                     clear_ram0:	
  3268                           ;	Called with FSR0 containing the base address, and
  3269                           ;	WREG with the size to clear
  3270                           
  3271  05F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3272  05F9                     clrloop0:	
  3273  05F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3274  05FA  3101               	addfsr 0,1
  3275  05FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3276  05FC  2DF9               	goto	clrloop0	;have we reached the end yet?
  3277  05FD  3400               	retlw	0	;all done for this memory range, return
  3278                           
  3279                           	psect	cstackCOMMON
  3280  0070                     __pcstackCOMMON:	
  3281  0070                     ?_data_getdata:	
  3282  0070                     ?_timer_init:	
  3283                           ; 1 bytes @ 0x0
  3284                           
  3285  0070                     ?_IIC_Init:	
  3286                           ; 1 bytes @ 0x0
  3287                           
  3288  0070                     ?_timer_start:	
  3289                           ; 1 bytes @ 0x0
  3290                           
  3291  0070                     ??_timer_start:	
  3292                           ; 1 bytes @ 0x0
  3293                           
  3294  0070                     ?_receive_decode:	
  3295                           ; 1 bytes @ 0x0
  3296                           
  3297  0070                     ?_update_time:	
  3298                           ; 1 bytes @ 0x0
  3299                           
  3300  0070                     ?_timer_reset:	
  3301                           ; 1 bytes @ 0x0
  3302                           
  3303  0070                     ??_timer_reset:	
  3304                           ; 1 bytes @ 0x0
  3305                           
  3306  0070                     ?_update_display:	
  3307                           ; 1 bytes @ 0x0
  3308                           
  3309  0070                     ?_init_env:	
  3310                           ; 1 bytes @ 0x0
  3311                           
  3312  0070                     ?_ISR:	
  3313                           ; 1 bytes @ 0x0
  3314                           
  3315  0070                     ?_main:	
  3316                           ; 1 bytes @ 0x0
  3317                           
  3318  0070                     ?_times2number:	
  3319                           ; 1 bytes @ 0x0
  3320                           
  3321  0070                     ?_test_get_number:	
  3322                           ; 1 bytes @ 0x0
  3323                           
  3324  0070                     ??_test_get_number:	
  3325                           ; 1 bytes @ 0x0
  3326                           
  3327  0070                     ?_control595_delay:	
  3328                           ; 1 bytes @ 0x0
  3329                           
  3330  0070                     ?_write_byte:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333  0070                     ?i1_control595_delay:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336  0070                     ??i1_control595_delay:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339  0070                     ?i1_write_byte:	
  3340                           ; 1 bytes @ 0x0
  3341                           
  3342  0070                     ?i1_update_display:	
  3343                           ; 1 bytes @ 0x0
  3344                           
  3345  0070                     ?i1_data_getdata:	
  3346                           ; 1 bytes @ 0x0
  3347                           
  3348  0070                     ??i1_data_getdata:	
  3349                           ; 1 bytes @ 0x0
  3350                           
  3351  0070                     ?_check_err:	
  3352                           ; 1 bytes @ 0x0
  3353                           
  3354  0070                     ?___lwmod:	
  3355                           ; 2 bytes @ 0x0
  3356                           
  3357  0070                     test_get_number@get_num:	
  3358                           ; 2 bytes @ 0x0
  3359                           
  3360  0070                     times2number@high_level_times:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363  0070                     ___lwmod@divisor:	
  3364                           ; 2 bytes @ 0x0
  3365                           
  3366                           
  3367                           ; 2 bytes @ 0x0
  3368  0070                     	ds	1
  3369  0071                     i1control595_delay@times:	
  3370                           
  3371                           ; 1 bytes @ 0x1
  3372  0071                     	ds	1
  3373  0072                     ??_times2number:	
  3374  0072                     ??_check_err:	
  3375                           ; 1 bytes @ 0x2
  3376                           
  3377  0072                     ??i1_write_byte:	
  3378                           ; 1 bytes @ 0x2
  3379                           
  3380  0072                     ___lwmod@dividend:	
  3381                           ; 1 bytes @ 0x2
  3382                           
  3383                           
  3384                           ; 2 bytes @ 0x2
  3385  0072                     	ds	2
  3386  0074                     ??___lwmod:	
  3387  0074                     i1write_byte@data:	
  3388                           ; 1 bytes @ 0x4
  3389                           
  3390                           
  3391                           ; 1 bytes @ 0x4
  3392  0074                     	ds	1
  3393  0075                     ___lwmod@counter:	
  3394  0075                     i1write_byte@i:	
  3395                           ; 1 bytes @ 0x5
  3396                           
  3397                           
  3398                           ; 1 bytes @ 0x5
  3399  0075                     	ds	1
  3400  0076                     ?i1_write_once:	
  3401  0076                     i1write_once@HR:	
  3402                           ; 1 bytes @ 0x6
  3403                           
  3404                           
  3405                           ; 1 bytes @ 0x6
  3406  0076                     	ds	1
  3407  0077                     i1write_once@ML:	
  3408                           
  3409                           ; 1 bytes @ 0x7
  3410  0077                     	ds	1
  3411  0078                     i1write_once@MR:	
  3412                           
  3413                           ; 1 bytes @ 0x8
  3414  0078                     	ds	1
  3415  0079                     ??i1_write_once:	
  3416  0079                     i1write_once@HL:	
  3417                           ; 1 bytes @ 0x9
  3418                           
  3419                           
  3420                           ; 1 bytes @ 0x9
  3421  0079                     	ds	1
  3422  007A                     ??i1_update_display:	
  3423                           
  3424                           ; 1 bytes @ 0xA
  3425  007A                     	ds	3
  3426  007D                     ??_update_time:	
  3427                           
  3428                           ; 1 bytes @ 0xD
  3429  007D                     	ds	1
  3430                           
  3431                           	psect	cstackBANK0
  3432  0020                     __pcstackBANK0:	
  3433  0020                     update_time@pdata:	
  3434  0020                     _check_err$614:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437                           
  3438                           ; 2 bytes @ 0x0
  3439  0020                     	ds	2
  3440  0022                     _check_err$615:	
  3441                           
  3442                           ; 2 bytes @ 0x2
  3443  0022                     	ds	2
  3444  0024                     _check_err$618:	
  3445                           
  3446                           ; 2 bytes @ 0x4
  3447  0024                     	ds	2
  3448  0026                     _check_err$619:	
  3449                           
  3450                           ; 2 bytes @ 0x6
  3451  0026                     	ds	2
  3452  0028                     check_err@i:	
  3453                           
  3454                           ; 1 bytes @ 0x8
  3455  0028                     	ds	1
  3456  0029                     check_err@check:	
  3457                           
  3458                           ; 1 bytes @ 0x9
  3459  0029                     	ds	1
  3460  002A                     check_err@pdata:	
  3461                           
  3462                           ; 1 bytes @ 0xA
  3463  002A                     	ds	1
  3464  002B                     ??_receive_decode:	
  3465                           
  3466                           ; 1 bytes @ 0xB
  3467  002B                     	ds	2
  3468  002D                     receive_decode@last_time_s:	
  3469                           
  3470                           ; 2 bytes @ 0xD
  3471  002D                     	ds	2
  3472  002F                     receive_decode@last_time_h:	
  3473                           
  3474                           ; 2 bytes @ 0xF
  3475  002F                     	ds	2
  3476  0031                     receive_decode@last_time_m:	
  3477                           
  3478                           ; 2 bytes @ 0x11
  3479  0031                     	ds	2
  3480  0033                     receive_decode@i:	
  3481                           
  3482                           ; 2 bytes @ 0x13
  3483  0033                     	ds	2
  3484  0035                     receive_decode@read_value:	
  3485                           
  3486                           ; 1 bytes @ 0x15
  3487  0035                     	ds	1
  3488  0036                     receive_decode@pdata:	
  3489                           
  3490                           ; 1 bytes @ 0x16
  3491  0036                     	ds	1
  3492  0037                     ??_ISR:	
  3493                           
  3494                           ; 1 bytes @ 0x17
  3495  0037                     	ds	2
  3496  0039                     ISR@pdata:	
  3497                           
  3498                           ; 1 bytes @ 0x19
  3499  0039                     	ds	1
  3500  003A                     ??_data_getdata:	
  3501  003A                     ??_timer_init:	
  3502                           ; 1 bytes @ 0x1A
  3503                           
  3504  003A                     ??_IIC_Init:	
  3505                           ; 1 bytes @ 0x1A
  3506                           
  3507  003A                     ??_init_env:	
  3508                           ; 1 bytes @ 0x1A
  3509                           
  3510  003A                     ??_control595_delay:	
  3511                           ; 1 bytes @ 0x1A
  3512                           
  3513                           
  3514                           ; 1 bytes @ 0x1A
  3515  003A                     	ds	1
  3516  003B                     control595_delay@times:	
  3517                           
  3518                           ; 1 bytes @ 0x1B
  3519  003B                     	ds	1
  3520  003C                     ??_write_byte:	
  3521  003C                     init_env@pdata:	
  3522                           ; 1 bytes @ 0x1C
  3523                           
  3524                           
  3525                           ; 1 bytes @ 0x1C
  3526  003C                     	ds	1
  3527  003D                     init_env@i:	
  3528                           
  3529                           ; 2 bytes @ 0x1D
  3530  003D                     	ds	1
  3531  003E                     write_byte@data:	
  3532                           
  3533                           ; 1 bytes @ 0x1E
  3534  003E                     	ds	1
  3535  003F                     write_byte@i:	
  3536                           
  3537                           ; 1 bytes @ 0x1F
  3538  003F                     	ds	1
  3539  0040                     ?_write_once:	
  3540  0040                     write_once@HR:	
  3541                           ; 1 bytes @ 0x20
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x20
  3545  0040                     	ds	1
  3546  0041                     write_once@ML:	
  3547                           
  3548                           ; 1 bytes @ 0x21
  3549  0041                     	ds	1
  3550  0042                     write_once@MR:	
  3551                           
  3552                           ; 1 bytes @ 0x22
  3553  0042                     	ds	1
  3554  0043                     ??_write_once:	
  3555  0043                     write_once@HL:	
  3556                           ; 1 bytes @ 0x23
  3557                           
  3558                           
  3559                           ; 1 bytes @ 0x23
  3560  0043                     	ds	1
  3561  0044                     ??_update_display:	
  3562                           
  3563                           ; 1 bytes @ 0x24
  3564  0044                     	ds	3
  3565  0047                     ??_main:	
  3566                           
  3567                           	psect	maintext
  3568  05F1                     __pmaintext:	
  3569                           ; 1 bytes @ 0x27
  3570 ;;
  3571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3572 ;;
  3573 ;; *************** function _main *****************
  3574 ;; Defined at:
  3575 ;;		line 190 in file "main.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : B1F/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels required when called:   10
  3595 ;; This function calls:
  3596 ;;		_init_env
  3597 ;;		_update_display
  3598 ;; This function is called by:
  3599 ;;		Startup code after reset
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _main
  3605  05F1                     _main:	
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3609  05F1  3183  234F  3185   	fcall	_init_env
  3610  05F4  3185  2574         	fcall	_update_display
  3611  05F6  3180  28D3         	ljmp	start
  3612  05F8                     __end_of_main:	
  3613                           
  3614                           	psect	text1
  3615  0574                     __ptext1:	
  3616 ;; *************** function _update_display *****************
  3617 ;; Defined at:
  3618 ;;		line 71 in file "update_display.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;Total ram usage:        3 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    9
  3639 ;; This function calls:
  3640 ;;		_write_once
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _update_display
  3648  0574                     _update_display:	
  3649                           
  3650                           ;update_display.c: 84:     write_once(segmcode[4], segmcode[3], segmcode[2], segmcode[1]
      +                          );
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _update_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3654  0574  30EA               	movlw	low ((_segmcode+3)| (0+32768))
  3655  0575  0084               	movwf	4
  3656  0576  3085               	movlw	high ((_segmcode+3)| (0+32768))
  3657  0577  0085               	movwf	5
  3658  0578  0800               	movf	0,w	;code access
  3659  0579  0020               	movlb	0	; select bank0
  3660  057A  00C4               	movwf	??_update_display
  3661  057B  0844               	movf	??_update_display,w
  3662  057C  00C0               	movwf	write_once@HR
  3663  057D  30E9               	movlw	low ((_segmcode+2)| (0+32768))
  3664  057E  0084               	movwf	4
  3665  057F  3085               	movlw	high ((_segmcode+2)| (0+32768))
  3666  0580  0085               	movwf	5
  3667  0581  0800               	movf	0,w	;code access
  3668  0582  00C5               	movwf	??_update_display+1
  3669  0583  0845               	movf	??_update_display+1,w
  3670  0584  00C1               	movwf	write_once@ML
  3671  0585  30E8               	movlw	low ((_segmcode+1)| (0+32768))
  3672  0586  0084               	movwf	4
  3673  0587  3085               	movlw	high ((_segmcode+1)| (0+32768))
  3674  0588  0085               	movwf	5
  3675  0589  0800               	movf	0,w	;code access
  3676  058A  00C6               	movwf	??_update_display+2
  3677  058B  0846               	movf	??_update_display+2,w
  3678  058C  00C2               	movwf	write_once@MR
  3679  058D  30EB               	movlw	low ((_segmcode+4)| (0+32768))
  3680  058E  0084               	movwf	4
  3681  058F  3085               	movlw	high ((_segmcode+4)| (0+32768))
  3682  0590  0085               	movwf	5
  3683  0591  0800               	movf	0,w	;code access
  3684  0592  3185  252C         	fcall	_write_once
  3685  0594  0008               	return
  3686  0595                     __end_of_update_display:	
  3687                           ;update_display.c: 85:     return;
  3688                           
  3689                           
  3690                           	psect	text2
  3691  052C                     __ptext2:	
  3692 ;; *************** function _write_once *****************
  3693 ;; Defined at:
  3694 ;;		line 53 in file "update_display.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  HL              1    wreg     unsigned char 
  3697 ;;  HR              1   32[BANK0 ] unsigned char 
  3698 ;;  ML              1   33[BANK0 ] unsigned char 
  3699 ;;  MR              1   34[BANK0 ] unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  HL              1   35[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3711 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;Total ram usage:        4 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    8
  3718 ;; This function calls:
  3719 ;;		_control595_delay
  3720 ;;		_write_byte
  3721 ;; This function is called by:
  3722 ;;		_update_display
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _write_once
  3728  052C                     _write_once:	
  3729                           
  3730                           ;incstack = 0
  3731                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  3732                           ;write_once@HL stored from wreg
  3733  052C  0020               	movlb	0	; select bank0
  3734  052D  00C3               	movwf	write_once@HL
  3735                           
  3736                           ;update_display.c: 55:     write_byte(HL);
  3737  052E  0843               	movf	write_once@HL,w
  3738  052F  3184  24DA  3185   	fcall	_write_byte
  3739                           
  3740                           ;update_display.c: 56:     write_byte(HR);
  3741  0532  0020               	movlb	0	; select bank0
  3742  0533  0840               	movf	write_once@HR,w
  3743  0534  3184  24DA  3185   	fcall	_write_byte
  3744                           
  3745                           ;update_display.c: 57:     write_byte(ML);
  3746  0537  0020               	movlb	0	; select bank0
  3747  0538  0841               	movf	write_once@ML,w
  3748  0539  3184  24DA  3185   	fcall	_write_byte
  3749                           
  3750                           ;update_display.c: 58:     write_byte(MR);
  3751  053C  0020               	movlb	0	; select bank0
  3752  053D  0842               	movf	write_once@MR,w
  3753  053E  3184  24DA  3185   	fcall	_write_byte
  3754                           
  3755                           ;update_display.c: 61:     LATBbits.LATB0 = PIN_LOW;
  3756  0541  0022               	movlb	2	; select bank2
  3757  0542  100D               	bcf	13,0	;volatile
  3758                           
  3759                           ;update_display.c: 62:     control595_delay();
  3760  0543  3185  25B5  3185   	fcall	_control595_delay
  3761                           
  3762                           ;update_display.c: 63:     LATBbits.LATB0 = PIN_HIGH;
  3763  0546  0022               	movlb	2	; select bank2
  3764  0547  140D               	bsf	13,0	;volatile
  3765                           
  3766                           ;update_display.c: 64:     control595_delay();
  3767  0548  3185  25B5  3185   	fcall	_control595_delay
  3768                           
  3769                           ;update_display.c: 66:     LATBbits.LATB1 = PIN_HIGH;
  3770  054B  0022               	movlb	2	; select bank2
  3771  054C  148D               	bsf	13,1	;volatile
  3772                           
  3773                           ;update_display.c: 67:  control595_delay();
  3774  054D  3185  25B5         	fcall	_control595_delay
  3775                           
  3776                           ;update_display.c: 68:     LATBbits.LATB1 = PIN_LOW;
  3777  054F  0022               	movlb	2	; select bank2
  3778  0550  108D               	bcf	13,1	;volatile
  3779  0551  0008               	return
  3780  0552                     __end_of_write_once:	
  3781                           
  3782                           	psect	text3
  3783  04DA                     __ptext3:	
  3784 ;; *************** function _write_byte *****************
  3785 ;; Defined at:
  3786 ;;		line 41 in file "update_display.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  data            1    wreg     unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  data            1   30[BANK0 ] unsigned char 
  3791 ;;  i               1   31[BANK0 ] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;Total ram usage:        4 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    7
  3808 ;; This function calls:
  3809 ;;		_control595_delay
  3810 ;; This function is called by:
  3811 ;;		_write_once
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _write_byte
  3817  04DA                     _write_byte:	
  3818                           
  3819                           ;incstack = 0
  3820                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3821                           ;write_byte@data stored from wreg
  3822  04DA  0020               	movlb	0	; select bank0
  3823  04DB  00BE               	movwf	write_byte@data
  3824                           
  3825                           ;update_display.c: 42:     u8 i;;update_display.c: 43:     for(i = 0; i < 8; i++){
  3826  04DC  01BF               	clrf	write_byte@i
  3827  04DD                     L1:	
  3828  04DD  3008               	movlw	8
  3829  04DE  023F               	subwf	write_byte@i,w
  3830  04DF  1803               	btfsc	3,0
  3831  04E0  0008               	return
  3832                           
  3833                           ;update_display.c: 44:   LATBbits.LATB5 = (data & 0x80) >> 7;
  3834  04E1  083E               	movf	write_byte@data,w
  3835  04E2  00BC               	movwf	??_write_byte
  3836  04E3  3007               	movlw	7
  3837  04E4                     u1085:	
  3838  04E4  36BC               	lsrf	??_write_byte,f
  3839  04E5  0B89               	decfsz	9,f
  3840  04E6  2CE4               	goto	u1085
  3841  04E7  083C               	movf	??_write_byte,w
  3842  04E8  3901               	andlw	1
  3843  04E9  00BD               	movwf	??_write_byte+1
  3844  04EA  0EBD               	swapf	??_write_byte+1,f
  3845  04EB  0DBD               	rlf	??_write_byte+1,f
  3846  04EC  0022               	movlb	2	; select bank2
  3847  04ED  080D               	movf	13,w	;volatile
  3848  04EE  0020               	movlb	0	; select bank0
  3849  04EF  063D               	xorwf	??_write_byte+1,w
  3850  04F0  39DF               	andlw	-33
  3851  04F1  063D               	xorwf	??_write_byte+1,w
  3852  04F2  0022               	movlb	2	; select bank2
  3853  04F3  008D               	movwf	13	;volatile
  3854                           
  3855                           ;update_display.c: 45:         LATBbits.LATB0 = PIN_LOW;
  3856  04F4  100D               	bcf	13,0	;volatile
  3857                           
  3858                           ;update_display.c: 46:   control595_delay();
  3859  04F5  3185  25B5  3184   	fcall	_control595_delay
  3860                           
  3861                           ;update_display.c: 47:         LATBbits.LATB0 = PIN_HIGH;
  3862  04F8  0022               	movlb	2	; select bank2
  3863  04F9  140D               	bsf	13,0	;volatile
  3864                           
  3865                           ;update_display.c: 48:   control595_delay();
  3866  04FA  3185  25B5  3184   	fcall	_control595_delay
  3867                           
  3868                           ;update_display.c: 49:         data <<= 1;
  3869  04FD  1003               	clrc
  3870  04FE  0020               	movlb	0	; select bank0
  3871  04FF  0DBE               	rlf	write_byte@data,f
  3872                           
  3873                           ;update_display.c: 50:     }
  3874  0500  3001               	movlw	1
  3875  0501  00BC               	movwf	??_write_byte
  3876  0502  083C               	movf	??_write_byte,w
  3877  0503  07BF               	addwf	write_byte@i,f
  3878  0504  2CDD               	goto	L1
  3879  0505                     __end_of_write_byte:	
  3880                           
  3881                           	psect	text4
  3882  05B5                     __ptext4:	
  3883 ;; *************** function _control595_delay *****************
  3884 ;; Defined at:
  3885 ;;		line 24 in file "update_display.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  times           1   27[BANK0 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        2 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    6
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_write_byte
  3910 ;;		_write_once
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _control595_delay
  3916  05B5                     _control595_delay:	
  3917                           
  3918                           ;update_display.c: 25:    u8 times = 10;
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  3922  05B5  300A               	movlw	10
  3923  05B6  0020               	movlb	0	; select bank0
  3924  05B7  00BA               	movwf	??_control595_delay
  3925  05B8  083A               	movf	??_control595_delay,w
  3926  05B9  00BB               	movwf	control595_delay@times
  3927  05BA                     l222:	
  3928                           ;update_display.c: 29:    }
  3929                           
  3930                           ;update_display.c: 26:    while(times > 0){
  3931                           
  3932                           
  3933                           ;update_display.c: 26:    while(times > 0){
  3934  05BA  083B               	movf	control595_delay@times,w
  3935  05BB  1903               	btfsc	3,2
  3936  05BC  0008               	return
  3937                           
  3938                           ;update_display.c: 27:     __nop();
  3939  05BD  0000               	nop
  3940                           
  3941                           ;update_display.c: 28:        times--;
  3942  05BE  3001               	movlw	1
  3943  05BF  0020               	movlb	0	; select bank0
  3944  05C0  02BB               	subwf	control595_delay@times,f
  3945  05C1  2DBA               	goto	l222
  3946  05C2                     __end_of_control595_delay:	
  3947                           
  3948                           	psect	text5
  3949  034F                     __ptext5:	
  3950 ;; *************** function _init_env *****************
  3951 ;; Defined at:
  3952 ;;		line 42 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  i               2   29[BANK0 ] int 
  3957 ;;  pdata           1   28[BANK0 ] PTR volatile struct .
  3958 ;;		 -> g_data(35), 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;Total ram usage:        5 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    7
  3975 ;; This function calls:
  3976 ;;		_IIC_Init
  3977 ;;		_data_getdata
  3978 ;;		_timer_init
  3979 ;; This function is called by:
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _init_env
  3986  034F                     _init_env:	
  3987                           
  3988                           ;main.c: 43:     LATC = 0;
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3992  034F  3186  2607  3183   	fcall	_data_getdata
  3993  0352  0020               	movlb	0	; select bank0
  3994  0353  00BA               	movwf	??_init_env
  3995  0354  083A               	movf	??_init_env,w
  3996  0355  00BC               	movwf	init_env@pdata
  3997                           
  3998                           ;main.c: 49: 
  3999  0356  178B               	bsf	11,7	;volatile
  4000                           
  4001                           ;main.c: 51:     TRISCbits.TRISC5 = 1;
  4002  0357  158B               	bsf	11,3	;volatile
  4003                           
  4004                           ;main.c: 57: 
  4005  0358  0021               	movlb	1	; select bank1
  4006  0359  0819               	movf	25,w	;volatile
  4007  035A  39FC               	andlw	-4
  4008  035B  3802               	iorlw	2
  4009  035C  0099               	movwf	25	;volatile
  4010                           
  4011                           ;main.c: 58: 
  4012  035D  0819               	movf	25,w	;volatile
  4013  035E  3987               	andlw	-121
  4014  035F  3850               	iorlw	80
  4015  0360  0099               	movwf	25	;volatile
  4016                           
  4017                           ;main.c: 60:         pdata->g_recv_buf[i] = 5;
  4018  0361  3185  25C2  3183   	fcall	_timer_init
  4019                           
  4020                           ;main.c: 68: 
  4021  0364  0021               	movlb	1	; select bank1
  4022  0365  1395               	bcf	21,7	;volatile
  4023                           
  4024                           ;main.c: 70: 
  4025  0366  018C               	clrf	12	;volatile
  4026                           
  4027                           ;main.c: 71: 
  4028  0367  0022               	movlb	2	; select bank2
  4029  0368  018C               	clrf	12	;volatile
  4030                           
  4031                           ;main.c: 72:     TRISCbits.TRISC0 = 1;
  4032  0369  0024               	movlb	4	; select bank4
  4033  036A  018C               	clrf	12	;volatile
  4034                           
  4035                           ;main.c: 73:     WPUCbits.WPUC0 = 1;
  4036  036B  0027               	movlb	7	; select bank7
  4037  036C  0191               	clrf	17	;volatile
  4038                           
  4039                           ;main.c: 74: 
  4040  036D  0192               	clrf	18	;volatile
  4041                           
  4042                           ;main.c: 76: 
  4043  036E  0021               	movlb	1	; select bank1
  4044  036F  018D               	clrf	13	;volatile
  4045                           
  4046                           ;main.c: 77:     IIC_Init();
  4047  0370  0022               	movlb	2	; select bank2
  4048  0371  018D               	clrf	13	;volatile
  4049                           
  4050                           ;main.c: 78: 
  4051  0372  0024               	movlb	4	; select bank4
  4052  0373  018D               	clrf	13	;volatile
  4053                           
  4054                           ;main.c: 79: 
  4055  0374  0027               	movlb	7	; select bank7
  4056  0375  0194               	clrf	20	;volatile
  4057                           
  4058                           ;main.c: 80:     PORTAbits.RA0 = 1;
  4059  0376  0195               	clrf	21	;volatile
  4060                           
  4061                           ;main.c: 82: 
  4062  0377  0021               	movlb	1	; select bank1
  4063  0378  018E               	clrf	14	;volatile
  4064                           
  4065                           ;main.c: 83: void __attribute__((picinterrupt(""))) ISR(void)
  4066  0379  0022               	movlb	2	; select bank2
  4067  037A  018E               	clrf	14	;volatile
  4068                           
  4069                           ;main.c: 84: {
  4070  037B  3001               	movlw	1
  4071  037C  0024               	movlb	4	; select bank4
  4072  037D  008E               	movwf	14	;volatile
  4073                           
  4074                           ;main.c: 85:     static u8 history_key = 0;
  4075  037E  0027               	movlb	7	; select bank7
  4076  037F  0197               	clrf	23	;volatile
  4077                           
  4078                           ;main.c: 86:     static u16 key_time_cnt = 0;
  4079  0380  0198               	clrf	24	;volatile
  4080                           
  4081                           ;main.c: 91: 
  4082  0381  0021               	movlb	1	; select bank1
  4083  0382  168E               	bsf	14,5	;volatile
  4084                           
  4085                           ;main.c: 92:     if( pdata->g_isDecoding == FALSE && ((pdata->g_flg_switch == TRUE)||(pd
      +                          ata->cnt_update >= 30)) )
  4086  0383  0024               	movlb	4	; select bank4
  4087  0384  168E               	bsf	14,5	;volatile
  4088                           
  4089                           ;main.c: 94:     {
  4090  0385  0021               	movlb	1	; select bank1
  4091  0386  148E               	bsf	14,1	;volatile
  4092                           
  4093                           ;main.c: 95: 
  4094  0387  0024               	movlb	4	; select bank4
  4095  0388  108E               	bcf	14,1	;volatile
  4096                           
  4097                           ;main.c: 96:         pdata->g_find_recv_start = FALSE;
  4098  0389  0027               	movlb	7	; select bank7
  4099  038A  1497               	bsf	23,1	;volatile
  4100                           
  4101                           ;main.c: 99:         pdata->cnt_update = 0;
  4102  038B  0020               	movlb	0	; select bank0
  4103  038C  01BD               	clrf	init_env@i
  4104  038D  01BE               	clrf	init_env@i+1
  4105  038E  083E               	movf	init_env@i+1,w
  4106  038F  3A80               	xorlw	128
  4107  0390  00BA               	movwf	??_init_env
  4108  0391  3080               	movlw	128
  4109  0392  023A               	subwf	??_init_env,w
  4110  0393  1D03               	skipz
  4111  0394  2B97               	goto	u1545
  4112  0395  3014               	movlw	20
  4113  0396  023D               	subwf	init_env@i,w
  4114  0397                     u1545:	
  4115  0397  1803               	btfsc	3,0
  4116  0398  2BB4               	goto	l72
  4117  0399                     l2086:	
  4118                           
  4119                           ;main.c: 100:         pdata->g_recv_count = CODE_P0;
  4120  0399  3005               	movlw	5
  4121  039A  0020               	movlb	0	; select bank0
  4122  039B  00BA               	movwf	??_init_env
  4123  039C  083D               	movf	init_env@i,w
  4124  039D  3E0D               	addlw	13
  4125  039E  073C               	addwf	init_env@pdata,w
  4126  039F  00BB               	movwf	??_init_env+1
  4127  03A0  083B               	movf	??_init_env+1,w
  4128  03A1  0086               	movwf	6
  4129  03A2  0187               	clrf	7
  4130  03A3  083A               	movf	??_init_env,w
  4131  03A4  0081               	movwf	1
  4132                           
  4133                           ;main.c: 101:         PORTCbits.RC2 = BPC_PWR_ON;
  4134  03A5  3001               	movlw	1
  4135  03A6  07BD               	addwf	init_env@i,f
  4136  03A7  3000               	movlw	0
  4137  03A8  3DBE               	addwfc	init_env@i+1,f
  4138  03A9  083E               	movf	init_env@i+1,w
  4139  03AA  3A80               	xorlw	128
  4140  03AB  00BA               	movwf	??_init_env
  4141  03AC  3080               	movlw	128
  4142  03AD  023A               	subwf	??_init_env,w
  4143  03AE  1D03               	skipz
  4144  03AF  2BB2               	goto	u1555
  4145  03B0  3014               	movlw	20
  4146  03B1  023D               	subwf	init_env@i,w
  4147  03B2                     u1555:	
  4148  03B2  1C03               	skipc
  4149  03B3  2B99               	goto	l2086
  4150  03B4                     l72:	
  4151                           
  4152                           ;main.c: 106:     }
  4153  03B4  0022               	movlb	2	; select bank2
  4154  03B5  110D               	bcf	13,2	;volatile
  4155                           
  4156                           ;main.c: 109:         if(pdata->g_recv_count == CODE_P0)
  4157  03B6  0020               	movlb	0	; select bank0
  4158  03B7  110E               	bcf	14,2	;volatile
  4159                           
  4160                           ;main.c: 112:         }
  4161  03B8  0021               	movlb	1	; select bank1
  4162  03B9  140E               	bsf	14,0	;volatile
  4163                           
  4164                           ;main.c: 113:         timer_start();
  4165  03BA  0024               	movlb	4	; select bank4
  4166  03BB  140E               	bsf	14,0	;volatile
  4167                           
  4168                           ;main.c: 117:         INTCONbits.IOCIF = FALSE;
  4169  03BC  3185  25CF         	fcall	_IIC_Init
  4170                           
  4171                           ;main.c: 120: 
  4172  03BE  0020               	movlb	0	; select bank0
  4173  03BF  140C               	bsf	12,0	;volatile
  4174  03C0  0008               	return
  4175  03C1                     __end_of_init_env:	
  4176                           
  4177                           	psect	text6
  4178  05C2                     __ptext6:	
  4179 ;; *************** function _timer_init *****************
  4180 ;; Defined at:
  4181 ;;		line 6 in file "timer.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    6
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_init_env
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _timer_init
  4211  05C2                     _timer_init:	
  4212                           
  4213                           ;timer.c: 9:     INTCONbits.GIE = 0b1;
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _timer_init: [wreg+status,2+status,0]
  4217  05C2  178B               	bsf	11,7	;volatile
  4218                           
  4219                           ;timer.c: 12:     INTCONbits.TMR0IE = 0b0;
  4220  05C3  128B               	bcf	11,5	;volatile
  4221                           
  4222                           ;timer.c: 17:     OPTION_REGbits.PSA = 0;
  4223  05C4  0021               	movlb	1	; select bank1
  4224  05C5  1195               	bcf	21,3	;volatile
  4225                           
  4226                           ;timer.c: 18:     OPTION_REGbits.TMR0CS = 0;
  4227  05C6  1295               	bcf	21,5	;volatile
  4228                           
  4229                           ;timer.c: 19:     OPTION_REGbits.PS = 4;
  4230  05C7  0815               	movf	21,w	;volatile
  4231  05C8  39F8               	andlw	-8
  4232  05C9  3804               	iorlw	4
  4233  05CA  0095               	movwf	21	;volatile
  4234                           
  4235                           ;timer.c: 20:     TMR0 = (217 + 14);
  4236  05CB  30E7               	movlw	231
  4237  05CC  0020               	movlb	0	; select bank0
  4238  05CD  0095               	movwf	21	;volatile
  4239  05CE  0008               	return
  4240  05CF                     __end_of_timer_init:	
  4241                           
  4242                           	psect	text7
  4243  0607                     __ptext7:	
  4244 ;; *************** function _data_getdata *****************
  4245 ;; Defined at:
  4246 ;;		line 6 in file "data.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      PTR volatile struct .
  4253 ;; Registers used:
  4254 ;;		wreg
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    6
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_init_env
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _data_getdata
  4276  0607                     _data_getdata:	
  4277                           
  4278                           ;data.c: 8:     return &g_data;
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _data_getdata: [wreg]
  4282  0607  30A0               	movlw	(low (_g_data| 0))& (0+255)
  4283  0608  0008               	return
  4284  0609                     __end_of_data_getdata:	
  4285                           
  4286                           	psect	text8
  4287  05CF                     __ptext8:	
  4288 ;; *************** function _IIC_Init *****************
  4289 ;; Defined at:
  4290 ;;		line 8 in file "myiic.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    6
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_init_env
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _IIC_Init
  4320  05CF                     _IIC_Init:	
  4321                           
  4322                           ;myiic.c: 10:     LATC3=1;
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _IIC_Init: []
  4326  05CF  0022               	movlb	2	; select bank2
  4327  05D0  158E               	bsf	14,3	;volatile
  4328                           
  4329                           ;myiic.c: 11:  LATC4=1;
  4330  05D1  160E               	bsf	14,4	;volatile
  4331                           
  4332                           ;myiic.c: 13:     ODCONC3 = 1;
  4333  05D2  0025               	movlb	5	; select bank5
  4334  05D3  158E               	bsf	14,3	;volatile
  4335                           
  4336                           ;myiic.c: 14:     ODCONC4 = 1;
  4337  05D4  160E               	bsf	14,4	;volatile
  4338                           
  4339                           ;myiic.c: 16:     TRISC4 = 0;
  4340  05D5  0021               	movlb	1	; select bank1
  4341  05D6  120E               	bcf	14,4	;volatile
  4342                           
  4343                           ;myiic.c: 17:     TRISC3 = 0;
  4344  05D7  118E               	bcf	14,3	;volatile
  4345                           
  4346                           ;myiic.c: 19:  WPUC4 = 1;
  4347  05D8  0024               	movlb	4	; select bank4
  4348  05D9  160E               	bsf	14,4	;volatile
  4349                           
  4350                           ;myiic.c: 20:     WPUC3 = 1;
  4351  05DA  158E               	bsf	14,3	;volatile
  4352  05DB  0008               	return
  4353  05DC                     __end_of_IIC_Init:	
  4354                           
  4355                           	psect	intentry
  4356  0004                     __pintentry:	
  4357 ;; *************** function _ISR *****************
  4358 ;; Defined at:
  4359 ;;		line 123 in file "main.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  pdata           1   25[BANK0 ] PTR volatile struct .
  4364 ;;		 -> g_data(35), 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:        3 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    5
  4381 ;; This function calls:
  4382 ;;		___lwmod
  4383 ;;		_receive_decode
  4384 ;;		_timer_reset
  4385 ;;		_timer_start
  4386 ;;		_update_time
  4387 ;;		i1_data_getdata
  4388 ;; This function is called by:
  4389 ;;		Interrupt level 1
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393  0004                     _ISR:	
  4394                           
  4395                           ;incstack = 0
  4396  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4397                           
  4398                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4399  0005  3180               	pagesel	$
  4400                           
  4401                           ;main.c: 125:         if(pdata->g_isDecoding == TRUE && ( pdata->g_find_recv_start == FA
      +                          LSE|| pdata->g_recv_count >= CODE_P1 ) );main.c: 126: ;main.c: 127:         {
  4402  0006  3186  2609  3180   	fcall	i1_data_getdata
  4403  0009  0020               	movlb	0	; select bank0
  4404  000A  00B7               	movwf	??_ISR
  4405  000B  0837               	movf	??_ISR,w
  4406  000C  00B9               	movwf	ISR@pdata
  4407                           
  4408                           ;main.c: 132: 
  4409  000D  0A39               	incf	ISR@pdata,w
  4410  000E  0086               	movwf	6
  4411  000F  0187               	clrf	7
  4412  0010  0801               	movf	1,w
  4413  0011  1D03               	btfss	3,2
  4414  0012  284B               	goto	i1l2284
  4415  0013  0839               	movf	ISR@pdata,w
  4416  0014  0086               	movwf	6
  4417  0015  0187               	clrf	7
  4418  0016  0301               	decf	1,w
  4419  0017  1903               	btfsc	3,2
  4420  0018  2828               	goto	i1l2264
  4421  0019  0839               	movf	ISR@pdata,w
  4422  001A  3E21               	addlw	33
  4423  001B  0086               	movwf	6
  4424  001C  0187               	clrf	7
  4425  001D  3F40               	moviw [0]fsr1
  4426  001E  00B7               	movwf	??_ISR
  4427  001F  3F41               	moviw [1]fsr1
  4428  0020  00B8               	movwf	??_ISR+1
  4429  0021  3000               	movlw	0
  4430  0022  0238               	subwf	??_ISR+1,w
  4431  0023  301E               	movlw	30
  4432  0024  1903               	skipnz
  4433  0025  0237               	subwf	??_ISR,w
  4434  0026  1C03               	skipc
  4435  0027  284B               	goto	i1l2284
  4436  0028                     i1l2264:	
  4437                           
  4438                           ;main.c: 134:         {;main.c: 136:             history_key |= (PORTCbits.RC5 == PIN_HI
      +                          GH)? 0x01 : 0x00;
  4439  0028  0839               	movf	ISR@pdata,w
  4440  0029  3E02               	addlw	2
  4441  002A  0086               	movwf	6
  4442  002B  0187               	clrf	7
  4443  002C  0181               	clrf	1
  4444                           
  4445                           ;main.c: 137: 
  4446  002D  3001               	movlw	1
  4447  002E  00B7               	movwf	??_ISR
  4448  002F  0A39               	incf	ISR@pdata,w
  4449  0030  0086               	movwf	6
  4450  0031  0187               	clrf	7
  4451  0032  0837               	movf	??_ISR,w
  4452  0033  0081               	movwf	1
  4453                           
  4454                           ;main.c: 138:             if(((0x03) == (history_key & (0x0f))) && (FALSE == pdata->g_fl
      +                          g_switch))
  4455  0034  0839               	movf	ISR@pdata,w
  4456  0035  0086               	movwf	6
  4457  0036  0187               	clrf	7
  4458  0037  0181               	clrf	1
  4459                           
  4460                           ;main.c: 139:             {
  4461  0038  0839               	movf	ISR@pdata,w
  4462  0039  3E21               	addlw	33
  4463  003A  0086               	movwf	6
  4464  003B  0187               	clrf	7
  4465  003C  3000               	movlw	0
  4466  003D  3FC0               	movwi [0]fsr1
  4467  003E  3FC1               	movwi [1]fsr1
  4468                           
  4469                           ;main.c: 140:                 pdata->g_flg_switch = TRUE;
  4470  003F  0839               	movf	ISR@pdata,w
  4471  0040  3E0B               	addlw	11
  4472  0041  0086               	movwf	6
  4473  0042  0187               	clrf	7
  4474  0043  3000               	movlw	0
  4475  0044  3FC0               	movwi [0]fsr1
  4476  0045  3FC1               	movwi [1]fsr1
  4477                           
  4478                           ;main.c: 141:             }
  4479  0046  110E               	bcf	14,2	;volatile
  4480                           
  4481                           ;main.c: 143: 
  4482  0047  100B               	bcf	11,0	;volatile
  4483                           
  4484                           ;main.c: 144:         timer_reset();
  4485  0048  0027               	movlb	7	; select bank7
  4486  0049  1099               	bcf	25,1	;volatile
  4487                           
  4488                           ;main.c: 145:         return;
  4489  004A  28D1               	goto	i1l85
  4490  004B                     i1l2284:	
  4491                           ;main.c: 147:     return;
  4492                           
  4493                           ;main.c: 146:     }
  4494                           
  4495  004B  0020               	movlb	0	; select bank0
  4496  004C  0A39               	incf	ISR@pdata,w
  4497  004D  0086               	movwf	6
  4498  004E  0187               	clrf	7
  4499  004F  0301               	decf	1,w
  4500  0050  1D03               	btfss	3,2
  4501  0051  2875               	goto	i1l87
  4502  0052  0027               	movlb	7	; select bank7
  4503  0053  1C99               	btfss	25,1	;volatile
  4504  0054  2875               	goto	i1l87
  4505  0055  0020               	movlb	0	; select bank0
  4506  0056  0839               	movf	ISR@pdata,w
  4507  0057  3E02               	addlw	2
  4508  0058  0086               	movwf	6
  4509  0059  0187               	clrf	7
  4510  005A  0301               	decf	1,w
  4511  005B  1D03               	btfss	3,2
  4512  005C  2875               	goto	i1l87
  4513                           
  4514                           ;main.c: 148: };main.c: 149: 
  4515  005D  0839               	movf	ISR@pdata,w
  4516  005E  3E0B               	addlw	11
  4517  005F  0086               	movwf	6
  4518  0060  0187               	clrf	7
  4519  0061  0016               	moviw fsr1++
  4520  0062  0401               	iorwf	1,w
  4521  0063  1D03               	btfss	3,2
  4522  0064  2871               	goto	i1l2294
  4523                           
  4524                           ;main.c: 150: void main(void);main.c: 151: {
  4525  0065  3001               	movlw	1
  4526  0066  00B7               	movwf	??_ISR
  4527  0067  3000               	movlw	0
  4528  0068  00B8               	movwf	??_ISR+1
  4529  0069  0839               	movf	ISR@pdata,w
  4530  006A  3E0B               	addlw	11
  4531  006B  0086               	movwf	6
  4532  006C  0187               	clrf	7
  4533  006D  0837               	movf	??_ISR,w
  4534  006E  3FC0               	movwi [0]fsr1
  4535  006F  0838               	movf	??_ISR+1,w
  4536  0070  3FC1               	movwi [1]fsr1
  4537  0071                     i1l2294:	
  4538                           ;main.c: 152: 
  4539                           
  4540                           
  4541                           ;main.c: 153:     init_env();
  4542  0071  3186  2603  3180   	fcall	_timer_start
  4543                           
  4544                           ;main.c: 154: 
  4545  0074  287D               	goto	i1l86
  4546  0075                     i1l87:	
  4547                           ;main.c: 155:     update_display();
  4548                           
  4549  0075  180B               	btfsc	11,0	;volatile
  4550  0076  287A               	goto	i1l92
  4551  0077  0027               	movlb	7	; select bank7
  4552  0078  1C99               	btfss	25,1	;volatile
  4553  0079  287D               	goto	i1l86
  4554  007A                     i1l92:	
  4555                           
  4556                           ;main.c: 156: ;main.c: 157: 
  4557  007A  100B               	bcf	11,0	;volatile
  4558                           
  4559                           ;main.c: 158: 
  4560  007B  0027               	movlb	7	; select bank7
  4561  007C  1099               	bcf	25,1	;volatile
  4562  007D                     i1l86:	
  4563                           ;main.c: 159:     return;
  4564                           
  4565  007D  1D0B               	btfss	11,2	;volatile
  4566  007E  28D1               	goto	i1l85
  4567  007F  0020               	movlb	0	; select bank0
  4568  0080  0A39               	incf	ISR@pdata,w
  4569  0081  0086               	movwf	6
  4570  0082  0187               	clrf	7
  4571  0083  0301               	decf	1,w
  4572  0084  1D03               	btfss	3,2
  4573  0085  2898               	goto	i1l94
  4574  0086  0839               	movf	ISR@pdata,w
  4575  0087  3E02               	addlw	2
  4576  0088  0086               	movwf	6
  4577  0089  0187               	clrf	7
  4578  008A  0801               	movf	1,w
  4579  008B  1903               	btfsc	3,2
  4580  008C  2895               	goto	i1l2304
  4581  008D  0839               	movf	ISR@pdata,w
  4582  008E  3E0B               	addlw	11
  4583  008F  0086               	movwf	6
  4584  0090  0187               	clrf	7
  4585  0091  0016               	moviw fsr1++
  4586  0092  0401               	iorwf	1,w
  4587  0093  1903               	btfsc	3,2
  4588  0094  2898               	goto	i1l94
  4589  0095                     i1l2304:	
  4590  0095  3180  20E8  3180   	fcall	_receive_decode
  4591  0098                     i1l94:	
  4592  0098  3183  23C1  3180   	fcall	_update_time
  4593  009B  300A               	movlw	10
  4594  009C  00F0               	movwf	___lwmod@divisor
  4595  009D  3000               	movlw	0
  4596  009E  00F1               	movwf	___lwmod@divisor+1
  4597  009F  0020               	movlb	0	; select bank0
  4598  00A0  084A               	movf	ISR@key_time_cnt+1,w
  4599  00A1  00B8               	movwf	??_ISR+1
  4600  00A2  0849               	movf	ISR@key_time_cnt,w
  4601  00A3  00B7               	movwf	??_ISR
  4602  00A4  0AC9               	incf	ISR@key_time_cnt,f
  4603  00A5  1903               	skipnz
  4604  00A6  0ACA               	incf	ISR@key_time_cnt+1,f
  4605  00A7  0837               	movf	??_ISR,w
  4606  00A8  00F2               	movwf	___lwmod@dividend
  4607  00A9  0838               	movf	??_ISR+1,w
  4608  00AA  00F3               	movwf	___lwmod@dividend+1
  4609  00AB  3184  24AE  3180   	fcall	___lwmod
  4610  00AE  0870               	movf	?___lwmod,w
  4611  00AF  0471               	iorwf	?___lwmod+1,w
  4612  00B0  1D03               	btfss	3,2
  4613  00B1  28CF               	goto	i1l2318
  4614  00B2  1003               	clrc
  4615  00B3  0020               	movlb	0	; select bank0
  4616  00B4  0DD2               	rlf	ISR@history_key,f
  4617  00B5  0E0E               	swapf	14,w	;volatile
  4618  00B6  0C89               	rrf	9,f
  4619  00B7  3901               	andlw	1
  4620  00B8  00B7               	movwf	??_ISR
  4621  00B9  0837               	movf	??_ISR,w
  4622  00BA  04D2               	iorwf	ISR@history_key,f
  4623  00BB  300F               	movlw	15
  4624  00BC  0552               	andwf	ISR@history_key,w
  4625  00BD  00B7               	movwf	??_ISR
  4626  00BE  3003               	movlw	3
  4627  00BF  0637               	xorwf	??_ISR,w
  4628  00C0  1D03               	btfss	3,2
  4629  00C1  28CF               	goto	i1l2318
  4630  00C2  0839               	movf	ISR@pdata,w
  4631  00C3  0086               	movwf	6
  4632  00C4  0187               	clrf	7
  4633  00C5  0801               	movf	1,w
  4634  00C6  1D03               	btfss	3,2
  4635  00C7  28CF               	goto	i1l2318
  4636  00C8  3001               	movlw	1
  4637  00C9  00B7               	movwf	??_ISR
  4638  00CA  0839               	movf	ISR@pdata,w
  4639  00CB  0086               	movwf	6
  4640  00CC  0187               	clrf	7
  4641  00CD  0837               	movf	??_ISR,w
  4642  00CE  0081               	movwf	1
  4643  00CF                     i1l2318:	
  4644  00CF  3185  25FE         	fcall	_timer_reset
  4645  00D1                     i1l85:	
  4646  00D1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4647  00D2  0009               	retfie
  4648  00D3                     __end_of_ISR:	
  4649                           
  4650                           	psect	text10
  4651  03C1                     __ptext10:	
  4652 ;; *************** function _update_time *****************
  4653 ;; Defined at:
  4654 ;;		line 13 in file "update_time.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  pdata           1    0[BANK0 ] PTR volatile struct .
  4659 ;;		 -> g_data(35), 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    4
  4676 ;; This function calls:
  4677 ;;		i1_data_getdata
  4678 ;;		i1_update_display
  4679 ;; This function is called by:
  4680 ;;		_ISR
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _update_time
  4686  03C1                     _update_time:	
  4687                           
  4688                           ;update_time.c: 14:     G_DATA *pdata = data_getdata();
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _update_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4692  03C1  3186  2609  3183   	fcall	i1_data_getdata
  4693  03C4  00FD               	movwf	??_update_time
  4694  03C5  087D               	movf	??_update_time,w
  4695  03C6  0020               	movlb	0	; select bank0
  4696  03C7  00A0               	movwf	update_time@pdata
  4697                           
  4698                           ;update_time.c: 15:     pdata->g_time_10ms++;
  4699  03C8  3001               	movlw	1
  4700  03C9  00FD               	movwf	??_update_time
  4701  03CA  0820               	movf	update_time@pdata,w
  4702  03CB  3E06               	addlw	6
  4703  03CC  0086               	movwf	6
  4704  03CD  0187               	clrf	7
  4705  03CE  087D               	movf	??_update_time,w
  4706  03CF  0781               	addwf	1,f
  4707                           
  4708                           ;update_time.c: 23:     if(pdata->g_time_10ms == 100)
  4709  03D0  0820               	movf	update_time@pdata,w
  4710  03D1  3E06               	addlw	6
  4711  03D2  0086               	movwf	6
  4712  03D3  0187               	clrf	7
  4713  03D4  3064               	movlw	100
  4714  03D5  0601               	xorwf	1,w
  4715  03D6  1D03               	btfss	3,2
  4716  03D7  0008               	return
  4717                           
  4718                           ;update_time.c: 24:     {;update_time.c: 25:         pdata->g_time_10ms = 0;
  4719  03D8  0820               	movf	update_time@pdata,w
  4720  03D9  3E06               	addlw	6
  4721  03DA  0086               	movwf	6
  4722  03DB  0187               	clrf	7
  4723  03DC  0181               	clrf	1
  4724                           
  4725                           ;update_time.c: 26:         pdata->g_time_s++;
  4726  03DD  3001               	movlw	1
  4727  03DE  00FD               	movwf	??_update_time
  4728  03DF  0820               	movf	update_time@pdata,w
  4729  03E0  3E05               	addlw	5
  4730  03E1  0086               	movwf	6
  4731  03E2  0187               	clrf	7
  4732  03E3  087D               	movf	??_update_time,w
  4733  03E4  0781               	addwf	1,f
  4734                           
  4735                           ;update_time.c: 28:         if(pdata->g_time_s == 60)
  4736  03E5  0820               	movf	update_time@pdata,w
  4737  03E6  3E05               	addlw	5
  4738  03E7  0086               	movwf	6
  4739  03E8  0187               	clrf	7
  4740  03E9  303C               	movlw	60
  4741  03EA  0601               	xorwf	1,w
  4742  03EB  1D03               	btfss	3,2
  4743  03EC  0008               	return
  4744                           
  4745                           ;update_time.c: 29:         {;update_time.c: 30:             pdata->g_time_m++;
  4746  03ED  3001               	movlw	1
  4747  03EE  00FD               	movwf	??_update_time
  4748  03EF  0820               	movf	update_time@pdata,w
  4749  03F0  3E04               	addlw	4
  4750  03F1  0086               	movwf	6
  4751  03F2  0187               	clrf	7
  4752  03F3  087D               	movf	??_update_time,w
  4753  03F4  0781               	addwf	1,f
  4754                           
  4755                           ;update_time.c: 31:             pdata->g_time_s = 0;
  4756  03F5  0820               	movf	update_time@pdata,w
  4757  03F6  3E05               	addlw	5
  4758  03F7  0086               	movwf	6
  4759  03F8  0187               	clrf	7
  4760  03F9  0181               	clrf	1
  4761                           
  4762                           ;update_time.c: 32:             pdata->cnt_update++;
  4763  03FA  0820               	movf	update_time@pdata,w
  4764  03FB  3E21               	addlw	33
  4765  03FC  0086               	movwf	6
  4766  03FD  0187               	clrf	7
  4767  03FE  3001               	movlw	1
  4768  03FF  0781               	addwf	1,f
  4769  0400  3141               	addfsr 1,1
  4770  0401  1803               	skipnc
  4771  0402  0A81               	incf	1,f
  4772                           
  4773                           ;update_time.c: 33:             if(pdata->g_time_m == 60)
  4774  0403  0820               	movf	update_time@pdata,w
  4775  0404  3E04               	addlw	4
  4776  0405  0086               	movwf	6
  4777  0406  0187               	clrf	7
  4778  0407  303C               	movlw	60
  4779  0408  0601               	xorwf	1,w
  4780  0409  1D03               	btfss	3,2
  4781  040A  2C25               	goto	i1l2214
  4782                           
  4783                           ;update_time.c: 34:             {;update_time.c: 35:                 pdata->g_time_h++;
  4784  040B  3001               	movlw	1
  4785  040C  00FD               	movwf	??_update_time
  4786  040D  0820               	movf	update_time@pdata,w
  4787  040E  3E03               	addlw	3
  4788  040F  0086               	movwf	6
  4789  0410  0187               	clrf	7
  4790  0411  087D               	movf	??_update_time,w
  4791  0412  0781               	addwf	1,f
  4792                           
  4793                           ;update_time.c: 36:                 pdata->g_time_m = 0;
  4794  0413  0820               	movf	update_time@pdata,w
  4795  0414  3E04               	addlw	4
  4796  0415  0086               	movwf	6
  4797  0416  0187               	clrf	7
  4798  0417  0181               	clrf	1
  4799                           
  4800                           ;update_time.c: 38:                 if(pdata->g_time_h == 24)
  4801  0418  0820               	movf	update_time@pdata,w
  4802  0419  3E03               	addlw	3
  4803  041A  0086               	movwf	6
  4804  041B  0187               	clrf	7
  4805  041C  3018               	movlw	24
  4806  041D  0601               	xorwf	1,w
  4807  041E  1D03               	btfss	3,2
  4808  041F  2C25               	goto	i1l2214
  4809                           
  4810                           ;update_time.c: 39:                 {;update_time.c: 40:                     pdata->g_ti
      +                          me_h = 0;
  4811  0420  0820               	movf	update_time@pdata,w
  4812  0421  3E03               	addlw	3
  4813  0422  0086               	movwf	6
  4814  0423  0187               	clrf	7
  4815  0424  0181               	clrf	1
  4816  0425                     i1l2214:	
  4817                           ;update_time.c: 42:             }
  4818                           
  4819                           ;update_time.c: 41:                 }
  4820                           
  4821                           
  4822                           ;update_time.c: 44:             update_display();
  4823  0425  3185  2595         	fcall	i1_update_display
  4824                           
  4825                           ;update_time.c: 46:     }
  4826                           
  4827                           ;update_time.c: 45:         }
  4828  0427  0008               	return
  4829  0428                     __end_of_update_time:	
  4830                           ;update_time.c: 47:     return;
  4831                           
  4832                           
  4833                           	psect	text11
  4834  0603                     __ptext11:	
  4835 ;; *************** function _timer_start *****************
  4836 ;; Defined at:
  4837 ;;		line 27 in file "timer.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, pclath, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    1
  4858 ;; This function calls:
  4859 ;;		_timer_reset
  4860 ;; This function is called by:
  4861 ;;		_ISR
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _timer_start
  4867  0603                     _timer_start:	
  4868                           
  4869                           ;timer.c: 29:     timer_reset();
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _timer_start: [wreg+status,2+status,0+pclath+cstack]
  4873  0603  3185  25FE         	fcall	_timer_reset
  4874                           
  4875                           ;timer.c: 30:     INTCONbits.TMR0IE = 0b0;
  4876  0605  128B               	bcf	11,5	;volatile
  4877  0606  0008               	return
  4878  0607                     __end_of_timer_start:	
  4879                           
  4880                           	psect	text12
  4881  05FE                     __ptext12:	
  4882 ;; *************** function _timer_reset *****************
  4883 ;; Defined at:
  4884 ;;		line 22 in file "timer.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_ISR
  4908 ;;		_timer_start
  4909 ;;		_timer_stop
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _timer_reset
  4915  05FE                     _timer_reset:	
  4916                           
  4917                           ;timer.c: 24:     INTCONbits.TMR0IF = 0;
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _timer_reset: [wreg]
  4921  05FE  110B               	bcf	11,2	;volatile
  4922                           
  4923                           ;timer.c: 25:     TMR0 = (217 + 14);
  4924  05FF  30E7               	movlw	231
  4925  0600  0020               	movlb	0	; select bank0
  4926  0601  0095               	movwf	21	;volatile
  4927  0602  0008               	return
  4928  0603                     __end_of_timer_reset:	
  4929                           
  4930                           	psect	text13
  4931  00E8                     __ptext13:	
  4932 ;; *************** function _receive_decode *****************
  4933 ;; Defined at:
  4934 ;;		line 104 in file "receive_decode.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  i               2   19[BANK0 ] int 
  4939 ;;  last_time_m     2   17[BANK0 ] unsigned short 
  4940 ;;  last_time_h     2   15[BANK0 ] unsigned short 
  4941 ;;  last_time_s     2   13[BANK0 ] unsigned short 
  4942 ;;  pdata           1   22[BANK0 ] PTR volatile struct .
  4943 ;;		 -> g_data(35), 
  4944 ;;  read_value      1   21[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:       12 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    4
  4961 ;; This function calls:
  4962 ;;		_check_err
  4963 ;;		_test_get_number
  4964 ;;		_times2number
  4965 ;;		i1_data_getdata
  4966 ;;		i1_update_display
  4967 ;; This function is called by:
  4968 ;;		_ISR
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _receive_decode
  4974  00E8                     _receive_decode:	
  4975                           
  4976                           ;receive_decode.c: 105:     G_DATA *pdata = data_getdata();
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _receive_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4980  00E8  3186  2609  3180   	fcall	i1_data_getdata
  4981  00EB  0020               	movlb	0	; select bank0
  4982  00EC  00AB               	movwf	??_receive_decode
  4983  00ED  082B               	movf	??_receive_decode,w
  4984  00EE  00B6               	movwf	receive_decode@pdata
  4985                           
  4986                           ;receive_decode.c: 107:     static u8 cnt_low = 0;;receive_decode.c: 110:     if(pdata->
      +                          g_find_recv_start == FALSE && PORTCbits.RC1 == PIN_HIGH)
  4987  00EF  0836               	movf	receive_decode@pdata,w
  4988  00F0  3E02               	addlw	2
  4989  00F1  0086               	movwf	6
  4990  00F2  0187               	clrf	7
  4991  00F3  0801               	movf	1,w
  4992  00F4  1903               	btfsc	3,2
  4993  00F5  1C8E               	btfss	14,1	;volatile
  4994  00F6  2906               	goto	i1l176
  4995                           
  4996                           ;receive_decode.c: 111:     {;receive_decode.c: 112:         pdata->g_high_level_times =
      +                           0;
  4997  00F7  0836               	movf	receive_decode@pdata,w
  4998  00F8  3E07               	addlw	7
  4999  00F9  0086               	movwf	6
  5000  00FA  0187               	clrf	7
  5001  00FB  3000               	movlw	0
  5002  00FC  3FC0               	movwi [0]fsr1
  5003  00FD  3FC1               	movwi [1]fsr1
  5004                           
  5005                           ;receive_decode.c: 113:         pdata->g_all_level_times = 0;
  5006  00FE  0836               	movf	receive_decode@pdata,w
  5007  00FF  3E09               	addlw	9
  5008  0100  0086               	movwf	6
  5009  0101  0187               	clrf	7
  5010  0102  3000               	movlw	0
  5011  0103  3FC0               	movwi [0]fsr1
  5012  0104  3FC1               	movwi [1]fsr1
  5013                           
  5014                           ;receive_decode.c: 114:         return;
  5015  0105  0008               	return
  5016  0106                     i1l176:	
  5017                           ;receive_decode.c: 115:     }
  5018                           
  5019                           
  5020                           ;receive_decode.c: 119:     if(PORTCbits.RC1 == PIN_HIGH)
  5021  0106  1C8E               	btfss	14,1	;volatile
  5022  0107  2913               	goto	i1l2114
  5023                           
  5024                           ;receive_decode.c: 120:     {;receive_decode.c: 121:         pdata->g_high_level_times++
      +                          ;
  5025  0108  0836               	movf	receive_decode@pdata,w
  5026  0109  3E07               	addlw	7
  5027  010A  0086               	movwf	6
  5028  010B  0187               	clrf	7
  5029  010C  3001               	movlw	1
  5030  010D  0781               	addwf	1,f
  5031  010E  3141               	addfsr 1,1
  5032  010F  1803               	skipnc
  5033  0110  0A81               	incf	1,f
  5034                           
  5035                           ;receive_decode.c: 123:         cnt_low = 0;
  5036  0111  01D1               	clrf	receive_decode@cnt_low
  5037                           
  5038                           ;receive_decode.c: 124:     }
  5039  0112  2917               	goto	i1l2116
  5040  0113                     i1l2114:	
  5041                           ;receive_decode.c: 125:     else
  5042                           
  5043                           
  5044                           ;receive_decode.c: 126:     {;receive_decode.c: 127:         cnt_low++;
  5045  0113  3001               	movlw	1
  5046  0114  00AB               	movwf	??_receive_decode
  5047  0115  082B               	movf	??_receive_decode,w
  5048  0116  07D1               	addwf	receive_decode@cnt_low,f
  5049  0117                     i1l2116:	
  5050                           ;receive_decode.c: 128:     }
  5051                           
  5052                           
  5053                           ;receive_decode.c: 130:     pdata->g_all_level_times++;
  5054  0117  0836               	movf	receive_decode@pdata,w
  5055  0118  3E09               	addlw	9
  5056  0119  0086               	movwf	6
  5057  011A  0187               	clrf	7
  5058  011B  3001               	movlw	1
  5059  011C  0781               	addwf	1,f
  5060  011D  3141               	addfsr 1,1
  5061  011E  1803               	skipnc
  5062  011F  0A81               	incf	1,f
  5063                           
  5064                           ;receive_decode.c: 134:     if((pdata->g_all_level_times < 100) && (FALSE == pdata->g_fi
      +                          nd_recv_start))
  5065  0120  0836               	movf	receive_decode@pdata,w
  5066  0121  3E09               	addlw	9
  5067  0122  0086               	movwf	6
  5068  0123  0187               	clrf	7
  5069  0124  3F40               	moviw [0]fsr1
  5070  0125  00AB               	movwf	??_receive_decode
  5071  0126  3F41               	moviw [1]fsr1
  5072  0127  00AC               	movwf	??_receive_decode+1
  5073  0128  3000               	movlw	0
  5074  0129  022C               	subwf	??_receive_decode+1,w
  5075  012A  3064               	movlw	100
  5076  012B  1903               	skipnz
  5077  012C  022B               	subwf	??_receive_decode,w
  5078  012D  1803               	skipnc
  5079  012E  2936               	goto	i1l2126
  5080  012F  0836               	movf	receive_decode@pdata,w
  5081  0130  3E02               	addlw	2
  5082  0131  0086               	movwf	6
  5083  0132  0187               	clrf	7
  5084  0133  0801               	movf	1,w
  5085  0134  1903               	btfsc	3,2
  5086  0135  0008               	return
  5087  0136                     i1l2126:	
  5088                           ;receive_decode.c: 138:     else if( (cnt_low < 5) && (TRUE == pdata->g_find_recv_start)
      +                           )
  5089                           
  5090                           ;receive_decode.c: 137:     }
  5091                           
  5092                           ;receive_decode.c: 135:     {;receive_decode.c: 136:         return;
  5093                           
  5094  0136  3005               	movlw	5
  5095  0137  0251               	subwf	receive_decode@cnt_low,w
  5096  0138  1803               	skipnc
  5097  0139  2941               	goto	i1l2132
  5098  013A  0836               	movf	receive_decode@pdata,w
  5099  013B  3E02               	addlw	2
  5100  013C  0086               	movwf	6
  5101  013D  0187               	clrf	7
  5102  013E  0301               	decf	1,w
  5103  013F  1903               	btfsc	3,2
  5104  0140  0008               	return
  5105  0141                     i1l2132:	
  5106                           ;receive_decode.c: 141:     }
  5107                           
  5108                           ;receive_decode.c: 139:     {;receive_decode.c: 140:         return ;
  5109                           
  5110                           
  5111                           ;receive_decode.c: 143:     u8 read_value = times2number(pdata->g_high_level_times);
  5112  0141  0836               	movf	receive_decode@pdata,w
  5113  0142  3E07               	addlw	7
  5114  0143  0086               	movwf	6
  5115  0144  0187               	clrf	7
  5116  0145  3F40               	moviw [0]fsr1
  5117  0146  00F0               	movwf	times2number@high_level_times
  5118  0147  3F41               	moviw [1]fsr1
  5119  0148  00F1               	movwf	times2number@high_level_times+1
  5120  0149  3184  2428  3180   	fcall	_times2number
  5121  014C  0020               	movlb	0	; select bank0
  5122  014D  00AB               	movwf	??_receive_decode
  5123  014E  082B               	movf	??_receive_decode,w
  5124  014F  00B5               	movwf	receive_decode@read_value
  5125                           
  5126                           ;receive_decode.c: 145:     test_get_number(read_value);
  5127  0150  0835               	movf	receive_decode@read_value,w
  5128  0151  3184  2473  3180   	fcall	_test_get_number
  5129                           
  5130                           ;receive_decode.c: 147:     cnt_low = 0;
  5131  0154  0020               	movlb	0	; select bank0
  5132  0155  01D1               	clrf	receive_decode@cnt_low
  5133                           
  5134                           ;receive_decode.c: 148:     pdata->g_all_level_times = 0;
  5135  0156  0836               	movf	receive_decode@pdata,w
  5136  0157  3E09               	addlw	9
  5137  0158  0086               	movwf	6
  5138  0159  0187               	clrf	7
  5139  015A  3000               	movlw	0
  5140  015B  3FC0               	movwi [0]fsr1
  5141  015C  3FC1               	movwi [1]fsr1
  5142                           
  5143                           ;receive_decode.c: 149:     pdata->g_high_level_times = 0;
  5144  015D  0836               	movf	receive_decode@pdata,w
  5145  015E  3E07               	addlw	7
  5146  015F  0086               	movwf	6
  5147  0160  0187               	clrf	7
  5148  0161  3000               	movlw	0
  5149  0162  3FC0               	movwi [0]fsr1
  5150  0163  3FC1               	movwi [1]fsr1
  5151                           
  5152                           ;receive_decode.c: 151:     if(FALSE == pdata->g_find_recv_start)
  5153  0164  0836               	movf	receive_decode@pdata,w
  5154  0165  3E02               	addlw	2
  5155  0166  0086               	movwf	6
  5156  0167  0187               	clrf	7
  5157  0168  0801               	movf	1,w
  5158  0169  1D03               	btfss	3,2
  5159  016A  297D               	goto	i1l2152
  5160                           
  5161                           ;receive_decode.c: 152:     {;receive_decode.c: 154:         if(read_value == 5)
  5162  016B  3005               	movlw	5
  5163  016C  0635               	xorwf	receive_decode@read_value,w
  5164  016D  1D03               	btfss	3,2
  5165  016E  0008               	return
  5166                           
  5167                           ;receive_decode.c: 155:         {;receive_decode.c: 157:             pdata->g_find_recv_
      +                          start = TRUE;
  5168  016F  3001               	movlw	1
  5169  0170  00AB               	movwf	??_receive_decode
  5170  0171  0836               	movf	receive_decode@pdata,w
  5171  0172  3E02               	addlw	2
  5172  0173  0086               	movwf	6
  5173  0174  0187               	clrf	7
  5174  0175  082B               	movf	??_receive_decode,w
  5175  0176  0081               	movwf	1
  5176                           
  5177                           ;receive_decode.c: 158:             pdata->g_recv_buf[CODE_P0] = 0;
  5178  0177  0836               	movf	receive_decode@pdata,w
  5179  0178  3E0D               	addlw	13
  5180  0179  0086               	movwf	6
  5181  017A  0187               	clrf	7
  5182  017B  0181               	clrf	1
  5183                           
  5184                           ;receive_decode.c: 161:             return;
  5185  017C  0008               	return
  5186  017D                     i1l2152:	
  5187                           ;receive_decode.c: 168:     }
  5188                           
  5189                           ;receive_decode.c: 167:         }
  5190                           
  5191                           ;receive_decode.c: 164:         {;receive_decode.c: 166:             return;
  5192                           
  5193                           ;receive_decode.c: 163:         else
  5194                           
  5195                           ;receive_decode.c: 162:         }
  5196                           
  5197                           
  5198                           ;receive_decode.c: 171:     if(pdata->g_find_recv_start == FALSE || (read_value == 4))
  5199  017D  0836               	movf	receive_decode@pdata,w
  5200  017E  3E02               	addlw	2
  5201  017F  0086               	movwf	6
  5202  0180  0187               	clrf	7
  5203  0181  0801               	movf	1,w
  5204  0182  1903               	btfsc	3,2
  5205  0183  0008               	return
  5206  0184  3004               	movlw	4
  5207  0185  0635               	xorwf	receive_decode@read_value,w
  5208  0186  1903               	btfsc	3,2
  5209  0187  0008               	return
  5210                           
  5211                           ;receive_decode.c: 179:     pdata->g_recv_buf[pdata->g_recv_count++] = read_value;
  5212                           
  5213                           ;receive_decode.c: 176:     }
  5214                           
  5215                           ;receive_decode.c: 172:     {;receive_decode.c: 175:         return;
  5216  0188  0835               	movf	receive_decode@read_value,w
  5217  0189  00AB               	movwf	??_receive_decode
  5218  018A  0836               	movf	receive_decode@pdata,w
  5219  018B  3E0B               	addlw	11
  5220  018C  0086               	movwf	6
  5221  018D  0187               	clrf	7
  5222  018E  0801               	movf	1,w
  5223  018F  3E0D               	addlw	13
  5224  0190  0736               	addwf	receive_decode@pdata,w
  5225  0191  00AC               	movwf	??_receive_decode+1
  5226  0192  082C               	movf	??_receive_decode+1,w
  5227  0193  0086               	movwf	6
  5228  0194  0187               	clrf	7
  5229  0195  082B               	movf	??_receive_decode,w
  5230  0196  0081               	movwf	1
  5231  0197  0836               	movf	receive_decode@pdata,w
  5232  0198  3E0B               	addlw	11
  5233  0199  0086               	movwf	6
  5234  019A  0187               	clrf	7
  5235  019B  3001               	movlw	1
  5236  019C  0781               	addwf	1,f
  5237  019D  3141               	addfsr 1,1
  5238  019E  1803               	skipnc
  5239  019F  0A81               	incf	1,f
  5240                           
  5241                           ;receive_decode.c: 180:     if(pdata->g_recv_count <= CODE_P3)
  5242  01A0  0836               	movf	receive_decode@pdata,w
  5243  01A1  3E0B               	addlw	11
  5244  01A2  0086               	movwf	6
  5245  01A3  0187               	clrf	7
  5246  01A4  3F40               	moviw [0]fsr1
  5247  01A5  00AB               	movwf	??_receive_decode
  5248  01A6  3F41               	moviw [1]fsr1
  5249  01A7  00AC               	movwf	??_receive_decode+1
  5250  01A8  3000               	movlw	0
  5251  01A9  022C               	subwf	??_receive_decode+1,w
  5252  01AA  300B               	movlw	11
  5253  01AB  1903               	skipnz
  5254  01AC  022B               	subwf	??_receive_decode,w
  5255  01AD  1C03               	btfss	3,0
  5256  01AE  0008               	return
  5257                           
  5258                           ;receive_decode.c: 186:     if(pdata->g_recv_buf[CODE_P1] > 2)
  5259                           
  5260                           ;receive_decode.c: 183:     }
  5261                           
  5262                           ;receive_decode.c: 181:     {;receive_decode.c: 182:         return;
  5263  01AF  0836               	movf	receive_decode@pdata,w
  5264  01B0  3E0E               	addlw	14
  5265  01B1  0086               	movwf	6
  5266  01B2  0187               	clrf	7
  5267  01B3  3003               	movlw	3
  5268  01B4  0201               	subwf	1,w
  5269  01B5  1C03               	skipc
  5270  01B6  29C8               	goto	i1l2170
  5271                           
  5272                           ;receive_decode.c: 187:     {;receive_decode.c: 188:         pdata->g_find_recv_start = 
      +                          FALSE;
  5273  01B7  0836               	movf	receive_decode@pdata,w
  5274  01B8  3E02               	addlw	2
  5275  01B9  0086               	movwf	6
  5276  01BA  0187               	clrf	7
  5277  01BB  0181               	clrf	1
  5278                           
  5279                           ;receive_decode.c: 189:         pdata->g_isDecoding = 0;
  5280  01BC  0A36               	incf	receive_decode@pdata,w
  5281  01BD  0086               	movwf	6
  5282  01BE  0187               	clrf	7
  5283  01BF  0181               	clrf	1
  5284                           
  5285                           ;receive_decode.c: 190:         pdata->g_recv_count = 0;
  5286  01C0  0836               	movf	receive_decode@pdata,w
  5287  01C1  3E0B               	addlw	11
  5288  01C2  0086               	movwf	6
  5289  01C3  0187               	clrf	7
  5290  01C4  3000               	movlw	0
  5291  01C5  3FC0               	movwi [0]fsr1
  5292  01C6  3FC1               	movwi [1]fsr1
  5293                           
  5294                           ;receive_decode.c: 191:         return;
  5295  01C7  0008               	return
  5296  01C8                     i1l2170:	
  5297                           ;receive_decode.c: 192:     }
  5298                           
  5299                           
  5300                           ;receive_decode.c: 194:     u16 last_time_h = pdata->g_time_h;
  5301  01C8  0836               	movf	receive_decode@pdata,w
  5302  01C9  3E03               	addlw	3
  5303  01CA  0086               	movwf	6
  5304  01CB  0187               	clrf	7
  5305  01CC  0801               	movf	1,w
  5306  01CD  00AB               	movwf	??_receive_decode
  5307  01CE  01AC               	clrf	??_receive_decode+1
  5308  01CF  082B               	movf	??_receive_decode,w
  5309  01D0  00AF               	movwf	receive_decode@last_time_h
  5310  01D1  082C               	movf	??_receive_decode+1,w
  5311  01D2  00B0               	movwf	receive_decode@last_time_h+1
  5312                           
  5313                           ;receive_decode.c: 195:     u16 last_time_m = pdata->g_time_m;
  5314  01D3  0836               	movf	receive_decode@pdata,w
  5315  01D4  3E04               	addlw	4
  5316  01D5  0086               	movwf	6
  5317  01D6  0187               	clrf	7
  5318  01D7  0801               	movf	1,w
  5319  01D8  00AB               	movwf	??_receive_decode
  5320  01D9  01AC               	clrf	??_receive_decode+1
  5321  01DA  082B               	movf	??_receive_decode,w
  5322  01DB  00B1               	movwf	receive_decode@last_time_m
  5323  01DC  082C               	movf	??_receive_decode+1,w
  5324  01DD  00B2               	movwf	receive_decode@last_time_m+1
  5325                           
  5326                           ;receive_decode.c: 196:     u16 last_time_s = pdata->g_time_s;
  5327  01DE  0836               	movf	receive_decode@pdata,w
  5328  01DF  3E05               	addlw	5
  5329  01E0  0086               	movwf	6
  5330  01E1  0187               	clrf	7
  5331  01E2  0801               	movf	1,w
  5332  01E3  00AB               	movwf	??_receive_decode
  5333  01E4  01AC               	clrf	??_receive_decode+1
  5334  01E5  082B               	movf	??_receive_decode,w
  5335  01E6  00AD               	movwf	receive_decode@last_time_s
  5336  01E7  082C               	movf	??_receive_decode+1,w
  5337  01E8  00AE               	movwf	receive_decode@last_time_s+1
  5338                           
  5339                           ;receive_decode.c: 199:         if(check_err())
  5340                           
  5341                           ;receive_decode.c: 198:     do{
  5342  01E9  3182  225B  3180   	fcall	_check_err
  5343  01EC  0870               	movf	?_check_err,w
  5344  01ED  0471               	iorwf	?_check_err+1,w
  5345  01EE  1903               	btfsc	3,2
  5346  01EF  2A0A               	goto	i1l2176
  5347                           
  5348                           ;receive_decode.c: 200:         {;receive_decode.c: 202:             pdata->g_time_h = l
      +                          ast_time_h;
  5349  01F0  0020               	movlb	0	; select bank0
  5350  01F1  082F               	movf	receive_decode@last_time_h,w
  5351  01F2  00AB               	movwf	??_receive_decode
  5352  01F3  0836               	movf	receive_decode@pdata,w
  5353  01F4  3E03               	addlw	3
  5354  01F5  0086               	movwf	6
  5355  01F6  0187               	clrf	7
  5356  01F7  082B               	movf	??_receive_decode,w
  5357  01F8  0081               	movwf	1
  5358                           
  5359                           ;receive_decode.c: 203:             pdata->g_time_m = last_time_m;
  5360  01F9  0831               	movf	receive_decode@last_time_m,w
  5361  01FA  00AB               	movwf	??_receive_decode
  5362  01FB  0836               	movf	receive_decode@pdata,w
  5363  01FC  3E04               	addlw	4
  5364  01FD  0086               	movwf	6
  5365  01FE  0187               	clrf	7
  5366  01FF  082B               	movf	??_receive_decode,w
  5367  0200  0081               	movwf	1
  5368                           
  5369                           ;receive_decode.c: 204:             pdata->g_time_s = last_time_s;
  5370  0201  082D               	movf	receive_decode@last_time_s,w
  5371  0202  00AB               	movwf	??_receive_decode
  5372  0203  0836               	movf	receive_decode@pdata,w
  5373  0204  3E05               	addlw	5
  5374  0205  0086               	movwf	6
  5375  0206  0187               	clrf	7
  5376  0207  082B               	movf	??_receive_decode,w
  5377  0208  0081               	movwf	1
  5378                           
  5379                           ;receive_decode.c: 205:             break;
  5380  0209  2A2C               	goto	i1l2182
  5381  020A                     i1l2176:	
  5382                           ;receive_decode.c: 206:         }
  5383                           
  5384                           
  5385                           ;receive_decode.c: 209:         if(last_time_h != pdata->g_time_h || last_time_m != pdat
      +                          a->g_time_m)
  5386  020A  0020               	movlb	0	; select bank0
  5387  020B  0836               	movf	receive_decode@pdata,w
  5388  020C  3E03               	addlw	3
  5389  020D  0086               	movwf	6
  5390  020E  0187               	clrf	7
  5391  020F  0801               	movf	1,w
  5392  0210  00AB               	movwf	??_receive_decode
  5393  0211  01AC               	clrf	??_receive_decode+1
  5394  0212  0830               	movf	receive_decode@last_time_h+1,w
  5395  0213  062C               	xorwf	??_receive_decode+1,w
  5396  0214  1D03               	skipz
  5397  0215  2A18               	goto	u170_25
  5398  0216  082F               	movf	receive_decode@last_time_h,w
  5399  0217  062B               	xorwf	??_receive_decode,w
  5400  0218                     u170_25:	
  5401  0218  1D03               	skipz
  5402  0219  2A29               	goto	i1l2180
  5403  021A  0836               	movf	receive_decode@pdata,w
  5404  021B  3E04               	addlw	4
  5405  021C  0086               	movwf	6
  5406  021D  0187               	clrf	7
  5407  021E  0801               	movf	1,w
  5408  021F  00AB               	movwf	??_receive_decode
  5409  0220  01AC               	clrf	??_receive_decode+1
  5410  0221  0832               	movf	receive_decode@last_time_m+1,w
  5411  0222  062C               	xorwf	??_receive_decode+1,w
  5412  0223  1D03               	skipz
  5413  0224  2A27               	goto	u171_25
  5414  0225  0831               	movf	receive_decode@last_time_m,w
  5415  0226  062B               	xorwf	??_receive_decode,w
  5416  0227                     u171_25:	
  5417  0227  1903               	skipnz
  5418  0228  2A2C               	goto	i1l2182
  5419  0229                     i1l2180:	
  5420                           
  5421                           ;receive_decode.c: 210:         {;receive_decode.c: 211:             update_display();
  5422  0229  3185  2595  3180   	fcall	i1_update_display
  5423  022C                     i1l2182:	
  5424                           ;receive_decode.c: 213:     }while(0);
  5425                           
  5426                           ;receive_decode.c: 212:         }
  5427                           
  5428                           
  5429                           ;receive_decode.c: 217:     pdata->g_find_recv_start = FALSE;
  5430  022C  0020               	movlb	0	; select bank0
  5431  022D  0836               	movf	receive_decode@pdata,w
  5432  022E  3E02               	addlw	2
  5433  022F  0086               	movwf	6
  5434  0230  0187               	clrf	7
  5435  0231  0181               	clrf	1
  5436                           
  5437                           ;receive_decode.c: 219:     pdata->g_isDecoding = FALSE;
  5438  0232  0A36               	incf	receive_decode@pdata,w
  5439  0233  0086               	movwf	6
  5440  0234  0187               	clrf	7
  5441  0235  0181               	clrf	1
  5442                           
  5443                           ;receive_decode.c: 220:     pdata->g_recv_count = CODE_P0;
  5444  0236  0836               	movf	receive_decode@pdata,w
  5445  0237  3E0B               	addlw	11
  5446  0238  0086               	movwf	6
  5447  0239  0187               	clrf	7
  5448  023A  3000               	movlw	0
  5449  023B  3FC0               	movwi [0]fsr1
  5450  023C  3FC1               	movwi [1]fsr1
  5451                           
  5452                           ;receive_decode.c: 221:     for(int i = 0;i < 20; i++)
  5453  023D  01B3               	clrf	receive_decode@i
  5454  023E  01B4               	clrf	receive_decode@i+1
  5455  023F                     L2:	
  5456  023F  0834               	movf	receive_decode@i+1,w
  5457  0240  3A80               	xorlw	128
  5458  0241  00AB               	movwf	??_receive_decode
  5459  0242  3080               	movlw	128
  5460  0243  022B               	subwf	??_receive_decode,w
  5461  0244  1D03               	skipz
  5462  0245  2A48               	goto	u172_25
  5463  0246  3014               	movlw	20
  5464  0247  0233               	subwf	receive_decode@i,w
  5465  0248                     u172_25:	
  5466  0248  1803               	btfsc	3,0
  5467  0249  0008               	return
  5468                           
  5469                           ;receive_decode.c: 222:     {;receive_decode.c: 223:         pdata->g_recv_buf[i] = 5;
  5470  024A  3005               	movlw	5
  5471  024B  0020               	movlb	0	; select bank0
  5472  024C  00AB               	movwf	??_receive_decode
  5473  024D  0833               	movf	receive_decode@i,w
  5474  024E  3E0D               	addlw	13
  5475  024F  0736               	addwf	receive_decode@pdata,w
  5476  0250  00AC               	movwf	??_receive_decode+1
  5477  0251  082C               	movf	??_receive_decode+1,w
  5478  0252  0086               	movwf	6
  5479  0253  0187               	clrf	7
  5480  0254  082B               	movf	??_receive_decode,w
  5481  0255  0081               	movwf	1
  5482                           
  5483                           ;receive_decode.c: 224:     }
  5484  0256  3001               	movlw	1
  5485  0257  07B3               	addwf	receive_decode@i,f
  5486  0258  3000               	movlw	0
  5487  0259  3DB4               	addwfc	receive_decode@i+1,f
  5488  025A  2A3F               	goto	L2
  5489  025B                     __end_of_receive_decode:	
  5490                           ;receive_decode.c: 225:     return;
  5491                           
  5492                           
  5493                           	psect	text14
  5494  0595                     __ptext14:	
  5495 ;; *************** function i1_update_display *****************
  5496 ;; Defined at:
  5497 ;;		line 71 in file "update_display.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;Total ram usage:        3 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    3
  5518 ;; This function calls:
  5519 ;;		i1_write_once
  5520 ;; This function is called by:
  5521 ;;		_receive_decode
  5522 ;;		_update_time
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function i1_update_display
  5528  0595                     i1_update_display:	
  5529                           
  5530                           ;update_display.c: 84:     write_once(segmcode[4], segmcode[3], segmcode[2], segmcode[1]
      +                          );
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in i1_update_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5534  0595  30EA               	movlw	low ((_segmcode+3)| (0+32768))
  5535  0596  0084               	movwf	4
  5536  0597  3085               	movlw	high ((_segmcode+3)| (0+32768))
  5537  0598  0085               	movwf	5
  5538  0599  0800               	movf	0,w	;code access
  5539  059A  00FA               	movwf	??i1_update_display
  5540  059B  087A               	movf	??i1_update_display,w
  5541  059C  00F6               	movwf	i1write_once@HR
  5542  059D  30E9               	movlw	low ((_segmcode+2)| (0+32768))
  5543  059E  0084               	movwf	4
  5544  059F  3085               	movlw	high ((_segmcode+2)| (0+32768))
  5545  05A0  0085               	movwf	5
  5546  05A1  0800               	movf	0,w	;code access
  5547  05A2  00FB               	movwf	??i1_update_display+1
  5548  05A3  087B               	movf	??i1_update_display+1,w
  5549  05A4  00F7               	movwf	i1write_once@ML
  5550  05A5  30E8               	movlw	low ((_segmcode+1)| (0+32768))
  5551  05A6  0084               	movwf	4
  5552  05A7  3085               	movlw	high ((_segmcode+1)| (0+32768))
  5553  05A8  0085               	movwf	5
  5554  05A9  0800               	movf	0,w	;code access
  5555  05AA  00FC               	movwf	??i1_update_display+2
  5556  05AB  087C               	movf	??i1_update_display+2,w
  5557  05AC  00F8               	movwf	i1write_once@MR
  5558  05AD  30EB               	movlw	low ((_segmcode+4)| (0+32768))
  5559  05AE  0084               	movwf	4
  5560  05AF  3085               	movlw	high ((_segmcode+4)| (0+32768))
  5561  05B0  0085               	movwf	5
  5562  05B1  0800               	movf	0,w	;code access
  5563  05B2  3185  2552         	fcall	i1_write_once
  5564  05B4  0008               	return
  5565  05B5                     __end_ofi1_update_display:	
  5566                           ;update_display.c: 85:     return;
  5567                           
  5568                           
  5569                           	psect	text15
  5570  0552                     __ptext15:	
  5571 ;; *************** function i1_write_once *****************
  5572 ;; Defined at:
  5573 ;;		line 53 in file "update_display.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  HL              1    wreg     unsigned char 
  5576 ;;  HR              1    6[COMMON] unsigned char 
  5577 ;;  ML              1    7[COMMON] unsigned char 
  5578 ;;  MR              1    8[COMMON] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  HL              1    9[COMMON] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5590 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    2
  5597 ;; This function calls:
  5598 ;;		i1_control595_delay
  5599 ;;		i1_write_byte
  5600 ;; This function is called by:
  5601 ;;		i1_update_display
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function i1_write_once
  5607  0552                     i1_write_once:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in i1_write_once: [wreg+status,2+status,0+pclath+cstack]
  5611                           ;i1write_once@HL stored from wreg
  5612  0552  00F9               	movwf	i1write_once@HL
  5613                           
  5614                           ;update_display.c: 55:     write_byte(HL);
  5615  0553  0879               	movf	i1write_once@HL,w
  5616  0554  3185  2505  3185   	fcall	i1_write_byte
  5617                           
  5618                           ;update_display.c: 56:     write_byte(HR);
  5619  0557  0876               	movf	i1write_once@HR,w
  5620  0558  3185  2505  3185   	fcall	i1_write_byte
  5621                           
  5622                           ;update_display.c: 57:     write_byte(ML);
  5623  055B  0877               	movf	i1write_once@ML,w
  5624  055C  3185  2505  3185   	fcall	i1_write_byte
  5625                           
  5626                           ;update_display.c: 58:     write_byte(MR);
  5627  055F  0878               	movf	i1write_once@MR,w
  5628  0560  3185  2505  3185   	fcall	i1_write_byte
  5629                           
  5630                           ;update_display.c: 61:     LATBbits.LATB0 = PIN_LOW;
  5631  0563  0022               	movlb	2	; select bank2
  5632  0564  100D               	bcf	13,0	;volatile
  5633                           
  5634                           ;update_display.c: 62:     control595_delay();
  5635  0565  3185  25DC  3185   	fcall	i1_control595_delay
  5636                           
  5637                           ;update_display.c: 63:     LATBbits.LATB0 = PIN_HIGH;
  5638  0568  0022               	movlb	2	; select bank2
  5639  0569  140D               	bsf	13,0	;volatile
  5640                           
  5641                           ;update_display.c: 64:     control595_delay();
  5642  056A  3185  25DC  3185   	fcall	i1_control595_delay
  5643                           
  5644                           ;update_display.c: 66:     LATBbits.LATB1 = PIN_HIGH;
  5645  056D  0022               	movlb	2	; select bank2
  5646  056E  148D               	bsf	13,1	;volatile
  5647                           
  5648                           ;update_display.c: 67:  control595_delay();
  5649  056F  3185  25DC         	fcall	i1_control595_delay
  5650                           
  5651                           ;update_display.c: 68:     LATBbits.LATB1 = PIN_LOW;
  5652  0571  0022               	movlb	2	; select bank2
  5653  0572  108D               	bcf	13,1	;volatile
  5654  0573  0008               	return
  5655  0574                     __end_ofi1_write_once:	
  5656                           
  5657                           	psect	text16
  5658  0505                     __ptext16:	
  5659 ;; *************** function i1_write_byte *****************
  5660 ;; Defined at:
  5661 ;;		line 41 in file "update_display.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  data            1    wreg     unsigned char 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  data            1    4[COMMON] unsigned char 
  5666 ;;  write_byte      1    5[COMMON] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        4 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    1
  5683 ;; This function calls:
  5684 ;;		i1_control595_delay
  5685 ;; This function is called by:
  5686 ;;		i1_write_once
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function i1_write_byte
  5692  0505                     i1_write_byte:	
  5693                           
  5694                           ;incstack = 0
  5695                           ; Regs used in i1_write_byte: [wreg+status,2+status,0+pclath+cstack]
  5696                           ;i1write_byte@data stored from wreg
  5697  0505  00F4               	movwf	i1write_byte@data
  5698                           
  5699                           ;update_display.c: 42:     u8 i;;update_display.c: 43:     for(i = 0; i < 8; i++){
  5700  0506  01F5               	clrf	i1write_byte@i
  5701  0507                     L3:	
  5702  0507  3008               	movlw	8
  5703  0508  0275               	subwf	i1write_byte@i,w
  5704  0509  1803               	btfsc	3,0
  5705  050A  0008               	return
  5706                           
  5707                           ;update_display.c: 44:   LATBbits.LATB5 = (data & 0x80) >> 7;
  5708  050B  0874               	movf	i1write_byte@data,w
  5709  050C  00F2               	movwf	??i1_write_byte
  5710  050D  3007               	movlw	7
  5711  050E                     u105_25:	
  5712  050E  36F2               	lsrf	??i1_write_byte,f
  5713  050F  0B89               	decfsz	9,f
  5714  0510  2D0E               	goto	u105_25
  5715  0511  0872               	movf	??i1_write_byte,w
  5716  0512  3901               	andlw	1
  5717  0513  00F3               	movwf	??i1_write_byte+1
  5718  0514  0EF3               	swapf	??i1_write_byte+1,f
  5719  0515  0DF3               	rlf	??i1_write_byte+1,f
  5720  0516  0022               	movlb	2	; select bank2
  5721  0517  080D               	movf	13,w	;volatile
  5722  0518  0673               	xorwf	??i1_write_byte+1,w
  5723  0519  39DF               	andlw	-33
  5724  051A  0673               	xorwf	??i1_write_byte+1,w
  5725  051B  008D               	movwf	13	;volatile
  5726                           
  5727                           ;update_display.c: 45:         LATBbits.LATB0 = PIN_LOW;
  5728  051C  100D               	bcf	13,0	;volatile
  5729                           
  5730                           ;update_display.c: 46:   control595_delay();
  5731  051D  3185  25DC  3185   	fcall	i1_control595_delay
  5732                           
  5733                           ;update_display.c: 47:         LATBbits.LATB0 = PIN_HIGH;
  5734  0520  0022               	movlb	2	; select bank2
  5735  0521  140D               	bsf	13,0	;volatile
  5736                           
  5737                           ;update_display.c: 48:   control595_delay();
  5738  0522  3185  25DC  3185   	fcall	i1_control595_delay
  5739                           
  5740                           ;update_display.c: 49:         data <<= 1;
  5741  0525  1003               	clrc
  5742  0526  0DF4               	rlf	i1write_byte@data,f
  5743                           
  5744                           ;update_display.c: 50:     }
  5745  0527  3001               	movlw	1
  5746  0528  00F2               	movwf	??i1_write_byte
  5747  0529  0872               	movf	??i1_write_byte,w
  5748  052A  07F5               	addwf	i1write_byte@i,f
  5749  052B  2D07               	goto	L3
  5750  052C                     __end_ofi1_write_byte:	
  5751                           
  5752                           	psect	text17
  5753  05DC                     __ptext17:	
  5754 ;; *************** function i1_control595_delay *****************
  5755 ;; Defined at:
  5756 ;;		line 24 in file "update_display.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  control595_d    1    1[COMMON] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		i1_write_byte
  5780 ;;		i1_write_once
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function i1_control595_delay
  5786  05DC                     i1_control595_delay:	
  5787                           
  5788                           ;update_display.c: 25:    u8 times = 10;
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in i1_control595_delay: [wreg+status,2+status,0]
  5792  05DC  300A               	movlw	10
  5793  05DD  00F0               	movwf	??i1_control595_delay
  5794  05DE  0870               	movf	??i1_control595_delay,w
  5795  05DF  00F1               	movwf	i1control595_delay@times
  5796  05E0                     i1l222:	
  5797                           ;update_display.c: 29:    }
  5798                           
  5799                           ;update_display.c: 26:    while(times > 0){
  5800                           
  5801                           
  5802                           ;update_display.c: 26:    while(times > 0){
  5803  05E0  0871               	movf	i1control595_delay@times,w
  5804  05E1  1903               	btfsc	3,2
  5805  05E2  0008               	return
  5806                           
  5807                           ;update_display.c: 27:     __nop();
  5808  05E3  0000               	nop
  5809                           
  5810                           ;update_display.c: 28:        times--;
  5811  05E4  3001               	movlw	1
  5812  05E5  02F1               	subwf	i1control595_delay@times,f
  5813  05E6  2DE0               	goto	i1l222
  5814  05E7                     __end_ofi1_control595_delay:	
  5815                           
  5816                           	psect	text18
  5817  0428                     __ptext18:	
  5818 ;; *************** function _times2number *****************
  5819 ;; Defined at:
  5820 ;;		line 16 in file "receive_decode.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  high_level_t    2    0[COMMON] unsigned short 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      unsigned char 
  5827 ;; Registers used:
  5828 ;;		wreg
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_receive_decode
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _times2number
  5849  0428                     _times2number:	
  5850                           
  5851                           ;receive_decode.c: 17:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _times2number: [wreg]
  5855  0428  3000               	movlw	0
  5856  0429  0271               	subwf	times2number@high_level_times+1,w
  5857  042A  3005               	movlw	5
  5858  042B  1903               	skipnz
  5859  042C  0270               	subwf	times2number@high_level_times,w
  5860  042D  1C03               	skipc
  5861  042E  2C38               	goto	i1l1776
  5862  042F  3000               	movlw	0
  5863  0430  0271               	subwf	times2number@high_level_times+1,w
  5864  0431  300F               	movlw	15
  5865  0432  1903               	skipnz
  5866  0433  0270               	subwf	times2number@high_level_times,w
  5867  0434  1803               	skipnc
  5868  0435  2C38               	goto	i1l1776
  5869                           
  5870                           ;receive_decode.c: 19:         return 0;
  5871  0436  3000               	movlw	0
  5872                           
  5873                           ;receive_decode.c: 20:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  5874  0437  0008               	return
  5875  0438                     i1l1776:	
  5876  0438  3000               	movlw	0
  5877  0439  0271               	subwf	times2number@high_level_times+1,w
  5878  043A  300F               	movlw	15
  5879  043B  1903               	skipnz
  5880  043C  0270               	subwf	times2number@high_level_times,w
  5881  043D  1C03               	skipc
  5882  043E  2C48               	goto	i1l1786
  5883  043F  3000               	movlw	0
  5884  0440  0271               	subwf	times2number@high_level_times+1,w
  5885  0441  3019               	movlw	25
  5886  0442  1903               	skipnz
  5887  0443  0270               	subwf	times2number@high_level_times,w
  5888  0444  1803               	skipnc
  5889  0445  2C48               	goto	i1l1786
  5890                           
  5891                           ;receive_decode.c: 22:         return 1;
  5892  0446  3001               	movlw	1
  5893                           
  5894                           ;receive_decode.c: 23:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  5895  0447  0008               	return
  5896  0448                     i1l1786:	
  5897  0448  3000               	movlw	0
  5898  0449  0271               	subwf	times2number@high_level_times+1,w
  5899  044A  3019               	movlw	25
  5900  044B  1903               	skipnz
  5901  044C  0270               	subwf	times2number@high_level_times,w
  5902  044D  1C03               	skipc
  5903  044E  2C58               	goto	i1l1796
  5904  044F  3000               	movlw	0
  5905  0450  0271               	subwf	times2number@high_level_times+1,w
  5906  0451  3023               	movlw	35
  5907  0452  1903               	skipnz
  5908  0453  0270               	subwf	times2number@high_level_times,w
  5909  0454  1803               	skipnc
  5910  0455  2C58               	goto	i1l1796
  5911                           
  5912                           ;receive_decode.c: 25:         return 2;
  5913  0456  3002               	movlw	2
  5914                           
  5915                           ;receive_decode.c: 26:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  5916  0457  0008               	return
  5917  0458                     i1l1796:	
  5918  0458  3000               	movlw	0
  5919  0459  0271               	subwf	times2number@high_level_times+1,w
  5920  045A  3023               	movlw	35
  5921  045B  1903               	skipnz
  5922  045C  0270               	subwf	times2number@high_level_times,w
  5923  045D  1C03               	skipc
  5924  045E  2C68               	goto	i1l1806
  5925  045F  3000               	movlw	0
  5926  0460  0271               	subwf	times2number@high_level_times+1,w
  5927  0461  302D               	movlw	45
  5928  0462  1903               	skipnz
  5929  0463  0270               	subwf	times2number@high_level_times,w
  5930  0464  1803               	skipnc
  5931  0465  2C68               	goto	i1l1806
  5932                           
  5933                           ;receive_decode.c: 28:         return 3;
  5934  0466  3003               	movlw	3
  5935                           
  5936                           ;receive_decode.c: 29:     }else if(high_level_times >= 40 + 5){
  5937  0467  0008               	return
  5938  0468                     i1l1806:	
  5939  0468  3000               	movlw	0
  5940  0469  0271               	subwf	times2number@high_level_times+1,w
  5941  046A  302D               	movlw	45
  5942  046B  1903               	skipnz
  5943  046C  0270               	subwf	times2number@high_level_times,w
  5944  046D  1C03               	skipc
  5945  046E  2C71               	goto	i1l1814
  5946                           
  5947                           ;receive_decode.c: 31:         return 4;
  5948  046F  3004               	movlw	4
  5949                           
  5950                           ;receive_decode.c: 32:     }else{
  5951  0470  0008               	return
  5952  0471                     i1l1814:	
  5953                           
  5954                           ;receive_decode.c: 34:         return 5;
  5955  0471  3005               	movlw	5
  5956                           
  5957                           ;receive_decode.c: 35:     }
  5958  0472  0008               	return
  5959  0473                     __end_of_times2number:	
  5960                           
  5961                           	psect	text19
  5962  0473                     __ptext19:	
  5963 ;; *************** function _test_get_number *****************
  5964 ;; Defined at:
  5965 ;;		line 39 in file "receive_decode.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  get_num         1    wreg     unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  get_num         1    0[COMMON] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_receive_decode
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function _test_get_number
  5994  0473                     _test_get_number:	
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  5998                           ;test_get_number@get_num stored from wreg
  5999  0473  00F0               	movwf	test_get_number@get_num
  6000                           
  6001                           ;receive_decode.c: 40:     if(get_num == 0){
  6002  0474  0870               	movf	test_get_number@get_num,w
  6003  0475  1D03               	btfss	3,2
  6004  0476  2C7D               	goto	i1l1822
  6005                           
  6006                           ;receive_decode.c: 41:         LATAbits.LATA2 = 1;
  6007  0477  0022               	movlb	2	; select bank2
  6008  0478  150C               	bsf	12,2	;volatile
  6009                           
  6010                           ;receive_decode.c: 42:         LATAbits.LATA3 = 0;
  6011  0479  118C               	bcf	12,3	;volatile
  6012                           
  6013                           ;receive_decode.c: 43:         LATAbits.LATA4 = 0;
  6014  047A  120C               	bcf	12,4	;volatile
  6015                           
  6016                           ;receive_decode.c: 44:         LATAbits.LATA5 = 0;
  6017  047B  128C               	bcf	12,5	;volatile
  6018                           
  6019                           ;receive_decode.c: 45:     }else if(get_num == 1){
  6020  047C  0008               	return
  6021  047D                     i1l1822:	
  6022  047D  0370               	decf	test_get_number@get_num,w
  6023  047E  1D03               	btfss	3,2
  6024  047F  2C86               	goto	i1l1826
  6025                           
  6026                           ;receive_decode.c: 46:         LATAbits.LATA2 = 0;
  6027  0480  0022               	movlb	2	; select bank2
  6028  0481  110C               	bcf	12,2	;volatile
  6029                           
  6030                           ;receive_decode.c: 47:         LATAbits.LATA3 = 1;
  6031  0482  158C               	bsf	12,3	;volatile
  6032                           
  6033                           ;receive_decode.c: 48:         LATAbits.LATA4 = 0;
  6034  0483  120C               	bcf	12,4	;volatile
  6035                           
  6036                           ;receive_decode.c: 49:         LATAbits.LATA5 = 0;
  6037  0484  128C               	bcf	12,5	;volatile
  6038                           
  6039                           ;receive_decode.c: 50:     }else if(get_num == 2){
  6040  0485  0008               	return
  6041  0486                     i1l1826:	
  6042  0486  3002               	movlw	2
  6043  0487  0670               	xorwf	test_get_number@get_num,w
  6044  0488  1D03               	btfss	3,2
  6045  0489  2C90               	goto	i1l1830
  6046                           
  6047                           ;receive_decode.c: 51:         LATAbits.LATA2 = 0;
  6048  048A  0022               	movlb	2	; select bank2
  6049  048B  110C               	bcf	12,2	;volatile
  6050                           
  6051                           ;receive_decode.c: 52:         LATAbits.LATA3 = 0;
  6052  048C  118C               	bcf	12,3	;volatile
  6053                           
  6054                           ;receive_decode.c: 53:         LATAbits.LATA4 = 1;
  6055  048D  160C               	bsf	12,4	;volatile
  6056                           
  6057                           ;receive_decode.c: 54:         LATAbits.LATA5 = 0;
  6058  048E  128C               	bcf	12,5	;volatile
  6059                           
  6060                           ;receive_decode.c: 55:     }else if(get_num == 3){
  6061  048F  0008               	return
  6062  0490                     i1l1830:	
  6063  0490  3003               	movlw	3
  6064  0491  0670               	xorwf	test_get_number@get_num,w
  6065  0492  1D03               	btfss	3,2
  6066  0493  2C9A               	goto	i1l1834
  6067                           
  6068                           ;receive_decode.c: 56:         LATAbits.LATA2 = 0;
  6069  0494  0022               	movlb	2	; select bank2
  6070  0495  110C               	bcf	12,2	;volatile
  6071                           
  6072                           ;receive_decode.c: 57:         LATAbits.LATA3 = 0;
  6073  0496  118C               	bcf	12,3	;volatile
  6074                           
  6075                           ;receive_decode.c: 58:         LATAbits.LATA4 = 0;
  6076  0497  120C               	bcf	12,4	;volatile
  6077                           
  6078                           ;receive_decode.c: 59:         LATAbits.LATA5 = 1;
  6079  0498  168C               	bsf	12,5	;volatile
  6080                           
  6081                           ;receive_decode.c: 60:     }else if(get_num == 4){
  6082  0499  0008               	return
  6083  049A                     i1l1834:	
  6084  049A  3004               	movlw	4
  6085  049B  0670               	xorwf	test_get_number@get_num,w
  6086  049C  1D03               	btfss	3,2
  6087  049D  2CA4               	goto	i1l1838
  6088                           
  6089                           ;receive_decode.c: 61:         LATAbits.LATA2 = 1;
  6090  049E  0022               	movlb	2	; select bank2
  6091  049F  150C               	bsf	12,2	;volatile
  6092                           
  6093                           ;receive_decode.c: 62:         LATAbits.LATA3 = 1;
  6094  04A0  158C               	bsf	12,3	;volatile
  6095                           
  6096                           ;receive_decode.c: 63:         LATAbits.LATA4 = 1;
  6097  04A1  160C               	bsf	12,4	;volatile
  6098                           
  6099                           ;receive_decode.c: 64:         LATAbits.LATA5 = 1;
  6100  04A2  168C               	bsf	12,5	;volatile
  6101                           
  6102                           ;receive_decode.c: 65:     }else if(get_num == 5){
  6103  04A3  0008               	return
  6104  04A4                     i1l1838:	
  6105  04A4  3005               	movlw	5
  6106  04A5  0670               	xorwf	test_get_number@get_num,w
  6107  04A6  1D03               	btfss	3,2
  6108  04A7  0008               	return
  6109                           
  6110                           ;receive_decode.c: 66:         LATAbits.LATA2 = 0;
  6111  04A8  0022               	movlb	2	; select bank2
  6112  04A9  110C               	bcf	12,2	;volatile
  6113                           
  6114                           ;receive_decode.c: 67:         LATAbits.LATA3 = 0;
  6115  04AA  118C               	bcf	12,3	;volatile
  6116                           
  6117                           ;receive_decode.c: 68:         LATAbits.LATA4 = 0;
  6118  04AB  120C               	bcf	12,4	;volatile
  6119                           
  6120                           ;receive_decode.c: 69:         LATAbits.LATA5 = 0;
  6121  04AC  128C               	bcf	12,5	;volatile
  6122                           
  6123                           ;receive_decode.c: 70:     }
  6124  04AD  0008               	return
  6125  04AE                     __end_of_test_get_number:	
  6126                           
  6127                           	psect	text20
  6128  025B                     __ptext20:	
  6129 ;; *************** function _check_err *****************
  6130 ;; Defined at:
  6131 ;;		line 74 in file "receive_decode.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  i               1    8[BANK0 ] unsigned char 
  6136 ;;  pdata           1   10[BANK0 ] PTR volatile struct .
  6137 ;;		 -> g_data(35), 
  6138 ;;  check           1    9[BANK0 ] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  2    0[COMMON] int 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;Total ram usage:       16 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    1
  6155 ;; This function calls:
  6156 ;;		i1_data_getdata
  6157 ;; This function is called by:
  6158 ;;		_receive_decode
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _check_err
  6164  025B                     _check_err:	
  6165                           
  6166                           ;receive_decode.c: 76:     G_DATA *pdata = data_getdata();
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in _check_err: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6170  025B  3186  2609  3182   	fcall	i1_data_getdata
  6171  025E  00F2               	movwf	??_check_err
  6172  025F  0872               	movf	??_check_err,w
  6173  0260  0020               	movlb	0	; select bank0
  6174  0261  00AA               	movwf	check_err@pdata
  6175                           
  6176                           ;receive_decode.c: 77:     pdata->g_time_h = pdata->g_recv_buf[CODE_H_1] * 4 + pdata->g_
      +                          recv_buf[CODE_H_2];
  6177  0262  082A               	movf	check_err@pdata,w
  6178  0263  3E11               	addlw	17
  6179  0264  0086               	movwf	6
  6180  0265  0187               	clrf	7
  6181  0266  082A               	movf	check_err@pdata,w
  6182  0267  3E10               	addlw	16
  6183  0268  0084               	movwf	4
  6184  0269  0185               	clrf	5
  6185  026A  0800               	movf	0,w
  6186  026B  00F2               	movwf	??_check_err
  6187  026C  3001               	movlw	1
  6188  026D                     u125_25:	
  6189  026D  35F2               	lslf	??_check_err,f
  6190  026E  3EFF               	addlw	-1
  6191  026F  1D03               	skipz
  6192  0270  2A6D               	goto	u125_25
  6193  0271  3572               	lslf	??_check_err,w
  6194  0272  0701               	addwf	1,w
  6195  0273  00F3               	movwf	??_check_err+1
  6196  0274  082A               	movf	check_err@pdata,w
  6197  0275  3E03               	addlw	3
  6198  0276  0086               	movwf	6
  6199  0277  0187               	clrf	7
  6200  0278  0873               	movf	??_check_err+1,w
  6201  0279  0081               	movwf	1
  6202                           
  6203                           ;receive_decode.c: 78:     pdata->g_time_m = pdata->g_recv_buf[CODE_M_1] * 16 + pdata->g
      +                          _recv_buf[CODE_M_2] * 4 + pdata->g_recv_buf[CODE_M_3];
  6204  027A  082A               	movf	check_err@pdata,w
  6205  027B  3E14               	addlw	20
  6206  027C  0086               	movwf	6
  6207  027D  0187               	clrf	7
  6208  027E  082A               	movf	check_err@pdata,w
  6209  027F  3E13               	addlw	19
  6210  0280  0084               	movwf	4
  6211  0281  0185               	clrf	5
  6212  0282  0800               	movf	0,w
  6213  0283  00F2               	movwf	??_check_err
  6214  0284  3002               	movlw	2
  6215  0285                     u126_25:	
  6216  0285  35F2               	lslf	??_check_err,f
  6217  0286  0B89               	decfsz	9,f
  6218  0287  2A85               	goto	u126_25
  6219  0288  082A               	movf	check_err@pdata,w
  6220  0289  3E12               	addlw	18
  6221  028A  0084               	movwf	4
  6222  028B  0185               	clrf	5
  6223  028C  0800               	movf	0,w
  6224  028D  00F3               	movwf	??_check_err+1
  6225  028E  3003               	movlw	3
  6226  028F                     u127_25:	
  6227  028F  35F3               	lslf	??_check_err+1,f
  6228  0290  3EFF               	addlw	-1
  6229  0291  1D03               	skipz
  6230  0292  2A8F               	goto	u127_25
  6231  0293  3573               	lslf	??_check_err+1,w
  6232  0294  0772               	addwf	??_check_err,w
  6233  0295  0701               	addwf	1,w
  6234  0296  00F4               	movwf	??_check_err+2
  6235  0297  082A               	movf	check_err@pdata,w
  6236  0298  3E04               	addlw	4
  6237  0299  0086               	movwf	6
  6238  029A  0187               	clrf	7
  6239  029B  0874               	movf	??_check_err+2,w
  6240  029C  0081               	movwf	1
  6241                           
  6242                           ;receive_decode.c: 79:     pdata->g_time_s = 10 + (pdata->g_recv_buf[CODE_P1] == 1)? 20:
      +                           (pdata->g_recv_buf[CODE_P1] == 2)? 40: 0;
  6243  029D  082A               	movf	check_err@pdata,w
  6244  029E  3E0E               	addlw	14
  6245  029F  0086               	movwf	6
  6246  02A0  0187               	clrf	7
  6247  02A1  0301               	decf	1,w
  6248  02A2  1D03               	btfss	3,2
  6249  02A3  2AA6               	goto	u128_20
  6250  02A4  3001               	movlw	1
  6251  02A5  2AA7               	goto	u129_20
  6252  02A6                     u128_20:	
  6253  02A6  3000               	movlw	0
  6254  02A7                     u129_20:	
  6255  02A7  3E0A               	addlw	10
  6256  02A8  00F2               	movwf	??_check_err
  6257  02A9  3000               	movlw	0
  6258  02AA  1803               	skipnc
  6259  02AB  3001               	movlw	1
  6260  02AC  00F3               	movwf	??_check_err+1
  6261  02AD  0872               	movf	??_check_err,w
  6262  02AE  0473               	iorwf	??_check_err+1,w
  6263  02AF  1D03               	btfss	3,2
  6264  02B0  2AC5               	goto	i1l1856
  6265  02B1  082A               	movf	check_err@pdata,w
  6266  02B2  3E0E               	addlw	14
  6267  02B3  0086               	movwf	6
  6268  02B4  0187               	clrf	7
  6269  02B5  3002               	movlw	2
  6270  02B6  0601               	xorwf	1,w
  6271  02B7  1903               	btfsc	3,2
  6272  02B8  2ABC               	goto	i1l1854
  6273  02B9  01A2               	clrf	_check_err$615
  6274  02BA  01A3               	clrf	_check_err$615+1
  6275  02BB  2AC0               	goto	i1l150
  6276  02BC                     i1l1854:	
  6277  02BC  3028               	movlw	40
  6278  02BD  00A2               	movwf	_check_err$615
  6279  02BE  3000               	movlw	0
  6280  02BF  00A3               	movwf	_check_err$615+1
  6281  02C0                     i1l150:	
  6282  02C0  0823               	movf	_check_err$615+1,w
  6283  02C1  00A1               	movwf	_check_err$614+1
  6284  02C2  0822               	movf	_check_err$615,w
  6285  02C3  00A0               	movwf	_check_err$614
  6286  02C4  2AC9               	goto	i1l1858
  6287  02C5                     i1l1856:	
  6288  02C5  3014               	movlw	20
  6289  02C6  00A0               	movwf	_check_err$614
  6290  02C7  3000               	movlw	0
  6291  02C8  00A1               	movwf	_check_err$614+1
  6292  02C9                     i1l1858:	
  6293  02C9  0820               	movf	_check_err$614,w
  6294  02CA  00F2               	movwf	??_check_err
  6295  02CB  082A               	movf	check_err@pdata,w
  6296  02CC  3E05               	addlw	5
  6297  02CD  0086               	movwf	6
  6298  02CE  0187               	clrf	7
  6299  02CF  0872               	movf	??_check_err,w
  6300  02D0  0081               	movwf	1
  6301                           
  6302                           ;receive_decode.c: 81:     u8 check = 0;
  6303  02D1  01A9               	clrf	check_err@check
  6304                           
  6305                           ;receive_decode.c: 82:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  6306  02D2  01A8               	clrf	check_err@i
  6307  02D3  0AA8               	incf	check_err@i,f
  6308  02D4  300A               	movlw	10
  6309  02D5  0228               	subwf	check_err@i,w
  6310  02D6  1803               	btfsc	3,0
  6311  02D7  2AEB               	goto	i1l1874
  6312  02D8                     i1l1868:	
  6313                           
  6314                           ;receive_decode.c: 83:     {;receive_decode.c: 84:         check ^= pdata->g_recv_buf[i]
      +                          ;
  6315  02D8  0828               	movf	check_err@i,w
  6316  02D9  3E0D               	addlw	13
  6317  02DA  072A               	addwf	check_err@pdata,w
  6318  02DB  00F2               	movwf	??_check_err
  6319  02DC  0872               	movf	??_check_err,w
  6320  02DD  0086               	movwf	6
  6321  02DE  0187               	clrf	7
  6322  02DF  0801               	movf	1,w
  6323  02E0  00F3               	movwf	??_check_err+1
  6324  02E1  0873               	movf	??_check_err+1,w
  6325  02E2  06A9               	xorwf	check_err@check,f
  6326                           
  6327                           ;receive_decode.c: 85:     }
  6328  02E3  3001               	movlw	1
  6329  02E4  00F2               	movwf	??_check_err
  6330  02E5  0872               	movf	??_check_err,w
  6331  02E6  07A8               	addwf	check_err@i,f
  6332  02E7  300A               	movlw	10
  6333  02E8  0228               	subwf	check_err@i,w
  6334  02E9  1C03               	skipc
  6335  02EA  2AD8               	goto	i1l1868
  6336  02EB                     i1l1874:	
  6337                           
  6338                           ;receive_decode.c: 86:     if( (((0 == check) || (3 == check))) && (pdata->g_recv_buf[CO
      +                          DE_P3] % 2 == 0) )
  6339  02EB  0829               	movf	check_err@check,w
  6340  02EC  1903               	btfsc	3,2
  6341  02ED  2AF2               	goto	i1l1878
  6342  02EE  3003               	movlw	3
  6343  02EF  0629               	xorwf	check_err@check,w
  6344  02F0  1D03               	btfss	3,2
  6345  02F1  2B09               	goto	i1l1888
  6346  02F2                     i1l1878:	
  6347  02F2  082A               	movf	check_err@pdata,w
  6348  02F3  3E17               	addlw	23
  6349  02F4  0086               	movwf	6
  6350  02F5  0187               	clrf	7
  6351  02F6  1801               	btfsc	1,0
  6352  02F7  2B09               	goto	i1l1888
  6353                           
  6354                           ;receive_decode.c: 87:     {;receive_decode.c: 88:         pdata->g_time_h += (2 ==pdata
      +                          ->g_recv_buf[CODE_P3])? 12 : 0;
  6355  02F8  082A               	movf	check_err@pdata,w
  6356  02F9  3E17               	addlw	23
  6357  02FA  0086               	movwf	6
  6358  02FB  0187               	clrf	7
  6359  02FC  3002               	movlw	2
  6360  02FD  0601               	xorwf	1,w
  6361  02FE  1903               	btfsc	3,2
  6362  02FF  2B03               	goto	i1l1884
  6363  0300  01A4               	clrf	_check_err$618
  6364  0301  01A5               	clrf	_check_err$618+1
  6365  0302  2B07               	goto	i1l1886
  6366  0303                     i1l1884:	
  6367  0303  300C               	movlw	12
  6368  0304  00A4               	movwf	_check_err$618
  6369  0305  3000               	movlw	0
  6370  0306  00A5               	movwf	_check_err$618+1
  6371  0307                     i1l1886:	
  6372  0307  0824               	movf	_check_err$618,w
  6373  0308  2B2F               	goto	L4
  6374  0309                     i1l1888:	
  6375                           ;receive_decode.c: 89:     }else if( (((1 == check) || (2 == check))) && ((pdata->g_recv
      +                          _buf[CODE_P3] == 1) || (pdata->g_recv_buf[CODE_P3] == 3)) )
  6376                           
  6377  0309  0329               	decf	check_err@check,w
  6378  030A  1903               	btfsc	3,2
  6379  030B  2B10               	goto	i1l1892
  6380  030C  3002               	movlw	2
  6381  030D  0629               	xorwf	check_err@check,w
  6382  030E  1D03               	btfss	3,2
  6383  030F  2B37               	goto	i1l1904
  6384  0310                     i1l1892:	
  6385  0310  082A               	movf	check_err@pdata,w
  6386  0311  3E17               	addlw	23
  6387  0312  0086               	movwf	6
  6388  0313  0187               	clrf	7
  6389  0314  0301               	decf	1,w
  6390  0315  1903               	btfsc	3,2
  6391  0316  2B1F               	goto	i1l1896
  6392  0317  082A               	movf	check_err@pdata,w
  6393  0318  3E17               	addlw	23
  6394  0319  0086               	movwf	6
  6395  031A  0187               	clrf	7
  6396  031B  3003               	movlw	3
  6397  031C  0601               	xorwf	1,w
  6398  031D  1D03               	btfss	3,2
  6399  031E  2B37               	goto	i1l1904
  6400  031F                     i1l1896:	
  6401                           
  6402                           ;receive_decode.c: 91:     {;receive_decode.c: 92:         pdata->g_time_h += (3 ==pdata
      +                          ->g_recv_buf[CODE_P3])? 12 : 0;
  6403  031F  082A               	movf	check_err@pdata,w
  6404  0320  3E17               	addlw	23
  6405  0321  0086               	movwf	6
  6406  0322  0187               	clrf	7
  6407  0323  3003               	movlw	3
  6408  0324  0601               	xorwf	1,w
  6409  0325  1903               	btfsc	3,2
  6410  0326  2B2A               	goto	i1l1900
  6411  0327  01A6               	clrf	_check_err$619
  6412  0328  01A7               	clrf	_check_err$619+1
  6413  0329  2B2E               	goto	i1l1902
  6414  032A                     i1l1900:	
  6415  032A  300C               	movlw	12
  6416  032B  00A6               	movwf	_check_err$619
  6417  032C  3000               	movlw	0
  6418  032D  00A7               	movwf	_check_err$619+1
  6419  032E                     i1l1902:	
  6420  032E  0826               	movf	_check_err$619,w
  6421  032F                     L4:	
  6422  032F  00F2               	movwf	??_check_err
  6423  0330  082A               	movf	check_err@pdata,w
  6424  0331  3E03               	addlw	3
  6425  0332  0086               	movwf	6
  6426  0333  0187               	clrf	7
  6427  0334  0872               	movf	??_check_err,w
  6428  0335  0781               	addwf	1,f
  6429                           
  6430                           ;receive_decode.c: 93:     }
  6431  0336  2B4C               	goto	i1l1914
  6432  0337                     i1l1904:	
  6433                           ;receive_decode.c: 94:     else
  6434                           
  6435                           
  6436                           ;receive_decode.c: 95:     {;receive_decode.c: 96:         pdata->g_find_recv_start = FA
      +                          LSE;
  6437  0337  082A               	movf	check_err@pdata,w
  6438  0338  3E02               	addlw	2
  6439  0339  0086               	movwf	6
  6440  033A  0187               	clrf	7
  6441  033B  0181               	clrf	1
  6442                           
  6443                           ;receive_decode.c: 97:         pdata->g_isDecoding = 0;
  6444  033C  0A2A               	incf	check_err@pdata,w
  6445  033D  0086               	movwf	6
  6446  033E  0187               	clrf	7
  6447  033F  0181               	clrf	1
  6448                           
  6449                           ;receive_decode.c: 98:         pdata->g_recv_count = 0;
  6450  0340  082A               	movf	check_err@pdata,w
  6451  0341  3E0B               	addlw	11
  6452  0342  0086               	movwf	6
  6453  0343  0187               	clrf	7
  6454  0344  3000               	movlw	0
  6455  0345  3FC0               	movwi [0]fsr1
  6456  0346  3FC1               	movwi [1]fsr1
  6457                           
  6458                           ;receive_decode.c: 99:         return -1;
  6459  0347  30FF               	movlw	255
  6460  0348  00F0               	movwf	?_check_err
  6461  0349  30FF               	movlw	255
  6462  034A  00F1               	movwf	?_check_err+1
  6463  034B  0008               	return
  6464  034C                     i1l1914:	
  6465                           ;receive_decode.c: 100:     }
  6466                           
  6467                           
  6468                           ;receive_decode.c: 101:     return 0;
  6469  034C  01F0               	clrf	?_check_err
  6470  034D  01F1               	clrf	?_check_err+1
  6471  034E  0008               	return
  6472  034F                     __end_of_check_err:	
  6473                           
  6474                           	psect	text21
  6475  0609                     __ptext21:	
  6476 ;; *************** function i1_data_getdata *****************
  6477 ;; Defined at:
  6478 ;;		line 6 in file "data.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      PTR volatile struct .
  6485 ;; Registers used:
  6486 ;;		wreg
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;Total ram usage:        0 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_ISR
  6502 ;;		_check_err
  6503 ;;		_receive_decode
  6504 ;;		_update_time
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function i1_data_getdata
  6510  0609                     i1_data_getdata:	
  6511                           
  6512                           ;data.c: 8:     return &g_data;
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in i1_data_getdata: [wreg]
  6516  0609  30A0               	movlw	(low (_g_data| 0))& (0+255)
  6517  060A  0008               	return
  6518  060B                     __end_ofi1_data_getdata:	
  6519                           
  6520                           	psect	text22
  6521  04AE                     __ptext22:	
  6522 ;; *************** function ___lwmod *****************
  6523 ;; Defined at:
  6524 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  divisor         2    0[COMMON] unsigned int 
  6527 ;;  dividend        2    2[COMMON] unsigned int 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  counter         1    5[COMMON] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  2    0[COMMON] unsigned int 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2, status,0
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;Total ram usage:        6 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_ISR
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           
  6553                           ;psect for function ___lwmod
  6554  04AE                     ___lwmod:	
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6558  04AE  0870               	movf	___lwmod@divisor,w
  6559  04AF  0471               	iorwf	___lwmod@divisor+1,w
  6560  04B0  1903               	btfsc	3,2
  6561  04B1  2CD5               	goto	i1l2252
  6562  04B2  01F5               	clrf	___lwmod@counter
  6563  04B3  0AF5               	incf	___lwmod@counter,f
  6564  04B4                     i1l2242:	
  6565  04B4  1BF1               	btfsc	___lwmod@divisor+1,7
  6566  04B5  2CC0               	goto	i1l2244
  6567  04B6  3001               	movlw	1
  6568  04B7                     u180_25:	
  6569  04B7  35F0               	lslf	___lwmod@divisor,f
  6570  04B8  0DF1               	rlf	___lwmod@divisor+1,f
  6571  04B9  0B89               	decfsz	9,f
  6572  04BA  2CB7               	goto	u180_25
  6573  04BB  3001               	movlw	1
  6574  04BC  00F4               	movwf	??___lwmod
  6575  04BD  0874               	movf	??___lwmod,w
  6576  04BE  07F5               	addwf	___lwmod@counter,f
  6577  04BF  2CB4               	goto	i1l2242
  6578  04C0                     i1l2244:	
  6579  04C0  0871               	movf	___lwmod@divisor+1,w
  6580  04C1  0273               	subwf	___lwmod@dividend+1,w
  6581  04C2  1D03               	skipz
  6582  04C3  2CC6               	goto	u182_25
  6583  04C4  0870               	movf	___lwmod@divisor,w
  6584  04C5  0272               	subwf	___lwmod@dividend,w
  6585  04C6                     u182_25:	
  6586  04C6  1C03               	skipc
  6587  04C7  2CCC               	goto	i1l2248
  6588  04C8  0870               	movf	___lwmod@divisor,w
  6589  04C9  02F2               	subwf	___lwmod@dividend,f
  6590  04CA  0871               	movf	___lwmod@divisor+1,w
  6591  04CB  3BF3               	subwfb	___lwmod@dividend+1,f
  6592  04CC                     i1l2248:	
  6593  04CC  3001               	movlw	1
  6594  04CD                     u183_25:	
  6595  04CD  36F1               	lsrf	___lwmod@divisor+1,f
  6596  04CE  0CF0               	rrf	___lwmod@divisor,f
  6597  04CF  0B89               	decfsz	9,f
  6598  04D0  2CCD               	goto	u183_25
  6599  04D1  3001               	movlw	1
  6600  04D2  02F5               	subwf	___lwmod@counter,f
  6601  04D3  1D03               	btfss	3,2
  6602  04D4  2CC0               	goto	i1l2244
  6603  04D5                     i1l2252:	
  6604  04D5  0873               	movf	___lwmod@dividend+1,w
  6605  04D6  00F1               	movwf	?___lwmod+1
  6606  04D7  0872               	movf	___lwmod@dividend,w
  6607  04D8  00F0               	movwf	?___lwmod
  6608  04D9  0008               	return
  6609  04DA                     __end_of___lwmod:	
  6610  007E                     btemp	set	126	;btemp
  6611  007E                     int$flags	set	126
  6612  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      52
    BANK1            80      0      35
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    update_time@pdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 

    receive_decode@pdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 

    check_err@pdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 

    ISR@pdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 

    sp__data_getdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 

    init_env@pdata	PTR volatile struct . size(1) Largest target is 35
		 -> g_data(BANK1[35]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->i1_update_display
    _receive_decode->i1_update_display
    i1_update_display->i1_write_once
    i1_write_once->i1_write_byte
    i1_write_byte->i1_control595_delay

Critical Paths under _main in BANK0

    _main->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode
    _receive_decode->_check_err

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     524
                           _init_env
                     _update_display
 ---------------------------------------------------------------------------------
 (1) _update_display                                       3     3      0     433
                                             36 BANK0      3     3      0
                         _write_once
 ---------------------------------------------------------------------------------
 (2) _write_once                                           4     1      3     433
                                             32 BANK0      4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (3) _write_byte                                           4     4      0      93
                                             28 BANK0      4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (4) _control595_delay                                     2     2      0      24
                                             26 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             5     5      0      91
                                             26 BANK0      5     5      0
                           _IIC_Init
                       _data_getdata
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _data_getdata                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0    3703
                                             23 BANK0      3     3      0
                            ___lwmod
                     _receive_decode
                        _timer_reset
                        _timer_start
                        _update_time
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (6) _update_time                                          2     2      0     570
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     i1_data_getdata
                   i1_update_display
 ---------------------------------------------------------------------------------
 (6) _timer_start                                          0     0      0       0
                        _timer_reset
 ---------------------------------------------------------------------------------
 (7) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _receive_decode                                      12    12      0    2447
                                             11 BANK0     12    12      0
                          _check_err
                    _test_get_number
                       _times2number
                     i1_data_getdata
                   i1_update_display
 ---------------------------------------------------------------------------------
 (7) i1_update_display                                     3     3      0     283
                                             10 COMMON     3     3      0
                       i1_write_once
 ---------------------------------------------------------------------------------
 (8) i1_write_once                                         4     1      3     283
                                              6 COMMON     4     1      3
                 i1_control595_delay
                       i1_write_byte
 ---------------------------------------------------------------------------------
 (9) i1_write_byte                                         4     4      0      93
                                              2 COMMON     4     4      0
                 i1_control595_delay
 ---------------------------------------------------------------------------------
 (10) i1_control595_delay                                  2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _check_err                                           16    14      2     717
                                              0 COMMON     5     3      2
                                              0 BANK0     11    11      0
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (6) i1_data_getdata                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init
     _data_getdata
     _timer_init
   _update_display
     _write_once
       _control595_delay
       _write_byte
         _control595_delay

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _check_err
       i1_data_getdata
     _test_get_number
     _times2number
     i1_data_getdata
     i1_update_display
       i1_write_once
         i1_control595_delay
         i1_write_byte
           i1_control595_delay
   _timer_reset
   _timer_start
     _timer_reset
   _update_time
     i1_data_getdata
     i1_update_display
       i1_write_once
         i1_control595_delay
         i1_write_byte
           i1_control595_delay
   i1_data_getdata

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      23       7       43.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jun 03 20:42:56 2019

             ?_receive_decode 0070                   _update_time 03C1                   __CFG_CP$OFF 0000  
                          l72 03B4                _update_display 0574                   __CFG_LVP$ON 0000  
                         l222 05BA             ?_control595_delay 0070                           _GIE 005F  
                         _RC4 0074                  __CFG_CPD$OFF 0000                           _ISR 0004  
                __CFG_BORV$LO 0000            ??_control595_delay 003A                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000          __end_of_data_getdata 0609  
                        ?_ISR 0070                          l2086 0399                          _BRGH 0CF2  
                        _CREN 0CEC                          u1085 04E4                          _LATA 010C  
                        _LATB 010D                          _LATC 010E                          _ENUM 0053  
                        u1545 0397                          u1555 03B2                          _PEIE 005E  
                        _RCIE 048D                          i1l92 007A                          i1l85 00D1  
                        i1l94 0098                          i1l86 007D                          i1l87 0075  
                        _TMR0 0015                          _SPEN 0CEF                          _TXIE 048C  
                        _TXEN 0CF5                          _SYNC 0CF4                          _WPUA 020C  
                        _WPUB 020D                          _WPUC 020E                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _Temp 0047                          _main 05F1  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 00D3  
               __CFG_MCLRE$ON 0000                         ??_ISR 0037        __end_of_update_display 0595  
            __end_of_IIC_Init 05DC                 __CFG_PLLEN$ON 0000          __end_ofi1_write_byte 052C  
        __end_ofi1_write_once 0574   __size_ofi1_control595_delay 000B                         ?_main 0070  
                       _BRG16 0CFB                 __CFG_WDTE$OFF 0000                         _LATC3 0873  
                       _LATC4 0874                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l150 02C0                         i1l222 05E0  
                       i1l176 0106               __end_of___lwmod 04DA                         _RCREG 0199  
                       _TRISA 008C                         _TRISB 008D                         _TRISC 008E  
                       _WPUC3 1073                         _WPUC4 1074                         _RXSEL 08E9  
                       _TXREG 019A                         _TXSEL 08EA                         _TX_en 004C  
              write_byte@data 003E     __size_ofi1_update_display 0020                         status 0003  
                       wtemp0 007E       i1control595_delay@times 0071               __initialization 00D5  
                __end_of_main 05F8               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
     __size_ofi1_data_getdata 0002                        ??_main 0047                        i1l2114 0113  
                      i1l2132 0141                        i1l2116 0117                        i1l2126 0136  
                      i1l2214 0425                        i1l2152 017D                        i1l2304 0095  
                      i1l2242 04B4                        i1l2170 01C8                        i1l2244 04C0  
                      i1l2252 04D5                        i1l2180 0229                        i1l2182 022C  
                      i1l2318 00CF                        i1l2248 04CC                        i1l2176 020A  
                      i1l2264 0028                        i1l1900 032A                        i1l2284 004B  
                      u105_25 050E                        i1l1902 032E                        i1l1830 0490  
                      i1l1822 047D                        i1l1814 0471                        i1l1806 0468  
                      i1l2294 0071                        i1l1904 0337                        i1l1914 034C  
                      i1l1834 049A                        i1l1826 0486                        i1l1854 02BC  
                      i1l1838 04A4                        i1l1856 02C5                        i1l1776 0438  
                      i1l1874 02EB                        i1l1858 02C9                        i1l1786 0448  
                      i1l1892 0310                        i1l1884 0303                        i1l1868 02D8  
                      i1l1796 0458                        i1l1886 0307                        i1l1878 02F2  
                      i1l1896 031F                        i1l1888 0309                        u125_25 026D  
                      u126_25 0285                        u127_25 028F                        u128_20 02A6  
                      u129_20 02A7                        u170_25 0218                        u171_25 0227  
                      u180_25 04B7                        u172_25 0248                        u182_25 04C6  
                      u183_25 04CD                        _SPBRGH 019C                        _SPBRGL 019B  
                      _TRISC3 0473                        _TRISC4 0474                __CFG_PWRTE$OFF 0000  
                      _g_data 00A0                __CFG_STVREN$ON 0000                        _flg_rc 004B  
                   ??___lwmod 0074              __end_of_init_env 03C1                        _temp_h 0050  
                      _temp_l 004F              __end_of_segmcode 05F1         __size_of_data_getdata 0002  
times2number@high_level_times 0070                  ?_timer_reset 0070                  ?_timer_start 0070  
    __size_of_test_get_number 003B       __end_of__initialization 00E4                     ?_IIC_Init 0070  
            ??_receive_decode 002B         __size_ofi1_write_byte 0027         __size_ofi1_write_once 0022  
              __pcstackCOMMON 0070                  ?_update_time 0070         control595_delay@times 003B  
                _data_getdata 0607            __size_of_check_err 00F4                _OPTION_REGbits 0095  
               i1write_byte@i 0075              i1_update_display 0595                    __pbssBANK0 0047  
                  __pbssBANK1 00A0                  i1_write_byte 0505                    ??_IIC_Init 003A  
                i1_write_once 0552     __size_of_control595_delay 000D               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 05F1                    __pintentry 0004                i1_data_getdata 0609  
              ISR@history_key 0052                       _ODCONC3 1473                       _ODCONC4 1474  
           __end_of_check_err 034F              update_time@pdata 0020                       _RX_data 004D  
                   ?_init_env 0070                       _TX_data 004E           receive_decode@pdata 0036  
            ??_update_display 0044             ??_test_get_number 0070              i1write_byte@data 0074  
      __end_ofi1_data_getdata 060B    __end_ofi1_control595_delay 05E7                       ___lwmod 04AE  
                  check_err@i 0028                       __ptext1 0574                       __ptext2 052C  
                     __ptext3 04DA                       __ptext4 05B5                       __ptext5 034F  
                     __ptext6 05C2                       __ptext7 0607                       __ptext8 05CF  
                __size_of_ISR 00CF                 ?_times2number 0070                     _IOCCFbits 0399  
                   _IOCCPbits 0397                       clrloop0 05F9          end_of_initialization 00E4  
        __size_of_timer_reset 0005          __size_of_timer_start 0004                    ??_init_env 003A  
             ?i1_data_getdata 0070          __size_of_update_time 0067                    _timer_init 05C2  
                   _PORTAbits 000C                     _PORTCbits 000E                ??_times2number 0072  
                   _TRISCbits 008E                 _check_err$614 0020                 _check_err$615 0022  
               _check_err$618 0024                 _check_err$619 0026              _control595_delay 05B5  
           __size_of_IIC_Init 000D                  write_once@HL 0043                  write_once@HR 0040  
                write_once@ML 0041                  write_once@MR 0042      __end_ofi1_update_display 05B5  
                  _write_byte 04DA                    _write_once 052C      receive_decode@read_value 0035  
         start_initialization 00D5         receive_decode@cnt_low 0051                   __end_of_ISR 00D3  
              check_err@check 0029                check_err@pdata 002A               receive_decode@i 0033  
              i1write_once@HL 0079                i1write_once@HR 0076                i1write_once@ML 0077  
              i1write_once@MR 0078                   ?_timer_init 0070                     ___latbits 0002  
               __pcstackBANK0 0020               _test_get_number 0473                     _check_err 025B  
                    ISR@pdata 0039             __size_of_init_env 0072     receive_decode@last_time_h 002F  
   receive_decode@last_time_m 0031     receive_decode@last_time_s 002D          __end_of_times2number 0473  
                    ?___lwmod 0070       __size_of_receive_decode 0173                   ?_write_byte 0070  
                 ?_write_once 0040               ISR@key_time_cnt 0049            i1_control595_delay 05DC  
         ?i1_control595_delay 0070                      _IIC_Init 05CF                      _LATAbits 010C  
                    _LATBbits 010D           __size_of_timer_init 000D                    ?_check_err 0070  
                   clear_ram0 05F8              ??i1_data_getdata 0070          ??i1_control595_delay 0070  
    __end_of_control595_delay 05C2       __end_of_test_get_number 04AE                      _WPUCbits 020E  
                 write_byte@i 003F                 ??_timer_reset 0070                 ??_timer_start 0070  
         __size_of_write_byte 002B           __size_of_write_once 0026        test_get_number@get_num 0070  
               ??_update_time 007D                     init_env@i 003D                 ?_data_getdata 0070  
            __size_of___lwmod 002C             ?i1_update_display 0070       __size_of_update_display 0021  
          ??i1_update_display 007A                      __ptext10 03C1                      __ptext11 0603  
                    __ptext20 025B                      __ptext12 05FE                      __ptext21 0609  
                    __ptext13 00E8                      __ptext22 04AE                      __ptext14 0595  
                    __ptext15 0552                      __ptext16 0505                      __ptext17 05DC  
                    __ptext18 0428                      __ptext19 0473                 ?i1_write_byte 0070  
               ?i1_write_once 0076         __size_of_times2number 004B                      _init_env 034F  
               __size_of_main 0007           __end_of_timer_reset 0603           __end_of_timer_start 0607  
                 ??_check_err 0072                      _segmcode 05E7                 init_env@pdata 003C  
              ??_data_getdata 003A                      int$flags 007E                _receive_decode 00E8  
                ??_timer_init 003A           __end_of_update_time 0428              ?_test_get_number 0070  
                  _INTCONbits 000B                  _times2number 0428                      intlevel1 0000  
              ??i1_write_byte 0072                ??i1_write_once 0079              ___lwmod@dividend 0072  
           __CFG_CLKOUTEN$OFF 0000            __end_of_timer_init 05CF                    _OSCCONbits 0099  
      __end_of_receive_decode 025B                  ??_write_byte 003C                  ??_write_once 0043  
               __pstringtext1 05E7               ___lwmod@divisor 0070               ___lwmod@counter 0075  
                 _timer_reset 05FE                   _timer_start 0603            __end_of_write_byte 0505  
          __end_of_write_once 0552  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 19 03:42:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	text66,local,class=CODE,merge=1,delta=2
    79                           	psect	text67,local,class=CODE,merge=1,delta=2
    80                           	psect	text68,local,class=CODE,merge=1,delta=2
    81                           	dabs	1,0x7E,2
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F1786 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0095                     	;# 
   155  0096                     	;# 
   156  0097                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011C                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011E                     	;# 
   185  011F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0193                     	;# 
   194  0194                     	;# 
   195  0195                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019C                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019D                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019E                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  020C                     	;# 
   224  020D                     	;# 
   225  020E                     	;# 
   226  0210                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0213                     	;# 
   233  0214                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0216                     	;# 
   240  0216                     	;# 
   241  0217                     	;# 
   242  0217                     	;# 
   243  028C                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  0291                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0298                     	;# 
   251  0298                     	;# 
   252  0299                     	;# 
   253  029A                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  0311                     	;# 
   258  0311                     	;# 
   259  0312                     	;# 
   260  0313                     	;# 
   261  038C                     	;# 
   262  038D                     	;# 
   263  038E                     	;# 
   264  0390                     	;# 
   265  0391                     	;# 
   266  0392                     	;# 
   267  0393                     	;# 
   268  0394                     	;# 
   269  0395                     	;# 
   270  0396                     	;# 
   271  0397                     	;# 
   272  0398                     	;# 
   273  0399                     	;# 
   274  039D                     	;# 
   275  039E                     	;# 
   276  039F                     	;# 
   277  0511                     	;# 
   278  0513                     	;# 
   279  051A                     	;# 
   280  0811                     	;# 
   281  0812                     	;# 
   282  0813                     	;# 
   283  0814                     	;# 
   284  0815                     	;# 
   285  0816                     	;# 
   286  0817                     	;# 
   287  0818                     	;# 
   288  0819                     	;# 
   289  081A                     	;# 
   290  081B                     	;# 
   291  081C                     	;# 
   292  081D                     	;# 
   293  081E                     	;# 
   294  081F                     	;# 
   295  0820                     	;# 
   296  0821                     	;# 
   297  0821                     	;# 
   298  0822                     	;# 
   299  0823                     	;# 
   300  0823                     	;# 
   301  0824                     	;# 
   302  0825                     	;# 
   303  0825                     	;# 
   304  0826                     	;# 
   305  0827                     	;# 
   306  0827                     	;# 
   307  0828                     	;# 
   308  0829                     	;# 
   309  082A                     	;# 
   310  082B                     	;# 
   311  082C                     	;# 
   312  082D                     	;# 
   313  082E                     	;# 
   314  082F                     	;# 
   315  0831                     	;# 
   316  0832                     	;# 
   317  0833                     	;# 
   318  0834                     	;# 
   319  0835                     	;# 
   320  0836                     	;# 
   321  0837                     	;# 
   322  0838                     	;# 
   323  0839                     	;# 
   324  083A                     	;# 
   325  083B                     	;# 
   326  083C                     	;# 
   327  083D                     	;# 
   328  083E                     	;# 
   329  083F                     	;# 
   330  0840                     	;# 
   331  0841                     	;# 
   332  0841                     	;# 
   333  0842                     	;# 
   334  0843                     	;# 
   335  0843                     	;# 
   336  0844                     	;# 
   337  0845                     	;# 
   338  0845                     	;# 
   339  0846                     	;# 
   340  0847                     	;# 
   341  0847                     	;# 
   342  0848                     	;# 
   343  0849                     	;# 
   344  084A                     	;# 
   345  084B                     	;# 
   346  084C                     	;# 
   347  084D                     	;# 
   348  084E                     	;# 
   349  084F                     	;# 
   350  0851                     	;# 
   351  0852                     	;# 
   352  0853                     	;# 
   353  0854                     	;# 
   354  0855                     	;# 
   355  0856                     	;# 
   356  0857                     	;# 
   357  0858                     	;# 
   358  0859                     	;# 
   359  085A                     	;# 
   360  085B                     	;# 
   361  085C                     	;# 
   362  085D                     	;# 
   363  085E                     	;# 
   364  085F                     	;# 
   365  0860                     	;# 
   366  0861                     	;# 
   367  0861                     	;# 
   368  0862                     	;# 
   369  0863                     	;# 
   370  0863                     	;# 
   371  0864                     	;# 
   372  0865                     	;# 
   373  0865                     	;# 
   374  0866                     	;# 
   375  0867                     	;# 
   376  0867                     	;# 
   377  0868                     	;# 
   378  0869                     	;# 
   379  086A                     	;# 
   380  086B                     	;# 
   381  086C                     	;# 
   382  086D                     	;# 
   383  086E                     	;# 
   384  086F                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011C                     	;# 
   460  011D                     	;# 
   461  011D                     	;# 
   462  011D                     	;# 
   463  011E                     	;# 
   464  011F                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0197                     	;# 
   477  0199                     	;# 
   478  0199                     	;# 
   479  0199                     	;# 
   480  019A                     	;# 
   481  019A                     	;# 
   482  019A                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019D                     	;# 
   493  019D                     	;# 
   494  019E                     	;# 
   495  019E                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  019F                     	;# 
   499  019F                     	;# 
   500  019F                     	;# 
   501  019F                     	;# 
   502  020C                     	;# 
   503  020D                     	;# 
   504  020E                     	;# 
   505  0210                     	;# 
   506  0211                     	;# 
   507  0211                     	;# 
   508  0212                     	;# 
   509  0212                     	;# 
   510  0213                     	;# 
   511  0213                     	;# 
   512  0214                     	;# 
   513  0214                     	;# 
   514  0215                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0216                     	;# 
   519  0216                     	;# 
   520  0217                     	;# 
   521  0217                     	;# 
   522  028C                     	;# 
   523  028D                     	;# 
   524  028E                     	;# 
   525  0291                     	;# 
   526  0291                     	;# 
   527  0292                     	;# 
   528  0293                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  030C                     	;# 
   534  030D                     	;# 
   535  030E                     	;# 
   536  0311                     	;# 
   537  0311                     	;# 
   538  0312                     	;# 
   539  0313                     	;# 
   540  038C                     	;# 
   541  038D                     	;# 
   542  038E                     	;# 
   543  0390                     	;# 
   544  0391                     	;# 
   545  0392                     	;# 
   546  0393                     	;# 
   547  0394                     	;# 
   548  0395                     	;# 
   549  0396                     	;# 
   550  0397                     	;# 
   551  0398                     	;# 
   552  0399                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0511                     	;# 
   557  0513                     	;# 
   558  051A                     	;# 
   559  0811                     	;# 
   560  0812                     	;# 
   561  0813                     	;# 
   562  0814                     	;# 
   563  0815                     	;# 
   564  0816                     	;# 
   565  0817                     	;# 
   566  0818                     	;# 
   567  0819                     	;# 
   568  081A                     	;# 
   569  081B                     	;# 
   570  081C                     	;# 
   571  081D                     	;# 
   572  081E                     	;# 
   573  081F                     	;# 
   574  0820                     	;# 
   575  0821                     	;# 
   576  0821                     	;# 
   577  0822                     	;# 
   578  0823                     	;# 
   579  0823                     	;# 
   580  0824                     	;# 
   581  0825                     	;# 
   582  0825                     	;# 
   583  0826                     	;# 
   584  0827                     	;# 
   585  0827                     	;# 
   586  0828                     	;# 
   587  0829                     	;# 
   588  082A                     	;# 
   589  082B                     	;# 
   590  082C                     	;# 
   591  082D                     	;# 
   592  082E                     	;# 
   593  082F                     	;# 
   594  0831                     	;# 
   595  0832                     	;# 
   596  0833                     	;# 
   597  0834                     	;# 
   598  0835                     	;# 
   599  0836                     	;# 
   600  0837                     	;# 
   601  0838                     	;# 
   602  0839                     	;# 
   603  083A                     	;# 
   604  083B                     	;# 
   605  083C                     	;# 
   606  083D                     	;# 
   607  083E                     	;# 
   608  083F                     	;# 
   609  0840                     	;# 
   610  0841                     	;# 
   611  0841                     	;# 
   612  0842                     	;# 
   613  0843                     	;# 
   614  0843                     	;# 
   615  0844                     	;# 
   616  0845                     	;# 
   617  0845                     	;# 
   618  0846                     	;# 
   619  0847                     	;# 
   620  0847                     	;# 
   621  0848                     	;# 
   622  0849                     	;# 
   623  084A                     	;# 
   624  084B                     	;# 
   625  084C                     	;# 
   626  084D                     	;# 
   627  084E                     	;# 
   628  084F                     	;# 
   629  0851                     	;# 
   630  0852                     	;# 
   631  0853                     	;# 
   632  0854                     	;# 
   633  0855                     	;# 
   634  0856                     	;# 
   635  0857                     	;# 
   636  0858                     	;# 
   637  0859                     	;# 
   638  085A                     	;# 
   639  085B                     	;# 
   640  085C                     	;# 
   641  085D                     	;# 
   642  085E                     	;# 
   643  085F                     	;# 
   644  0860                     	;# 
   645  0861                     	;# 
   646  0861                     	;# 
   647  0862                     	;# 
   648  0863                     	;# 
   649  0863                     	;# 
   650  0864                     	;# 
   651  0865                     	;# 
   652  0865                     	;# 
   653  0866                     	;# 
   654  0867                     	;# 
   655  0867                     	;# 
   656  0868                     	;# 
   657  0869                     	;# 
   658  086A                     	;# 
   659  086B                     	;# 
   660  086C                     	;# 
   661  086D                     	;# 
   662  086E                     	;# 
   663  086F                     	;# 
   664  0FE4                     	;# 
   665  0FE5                     	;# 
   666  0FE6                     	;# 
   667  0FE7                     	;# 
   668  0FE8                     	;# 
   669  0FE9                     	;# 
   670  0FEA                     	;# 
   671  0FEB                     	;# 
   672  0FED                     	;# 
   673  0FEE                     	;# 
   674  0FEF                     	;# 
   675  0000                     	;# 
   676  0001                     	;# 
   677  0002                     	;# 
   678  0003                     	;# 
   679  0004                     	;# 
   680  0005                     	;# 
   681  0006                     	;# 
   682  0007                     	;# 
   683  0008                     	;# 
   684  0009                     	;# 
   685  000A                     	;# 
   686  000B                     	;# 
   687  000C                     	;# 
   688  000D                     	;# 
   689  000E                     	;# 
   690  0010                     	;# 
   691  0011                     	;# 
   692  0012                     	;# 
   693  0013                     	;# 
   694  0014                     	;# 
   695  0015                     	;# 
   696  0016                     	;# 
   697  0016                     	;# 
   698  0017                     	;# 
   699  0018                     	;# 
   700  0019                     	;# 
   701  001A                     	;# 
   702  001B                     	;# 
   703  001C                     	;# 
   704  008C                     	;# 
   705  008D                     	;# 
   706  008E                     	;# 
   707  0090                     	;# 
   708  0091                     	;# 
   709  0092                     	;# 
   710  0093                     	;# 
   711  0094                     	;# 
   712  0095                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  009F                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  010E                     	;# 
   727  0111                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0118                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011B                     	;# 
   738  011C                     	;# 
   739  011D                     	;# 
   740  011D                     	;# 
   741  011D                     	;# 
   742  011E                     	;# 
   743  011F                     	;# 
   744  018C                     	;# 
   745  018D                     	;# 
   746  0191                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0193                     	;# 
   752  0194                     	;# 
   753  0195                     	;# 
   754  0196                     	;# 
   755  0197                     	;# 
   756  0199                     	;# 
   757  0199                     	;# 
   758  0199                     	;# 
   759  019A                     	;# 
   760  019A                     	;# 
   761  019A                     	;# 
   762  019B                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019B                     	;# 
   767  019C                     	;# 
   768  019C                     	;# 
   769  019C                     	;# 
   770  019D                     	;# 
   771  019D                     	;# 
   772  019D                     	;# 
   773  019E                     	;# 
   774  019E                     	;# 
   775  019E                     	;# 
   776  019F                     	;# 
   777  019F                     	;# 
   778  019F                     	;# 
   779  019F                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  020E                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0216                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0217                     	;# 
   801  028C                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  0291                     	;# 
   805  0291                     	;# 
   806  0292                     	;# 
   807  0293                     	;# 
   808  0298                     	;# 
   809  0298                     	;# 
   810  0299                     	;# 
   811  029A                     	;# 
   812  030C                     	;# 
   813  030D                     	;# 
   814  030E                     	;# 
   815  0311                     	;# 
   816  0311                     	;# 
   817  0312                     	;# 
   818  0313                     	;# 
   819  038C                     	;# 
   820  038D                     	;# 
   821  038E                     	;# 
   822  0390                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  0394                     	;# 
   827  0395                     	;# 
   828  0396                     	;# 
   829  0397                     	;# 
   830  0398                     	;# 
   831  0399                     	;# 
   832  039D                     	;# 
   833  039E                     	;# 
   834  039F                     	;# 
   835  0511                     	;# 
   836  0513                     	;# 
   837  051A                     	;# 
   838  0811                     	;# 
   839  0812                     	;# 
   840  0813                     	;# 
   841  0814                     	;# 
   842  0815                     	;# 
   843  0816                     	;# 
   844  0817                     	;# 
   845  0818                     	;# 
   846  0819                     	;# 
   847  081A                     	;# 
   848  081B                     	;# 
   849  081C                     	;# 
   850  081D                     	;# 
   851  081E                     	;# 
   852  081F                     	;# 
   853  0820                     	;# 
   854  0821                     	;# 
   855  0821                     	;# 
   856  0822                     	;# 
   857  0823                     	;# 
   858  0823                     	;# 
   859  0824                     	;# 
   860  0825                     	;# 
   861  0825                     	;# 
   862  0826                     	;# 
   863  0827                     	;# 
   864  0827                     	;# 
   865  0828                     	;# 
   866  0829                     	;# 
   867  082A                     	;# 
   868  082B                     	;# 
   869  082C                     	;# 
   870  082D                     	;# 
   871  082E                     	;# 
   872  082F                     	;# 
   873  0831                     	;# 
   874  0832                     	;# 
   875  0833                     	;# 
   876  0834                     	;# 
   877  0835                     	;# 
   878  0836                     	;# 
   879  0837                     	;# 
   880  0838                     	;# 
   881  0839                     	;# 
   882  083A                     	;# 
   883  083B                     	;# 
   884  083C                     	;# 
   885  083D                     	;# 
   886  083E                     	;# 
   887  083F                     	;# 
   888  0840                     	;# 
   889  0841                     	;# 
   890  0841                     	;# 
   891  0842                     	;# 
   892  0843                     	;# 
   893  0843                     	;# 
   894  0844                     	;# 
   895  0845                     	;# 
   896  0845                     	;# 
   897  0846                     	;# 
   898  0847                     	;# 
   899  0847                     	;# 
   900  0848                     	;# 
   901  0849                     	;# 
   902  084A                     	;# 
   903  084B                     	;# 
   904  084C                     	;# 
   905  084D                     	;# 
   906  084E                     	;# 
   907  084F                     	;# 
   908  0851                     	;# 
   909  0852                     	;# 
   910  0853                     	;# 
   911  0854                     	;# 
   912  0855                     	;# 
   913  0856                     	;# 
   914  0857                     	;# 
   915  0858                     	;# 
   916  0859                     	;# 
   917  085A                     	;# 
   918  085B                     	;# 
   919  085C                     	;# 
   920  085D                     	;# 
   921  085E                     	;# 
   922  085F                     	;# 
   923  0860                     	;# 
   924  0861                     	;# 
   925  0861                     	;# 
   926  0862                     	;# 
   927  0863                     	;# 
   928  0863                     	;# 
   929  0864                     	;# 
   930  0865                     	;# 
   931  0865                     	;# 
   932  0866                     	;# 
   933  0867                     	;# 
   934  0867                     	;# 
   935  0868                     	;# 
   936  0869                     	;# 
   937  086A                     	;# 
   938  086B                     	;# 
   939  086C                     	;# 
   940  086D                     	;# 
   941  086E                     	;# 
   942  086F                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000D                     	;# 
   968  000E                     	;# 
   969  0010                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0013                     	;# 
   973  0014                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  0090                     	;# 
   987  0091                     	;# 
   988  0092                     	;# 
   989  0093                     	;# 
   990  0094                     	;# 
   991  0095                     	;# 
   992  0096                     	;# 
   993  0097                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  009F                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  0111                     	;# 
  1007  0112                     	;# 
  1008  0113                     	;# 
  1009  0114                     	;# 
  1010  0115                     	;# 
  1011  0116                     	;# 
  1012  0117                     	;# 
  1013  0118                     	;# 
  1014  0119                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011C                     	;# 
  1018  011D                     	;# 
  1019  011D                     	;# 
  1020  011D                     	;# 
  1021  011E                     	;# 
  1022  011F                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025  0191                     	;# 
  1026  0191                     	;# 
  1027  0192                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0193                     	;# 
  1031  0194                     	;# 
  1032  0195                     	;# 
  1033  0196                     	;# 
  1034  0197                     	;# 
  1035  0199                     	;# 
  1036  0199                     	;# 
  1037  0199                     	;# 
  1038  019A                     	;# 
  1039  019A                     	;# 
  1040  019A                     	;# 
  1041  019B                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019C                     	;# 
  1047  019C                     	;# 
  1048  019C                     	;# 
  1049  019D                     	;# 
  1050  019D                     	;# 
  1051  019D                     	;# 
  1052  019E                     	;# 
  1053  019E                     	;# 
  1054  019E                     	;# 
  1055  019F                     	;# 
  1056  019F                     	;# 
  1057  019F                     	;# 
  1058  019F                     	;# 
  1059  019F                     	;# 
  1060  020C                     	;# 
  1061  020D                     	;# 
  1062  020E                     	;# 
  1063  0210                     	;# 
  1064  0211                     	;# 
  1065  0211                     	;# 
  1066  0212                     	;# 
  1067  0212                     	;# 
  1068  0213                     	;# 
  1069  0213                     	;# 
  1070  0214                     	;# 
  1071  0214                     	;# 
  1072  0215                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  028C                     	;# 
  1081  028D                     	;# 
  1082  028E                     	;# 
  1083  0291                     	;# 
  1084  0291                     	;# 
  1085  0292                     	;# 
  1086  0293                     	;# 
  1087  0298                     	;# 
  1088  0298                     	;# 
  1089  0299                     	;# 
  1090  029A                     	;# 
  1091  030C                     	;# 
  1092  030D                     	;# 
  1093  030E                     	;# 
  1094  0311                     	;# 
  1095  0311                     	;# 
  1096  0312                     	;# 
  1097  0313                     	;# 
  1098  038C                     	;# 
  1099  038D                     	;# 
  1100  038E                     	;# 
  1101  0390                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0397                     	;# 
  1109  0398                     	;# 
  1110  0399                     	;# 
  1111  039D                     	;# 
  1112  039E                     	;# 
  1113  039F                     	;# 
  1114  0511                     	;# 
  1115  0513                     	;# 
  1116  051A                     	;# 
  1117  0811                     	;# 
  1118  0812                     	;# 
  1119  0813                     	;# 
  1120  0814                     	;# 
  1121  0815                     	;# 
  1122  0816                     	;# 
  1123  0817                     	;# 
  1124  0818                     	;# 
  1125  0819                     	;# 
  1126  081A                     	;# 
  1127  081B                     	;# 
  1128  081C                     	;# 
  1129  081D                     	;# 
  1130  081E                     	;# 
  1131  081F                     	;# 
  1132  0820                     	;# 
  1133  0821                     	;# 
  1134  0821                     	;# 
  1135  0822                     	;# 
  1136  0823                     	;# 
  1137  0823                     	;# 
  1138  0824                     	;# 
  1139  0825                     	;# 
  1140  0825                     	;# 
  1141  0826                     	;# 
  1142  0827                     	;# 
  1143  0827                     	;# 
  1144  0828                     	;# 
  1145  0829                     	;# 
  1146  082A                     	;# 
  1147  082B                     	;# 
  1148  082C                     	;# 
  1149  082D                     	;# 
  1150  082E                     	;# 
  1151  082F                     	;# 
  1152  0831                     	;# 
  1153  0832                     	;# 
  1154  0833                     	;# 
  1155  0834                     	;# 
  1156  0835                     	;# 
  1157  0836                     	;# 
  1158  0837                     	;# 
  1159  0838                     	;# 
  1160  0839                     	;# 
  1161  083A                     	;# 
  1162  083B                     	;# 
  1163  083C                     	;# 
  1164  083D                     	;# 
  1165  083E                     	;# 
  1166  083F                     	;# 
  1167  0840                     	;# 
  1168  0841                     	;# 
  1169  0841                     	;# 
  1170  0842                     	;# 
  1171  0843                     	;# 
  1172  0843                     	;# 
  1173  0844                     	;# 
  1174  0845                     	;# 
  1175  0845                     	;# 
  1176  0846                     	;# 
  1177  0847                     	;# 
  1178  0847                     	;# 
  1179  0848                     	;# 
  1180  0849                     	;# 
  1181  084A                     	;# 
  1182  084B                     	;# 
  1183  084C                     	;# 
  1184  084D                     	;# 
  1185  084E                     	;# 
  1186  084F                     	;# 
  1187  0851                     	;# 
  1188  0852                     	;# 
  1189  0853                     	;# 
  1190  0854                     	;# 
  1191  0855                     	;# 
  1192  0856                     	;# 
  1193  0857                     	;# 
  1194  0858                     	;# 
  1195  0859                     	;# 
  1196  085A                     	;# 
  1197  085B                     	;# 
  1198  085C                     	;# 
  1199  085D                     	;# 
  1200  085E                     	;# 
  1201  085F                     	;# 
  1202  0860                     	;# 
  1203  0861                     	;# 
  1204  0861                     	;# 
  1205  0862                     	;# 
  1206  0863                     	;# 
  1207  0863                     	;# 
  1208  0864                     	;# 
  1209  0865                     	;# 
  1210  0865                     	;# 
  1211  0866                     	;# 
  1212  0867                     	;# 
  1213  0867                     	;# 
  1214  0868                     	;# 
  1215  0869                     	;# 
  1216  086A                     	;# 
  1217  086B                     	;# 
  1218  086C                     	;# 
  1219  086D                     	;# 
  1220  086E                     	;# 
  1221  086F                     	;# 
  1222  0FE4                     	;# 
  1223  0FE5                     	;# 
  1224  0FE6                     	;# 
  1225  0FE7                     	;# 
  1226  0FE8                     	;# 
  1227  0FE9                     	;# 
  1228  0FEA                     	;# 
  1229  0FEB                     	;# 
  1230  0FED                     	;# 
  1231  0FEE                     	;# 
  1232  0FEF                     	;# 
  1233  0000                     	;# 
  1234  0001                     	;# 
  1235  0002                     	;# 
  1236  0003                     	;# 
  1237  0004                     	;# 
  1238  0005                     	;# 
  1239  0006                     	;# 
  1240  0007                     	;# 
  1241  0008                     	;# 
  1242  0009                     	;# 
  1243  000A                     	;# 
  1244  000B                     	;# 
  1245  000C                     	;# 
  1246  000D                     	;# 
  1247  000E                     	;# 
  1248  0010                     	;# 
  1249  0011                     	;# 
  1250  0012                     	;# 
  1251  0013                     	;# 
  1252  0014                     	;# 
  1253  0015                     	;# 
  1254  0016                     	;# 
  1255  0016                     	;# 
  1256  0017                     	;# 
  1257  0018                     	;# 
  1258  0019                     	;# 
  1259  001A                     	;# 
  1260  001B                     	;# 
  1261  001C                     	;# 
  1262  008C                     	;# 
  1263  008D                     	;# 
  1264  008E                     	;# 
  1265  0090                     	;# 
  1266  0091                     	;# 
  1267  0092                     	;# 
  1268  0093                     	;# 
  1269  0094                     	;# 
  1270  0095                     	;# 
  1271  0096                     	;# 
  1272  0097                     	;# 
  1273  0098                     	;# 
  1274  0099                     	;# 
  1275  009A                     	;# 
  1276  009B                     	;# 
  1277  009B                     	;# 
  1278  009C                     	;# 
  1279  009D                     	;# 
  1280  009E                     	;# 
  1281  009F                     	;# 
  1282  010C                     	;# 
  1283  010D                     	;# 
  1284  010E                     	;# 
  1285  0111                     	;# 
  1286  0112                     	;# 
  1287  0113                     	;# 
  1288  0114                     	;# 
  1289  0115                     	;# 
  1290  0116                     	;# 
  1291  0117                     	;# 
  1292  0118                     	;# 
  1293  0119                     	;# 
  1294  011A                     	;# 
  1295  011B                     	;# 
  1296  011C                     	;# 
  1297  011D                     	;# 
  1298  011D                     	;# 
  1299  011D                     	;# 
  1300  011E                     	;# 
  1301  011F                     	;# 
  1302  018C                     	;# 
  1303  018D                     	;# 
  1304  0191                     	;# 
  1305  0191                     	;# 
  1306  0192                     	;# 
  1307  0193                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0194                     	;# 
  1311  0195                     	;# 
  1312  0196                     	;# 
  1313  0197                     	;# 
  1314  0199                     	;# 
  1315  0199                     	;# 
  1316  0199                     	;# 
  1317  019A                     	;# 
  1318  019A                     	;# 
  1319  019A                     	;# 
  1320  019B                     	;# 
  1321  019B                     	;# 
  1322  019B                     	;# 
  1323  019B                     	;# 
  1324  019B                     	;# 
  1325  019C                     	;# 
  1326  019C                     	;# 
  1327  019C                     	;# 
  1328  019D                     	;# 
  1329  019D                     	;# 
  1330  019D                     	;# 
  1331  019E                     	;# 
  1332  019E                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  019F                     	;# 
  1336  019F                     	;# 
  1337  019F                     	;# 
  1338  019F                     	;# 
  1339  020C                     	;# 
  1340  020D                     	;# 
  1341  020E                     	;# 
  1342  0210                     	;# 
  1343  0211                     	;# 
  1344  0211                     	;# 
  1345  0212                     	;# 
  1346  0212                     	;# 
  1347  0213                     	;# 
  1348  0213                     	;# 
  1349  0214                     	;# 
  1350  0214                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0215                     	;# 
  1354  0215                     	;# 
  1355  0216                     	;# 
  1356  0216                     	;# 
  1357  0217                     	;# 
  1358  0217                     	;# 
  1359  028C                     	;# 
  1360  028D                     	;# 
  1361  028E                     	;# 
  1362  0291                     	;# 
  1363  0291                     	;# 
  1364  0292                     	;# 
  1365  0293                     	;# 
  1366  0298                     	;# 
  1367  0298                     	;# 
  1368  0299                     	;# 
  1369  029A                     	;# 
  1370  030C                     	;# 
  1371  030D                     	;# 
  1372  030E                     	;# 
  1373  0311                     	;# 
  1374  0311                     	;# 
  1375  0312                     	;# 
  1376  0313                     	;# 
  1377  038C                     	;# 
  1378  038D                     	;# 
  1379  038E                     	;# 
  1380  0390                     	;# 
  1381  0391                     	;# 
  1382  0392                     	;# 
  1383  0393                     	;# 
  1384  0394                     	;# 
  1385  0395                     	;# 
  1386  0396                     	;# 
  1387  0397                     	;# 
  1388  0398                     	;# 
  1389  0399                     	;# 
  1390  039D                     	;# 
  1391  039E                     	;# 
  1392  039F                     	;# 
  1393  0511                     	;# 
  1394  0513                     	;# 
  1395  051A                     	;# 
  1396  0811                     	;# 
  1397  0812                     	;# 
  1398  0813                     	;# 
  1399  0814                     	;# 
  1400  0815                     	;# 
  1401  0816                     	;# 
  1402  0817                     	;# 
  1403  0818                     	;# 
  1404  0819                     	;# 
  1405  081A                     	;# 
  1406  081B                     	;# 
  1407  081C                     	;# 
  1408  081D                     	;# 
  1409  081E                     	;# 
  1410  081F                     	;# 
  1411  0820                     	;# 
  1412  0821                     	;# 
  1413  0821                     	;# 
  1414  0822                     	;# 
  1415  0823                     	;# 
  1416  0823                     	;# 
  1417  0824                     	;# 
  1418  0825                     	;# 
  1419  0825                     	;# 
  1420  0826                     	;# 
  1421  0827                     	;# 
  1422  0827                     	;# 
  1423  0828                     	;# 
  1424  0829                     	;# 
  1425  082A                     	;# 
  1426  082B                     	;# 
  1427  082C                     	;# 
  1428  082D                     	;# 
  1429  082E                     	;# 
  1430  082F                     	;# 
  1431  0831                     	;# 
  1432  0832                     	;# 
  1433  0833                     	;# 
  1434  0834                     	;# 
  1435  0835                     	;# 
  1436  0836                     	;# 
  1437  0837                     	;# 
  1438  0838                     	;# 
  1439  0839                     	;# 
  1440  083A                     	;# 
  1441  083B                     	;# 
  1442  083C                     	;# 
  1443  083D                     	;# 
  1444  083E                     	;# 
  1445  083F                     	;# 
  1446  0840                     	;# 
  1447  0841                     	;# 
  1448  0841                     	;# 
  1449  0842                     	;# 
  1450  0843                     	;# 
  1451  0843                     	;# 
  1452  0844                     	;# 
  1453  0845                     	;# 
  1454  0845                     	;# 
  1455  0846                     	;# 
  1456  0847                     	;# 
  1457  0847                     	;# 
  1458  0848                     	;# 
  1459  0849                     	;# 
  1460  084A                     	;# 
  1461  084B                     	;# 
  1462  084C                     	;# 
  1463  084D                     	;# 
  1464  084E                     	;# 
  1465  084F                     	;# 
  1466  0851                     	;# 
  1467  0852                     	;# 
  1468  0853                     	;# 
  1469  0854                     	;# 
  1470  0855                     	;# 
  1471  0856                     	;# 
  1472  0857                     	;# 
  1473  0858                     	;# 
  1474  0859                     	;# 
  1475  085A                     	;# 
  1476  085B                     	;# 
  1477  085C                     	;# 
  1478  085D                     	;# 
  1479  085E                     	;# 
  1480  085F                     	;# 
  1481  0860                     	;# 
  1482  0861                     	;# 
  1483  0861                     	;# 
  1484  0862                     	;# 
  1485  0863                     	;# 
  1486  0863                     	;# 
  1487  0864                     	;# 
  1488  0865                     	;# 
  1489  0865                     	;# 
  1490  0866                     	;# 
  1491  0867                     	;# 
  1492  0867                     	;# 
  1493  0868                     	;# 
  1494  0869                     	;# 
  1495  086A                     	;# 
  1496  086B                     	;# 
  1497  086C                     	;# 
  1498  086D                     	;# 
  1499  086E                     	;# 
  1500  086F                     	;# 
  1501  0FE4                     	;# 
  1502  0FE5                     	;# 
  1503  0FE6                     	;# 
  1504  0FE7                     	;# 
  1505  0FE8                     	;# 
  1506  0FE9                     	;# 
  1507  0FEA                     	;# 
  1508  0FEB                     	;# 
  1509  0FED                     	;# 
  1510  0FEE                     	;# 
  1511  0FEF                     	;# 
  1512  0000                     	;# 
  1513  0001                     	;# 
  1514  0002                     	;# 
  1515  0003                     	;# 
  1516  0004                     	;# 
  1517  0005                     	;# 
  1518  0006                     	;# 
  1519  0007                     	;# 
  1520  0008                     	;# 
  1521  0009                     	;# 
  1522  000A                     	;# 
  1523  000B                     	;# 
  1524  000C                     	;# 
  1525  000D                     	;# 
  1526  000E                     	;# 
  1527  0010                     	;# 
  1528  0011                     	;# 
  1529  0012                     	;# 
  1530  0013                     	;# 
  1531  0014                     	;# 
  1532  0015                     	;# 
  1533  0016                     	;# 
  1534  0016                     	;# 
  1535  0017                     	;# 
  1536  0018                     	;# 
  1537  0019                     	;# 
  1538  001A                     	;# 
  1539  001B                     	;# 
  1540  001C                     	;# 
  1541  008C                     	;# 
  1542  008D                     	;# 
  1543  008E                     	;# 
  1544  0090                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0094                     	;# 
  1549  0095                     	;# 
  1550  0096                     	;# 
  1551  0097                     	;# 
  1552  0098                     	;# 
  1553  0099                     	;# 
  1554  009A                     	;# 
  1555  009B                     	;# 
  1556  009B                     	;# 
  1557  009C                     	;# 
  1558  009D                     	;# 
  1559  009E                     	;# 
  1560  009F                     	;# 
  1561  010C                     	;# 
  1562  010D                     	;# 
  1563  010E                     	;# 
  1564  0111                     	;# 
  1565  0112                     	;# 
  1566  0113                     	;# 
  1567  0114                     	;# 
  1568  0115                     	;# 
  1569  0116                     	;# 
  1570  0117                     	;# 
  1571  0118                     	;# 
  1572  0119                     	;# 
  1573  011A                     	;# 
  1574  011B                     	;# 
  1575  011C                     	;# 
  1576  011D                     	;# 
  1577  011D                     	;# 
  1578  011D                     	;# 
  1579  011E                     	;# 
  1580  011F                     	;# 
  1581  018C                     	;# 
  1582  018D                     	;# 
  1583  0191                     	;# 
  1584  0191                     	;# 
  1585  0192                     	;# 
  1586  0193                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0194                     	;# 
  1590  0195                     	;# 
  1591  0196                     	;# 
  1592  0197                     	;# 
  1593  0199                     	;# 
  1594  0199                     	;# 
  1595  0199                     	;# 
  1596  019A                     	;# 
  1597  019A                     	;# 
  1598  019A                     	;# 
  1599  019B                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019C                     	;# 
  1605  019C                     	;# 
  1606  019C                     	;# 
  1607  019D                     	;# 
  1608  019D                     	;# 
  1609  019D                     	;# 
  1610  019E                     	;# 
  1611  019E                     	;# 
  1612  019E                     	;# 
  1613  019F                     	;# 
  1614  019F                     	;# 
  1615  019F                     	;# 
  1616  019F                     	;# 
  1617  019F                     	;# 
  1618  020C                     	;# 
  1619  020D                     	;# 
  1620  020E                     	;# 
  1621  0210                     	;# 
  1622  0211                     	;# 
  1623  0211                     	;# 
  1624  0212                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0213                     	;# 
  1628  0214                     	;# 
  1629  0214                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0216                     	;# 
  1635  0216                     	;# 
  1636  0217                     	;# 
  1637  0217                     	;# 
  1638  028C                     	;# 
  1639  028D                     	;# 
  1640  028E                     	;# 
  1641  0291                     	;# 
  1642  0291                     	;# 
  1643  0292                     	;# 
  1644  0293                     	;# 
  1645  0298                     	;# 
  1646  0298                     	;# 
  1647  0299                     	;# 
  1648  029A                     	;# 
  1649  030C                     	;# 
  1650  030D                     	;# 
  1651  030E                     	;# 
  1652  0311                     	;# 
  1653  0311                     	;# 
  1654  0312                     	;# 
  1655  0313                     	;# 
  1656  038C                     	;# 
  1657  038D                     	;# 
  1658  038E                     	;# 
  1659  0390                     	;# 
  1660  0391                     	;# 
  1661  0392                     	;# 
  1662  0393                     	;# 
  1663  0394                     	;# 
  1664  0395                     	;# 
  1665  0396                     	;# 
  1666  0397                     	;# 
  1667  0398                     	;# 
  1668  0399                     	;# 
  1669  039D                     	;# 
  1670  039E                     	;# 
  1671  039F                     	;# 
  1672  0511                     	;# 
  1673  0513                     	;# 
  1674  051A                     	;# 
  1675  0811                     	;# 
  1676  0812                     	;# 
  1677  0813                     	;# 
  1678  0814                     	;# 
  1679  0815                     	;# 
  1680  0816                     	;# 
  1681  0817                     	;# 
  1682  0818                     	;# 
  1683  0819                     	;# 
  1684  081A                     	;# 
  1685  081B                     	;# 
  1686  081C                     	;# 
  1687  081D                     	;# 
  1688  081E                     	;# 
  1689  081F                     	;# 
  1690  0820                     	;# 
  1691  0821                     	;# 
  1692  0821                     	;# 
  1693  0822                     	;# 
  1694  0823                     	;# 
  1695  0823                     	;# 
  1696  0824                     	;# 
  1697  0825                     	;# 
  1698  0825                     	;# 
  1699  0826                     	;# 
  1700  0827                     	;# 
  1701  0827                     	;# 
  1702  0828                     	;# 
  1703  0829                     	;# 
  1704  082A                     	;# 
  1705  082B                     	;# 
  1706  082C                     	;# 
  1707  082D                     	;# 
  1708  082E                     	;# 
  1709  082F                     	;# 
  1710  0831                     	;# 
  1711  0832                     	;# 
  1712  0833                     	;# 
  1713  0834                     	;# 
  1714  0835                     	;# 
  1715  0836                     	;# 
  1716  0837                     	;# 
  1717  0838                     	;# 
  1718  0839                     	;# 
  1719  083A                     	;# 
  1720  083B                     	;# 
  1721  083C                     	;# 
  1722  083D                     	;# 
  1723  083E                     	;# 
  1724  083F                     	;# 
  1725  0840                     	;# 
  1726  0841                     	;# 
  1727  0841                     	;# 
  1728  0842                     	;# 
  1729  0843                     	;# 
  1730  0843                     	;# 
  1731  0844                     	;# 
  1732  0845                     	;# 
  1733  0845                     	;# 
  1734  0846                     	;# 
  1735  0847                     	;# 
  1736  0847                     	;# 
  1737  0848                     	;# 
  1738  0849                     	;# 
  1739  084A                     	;# 
  1740  084B                     	;# 
  1741  084C                     	;# 
  1742  084D                     	;# 
  1743  084E                     	;# 
  1744  084F                     	;# 
  1745  0851                     	;# 
  1746  0852                     	;# 
  1747  0853                     	;# 
  1748  0854                     	;# 
  1749  0855                     	;# 
  1750  0856                     	;# 
  1751  0857                     	;# 
  1752  0858                     	;# 
  1753  0859                     	;# 
  1754  085A                     	;# 
  1755  085B                     	;# 
  1756  085C                     	;# 
  1757  085D                     	;# 
  1758  085E                     	;# 
  1759  085F                     	;# 
  1760  0860                     	;# 
  1761  0861                     	;# 
  1762  0861                     	;# 
  1763  0862                     	;# 
  1764  0863                     	;# 
  1765  0863                     	;# 
  1766  0864                     	;# 
  1767  0865                     	;# 
  1768  0865                     	;# 
  1769  0866                     	;# 
  1770  0867                     	;# 
  1771  0867                     	;# 
  1772  0868                     	;# 
  1773  0869                     	;# 
  1774  086A                     	;# 
  1775  086B                     	;# 
  1776  086C                     	;# 
  1777  086D                     	;# 
  1778  086E                     	;# 
  1779  086F                     	;# 
  1780  0FE4                     	;# 
  1781  0FE5                     	;# 
  1782  0FE6                     	;# 
  1783  0FE7                     	;# 
  1784  0FE8                     	;# 
  1785  0FE9                     	;# 
  1786  0FEA                     	;# 
  1787  0FEB                     	;# 
  1788  0FED                     	;# 
  1789  0FEE                     	;# 
  1790  0FEF                     	;# 
  1791  0000                     	;# 
  1792  0001                     	;# 
  1793  0002                     	;# 
  1794  0003                     	;# 
  1795  0004                     	;# 
  1796  0005                     	;# 
  1797  0006                     	;# 
  1798  0007                     	;# 
  1799  0008                     	;# 
  1800  0009                     	;# 
  1801  000A                     	;# 
  1802  000B                     	;# 
  1803  000C                     	;# 
  1804  000D                     	;# 
  1805  000E                     	;# 
  1806  0010                     	;# 
  1807  0011                     	;# 
  1808  0012                     	;# 
  1809  0013                     	;# 
  1810  0014                     	;# 
  1811  0015                     	;# 
  1812  0016                     	;# 
  1813  0016                     	;# 
  1814  0017                     	;# 
  1815  0018                     	;# 
  1816  0019                     	;# 
  1817  001A                     	;# 
  1818  001B                     	;# 
  1819  001C                     	;# 
  1820  008C                     	;# 
  1821  008D                     	;# 
  1822  008E                     	;# 
  1823  0090                     	;# 
  1824  0091                     	;# 
  1825  0092                     	;# 
  1826  0093                     	;# 
  1827  0094                     	;# 
  1828  0095                     	;# 
  1829  0096                     	;# 
  1830  0097                     	;# 
  1831  0098                     	;# 
  1832  0099                     	;# 
  1833  009A                     	;# 
  1834  009B                     	;# 
  1835  009B                     	;# 
  1836  009C                     	;# 
  1837  009D                     	;# 
  1838  009E                     	;# 
  1839  009F                     	;# 
  1840  010C                     	;# 
  1841  010D                     	;# 
  1842  010E                     	;# 
  1843  0111                     	;# 
  1844  0112                     	;# 
  1845  0113                     	;# 
  1846  0114                     	;# 
  1847  0115                     	;# 
  1848  0116                     	;# 
  1849  0117                     	;# 
  1850  0118                     	;# 
  1851  0119                     	;# 
  1852  011A                     	;# 
  1853  011B                     	;# 
  1854  011C                     	;# 
  1855  011D                     	;# 
  1856  011D                     	;# 
  1857  011D                     	;# 
  1858  011E                     	;# 
  1859  011F                     	;# 
  1860  018C                     	;# 
  1861  018D                     	;# 
  1862  0191                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0193                     	;# 
  1866  0193                     	;# 
  1867  0193                     	;# 
  1868  0194                     	;# 
  1869  0195                     	;# 
  1870  0196                     	;# 
  1871  0197                     	;# 
  1872  0199                     	;# 
  1873  0199                     	;# 
  1874  0199                     	;# 
  1875  019A                     	;# 
  1876  019A                     	;# 
  1877  019A                     	;# 
  1878  019B                     	;# 
  1879  019B                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019C                     	;# 
  1884  019C                     	;# 
  1885  019C                     	;# 
  1886  019D                     	;# 
  1887  019D                     	;# 
  1888  019D                     	;# 
  1889  019E                     	;# 
  1890  019E                     	;# 
  1891  019E                     	;# 
  1892  019F                     	;# 
  1893  019F                     	;# 
  1894  019F                     	;# 
  1895  019F                     	;# 
  1896  019F                     	;# 
  1897  020C                     	;# 
  1898  020D                     	;# 
  1899  020E                     	;# 
  1900  0210                     	;# 
  1901  0211                     	;# 
  1902  0211                     	;# 
  1903  0212                     	;# 
  1904  0212                     	;# 
  1905  0213                     	;# 
  1906  0213                     	;# 
  1907  0214                     	;# 
  1908  0214                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0215                     	;# 
  1912  0215                     	;# 
  1913  0216                     	;# 
  1914  0216                     	;# 
  1915  0217                     	;# 
  1916  0217                     	;# 
  1917  028C                     	;# 
  1918  028D                     	;# 
  1919  028E                     	;# 
  1920  0291                     	;# 
  1921  0291                     	;# 
  1922  0292                     	;# 
  1923  0293                     	;# 
  1924  0298                     	;# 
  1925  0298                     	;# 
  1926  0299                     	;# 
  1927  029A                     	;# 
  1928  030C                     	;# 
  1929  030D                     	;# 
  1930  030E                     	;# 
  1931  0311                     	;# 
  1932  0311                     	;# 
  1933  0312                     	;# 
  1934  0313                     	;# 
  1935  038C                     	;# 
  1936  038D                     	;# 
  1937  038E                     	;# 
  1938  0390                     	;# 
  1939  0391                     	;# 
  1940  0392                     	;# 
  1941  0393                     	;# 
  1942  0394                     	;# 
  1943  0395                     	;# 
  1944  0396                     	;# 
  1945  0397                     	;# 
  1946  0398                     	;# 
  1947  0399                     	;# 
  1948  039D                     	;# 
  1949  039E                     	;# 
  1950  039F                     	;# 
  1951  0511                     	;# 
  1952  0513                     	;# 
  1953  051A                     	;# 
  1954  0811                     	;# 
  1955  0812                     	;# 
  1956  0813                     	;# 
  1957  0814                     	;# 
  1958  0815                     	;# 
  1959  0816                     	;# 
  1960  0817                     	;# 
  1961  0818                     	;# 
  1962  0819                     	;# 
  1963  081A                     	;# 
  1964  081B                     	;# 
  1965  081C                     	;# 
  1966  081D                     	;# 
  1967  081E                     	;# 
  1968  081F                     	;# 
  1969  0820                     	;# 
  1970  0821                     	;# 
  1971  0821                     	;# 
  1972  0822                     	;# 
  1973  0823                     	;# 
  1974  0823                     	;# 
  1975  0824                     	;# 
  1976  0825                     	;# 
  1977  0825                     	;# 
  1978  0826                     	;# 
  1979  0827                     	;# 
  1980  0827                     	;# 
  1981  0828                     	;# 
  1982  0829                     	;# 
  1983  082A                     	;# 
  1984  082B                     	;# 
  1985  082C                     	;# 
  1986  082D                     	;# 
  1987  082E                     	;# 
  1988  082F                     	;# 
  1989  0831                     	;# 
  1990  0832                     	;# 
  1991  0833                     	;# 
  1992  0834                     	;# 
  1993  0835                     	;# 
  1994  0836                     	;# 
  1995  0837                     	;# 
  1996  0838                     	;# 
  1997  0839                     	;# 
  1998  083A                     	;# 
  1999  083B                     	;# 
  2000  083C                     	;# 
  2001  083D                     	;# 
  2002  083E                     	;# 
  2003  083F                     	;# 
  2004  0840                     	;# 
  2005  0841                     	;# 
  2006  0841                     	;# 
  2007  0842                     	;# 
  2008  0843                     	;# 
  2009  0843                     	;# 
  2010  0844                     	;# 
  2011  0845                     	;# 
  2012  0845                     	;# 
  2013  0846                     	;# 
  2014  0847                     	;# 
  2015  0847                     	;# 
  2016  0848                     	;# 
  2017  0849                     	;# 
  2018  084A                     	;# 
  2019  084B                     	;# 
  2020  084C                     	;# 
  2021  084D                     	;# 
  2022  084E                     	;# 
  2023  084F                     	;# 
  2024  0851                     	;# 
  2025  0852                     	;# 
  2026  0853                     	;# 
  2027  0854                     	;# 
  2028  0855                     	;# 
  2029  0856                     	;# 
  2030  0857                     	;# 
  2031  0858                     	;# 
  2032  0859                     	;# 
  2033  085A                     	;# 
  2034  085B                     	;# 
  2035  085C                     	;# 
  2036  085D                     	;# 
  2037  085E                     	;# 
  2038  085F                     	;# 
  2039  0860                     	;# 
  2040  0861                     	;# 
  2041  0861                     	;# 
  2042  0862                     	;# 
  2043  0863                     	;# 
  2044  0863                     	;# 
  2045  0864                     	;# 
  2046  0865                     	;# 
  2047  0865                     	;# 
  2048  0866                     	;# 
  2049  0867                     	;# 
  2050  0867                     	;# 
  2051  0868                     	;# 
  2052  0869                     	;# 
  2053  086A                     	;# 
  2054  086B                     	;# 
  2055  086C                     	;# 
  2056  086D                     	;# 
  2057  086E                     	;# 
  2058  086F                     	;# 
  2059  0FE4                     	;# 
  2060  0FE5                     	;# 
  2061  0FE6                     	;# 
  2062  0FE7                     	;# 
  2063  0FE8                     	;# 
  2064  0FE9                     	;# 
  2065  0FEA                     	;# 
  2066  0FEB                     	;# 
  2067  0FED                     	;# 
  2068  0FEE                     	;# 
  2069  0FEF                     	;# 
  2070  0000                     	;# 
  2071  0001                     	;# 
  2072  0002                     	;# 
  2073  0003                     	;# 
  2074  0004                     	;# 
  2075  0005                     	;# 
  2076  0006                     	;# 
  2077  0007                     	;# 
  2078  0008                     	;# 
  2079  0009                     	;# 
  2080  000A                     	;# 
  2081  000B                     	;# 
  2082  000C                     	;# 
  2083  000D                     	;# 
  2084  000E                     	;# 
  2085  0010                     	;# 
  2086  0011                     	;# 
  2087  0012                     	;# 
  2088  0013                     	;# 
  2089  0014                     	;# 
  2090  0015                     	;# 
  2091  0016                     	;# 
  2092  0016                     	;# 
  2093  0017                     	;# 
  2094  0018                     	;# 
  2095  0019                     	;# 
  2096  001A                     	;# 
  2097  001B                     	;# 
  2098  001C                     	;# 
  2099  008C                     	;# 
  2100  008D                     	;# 
  2101  008E                     	;# 
  2102  0090                     	;# 
  2103  0091                     	;# 
  2104  0092                     	;# 
  2105  0093                     	;# 
  2106  0094                     	;# 
  2107  0095                     	;# 
  2108  0096                     	;# 
  2109  0097                     	;# 
  2110  0098                     	;# 
  2111  0099                     	;# 
  2112  009A                     	;# 
  2113  009B                     	;# 
  2114  009B                     	;# 
  2115  009C                     	;# 
  2116  009D                     	;# 
  2117  009E                     	;# 
  2118  009F                     	;# 
  2119  010C                     	;# 
  2120  010D                     	;# 
  2121  010E                     	;# 
  2122  0111                     	;# 
  2123  0112                     	;# 
  2124  0113                     	;# 
  2125  0114                     	;# 
  2126  0115                     	;# 
  2127  0116                     	;# 
  2128  0117                     	;# 
  2129  0118                     	;# 
  2130  0119                     	;# 
  2131  011A                     	;# 
  2132  011B                     	;# 
  2133  011C                     	;# 
  2134  011D                     	;# 
  2135  011D                     	;# 
  2136  011D                     	;# 
  2137  011E                     	;# 
  2138  011F                     	;# 
  2139  018C                     	;# 
  2140  018D                     	;# 
  2141  0191                     	;# 
  2142  0191                     	;# 
  2143  0192                     	;# 
  2144  0193                     	;# 
  2145  0193                     	;# 
  2146  0193                     	;# 
  2147  0194                     	;# 
  2148  0195                     	;# 
  2149  0196                     	;# 
  2150  0197                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  0199                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019A                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019C                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019D                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019E                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  020C                     	;# 
  2177  020D                     	;# 
  2178  020E                     	;# 
  2179  0210                     	;# 
  2180  0211                     	;# 
  2181  0211                     	;# 
  2182  0212                     	;# 
  2183  0212                     	;# 
  2184  0213                     	;# 
  2185  0213                     	;# 
  2186  0214                     	;# 
  2187  0214                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0215                     	;# 
  2192  0216                     	;# 
  2193  0216                     	;# 
  2194  0217                     	;# 
  2195  0217                     	;# 
  2196  028C                     	;# 
  2197  028D                     	;# 
  2198  028E                     	;# 
  2199  0291                     	;# 
  2200  0291                     	;# 
  2201  0292                     	;# 
  2202  0293                     	;# 
  2203  0298                     	;# 
  2204  0298                     	;# 
  2205  0299                     	;# 
  2206  029A                     	;# 
  2207  030C                     	;# 
  2208  030D                     	;# 
  2209  030E                     	;# 
  2210  0311                     	;# 
  2211  0311                     	;# 
  2212  0312                     	;# 
  2213  0313                     	;# 
  2214  038C                     	;# 
  2215  038D                     	;# 
  2216  038E                     	;# 
  2217  0390                     	;# 
  2218  0391                     	;# 
  2219  0392                     	;# 
  2220  0393                     	;# 
  2221  0394                     	;# 
  2222  0395                     	;# 
  2223  0396                     	;# 
  2224  0397                     	;# 
  2225  0398                     	;# 
  2226  0399                     	;# 
  2227  039D                     	;# 
  2228  039E                     	;# 
  2229  039F                     	;# 
  2230  0511                     	;# 
  2231  0513                     	;# 
  2232  051A                     	;# 
  2233  0811                     	;# 
  2234  0812                     	;# 
  2235  0813                     	;# 
  2236  0814                     	;# 
  2237  0815                     	;# 
  2238  0816                     	;# 
  2239  0817                     	;# 
  2240  0818                     	;# 
  2241  0819                     	;# 
  2242  081A                     	;# 
  2243  081B                     	;# 
  2244  081C                     	;# 
  2245  081D                     	;# 
  2246  081E                     	;# 
  2247  081F                     	;# 
  2248  0820                     	;# 
  2249  0821                     	;# 
  2250  0821                     	;# 
  2251  0822                     	;# 
  2252  0823                     	;# 
  2253  0823                     	;# 
  2254  0824                     	;# 
  2255  0825                     	;# 
  2256  0825                     	;# 
  2257  0826                     	;# 
  2258  0827                     	;# 
  2259  0827                     	;# 
  2260  0828                     	;# 
  2261  0829                     	;# 
  2262  082A                     	;# 
  2263  082B                     	;# 
  2264  082C                     	;# 
  2265  082D                     	;# 
  2266  082E                     	;# 
  2267  082F                     	;# 
  2268  0831                     	;# 
  2269  0832                     	;# 
  2270  0833                     	;# 
  2271  0834                     	;# 
  2272  0835                     	;# 
  2273  0836                     	;# 
  2274  0837                     	;# 
  2275  0838                     	;# 
  2276  0839                     	;# 
  2277  083A                     	;# 
  2278  083B                     	;# 
  2279  083C                     	;# 
  2280  083D                     	;# 
  2281  083E                     	;# 
  2282  083F                     	;# 
  2283  0840                     	;# 
  2284  0841                     	;# 
  2285  0841                     	;# 
  2286  0842                     	;# 
  2287  0843                     	;# 
  2288  0843                     	;# 
  2289  0844                     	;# 
  2290  0845                     	;# 
  2291  0845                     	;# 
  2292  0846                     	;# 
  2293  0847                     	;# 
  2294  0847                     	;# 
  2295  0848                     	;# 
  2296  0849                     	;# 
  2297  084A                     	;# 
  2298  084B                     	;# 
  2299  084C                     	;# 
  2300  084D                     	;# 
  2301  084E                     	;# 
  2302  084F                     	;# 
  2303  0851                     	;# 
  2304  0852                     	;# 
  2305  0853                     	;# 
  2306  0854                     	;# 
  2307  0855                     	;# 
  2308  0856                     	;# 
  2309  0857                     	;# 
  2310  0858                     	;# 
  2311  0859                     	;# 
  2312  085A                     	;# 
  2313  085B                     	;# 
  2314  085C                     	;# 
  2315  085D                     	;# 
  2316  085E                     	;# 
  2317  085F                     	;# 
  2318  0860                     	;# 
  2319  0861                     	;# 
  2320  0861                     	;# 
  2321  0862                     	;# 
  2322  0863                     	;# 
  2323  0863                     	;# 
  2324  0864                     	;# 
  2325  0865                     	;# 
  2326  0865                     	;# 
  2327  0866                     	;# 
  2328  0867                     	;# 
  2329  0867                     	;# 
  2330  0868                     	;# 
  2331  0869                     	;# 
  2332  086A                     	;# 
  2333  086B                     	;# 
  2334  086C                     	;# 
  2335  086D                     	;# 
  2336  086E                     	;# 
  2337  086F                     	;# 
  2338  0FE4                     	;# 
  2339  0FE5                     	;# 
  2340  0FE6                     	;# 
  2341  0FE7                     	;# 
  2342  0FE8                     	;# 
  2343  0FE9                     	;# 
  2344  0FEA                     	;# 
  2345  0FEB                     	;# 
  2346  0FED                     	;# 
  2347  0FEE                     	;# 
  2348  0FEF                     	;# 
  2349  0000                     	;# 
  2350  0001                     	;# 
  2351  0002                     	;# 
  2352  0003                     	;# 
  2353  0004                     	;# 
  2354  0005                     	;# 
  2355  0006                     	;# 
  2356  0007                     	;# 
  2357  0008                     	;# 
  2358  0009                     	;# 
  2359  000A                     	;# 
  2360  000B                     	;# 
  2361  000C                     	;# 
  2362  000D                     	;# 
  2363  000E                     	;# 
  2364  0010                     	;# 
  2365  0011                     	;# 
  2366  0012                     	;# 
  2367  0013                     	;# 
  2368  0014                     	;# 
  2369  0015                     	;# 
  2370  0016                     	;# 
  2371  0016                     	;# 
  2372  0017                     	;# 
  2373  0018                     	;# 
  2374  0019                     	;# 
  2375  001A                     	;# 
  2376  001B                     	;# 
  2377  001C                     	;# 
  2378  008C                     	;# 
  2379  008D                     	;# 
  2380  008E                     	;# 
  2381  0090                     	;# 
  2382  0091                     	;# 
  2383  0092                     	;# 
  2384  0093                     	;# 
  2385  0094                     	;# 
  2386  0095                     	;# 
  2387  0096                     	;# 
  2388  0097                     	;# 
  2389  0098                     	;# 
  2390  0099                     	;# 
  2391  009A                     	;# 
  2392  009B                     	;# 
  2393  009B                     	;# 
  2394  009C                     	;# 
  2395  009D                     	;# 
  2396  009E                     	;# 
  2397  009F                     	;# 
  2398  010C                     	;# 
  2399  010D                     	;# 
  2400  010E                     	;# 
  2401  0111                     	;# 
  2402  0112                     	;# 
  2403  0113                     	;# 
  2404  0114                     	;# 
  2405  0115                     	;# 
  2406  0116                     	;# 
  2407  0117                     	;# 
  2408  0118                     	;# 
  2409  0119                     	;# 
  2410  011A                     	;# 
  2411  011B                     	;# 
  2412  011C                     	;# 
  2413  011D                     	;# 
  2414  011D                     	;# 
  2415  011D                     	;# 
  2416  011E                     	;# 
  2417  011F                     	;# 
  2418  018C                     	;# 
  2419  018D                     	;# 
  2420  0191                     	;# 
  2421  0191                     	;# 
  2422  0192                     	;# 
  2423  0193                     	;# 
  2424  0193                     	;# 
  2425  0193                     	;# 
  2426  0194                     	;# 
  2427  0195                     	;# 
  2428  0196                     	;# 
  2429  0197                     	;# 
  2430  0199                     	;# 
  2431  0199                     	;# 
  2432  0199                     	;# 
  2433  019A                     	;# 
  2434  019A                     	;# 
  2435  019A                     	;# 
  2436  019B                     	;# 
  2437  019B                     	;# 
  2438  019B                     	;# 
  2439  019B                     	;# 
  2440  019B                     	;# 
  2441  019C                     	;# 
  2442  019C                     	;# 
  2443  019C                     	;# 
  2444  019D                     	;# 
  2445  019D                     	;# 
  2446  019D                     	;# 
  2447  019E                     	;# 
  2448  019E                     	;# 
  2449  019E                     	;# 
  2450  019F                     	;# 
  2451  019F                     	;# 
  2452  019F                     	;# 
  2453  019F                     	;# 
  2454  019F                     	;# 
  2455  020C                     	;# 
  2456  020D                     	;# 
  2457  020E                     	;# 
  2458  0210                     	;# 
  2459  0211                     	;# 
  2460  0211                     	;# 
  2461  0212                     	;# 
  2462  0212                     	;# 
  2463  0213                     	;# 
  2464  0213                     	;# 
  2465  0214                     	;# 
  2466  0214                     	;# 
  2467  0215                     	;# 
  2468  0215                     	;# 
  2469  0215                     	;# 
  2470  0215                     	;# 
  2471  0216                     	;# 
  2472  0216                     	;# 
  2473  0217                     	;# 
  2474  0217                     	;# 
  2475  028C                     	;# 
  2476  028D                     	;# 
  2477  028E                     	;# 
  2478  0291                     	;# 
  2479  0291                     	;# 
  2480  0292                     	;# 
  2481  0293                     	;# 
  2482  0298                     	;# 
  2483  0298                     	;# 
  2484  0299                     	;# 
  2485  029A                     	;# 
  2486  030C                     	;# 
  2487  030D                     	;# 
  2488  030E                     	;# 
  2489  0311                     	;# 
  2490  0311                     	;# 
  2491  0312                     	;# 
  2492  0313                     	;# 
  2493  038C                     	;# 
  2494  038D                     	;# 
  2495  038E                     	;# 
  2496  0390                     	;# 
  2497  0391                     	;# 
  2498  0392                     	;# 
  2499  0393                     	;# 
  2500  0394                     	;# 
  2501  0395                     	;# 
  2502  0396                     	;# 
  2503  0397                     	;# 
  2504  0398                     	;# 
  2505  0399                     	;# 
  2506  039D                     	;# 
  2507  039E                     	;# 
  2508  039F                     	;# 
  2509  0511                     	;# 
  2510  0513                     	;# 
  2511  051A                     	;# 
  2512  0811                     	;# 
  2513  0812                     	;# 
  2514  0813                     	;# 
  2515  0814                     	;# 
  2516  0815                     	;# 
  2517  0816                     	;# 
  2518  0817                     	;# 
  2519  0818                     	;# 
  2520  0819                     	;# 
  2521  081A                     	;# 
  2522  081B                     	;# 
  2523  081C                     	;# 
  2524  081D                     	;# 
  2525  081E                     	;# 
  2526  081F                     	;# 
  2527  0820                     	;# 
  2528  0821                     	;# 
  2529  0821                     	;# 
  2530  0822                     	;# 
  2531  0823                     	;# 
  2532  0823                     	;# 
  2533  0824                     	;# 
  2534  0825                     	;# 
  2535  0825                     	;# 
  2536  0826                     	;# 
  2537  0827                     	;# 
  2538  0827                     	;# 
  2539  0828                     	;# 
  2540  0829                     	;# 
  2541  082A                     	;# 
  2542  082B                     	;# 
  2543  082C                     	;# 
  2544  082D                     	;# 
  2545  082E                     	;# 
  2546  082F                     	;# 
  2547  0831                     	;# 
  2548  0832                     	;# 
  2549  0833                     	;# 
  2550  0834                     	;# 
  2551  0835                     	;# 
  2552  0836                     	;# 
  2553  0837                     	;# 
  2554  0838                     	;# 
  2555  0839                     	;# 
  2556  083A                     	;# 
  2557  083B                     	;# 
  2558  083C                     	;# 
  2559  083D                     	;# 
  2560  083E                     	;# 
  2561  083F                     	;# 
  2562  0840                     	;# 
  2563  0841                     	;# 
  2564  0841                     	;# 
  2565  0842                     	;# 
  2566  0843                     	;# 
  2567  0843                     	;# 
  2568  0844                     	;# 
  2569  0845                     	;# 
  2570  0845                     	;# 
  2571  0846                     	;# 
  2572  0847                     	;# 
  2573  0847                     	;# 
  2574  0848                     	;# 
  2575  0849                     	;# 
  2576  084A                     	;# 
  2577  084B                     	;# 
  2578  084C                     	;# 
  2579  084D                     	;# 
  2580  084E                     	;# 
  2581  084F                     	;# 
  2582  0851                     	;# 
  2583  0852                     	;# 
  2584  0853                     	;# 
  2585  0854                     	;# 
  2586  0855                     	;# 
  2587  0856                     	;# 
  2588  0857                     	;# 
  2589  0858                     	;# 
  2590  0859                     	;# 
  2591  085A                     	;# 
  2592  085B                     	;# 
  2593  085C                     	;# 
  2594  085D                     	;# 
  2595  085E                     	;# 
  2596  085F                     	;# 
  2597  0860                     	;# 
  2598  0861                     	;# 
  2599  0861                     	;# 
  2600  0862                     	;# 
  2601  0863                     	;# 
  2602  0863                     	;# 
  2603  0864                     	;# 
  2604  0865                     	;# 
  2605  0865                     	;# 
  2606  0866                     	;# 
  2607  0867                     	;# 
  2608  0867                     	;# 
  2609  0868                     	;# 
  2610  0869                     	;# 
  2611  086A                     	;# 
  2612  086B                     	;# 
  2613  086C                     	;# 
  2614  086D                     	;# 
  2615  086E                     	;# 
  2616  086F                     	;# 
  2617  0FE4                     	;# 
  2618  0FE5                     	;# 
  2619  0FE6                     	;# 
  2620  0FE7                     	;# 
  2621  0FE8                     	;# 
  2622  0FE9                     	;# 
  2623  0FEA                     	;# 
  2624  0FEB                     	;# 
  2625  0FED                     	;# 
  2626  0FEE                     	;# 
  2627  0FEF                     	;# 
  2628  0000                     	;# 
  2629  0001                     	;# 
  2630  0002                     	;# 
  2631  0003                     	;# 
  2632  0004                     	;# 
  2633  0005                     	;# 
  2634  0006                     	;# 
  2635  0007                     	;# 
  2636  0008                     	;# 
  2637  0009                     	;# 
  2638  000A                     	;# 
  2639  000B                     	;# 
  2640  000C                     	;# 
  2641  000D                     	;# 
  2642  000E                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0014                     	;# 
  2648  0015                     	;# 
  2649  0016                     	;# 
  2650  0016                     	;# 
  2651  0017                     	;# 
  2652  0018                     	;# 
  2653  0019                     	;# 
  2654  001A                     	;# 
  2655  001B                     	;# 
  2656  001C                     	;# 
  2657  008C                     	;# 
  2658  008D                     	;# 
  2659  008E                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0092                     	;# 
  2663  0093                     	;# 
  2664  0094                     	;# 
  2665  0095                     	;# 
  2666  0096                     	;# 
  2667  0097                     	;# 
  2668  0098                     	;# 
  2669  0099                     	;# 
  2670  009A                     	;# 
  2671  009B                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  009F                     	;# 
  2677  010C                     	;# 
  2678  010D                     	;# 
  2679  010E                     	;# 
  2680  0111                     	;# 
  2681  0112                     	;# 
  2682  0113                     	;# 
  2683  0114                     	;# 
  2684  0115                     	;# 
  2685  0116                     	;# 
  2686  0117                     	;# 
  2687  0118                     	;# 
  2688  0119                     	;# 
  2689  011A                     	;# 
  2690  011B                     	;# 
  2691  011C                     	;# 
  2692  011D                     	;# 
  2693  011D                     	;# 
  2694  011D                     	;# 
  2695  011E                     	;# 
  2696  011F                     	;# 
  2697  018C                     	;# 
  2698  018D                     	;# 
  2699  0191                     	;# 
  2700  0191                     	;# 
  2701  0192                     	;# 
  2702  0193                     	;# 
  2703  0193                     	;# 
  2704  0193                     	;# 
  2705  0194                     	;# 
  2706  0195                     	;# 
  2707  0196                     	;# 
  2708  0197                     	;# 
  2709  0199                     	;# 
  2710  0199                     	;# 
  2711  0199                     	;# 
  2712  019A                     	;# 
  2713  019A                     	;# 
  2714  019A                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019B                     	;# 
  2718  019B                     	;# 
  2719  019B                     	;# 
  2720  019C                     	;# 
  2721  019C                     	;# 
  2722  019C                     	;# 
  2723  019D                     	;# 
  2724  019D                     	;# 
  2725  019D                     	;# 
  2726  019E                     	;# 
  2727  019E                     	;# 
  2728  019E                     	;# 
  2729  019F                     	;# 
  2730  019F                     	;# 
  2731  019F                     	;# 
  2732  019F                     	;# 
  2733  019F                     	;# 
  2734  020C                     	;# 
  2735  020D                     	;# 
  2736  020E                     	;# 
  2737  0210                     	;# 
  2738  0211                     	;# 
  2739  0211                     	;# 
  2740  0212                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0213                     	;# 
  2744  0214                     	;# 
  2745  0214                     	;# 
  2746  0215                     	;# 
  2747  0215                     	;# 
  2748  0215                     	;# 
  2749  0215                     	;# 
  2750  0216                     	;# 
  2751  0216                     	;# 
  2752  0217                     	;# 
  2753  0217                     	;# 
  2754  028C                     	;# 
  2755  028D                     	;# 
  2756  028E                     	;# 
  2757  0291                     	;# 
  2758  0291                     	;# 
  2759  0292                     	;# 
  2760  0293                     	;# 
  2761  0298                     	;# 
  2762  0298                     	;# 
  2763  0299                     	;# 
  2764  029A                     	;# 
  2765  030C                     	;# 
  2766  030D                     	;# 
  2767  030E                     	;# 
  2768  0311                     	;# 
  2769  0311                     	;# 
  2770  0312                     	;# 
  2771  0313                     	;# 
  2772  038C                     	;# 
  2773  038D                     	;# 
  2774  038E                     	;# 
  2775  0390                     	;# 
  2776  0391                     	;# 
  2777  0392                     	;# 
  2778  0393                     	;# 
  2779  0394                     	;# 
  2780  0395                     	;# 
  2781  0396                     	;# 
  2782  0397                     	;# 
  2783  0398                     	;# 
  2784  0399                     	;# 
  2785  039D                     	;# 
  2786  039E                     	;# 
  2787  039F                     	;# 
  2788  0511                     	;# 
  2789  0513                     	;# 
  2790  051A                     	;# 
  2791  0811                     	;# 
  2792  0812                     	;# 
  2793  0813                     	;# 
  2794  0814                     	;# 
  2795  0815                     	;# 
  2796  0816                     	;# 
  2797  0817                     	;# 
  2798  0818                     	;# 
  2799  0819                     	;# 
  2800  081A                     	;# 
  2801  081B                     	;# 
  2802  081C                     	;# 
  2803  081D                     	;# 
  2804  081E                     	;# 
  2805  081F                     	;# 
  2806  0820                     	;# 
  2807  0821                     	;# 
  2808  0821                     	;# 
  2809  0822                     	;# 
  2810  0823                     	;# 
  2811  0823                     	;# 
  2812  0824                     	;# 
  2813  0825                     	;# 
  2814  0825                     	;# 
  2815  0826                     	;# 
  2816  0827                     	;# 
  2817  0827                     	;# 
  2818  0828                     	;# 
  2819  0829                     	;# 
  2820  082A                     	;# 
  2821  082B                     	;# 
  2822  082C                     	;# 
  2823  082D                     	;# 
  2824  082E                     	;# 
  2825  082F                     	;# 
  2826  0831                     	;# 
  2827  0832                     	;# 
  2828  0833                     	;# 
  2829  0834                     	;# 
  2830  0835                     	;# 
  2831  0836                     	;# 
  2832  0837                     	;# 
  2833  0838                     	;# 
  2834  0839                     	;# 
  2835  083A                     	;# 
  2836  083B                     	;# 
  2837  083C                     	;# 
  2838  083D                     	;# 
  2839  083E                     	;# 
  2840  083F                     	;# 
  2841  0840                     	;# 
  2842  0841                     	;# 
  2843  0841                     	;# 
  2844  0842                     	;# 
  2845  0843                     	;# 
  2846  0843                     	;# 
  2847  0844                     	;# 
  2848  0845                     	;# 
  2849  0845                     	;# 
  2850  0846                     	;# 
  2851  0847                     	;# 
  2852  0847                     	;# 
  2853  0848                     	;# 
  2854  0849                     	;# 
  2855  084A                     	;# 
  2856  084B                     	;# 
  2857  084C                     	;# 
  2858  084D                     	;# 
  2859  084E                     	;# 
  2860  084F                     	;# 
  2861  0851                     	;# 
  2862  0852                     	;# 
  2863  0853                     	;# 
  2864  0854                     	;# 
  2865  0855                     	;# 
  2866  0856                     	;# 
  2867  0857                     	;# 
  2868  0858                     	;# 
  2869  0859                     	;# 
  2870  085A                     	;# 
  2871  085B                     	;# 
  2872  085C                     	;# 
  2873  085D                     	;# 
  2874  085E                     	;# 
  2875  085F                     	;# 
  2876  0860                     	;# 
  2877  0861                     	;# 
  2878  0861                     	;# 
  2879  0862                     	;# 
  2880  0863                     	;# 
  2881  0863                     	;# 
  2882  0864                     	;# 
  2883  0865                     	;# 
  2884  0865                     	;# 
  2885  0866                     	;# 
  2886  0867                     	;# 
  2887  0867                     	;# 
  2888  0868                     	;# 
  2889  0869                     	;# 
  2890  086A                     	;# 
  2891  086B                     	;# 
  2892  086C                     	;# 
  2893  086D                     	;# 
  2894  086E                     	;# 
  2895  086F                     	;# 
  2896  0FE4                     	;# 
  2897  0FE5                     	;# 
  2898  0FE6                     	;# 
  2899  0FE7                     	;# 
  2900  0FE8                     	;# 
  2901  0FE9                     	;# 
  2902  0FEA                     	;# 
  2903  0FEB                     	;# 
  2904  0FED                     	;# 
  2905  0FEE                     	;# 
  2906  0FEF                     	;# 
  2907  0000                     	;# 
  2908  0001                     	;# 
  2909  0002                     	;# 
  2910  0003                     	;# 
  2911  0004                     	;# 
  2912  0005                     	;# 
  2913  0006                     	;# 
  2914  0007                     	;# 
  2915  0008                     	;# 
  2916  0009                     	;# 
  2917  000A                     	;# 
  2918  000B                     	;# 
  2919  000C                     	;# 
  2920  000D                     	;# 
  2921  000E                     	;# 
  2922  0010                     	;# 
  2923  0011                     	;# 
  2924  0012                     	;# 
  2925  0013                     	;# 
  2926  0014                     	;# 
  2927  0015                     	;# 
  2928  0016                     	;# 
  2929  0016                     	;# 
  2930  0017                     	;# 
  2931  0018                     	;# 
  2932  0019                     	;# 
  2933  001A                     	;# 
  2934  001B                     	;# 
  2935  001C                     	;# 
  2936  008C                     	;# 
  2937  008D                     	;# 
  2938  008E                     	;# 
  2939  0090                     	;# 
  2940  0091                     	;# 
  2941  0092                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0095                     	;# 
  2945  0096                     	;# 
  2946  0097                     	;# 
  2947  0098                     	;# 
  2948  0099                     	;# 
  2949  009A                     	;# 
  2950  009B                     	;# 
  2951  009B                     	;# 
  2952  009C                     	;# 
  2953  009D                     	;# 
  2954  009E                     	;# 
  2955  009F                     	;# 
  2956  010C                     	;# 
  2957  010D                     	;# 
  2958  010E                     	;# 
  2959  0111                     	;# 
  2960  0112                     	;# 
  2961  0113                     	;# 
  2962  0114                     	;# 
  2963  0115                     	;# 
  2964  0116                     	;# 
  2965  0117                     	;# 
  2966  0118                     	;# 
  2967  0119                     	;# 
  2968  011A                     	;# 
  2969  011B                     	;# 
  2970  011C                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011D                     	;# 
  2974  011E                     	;# 
  2975  011F                     	;# 
  2976  018C                     	;# 
  2977  018D                     	;# 
  2978  0191                     	;# 
  2979  0191                     	;# 
  2980  0192                     	;# 
  2981  0193                     	;# 
  2982  0193                     	;# 
  2983  0193                     	;# 
  2984  0194                     	;# 
  2985  0195                     	;# 
  2986  0196                     	;# 
  2987  0197                     	;# 
  2988  0199                     	;# 
  2989  0199                     	;# 
  2990  0199                     	;# 
  2991  019A                     	;# 
  2992  019A                     	;# 
  2993  019A                     	;# 
  2994  019B                     	;# 
  2995  019B                     	;# 
  2996  019B                     	;# 
  2997  019B                     	;# 
  2998  019B                     	;# 
  2999  019C                     	;# 
  3000  019C                     	;# 
  3001  019C                     	;# 
  3002  019D                     	;# 
  3003  019D                     	;# 
  3004  019D                     	;# 
  3005  019E                     	;# 
  3006  019E                     	;# 
  3007  019E                     	;# 
  3008  019F                     	;# 
  3009  019F                     	;# 
  3010  019F                     	;# 
  3011  019F                     	;# 
  3012  019F                     	;# 
  3013  020C                     	;# 
  3014  020D                     	;# 
  3015  020E                     	;# 
  3016  0210                     	;# 
  3017  0211                     	;# 
  3018  0211                     	;# 
  3019  0212                     	;# 
  3020  0212                     	;# 
  3021  0213                     	;# 
  3022  0213                     	;# 
  3023  0214                     	;# 
  3024  0214                     	;# 
  3025  0215                     	;# 
  3026  0215                     	;# 
  3027  0215                     	;# 
  3028  0215                     	;# 
  3029  0216                     	;# 
  3030  0216                     	;# 
  3031  0217                     	;# 
  3032  0217                     	;# 
  3033  028C                     	;# 
  3034  028D                     	;# 
  3035  028E                     	;# 
  3036  0291                     	;# 
  3037  0291                     	;# 
  3038  0292                     	;# 
  3039  0293                     	;# 
  3040  0298                     	;# 
  3041  0298                     	;# 
  3042  0299                     	;# 
  3043  029A                     	;# 
  3044  030C                     	;# 
  3045  030D                     	;# 
  3046  030E                     	;# 
  3047  0311                     	;# 
  3048  0311                     	;# 
  3049  0312                     	;# 
  3050  0313                     	;# 
  3051  038C                     	;# 
  3052  038D                     	;# 
  3053  038E                     	;# 
  3054  0390                     	;# 
  3055  0391                     	;# 
  3056  0392                     	;# 
  3057  0393                     	;# 
  3058  0394                     	;# 
  3059  0395                     	;# 
  3060  0396                     	;# 
  3061  0397                     	;# 
  3062  0398                     	;# 
  3063  0399                     	;# 
  3064  039D                     	;# 
  3065  039E                     	;# 
  3066  039F                     	;# 
  3067  0511                     	;# 
  3068  0513                     	;# 
  3069  051A                     	;# 
  3070  0811                     	;# 
  3071  0812                     	;# 
  3072  0813                     	;# 
  3073  0814                     	;# 
  3074  0815                     	;# 
  3075  0816                     	;# 
  3076  0817                     	;# 
  3077  0818                     	;# 
  3078  0819                     	;# 
  3079  081A                     	;# 
  3080  081B                     	;# 
  3081  081C                     	;# 
  3082  081D                     	;# 
  3083  081E                     	;# 
  3084  081F                     	;# 
  3085  0820                     	;# 
  3086  0821                     	;# 
  3087  0821                     	;# 
  3088  0822                     	;# 
  3089  0823                     	;# 
  3090  0823                     	;# 
  3091  0824                     	;# 
  3092  0825                     	;# 
  3093  0825                     	;# 
  3094  0826                     	;# 
  3095  0827                     	;# 
  3096  0827                     	;# 
  3097  0828                     	;# 
  3098  0829                     	;# 
  3099  082A                     	;# 
  3100  082B                     	;# 
  3101  082C                     	;# 
  3102  082D                     	;# 
  3103  082E                     	;# 
  3104  082F                     	;# 
  3105  0831                     	;# 
  3106  0832                     	;# 
  3107  0833                     	;# 
  3108  0834                     	;# 
  3109  0835                     	;# 
  3110  0836                     	;# 
  3111  0837                     	;# 
  3112  0838                     	;# 
  3113  0839                     	;# 
  3114  083A                     	;# 
  3115  083B                     	;# 
  3116  083C                     	;# 
  3117  083D                     	;# 
  3118  083E                     	;# 
  3119  083F                     	;# 
  3120  0840                     	;# 
  3121  0841                     	;# 
  3122  0841                     	;# 
  3123  0842                     	;# 
  3124  0843                     	;# 
  3125  0843                     	;# 
  3126  0844                     	;# 
  3127  0845                     	;# 
  3128  0845                     	;# 
  3129  0846                     	;# 
  3130  0847                     	;# 
  3131  0847                     	;# 
  3132  0848                     	;# 
  3133  0849                     	;# 
  3134  084A                     	;# 
  3135  084B                     	;# 
  3136  084C                     	;# 
  3137  084D                     	;# 
  3138  084E                     	;# 
  3139  084F                     	;# 
  3140  0851                     	;# 
  3141  0852                     	;# 
  3142  0853                     	;# 
  3143  0854                     	;# 
  3144  0855                     	;# 
  3145  0856                     	;# 
  3146  0857                     	;# 
  3147  0858                     	;# 
  3148  0859                     	;# 
  3149  085A                     	;# 
  3150  085B                     	;# 
  3151  085C                     	;# 
  3152  085D                     	;# 
  3153  085E                     	;# 
  3154  085F                     	;# 
  3155  0860                     	;# 
  3156  0861                     	;# 
  3157  0861                     	;# 
  3158  0862                     	;# 
  3159  0863                     	;# 
  3160  0863                     	;# 
  3161  0864                     	;# 
  3162  0865                     	;# 
  3163  0865                     	;# 
  3164  0866                     	;# 
  3165  0867                     	;# 
  3166  0867                     	;# 
  3167  0868                     	;# 
  3168  0869                     	;# 
  3169  086A                     	;# 
  3170  086B                     	;# 
  3171  086C                     	;# 
  3172  086D                     	;# 
  3173  086E                     	;# 
  3174  086F                     	;# 
  3175  0FE4                     	;# 
  3176  0FE5                     	;# 
  3177  0FE6                     	;# 
  3178  0FE7                     	;# 
  3179  0FE8                     	;# 
  3180  0FE9                     	;# 
  3181  0FEA                     	;# 
  3182  0FEB                     	;# 
  3183  0FED                     	;# 
  3184  0FEE                     	;# 
  3185  0FEF                     	;# 
  3186                           
  3187                           	psect	stringtext1
  3188  1000                     __pstringtext1:	
  3189  1000                     _segmcode:	
  3190  1000  3408               	retlw	8
  3191  1001  347C               	retlw	124
  3192  1002  3411               	retlw	17
  3193  1003  3430               	retlw	48
  3194  1004  3464               	retlw	100
  3195  1005  3422               	retlw	34
  3196  1006  3402               	retlw	2
  3197  1007  3478               	retlw	120
  3198  1008  3400               	retlw	0
  3199  1009  3420               	retlw	32
  3200  100A  34FF               	retlw	255
  3201  100B                     __end_of_segmcode:	
  3202  000C                     _PORTAbits	set	12
  3203  0012                     _PIR2bits	set	18
  3204  0015                     _TMR0	set	21
  3205  0018                     _T1CONbits	set	24
  3206  0016                     _TMR1L	set	22
  3207  0017                     _TMR1H	set	23
  3208  0011                     _PIR1bits	set	17
  3209  000E                     _PORTCbits	set	14
  3210  000B                     _INTCONbits	set	11
  3211  005E                     _PEIE	set	94
  3212  005F                     _GIE	set	95
  3213  0074                     _RC4	set	116
  3214  0092                     _PIE2bits	set	146
  3215  0091                     _PIE1bits	set	145
  3216  008C                     _TRISAbits	set	140
  3217  008E                     _TRISCbits	set	142
  3218  008E                     _TRISC	set	142
  3219  008D                     _TRISB	set	141
  3220  008C                     _TRISA	set	140
  3221  0095                     _OPTION_REGbits	set	149
  3222  0099                     _OSCCONbits	set	153
  3223  048D                     _RCIE	set	1165
  3224  048C                     _TXIE	set	1164
  3225  0473                     _TRISC3	set	1139
  3226  0474                     _TRISC4	set	1140
  3227  010D                     _LATBbits	set	269
  3228  010E                     _LATC	set	270
  3229  010D                     _LATB	set	269
  3230  010C                     _LATA	set	268
  3231  08E9                     _RXSEL	set	2281
  3232  08EA                     _TXSEL	set	2282
  3233  0874                     _LATC4	set	2164
  3234  0873                     _LATC3	set	2163
  3235  0199                     _RCREG	set	409
  3236  019A                     _TXREG	set	410
  3237  019B                     _SPBRGL	set	411
  3238  019C                     _SPBRGH	set	412
  3239  0CEC                     _CREN	set	3308
  3240  0CEF                     _SPEN	set	3311
  3241  0CF5                     _TXEN	set	3317
  3242  0CFB                     _BRG16	set	3323
  3243  0CF2                     _BRGH	set	3314
  3244  0CF4                     _SYNC	set	3316
  3245  020E                     _WPUCbits	set	526
  3246  020E                     _WPUC	set	526
  3247  020D                     _WPUB	set	525
  3248  020C                     _WPUA	set	524
  3249  1073                     _WPUC3	set	4211
  3250  1074                     _WPUC4	set	4212
  3251  029A                     _CCP2CONbits	set	666
  3252  0298                     _CCPR2L	set	664
  3253  0299                     _CCPR2H	set	665
  3254  1474                     _ODCONC4	set	5236
  3255  1473                     _ODCONC3	set	5235
  3256  0399                     _IOCCFbits	set	921
  3257  0397                     _IOCCPbits	set	919
  3258  0398                     _IOCCN	set	920
  3259  0397                     _IOCCP	set	919
  3260  0395                     _IOCBN	set	917
  3261  0394                     _IOCBP	set	916
  3262  0392                     _IOCAN	set	914
  3263  0391                     _IOCAP	set	913
  3264                           
  3265                           ; #config settings
  3266  0000                     
  3267                           	psect	cinit
  3268  003D                     start_initialization:	
  3269  003D                     __initialization:	
  3270                           
  3271                           ; Clear objects allocated to BANK0
  3272  003D  304D               	movlw	low __pbssBANK0
  3273  003E  0084               	movwf	4
  3274  003F  3000               	movlw	high __pbssBANK0
  3275  0040  0085               	movwf	5
  3276  0041  300B               	movlw	11
  3277  0042  318C  24DA  3180   	fcall	clear_ram0
  3278                           
  3279                           ; Clear objects allocated to BANK1
  3280  0045  30A0               	movlw	low __pbssBANK1
  3281  0046  0084               	movwf	4
  3282  0047  3000               	movlw	high __pbssBANK1
  3283  0048  0085               	movwf	5
  3284  0049  3027               	movlw	39
  3285  004A  318C  24DA         	fcall	clear_ram0
  3286  004C                     end_of_initialization:	
  3287                           ;End of C runtime variable initialization code
  3288                           
  3289  004C                     __end_of__initialization:	
  3290  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3291  004D  0020               	movlb	0
  3292  004E  318E  2EFD         	ljmp	_main	;jump to C main() function
  3293                           
  3294                           	psect	bssBANK0
  3295  004D                     __pbssBANK0:	
  3296  004D                     capture_handdle@last_cnt:	
  3297  004D                     	ds	2
  3298  004F                     tmp_change@key_time_cnt:	
  3299  004F                     	ds	2
  3300  0051                     led_Blink@State:	
  3301  0051                     	ds	1
  3302  0052                     _flg_rc:	
  3303  0052                     	ds	1
  3304  0053                     _TX_en:	
  3305  0053                     	ds	1
  3306  0054                     _RX_data:	
  3307  0054                     	ds	1
  3308  0055                     _TX_data:	
  3309  0055                     	ds	1
  3310  0056                     tmp_change@history_key:	
  3311  0056                     	ds	1
  3312  0057                     _ENUM:	
  3313  0057                     	ds	1
  3314                           
  3315                           	psect	bssBANK1
  3316  00A0                     __pbssBANK1:	
  3317  00A0                     _g_data:	
  3318  00A0                     	ds	39
  3319                           
  3320                           	psect	clrtext
  3321  0CDA                     clear_ram0:	
  3322                           ;	Called with FSR0 containing the base address, and
  3323                           ;	WREG with the size to clear
  3324                           
  3325  0CDA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3326  0CDB                     clrloop0:	
  3327  0CDB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3328  0CDC  3101               	addfsr 0,1
  3329  0CDD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3330  0CDE  2CDB               	goto	clrloop0	;have we reached the end yet?
  3331  0CDF  3400               	retlw	0	;all done for this memory range, return
  3332                           
  3333                           	psect	cstackBANK1
  3334  00C7                     __pcstackBANK1:	
  3335  00C7                     ??_display_update:	
  3336                           
  3337                           ; 1 bytes @ 0x0
  3338  00C7                     	ds	9
  3339                           
  3340                           	psect	cstackCOMMON
  3341  0070                     __pcstackCOMMON:	
  3342  0070                     ?_data_getdata:	
  3343  0070                     ?_display_update:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ?_display_set:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_timer_Timer0Start:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_timer_Timer0Reset:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_timer_IsTimer1Itrpt:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ??_timer_IsTimer1Itrpt:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_timer_Timer1ClrIntrpt:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ??_timer_Timer1ClrIntrpt:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_timer_IsTimer0Itrpt:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ??_timer_IsTimer0Itrpt:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ?_key_isPressed:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ??_key_isPressed:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ?_capture_Set:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ?_capture_IsEnable:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ??_capture_IsEnable:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ?_capture_IsIntrpt:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ??_capture_IsIntrpt:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ?_capture_clrIntrpt:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ??_capture_clrIntrpt:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_timer_Timer0Init:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_timer_Timer1Init:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_timer_Timer1Start:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ?_capture_init:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_IIC_Init:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ?_bpc_read_time:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?_led_SetState:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     ?_key_checkPressed:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ?_update_time:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     ?_capture_IsNegEdge:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0070                     ??_capture_IsNegEdge:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_init_env:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     ?_ISR:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439  0070                     ?_main:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0070                     ?_delay_4us:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0070                     ?_IIC_Start:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0070                     ?_IIC_Stop:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0070                     ?_IIC_Wait_Ack:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     ?_IIC_Ack:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0070                     ?_IIC_NAck:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0070                     ?_IIC_Send_Byte:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463  0070                     ?_IIC_Read_Byte:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466  0070                     ?_bit2BCD:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0070                     ?_BCD2bit:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0070                     ?_bpc_write_time:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0070                     ?_bpc_Cnt2Qua:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0070                     ?_led_Blink:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0070                     ?_display_control595_delay:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0070                     ?_display_write_byte:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0070                     ?i1_delay_4us:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0070                     ??i1_delay_4us:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493  0070                     ?i1_IIC_Start:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496  0070                     ??i1_IIC_Start:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0070                     ?i1_IIC_Stop:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0070                     ??i1_IIC_Stop:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0070                     ?i1_IIC_Wait_Ack:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508  0070                     ??i1_IIC_Wait_Ack:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511  0070                     ?i1_IIC_Send_Byte:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514  0070                     ??i1_IIC_Send_Byte:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517  0070                     ?i1_timer_Timer0Reset:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520  0070                     ??i1_timer_Timer0Reset:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523  0070                     ?i1_data_getdata:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526  0070                     ??i1_data_getdata:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529  0070                     ??i1_capture_setEdge:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532  0070                     ?i1_capture_Set:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535  0070                     ??i1_capture_Set:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538  0070                     ?i1_led_SetState:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541  0070                     ??i1_led_SetState:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544  0070                     ?i1_display_control595_delay:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547  0070                     ??i1_display_control595_delay:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550  0070                     ?i1_display_write_byte:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553  0070                     ?i1_display_update:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556  0070                     ?_timer_Timer0Handdle:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559  0070                     ?_capture_handdle:	
  3560                           ; 2 bytes @ 0x0
  3561                           
  3562  0070                     ?_bpc_proc:	
  3563                           ; 2 bytes @ 0x0
  3564                           
  3565  0070                     ?_cnt_abs:	
  3566                           ; 2 bytes @ 0x0
  3567                           
  3568  0070                     ?_check_err:	
  3569                           ; 2 bytes @ 0x0
  3570                           
  3571  0070                     ?_capture_setEdge:	
  3572                           ; 2 bytes @ 0x0
  3573                           
  3574  0070                     ?i1_capture_setEdge:	
  3575                           ; 2 bytes @ 0x0
  3576                           
  3577  0070                     ?i1___awdiv:	
  3578                           ; 2 bytes @ 0x0
  3579                           
  3580  0070                     ?i1___awmod:	
  3581                           ; 2 bytes @ 0x0
  3582                           
  3583  0070                     i1capture_setEdge@edge:	
  3584                           ; 2 bytes @ 0x0
  3585                           
  3586  0070                     i1capture_Set@isON:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     i1led_SetState@isOn:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     cnt_abs@a:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     i1___awdiv@divisor:	
  3596                           ; 2 bytes @ 0x0
  3597                           
  3598  0070                     i1___awmod@divisor:	
  3599                           ; 2 bytes @ 0x0
  3600                           
  3601                           
  3602                           ; 2 bytes @ 0x0
  3603  0070                     	ds	1
  3604  0071                     ??_capture_handdle:	
  3605  0071                     ??_led_Blink:	
  3606                           ; 1 bytes @ 0x1
  3607                           
  3608  0071                     key_isPressed@pdata:	
  3609                           ; 1 bytes @ 0x1
  3610                           
  3611  0071                     i1IIC_Wait_Ack@ucErrTime:	
  3612                           ; 1 bytes @ 0x1
  3613                           
  3614  0071                     i1IIC_Send_Byte@txd:	
  3615                           ; 1 bytes @ 0x1
  3616                           
  3617  0071                     i1display_control595_delay@times:	
  3618                           ; 1 bytes @ 0x1
  3619                           
  3620                           
  3621                           ; 1 bytes @ 0x1
  3622  0071                     	ds	1
  3623  0072                     ??_key_checkPressed:	
  3624  0072                     ??_check_err:	
  3625                           ; 1 bytes @ 0x2
  3626                           
  3627  0072                     ??i1_display_write_byte:	
  3628                           ; 1 bytes @ 0x2
  3629                           
  3630  0072                     i1IIC_Send_Byte@t:	
  3631                           ; 1 bytes @ 0x2
  3632                           
  3633  0072                     cnt_abs@b:	
  3634                           ; 1 bytes @ 0x2
  3635                           
  3636  0072                     i1___awdiv@dividend:	
  3637                           ; 2 bytes @ 0x2
  3638                           
  3639  0072                     i1___awmod@dividend:	
  3640                           ; 2 bytes @ 0x2
  3641                           
  3642                           
  3643                           ; 2 bytes @ 0x2
  3644  0072                     	ds	1
  3645  0073                     key_checkPressed@pdata:	
  3646                           
  3647                           ; 1 bytes @ 0x3
  3648  0073                     	ds	1
  3649  0074                     ??_cnt_abs:	
  3650  0074                     ??_bpc_Cnt2Qua:	
  3651                           ; 1 bytes @ 0x4
  3652                           
  3653  0074                     ??i1___awdiv:	
  3654                           ; 1 bytes @ 0x4
  3655                           
  3656  0074                     ??i1___awmod:	
  3657                           ; 1 bytes @ 0x4
  3658                           
  3659  0074                     i1display_write_byte@data:	
  3660                           ; 1 bytes @ 0x4
  3661                           
  3662                           
  3663                           ; 1 bytes @ 0x4
  3664  0074                     	ds	1
  3665  0075                     i1display_write_byte@i:	
  3666  0075                     i1___awdiv@counter:	
  3667                           ; 1 bytes @ 0x5
  3668                           
  3669  0075                     i1___awmod@counter:	
  3670                           ; 1 bytes @ 0x5
  3671                           
  3672                           
  3673                           ; 1 bytes @ 0x5
  3674  0075                     	ds	1
  3675  0076                     bpc_Cnt2Qua@pdata:	
  3676  0076                     i1___awdiv@sign:	
  3677                           ; 1 bytes @ 0x6
  3678                           
  3679  0076                     i1___awmod@sign:	
  3680                           ; 1 bytes @ 0x6
  3681                           
  3682                           
  3683                           ; 1 bytes @ 0x6
  3684  0076                     	ds	1
  3685  0077                     _capture_handdle$1404:	
  3686  0077                     i1___awdiv@quotient:	
  3687                           ; 2 bytes @ 0x7
  3688                           
  3689                           
  3690                           ; 2 bytes @ 0x7
  3691  0077                     	ds	2
  3692  0079                     ?i1_display_write_once:	
  3693  0079                     bit2BCD@inVal:	
  3694                           ; 1 bytes @ 0x9
  3695                           
  3696  0079                     capture_handdle@pdata:	
  3697                           ; 1 bytes @ 0x9
  3698                           
  3699  0079                     i1display_write_once@HR:	
  3700                           ; 1 bytes @ 0x9
  3701                           
  3702                           
  3703                           ; 1 bytes @ 0x9
  3704  0079                     	ds	1
  3705  007A                     ?_IIC_WtRTCReg:	
  3706  007A                     IIC_WtRTCReg@value:	
  3707                           ; 1 bytes @ 0xA
  3708                           
  3709  007A                     i1display_write_once@ML:	
  3710                           ; 1 bytes @ 0xA
  3711                           
  3712  007A                     capture_handdle@cnt_int:	
  3713                           ; 1 bytes @ 0xA
  3714                           
  3715                           
  3716                           ; 2 bytes @ 0xA
  3717  007A                     	ds	1
  3718  007B                     ??_IIC_WtRTCReg:	
  3719  007B                     IIC_WtRTCReg@regAddr:	
  3720                           ; 1 bytes @ 0xB
  3721                           
  3722  007B                     i1display_write_once@MR:	
  3723                           ; 1 bytes @ 0xB
  3724                           
  3725                           
  3726                           ; 1 bytes @ 0xB
  3727  007B                     	ds	1
  3728  007C                     ??_bpc_write_time:	
  3729  007C                     ??i1_display_write_once:	
  3730                           ; 1 bytes @ 0xC
  3731                           
  3732  007C                     i1display_write_once@HL:	
  3733                           ; 1 bytes @ 0xC
  3734                           
  3735  007C                     capture_handdle@cnt_tmp:	
  3736                           ; 1 bytes @ 0xC
  3737                           
  3738                           
  3739                           ; 2 bytes @ 0xC
  3740  007C                     	ds	1
  3741  007D                     bpc_write_time@pdata:	
  3742  007D                     update_time@pdata:	
  3743                           ; 1 bytes @ 0xD
  3744                           
  3745                           
  3746                           ; 1 bytes @ 0xD
  3747  007D                     	ds	1
  3748  007E                     ??_timer_Timer0Handdle:	
  3749  007E                     ??_ISR:	
  3750                           ; 1 bytes @ 0xE
  3751                           
  3752                           
  3753                           	psect	cstackBANK0
  3754  0020                     __pcstackBANK0:	
  3755                           ; 1 bytes @ 0xE
  3756                           
  3757  0020                     ??_bit2BCD:	
  3758  0020                     ??i1_display_update:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761  0020                     _check_err$1166:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764                           
  3765                           ; 2 bytes @ 0x0
  3766  0020                     	ds	2
  3767  0022                     _check_err$1167:	
  3768                           
  3769                           ; 2 bytes @ 0x2
  3770  0022                     	ds	2
  3771  0024                     _check_err$1170:	
  3772                           
  3773                           ; 2 bytes @ 0x4
  3774  0024                     	ds	2
  3775  0026                     _check_err$1171:	
  3776                           
  3777                           ; 2 bytes @ 0x6
  3778  0026                     	ds	2
  3779  0028                     check_err@i:	
  3780                           
  3781                           ; 1 bytes @ 0x8
  3782  0028                     	ds	1
  3783  0029                     check_err@check:	
  3784  0029                     i1_display_update$1572:	
  3785                           ; 1 bytes @ 0x9
  3786                           
  3787                           
  3788                           ; 2 bytes @ 0x9
  3789  0029                     	ds	1
  3790  002A                     check_err@pdata:	
  3791                           
  3792                           ; 1 bytes @ 0xA
  3793  002A                     	ds	1
  3794  002B                     i1display_update@pdata:	
  3795                           
  3796                           ; 1 bytes @ 0xB
  3797  002B                     	ds	1
  3798  002C                     ??_bpc_proc:	
  3799  002C                     ??_update_time:	
  3800                           ; 1 bytes @ 0xC
  3801                           
  3802                           
  3803                           ; 1 bytes @ 0xC
  3804  002C                     	ds	2
  3805  002E                     bpc_proc@last_time_s:	
  3806                           
  3807                           ; 2 bytes @ 0xE
  3808  002E                     	ds	2
  3809  0030                     bpc_proc@last_time_h:	
  3810                           
  3811                           ; 2 bytes @ 0x10
  3812  0030                     	ds	2
  3813  0032                     bpc_proc@last_time_m:	
  3814                           
  3815                           ; 2 bytes @ 0x12
  3816  0032                     	ds	2
  3817  0034                     bpc_proc@i:	
  3818                           
  3819                           ; 2 bytes @ 0x14
  3820  0034                     	ds	2
  3821  0036                     bpc_proc@number:	
  3822                           
  3823                           ; 1 bytes @ 0x16
  3824  0036                     	ds	1
  3825  0037                     bpc_proc@pdata:	
  3826                           
  3827                           ; 1 bytes @ 0x17
  3828  0037                     	ds	1
  3829  0038                     ??_data_getdata:	
  3830  0038                     ??_display_set:	
  3831                           ; 1 bytes @ 0x18
  3832                           
  3833  0038                     ??_timer_Timer0Start:	
  3834                           ; 1 bytes @ 0x18
  3835                           
  3836  0038                     ??_timer_Timer0Reset:	
  3837                           ; 1 bytes @ 0x18
  3838                           
  3839  0038                     ??_capture_Set:	
  3840                           ; 1 bytes @ 0x18
  3841                           
  3842  0038                     ??_timer_Timer0Init:	
  3843                           ; 1 bytes @ 0x18
  3844                           
  3845  0038                     ??_timer_Timer1Init:	
  3846                           ; 1 bytes @ 0x18
  3847                           
  3848  0038                     ??_timer_Timer1Start:	
  3849                           ; 1 bytes @ 0x18
  3850                           
  3851  0038                     ??_IIC_Init:	
  3852                           ; 1 bytes @ 0x18
  3853                           
  3854  0038                     ??_led_SetState:	
  3855                           ; 1 bytes @ 0x18
  3856                           
  3857  0038                     ??_delay_4us:	
  3858                           ; 1 bytes @ 0x18
  3859                           
  3860  0038                     ??_IIC_Start:	
  3861                           ; 1 bytes @ 0x18
  3862                           
  3863  0038                     ??_IIC_Stop:	
  3864                           ; 1 bytes @ 0x18
  3865                           
  3866  0038                     ??_IIC_Wait_Ack:	
  3867                           ; 1 bytes @ 0x18
  3868                           
  3869  0038                     ??_IIC_Ack:	
  3870                           ; 1 bytes @ 0x18
  3871                           
  3872  0038                     ??_IIC_NAck:	
  3873                           ; 1 bytes @ 0x18
  3874                           
  3875  0038                     ??_IIC_Send_Byte:	
  3876                           ; 1 bytes @ 0x18
  3877                           
  3878  0038                     ??_IIC_Read_Byte:	
  3879                           ; 1 bytes @ 0x18
  3880                           
  3881  0038                     ??_capture_setEdge:	
  3882                           ; 1 bytes @ 0x18
  3883                           
  3884  0038                     ??_display_control595_delay:	
  3885                           ; 1 bytes @ 0x18
  3886                           
  3887  0038                     ?___bmul:	
  3888                           ; 1 bytes @ 0x18
  3889                           
  3890  0038                     ?___awdiv:	
  3891                           ; 1 bytes @ 0x18
  3892                           
  3893  0038                     ?___awmod:	
  3894                           ; 2 bytes @ 0x18
  3895                           
  3896  0038                     capture_setEdge@edge:	
  3897                           ; 2 bytes @ 0x18
  3898                           
  3899  0038                     capture_Set@isON:	
  3900                           ; 1 bytes @ 0x18
  3901                           
  3902  0038                     led_SetState@isOn:	
  3903                           ; 1 bytes @ 0x18
  3904                           
  3905  0038                     display_set@ison:	
  3906                           ; 1 bytes @ 0x18
  3907                           
  3908  0038                     ___bmul@multiplicand:	
  3909                           ; 1 bytes @ 0x18
  3910                           
  3911  0038                     ___awdiv@divisor:	
  3912                           ; 1 bytes @ 0x18
  3913                           
  3914  0038                     ___awmod@divisor:	
  3915                           ; 2 bytes @ 0x18
  3916                           
  3917                           
  3918                           ; 2 bytes @ 0x18
  3919  0038                     	ds	1
  3920  0039                     ??_capture_init:	
  3921  0039                     ??___bmul:	
  3922                           ; 1 bytes @ 0x19
  3923                           
  3924  0039                     IIC_Wait_Ack@ucErrTime:	
  3925                           ; 1 bytes @ 0x19
  3926                           
  3927  0039                     IIC_Send_Byte@txd:	
  3928                           ; 1 bytes @ 0x19
  3929                           
  3930  0039                     IIC_Read_Byte@ack:	
  3931                           ; 1 bytes @ 0x19
  3932                           
  3933  0039                     display_control595_delay@times:	
  3934                           ; 1 bytes @ 0x19
  3935                           
  3936                           
  3937                           ; 1 bytes @ 0x19
  3938  0039                     	ds	1
  3939  003A                     ??_display_write_byte:	
  3940  003A                     IIC_Send_Byte@t:	
  3941                           ; 1 bytes @ 0x1A
  3942                           
  3943  003A                     IIC_Read_Byte@receive:	
  3944                           ; 1 bytes @ 0x1A
  3945                           
  3946  003A                     ___bmul@product:	
  3947                           ; 1 bytes @ 0x1A
  3948                           
  3949  003A                     ___awdiv@dividend:	
  3950                           ; 1 bytes @ 0x1A
  3951                           
  3952  003A                     ___awmod@dividend:	
  3953                           ; 2 bytes @ 0x1A
  3954                           
  3955                           
  3956                           ; 2 bytes @ 0x1A
  3957  003A                     	ds	1
  3958  003B                     IIC_Read_Byte@i:	
  3959  003B                     ___bmul@multiplier:	
  3960                           ; 1 bytes @ 0x1B
  3961                           
  3962                           
  3963                           ; 1 bytes @ 0x1B
  3964  003B                     	ds	1
  3965  003C                     ?_IIC_RdRTCReg:	
  3966  003C                     ??_BCD2bit:	
  3967                           ; 1 bytes @ 0x1C
  3968                           
  3969  003C                     ??___awdiv:	
  3970                           ; 1 bytes @ 0x1C
  3971                           
  3972  003C                     ??___awmod:	
  3973                           ; 1 bytes @ 0x1C
  3974                           
  3975  003C                     IIC_RdRTCReg@value:	
  3976                           ; 1 bytes @ 0x1C
  3977                           
  3978  003C                     display_write_byte@data:	
  3979                           ; 1 bytes @ 0x1C
  3980                           
  3981                           
  3982                           ; 1 bytes @ 0x1C
  3983  003C                     	ds	1
  3984  003D                     ??_IIC_RdRTCReg:	
  3985  003D                     display_write_byte@i:	
  3986                           ; 1 bytes @ 0x1D
  3987                           
  3988  003D                     ___awdiv@counter:	
  3989                           ; 1 bytes @ 0x1D
  3990                           
  3991  003D                     ___awmod@counter:	
  3992                           ; 1 bytes @ 0x1D
  3993                           
  3994                           
  3995                           ; 1 bytes @ 0x1D
  3996  003D                     	ds	1
  3997  003E                     IIC_RdRTCReg@regAddr:	
  3998  003E                     ___awdiv@sign:	
  3999                           ; 1 bytes @ 0x1E
  4000                           
  4001  003E                     ___awmod@sign:	
  4002                           ; 1 bytes @ 0x1E
  4003                           
  4004                           
  4005                           ; 1 bytes @ 0x1E
  4006  003E                     	ds	1
  4007  003F                     BCD2bit@inVal:	
  4008  003F                     ___awdiv@quotient:	
  4009                           ; 1 bytes @ 0x1F
  4010                           
  4011                           
  4012                           ; 2 bytes @ 0x1F
  4013  003F                     	ds	1
  4014  0040                     ??_bpc_read_time:	
  4015                           
  4016                           ; 1 bytes @ 0x20
  4017  0040                     	ds	1
  4018  0041                     ?_display_write_once:	
  4019  0041                     bpc_read_time@pdata:	
  4020                           ; 1 bytes @ 0x21
  4021                           
  4022  0041                     display_write_once@HR:	
  4023                           ; 1 bytes @ 0x21
  4024                           
  4025                           
  4026                           ; 1 bytes @ 0x21
  4027  0041                     	ds	1
  4028  0042                     bpc_read_time@dataBCD:	
  4029  0042                     display_write_once@ML:	
  4030                           ; 1 bytes @ 0x22
  4031                           
  4032                           
  4033                           ; 1 bytes @ 0x22
  4034  0042                     	ds	1
  4035  0043                     bpc_read_time@dataBin:	
  4036  0043                     display_write_once@MR:	
  4037                           ; 1 bytes @ 0x23
  4038                           
  4039                           
  4040                           ; 1 bytes @ 0x23
  4041  0043                     	ds	1
  4042  0044                     ??_display_write_once:	
  4043  0044                     display_write_once@HL:	
  4044                           ; 1 bytes @ 0x24
  4045                           
  4046                           
  4047                           ; 1 bytes @ 0x24
  4048  0044                     	ds	1
  4049  0045                     _display_update$1572:	
  4050                           
  4051                           ; 2 bytes @ 0x25
  4052  0045                     	ds	2
  4053  0047                     display_update@pdata:	
  4054                           
  4055                           ; 1 bytes @ 0x27
  4056  0047                     	ds	1
  4057  0048                     ??_init_env:	
  4058                           
  4059                           ; 1 bytes @ 0x28
  4060  0048                     	ds	2
  4061  004A                     init_env@i:	
  4062                           
  4063                           ; 2 bytes @ 0x2A
  4064  004A                     	ds	2
  4065  004C                     init_env@pdata:	
  4066                           
  4067                           ; 1 bytes @ 0x2C
  4068  004C                     	ds	1
  4069  004D                     ??_main:	
  4070                           
  4071                           	psect	maintext
  4072  0EFD                     __pmaintext:	
  4073                           ; 1 bytes @ 0x2D
  4074 ;;
  4075 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4076 ;;
  4077 ;; *************** function _main *****************
  4078 ;; Defined at:
  4079 ;;		line 253 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : B1F/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels required when called:   12
  4099 ;; This function calls:
  4100 ;;		_IIC_Init
  4101 ;;		_bpc_read_time
  4102 ;;		_capture_Set
  4103 ;;		_capture_init
  4104 ;;		_display_update
  4105 ;;		_init_env
  4106 ;;		_led_SetState
  4107 ;;		_timer_Timer0Init
  4108 ;;		_timer_Timer0Start
  4109 ;;		_timer_Timer1Init
  4110 ;;		_timer_Timer1Start
  4111 ;; This function is called by:
  4112 ;;		Startup code after reset
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _main
  4118  0EFD                     _main:	
  4119                           
  4120                           ;main.c: 260:     init_env();
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4124  0EFD  3184  24CE  318E   	fcall	_init_env
  4125                           
  4126                           ;main.c: 263:     timer_Timer0Init();
  4127  0F00  318D  253A  318E   	fcall	_timer_Timer0Init
  4128                           
  4129                           ;main.c: 264:     timer_Timer0Start();
  4130  0F03  318C  24CB  318E   	fcall	_timer_Timer0Start
  4131                           
  4132                           ;main.c: 267:     timer_Timer1Init();
  4133  0F06  318D  2577  318E   	fcall	_timer_Timer1Init
  4134                           
  4135                           ;main.c: 268:     timer_Timer1Start();
  4136  0F09  318C  24B8  318E   	fcall	_timer_Timer1Start
  4137                           
  4138                           ;main.c: 271:     capture_init();
  4139  0F0C  318C  24E0  318E   	fcall	_capture_init
  4140                           
  4141                           ;main.c: 277:     IIC_Init();
  4142  0F0F  318D  255D  318E   	fcall	_IIC_Init
  4143                           
  4144                           ;main.c: 286:     if(-1 == bpc_read_time()){
  4145  0F12  3185  254B  318E   	fcall	_bpc_read_time
  4146  0F15  3AFF               	xorlw	255
  4147  0F16  1D03               	skipz
  4148  0F17  2F1C               	goto	l3815
  4149                           
  4150                           ;main.c: 288:         capture_Set(TRUE);
  4151  0F18  3001               	movlw	1
  4152  0F19  318D  2551  318E   	fcall	_capture_Set
  4153  0F1C                     l3815:	
  4154                           
  4155                           ;main.c: 291:     display_update();
  4156  0F1C  3182  2269  318E   	fcall	_display_update
  4157                           
  4158                           ;main.c: 292:     led_SetState(FALSE);
  4159  0F1F  3000               	movlw	0
  4160  0F20  318D  252F  318E   	fcall	_led_SetState
  4161  0F23                     l143:	
  4162                           ;main.c: 294:     while(1)
  4163                           
  4164                           
  4165                           ;main.c: 295:     {;main.c: 304:     }
  4166  0F23  2F23               	goto	l143
  4167  0F24                     __end_of_main:	
  4168                           
  4169                           	psect	text1
  4170  0CB8                     __ptext1:	
  4171 ;; *************** function _timer_Timer1Start *****************
  4172 ;; Defined at:
  4173 ;;		line 40 in file "timer.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		None
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    7
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _timer_Timer1Start
  4203  0CB8                     _timer_Timer1Start:	
  4204                           
  4205                           ;timer.c: 43:     T1CONbits.TMR1ON = 0b1;
  4206                           
  4207                           ;incstack = 0
  4208                           ; Regs used in _timer_Timer1Start: []
  4209  0CB8  0020               	movlb	0	; select bank0
  4210  0CB9  1418               	bsf	24,0	;volatile
  4211  0CBA  0008               	return
  4212  0CBB                     __end_of_timer_Timer1Start:	
  4213                           
  4214                           	psect	text2
  4215  0D77                     __ptext2:	
  4216 ;; *************** function _timer_Timer1Init *****************
  4217 ;; Defined at:
  4218 ;;		line 9 in file "timer.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    7
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _timer_Timer1Init
  4248  0D77                     _timer_Timer1Init:	
  4249                           
  4250                           ;timer.c: 12:     INTCONbits.GIE = 0b1;
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _timer_Timer1Init: [wreg+status,2+status,0]
  4254  0D77  178B               	bsf	11,7	;volatile
  4255                           
  4256                           ;timer.c: 14:     INTCONbits.PEIE = 0b1;
  4257  0D78  170B               	bsf	11,6	;volatile
  4258                           
  4259                           ;timer.c: 15:     PIE1bits.TMR1IE = 0b1;
  4260  0D79  0021               	movlb	1	; select bank1
  4261  0D7A  1411               	bsf	17,0	;volatile
  4262                           
  4263                           ;timer.c: 17:     PIR1bits.TMR1IF = 0b0;
  4264  0D7B  0020               	movlb	0	; select bank0
  4265  0D7C  1011               	bcf	17,0	;volatile
  4266                           
  4267                           ;timer.c: 19:     TMR1H = 0b0;
  4268  0D7D  0197               	clrf	23	;volatile
  4269                           
  4270                           ;timer.c: 20:     TMR1L = 0b0;
  4271  0D7E  0196               	clrf	22	;volatile
  4272                           
  4273                           ;timer.c: 30:     T1CONbits.TMR1CS = 0b00;
  4274  0D7F  303F               	movlw	-193
  4275  0D80  0598               	andwf	24,f	;volatile
  4276                           
  4277                           ;timer.c: 33:     T1CONbits.T1CKPS = 0b11;
  4278  0D81  3030               	movlw	48
  4279  0D82  0498               	iorwf	24,f	;volatile
  4280  0D83  0008               	return
  4281  0D84                     __end_of_timer_Timer1Init:	
  4282                           
  4283                           	psect	text3
  4284  0CCB                     __ptext3:	
  4285 ;; *************** function _timer_Timer0Start *****************
  4286 ;; Defined at:
  4287 ;;		line 97 in file "timer.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    8
  4308 ;; This function calls:
  4309 ;;		_timer_Timer0Reset
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;;		_tmp_change
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _timer_Timer0Start
  4318  0CCB                     _timer_Timer0Start:	
  4319                           
  4320                           ;timer.c: 99:     timer_Timer0Reset();
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _timer_Timer0Start: [wreg+status,2+status,0+pclath+cstack]
  4324  0CCB  3187  27FB         	fcall	_timer_Timer0Reset
  4325                           
  4326                           ;timer.c: 100:     INTCONbits.TMR0IE = 0b1;
  4327  0CCD  168B               	bsf	11,5	;volatile
  4328  0CCE  0008               	return
  4329  0CCF                     __end_of_timer_Timer0Start:	
  4330                           
  4331                           	psect	text4
  4332  07FB                     __ptext4:	
  4333 ;; *************** function _timer_Timer0Reset *****************
  4334 ;; Defined at:
  4335 ;;		line 92 in file "timer.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    7
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_timer_Timer0Start
  4360 ;;		_tmp_change
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _timer_Timer0Reset
  4366  07FB                     _timer_Timer0Reset:	
  4367                           
  4368                           ;timer.c: 94:     INTCONbits.TMR0IF = 0;
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _timer_Timer0Reset: [wreg]
  4372  07FB  110B               	bcf	11,2	;volatile
  4373                           
  4374                           ;timer.c: 95:     TMR0 = (158 + 0);
  4375  07FC  309E               	movlw	158
  4376  07FD  0020               	movlb	0	; select bank0
  4377  07FE  0095               	movwf	21	;volatile
  4378  07FF  0008               	return
  4379  0800                     __end_of_timer_Timer0Reset:	
  4380                           
  4381                           	psect	text5
  4382  0D3A                     __ptext5:	
  4383 ;; *************** function _timer_Timer0Init *****************
  4384 ;; Defined at:
  4385 ;;		line 63 in file "timer.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    7
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _timer_Timer0Init
  4415  0D3A                     _timer_Timer0Init:	
  4416                           
  4417                           ;timer.c: 66:     INTCONbits.GIE = 0b1;
  4418                           
  4419                           ;incstack = 0
  4420                           ; Regs used in _timer_Timer0Init: [wreg+status,2+status,0]
  4421  0D3A  178B               	bsf	11,7	;volatile
  4422                           
  4423                           ;timer.c: 69:     INTCONbits.TMR0IE = 0b0;
  4424  0D3B  128B               	bcf	11,5	;volatile
  4425                           
  4426                           ;timer.c: 76:     OPTION_REGbits.PSA = 0;
  4427  0D3C  0021               	movlb	1	; select bank1
  4428  0D3D  1195               	bcf	21,3	;volatile
  4429                           
  4430                           ;timer.c: 77:     OPTION_REGbits.TMR0CS = 0;
  4431  0D3E  1295               	bcf	21,5	;volatile
  4432                           
  4433                           ;timer.c: 78:     OPTION_REGbits.PS = 7;
  4434  0D3F  3007               	movlw	7
  4435  0D40  0495               	iorwf	21,f	;volatile
  4436                           
  4437                           ;timer.c: 79:     TMR0 = (158 + 0);
  4438  0D41  309E               	movlw	158
  4439  0D42  0020               	movlb	0	; select bank0
  4440  0D43  0095               	movwf	21	;volatile
  4441  0D44  0008               	return
  4442  0D45                     __end_of_timer_Timer0Init:	
  4443                           
  4444                           	psect	text6
  4445  0D2F                     __ptext6:	
  4446 ;; *************** function _led_SetState *****************
  4447 ;; Defined at:
  4448 ;;		line 110 in file "hardware.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  isOn            1    wreg     unsigned char 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  isOn            1   24[BANK0 ] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    7
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_main
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _led_SetState
  4478  0D2F                     _led_SetState:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _led_SetState: [wreg+status,2+status,0]
  4482                           ;led_SetState@isOn stored from wreg
  4483  0D2F  0020               	movlb	0	; select bank0
  4484  0D30  00B8               	movwf	led_SetState@isOn
  4485                           
  4486                           ;hardware.c: 110: u8 led_SetState(u8 isOn);hardware.c: 111: {;hardware.c: 112:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  4487  0D31  0838               	movf	led_SetState@isOn,w
  4488  0D32  1D03               	btfss	3,2
  4489  0D33  2D37               	goto	u3030
  4490  0D34  0022               	movlb	2	; select bank2
  4491  0D35  158D               	bsf	13,3	;volatile
  4492  0D36  0008               	return
  4493  0D37                     u3030:	
  4494  0D37  0022               	movlb	2	; select bank2
  4495  0D38  118D               	bcf	13,3	;volatile
  4496  0D39  0008               	return
  4497  0D3A                     __end_of_led_SetState:	
  4498                           
  4499                           	psect	text7
  4500  04CE                     __ptext7:	
  4501 ;; *************** function _init_env *****************
  4502 ;; Defined at:
  4503 ;;		line 44 in file "main.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  i               2   42[BANK0 ] int 
  4508 ;;  pdata           1   44[BANK0 ] PTR volatile struct .
  4509 ;;		 -> g_data(39), 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:        5 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:   11
  4526 ;; This function calls:
  4527 ;;		_data_getdata
  4528 ;;		_display_set
  4529 ;;		_display_update
  4530 ;; This function is called by:
  4531 ;;		_main
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _init_env
  4537  04CE                     _init_env:	
  4538                           
  4539                           ;main.c: 45:     IOCCP = 0;
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in _init_env: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4543  04CE  3180  2002  3184   	fcall	_data_getdata
  4544  04D1  0020               	movlb	0	; select bank0
  4545  04D2  00C8               	movwf	??_init_env
  4546  04D3  0848               	movf	??_init_env,w
  4547  04D4  00CC               	movwf	init_env@pdata
  4548                           
  4549                           ;main.c: 51:     TRISCbits.TRISC5 = 1;
  4550  04D5  178B               	bsf	11,7	;volatile
  4551                           
  4552                           ;main.c: 58: 
  4553  04D6  0021               	movlb	1	; select bank1
  4554  04D7  0819               	movf	25,w	;volatile
  4555  04D8  39FC               	andlw	-4
  4556  04D9  3802               	iorlw	2
  4557  04DA  0099               	movwf	25	;volatile
  4558                           
  4559                           ;main.c: 62: 
  4560  04DB  0819               	movf	25,w	;volatile
  4561  04DC  3987               	andlw	-121
  4562  04DD  3858               	iorlw	88
  4563  04DE  0099               	movwf	25	;volatile
  4564                           
  4565                           ;main.c: 70: 
  4566  04DF  1395               	bcf	21,7	;volatile
  4567                           
  4568                           ;main.c: 72: 
  4569  04E0  018C               	clrf	12	;volatile
  4570                           
  4571                           ;main.c: 73: 
  4572  04E1  0022               	movlb	2	; select bank2
  4573  04E2  018C               	clrf	12	;volatile
  4574                           
  4575                           ;main.c: 74: 
  4576  04E3  0024               	movlb	4	; select bank4
  4577  04E4  018C               	clrf	12	;volatile
  4578                           
  4579                           ;main.c: 75:     LATBbits.LATB2 = PIN_LOW;
  4580  04E5  0027               	movlb	7	; select bank7
  4581  04E6  0191               	clrf	17	;volatile
  4582                           
  4583                           ;main.c: 76: 
  4584  04E7  0192               	clrf	18	;volatile
  4585                           
  4586                           ;main.c: 78:     PORTCbits.RC2 = BPC_PWR_ON;
  4587  04E8  0021               	movlb	1	; select bank1
  4588  04E9  018D               	clrf	13	;volatile
  4589                           
  4590                           ;main.c: 79: 
  4591  04EA  0022               	movlb	2	; select bank2
  4592  04EB  018D               	clrf	13	;volatile
  4593                           
  4594                           ;main.c: 80: 
  4595  04EC  0024               	movlb	4	; select bank4
  4596  04ED  018D               	clrf	13	;volatile
  4597                           
  4598                           ;main.c: 81:     TRISCbits.TRISC0 = 1;
  4599  04EE  0027               	movlb	7	; select bank7
  4600  04EF  0194               	clrf	20	;volatile
  4601                           
  4602                           ;main.c: 82:     WPUCbits.WPUC0 = 1;
  4603  04F0  0195               	clrf	21	;volatile
  4604                           
  4605                           ;main.c: 84: 
  4606  04F1  0021               	movlb	1	; select bank1
  4607  04F2  018E               	clrf	14	;volatile
  4608                           
  4609                           ;main.c: 85: 
  4610  04F3  0022               	movlb	2	; select bank2
  4611  04F4  018E               	clrf	14	;volatile
  4612                           
  4613                           ;main.c: 86:     display_set(TRUE);
  4614  04F5  3001               	movlw	1
  4615  04F6  0024               	movlb	4	; select bank4
  4616  04F7  008E               	movwf	14	;volatile
  4617                           
  4618                           ;main.c: 87: }
  4619  04F8  0027               	movlb	7	; select bank7
  4620  04F9  0197               	clrf	23	;volatile
  4621                           
  4622                           ;main.c: 88: 
  4623  04FA  0198               	clrf	24	;volatile
  4624                           
  4625                           ;main.c: 93:     static u16 key_time_cnt = 0;
  4626  04FB  0021               	movlb	1	; select bank1
  4627  04FC  168E               	bsf	14,5	;volatile
  4628                           
  4629                           ;main.c: 94:     G_DATA *pdata = data_getdata();
  4630  04FD  0024               	movlb	4	; select bank4
  4631  04FE  168E               	bsf	14,5	;volatile
  4632                           
  4633                           ;main.c: 96: 
  4634  04FF  0021               	movlb	1	; select bank1
  4635  0500  148E               	bsf	14,1	;volatile
  4636                           
  4637                           ;main.c: 97: 
  4638  0501  0024               	movlb	4	; select bank4
  4639  0502  108E               	bcf	14,1	;volatile
  4640                           
  4641                           ;main.c: 98: 
  4642  0503  0027               	movlb	7	; select bank7
  4643  0504  1497               	bsf	23,1	;volatile
  4644                           
  4645                           ;main.c: 101:     {
  4646  0505  0021               	movlb	1	; select bank1
  4647  0506  170C               	bsf	12,6	;volatile
  4648                           
  4649                           ;main.c: 102: 
  4650  0507  178C               	bsf	12,7	;volatile
  4651                           
  4652                           ;main.c: 105:         pdata->g_flg_switch = FALSE;
  4653  0508  0020               	movlb	0	; select bank0
  4654  0509  01CA               	clrf	init_env@i
  4655  050A  01CB               	clrf	init_env@i+1
  4656  050B                     l3777:	
  4657                           
  4658                           ;main.c: 106:         pdata->cnt_update = 0;
  4659  050B  3005               	movlw	5
  4660  050C  0020               	movlb	0	; select bank0
  4661  050D  00C8               	movwf	??_init_env
  4662  050E  084A               	movf	init_env@i,w
  4663  050F  074C               	addwf	init_env@pdata,w
  4664  0510  00C9               	movwf	??_init_env+1
  4665  0511  0849               	movf	??_init_env+1,w
  4666  0512  3E0D               	addlw	13
  4667  0513  0086               	movwf	6
  4668  0514  0187               	clrf	7
  4669  0515  0848               	movf	??_init_env,w
  4670  0516  0081               	movwf	1
  4671                           
  4672                           ;main.c: 107:         pdata->g_recv_count = CODE_P0;
  4673  0517  3001               	movlw	1
  4674  0518  07CA               	addwf	init_env@i,f
  4675  0519  3000               	movlw	0
  4676  051A  3DCB               	addwfc	init_env@i+1,f
  4677  051B  084B               	movf	init_env@i+1,w
  4678  051C  3A80               	xorlw	128
  4679  051D  00C8               	movwf	??_init_env
  4680  051E  3080               	movlw	128
  4681  051F  0248               	subwf	??_init_env,w
  4682  0520  1D03               	skipz
  4683  0521  2D24               	goto	u3355
  4684  0522  3014               	movlw	20
  4685  0523  024A               	subwf	init_env@i,w
  4686  0524                     u3355:	
  4687  0524  1C03               	skipc
  4688  0525  2D0B               	goto	l3777
  4689                           
  4690                           ;main.c: 108:         PORTCbits.RC2 = BPC_PWR_ON;
  4691  0526  3017               	movlw	23
  4692  0527  0020               	movlb	0	; select bank0
  4693  0528  00C8               	movwf	??_init_env
  4694  0529  084C               	movf	init_env@pdata,w
  4695  052A  3E03               	addlw	3
  4696  052B  0086               	movwf	6
  4697  052C  0187               	clrf	7
  4698  052D  0848               	movf	??_init_env,w
  4699  052E  0081               	movwf	1
  4700                           
  4701                           ;main.c: 109: 
  4702  052F  3037               	movlw	55
  4703  0530  00C8               	movwf	??_init_env
  4704  0531  084C               	movf	init_env@pdata,w
  4705  0532  3E04               	addlw	4
  4706  0533  0086               	movwf	6
  4707  0534  0187               	clrf	7
  4708  0535  0848               	movf	??_init_env,w
  4709  0536  0081               	movwf	1
  4710                           
  4711                           ;main.c: 110:         INTCONbits.IOCIF = FALSE;
  4712  0537  084C               	movf	init_env@pdata,w
  4713  0538  3E05               	addlw	5
  4714  0539  0086               	movwf	6
  4715  053A  0187               	clrf	7
  4716  053B  0181               	clrf	1
  4717                           
  4718                           ;main.c: 113:     }
  4719  053C  3182  2269  3184   	fcall	_display_update
  4720                           
  4721                           ;main.c: 117:         {
  4722  053F  0022               	movlb	2	; select bank2
  4723  0540  110D               	bcf	13,2	;volatile
  4724                           
  4725                           ;main.c: 120:         timer_Timer0Start();
  4726  0541  0020               	movlb	0	; select bank0
  4727  0542  110E               	bcf	14,2	;volatile
  4728                           
  4729                           ;main.c: 123:     {
  4730  0543  0021               	movlb	1	; select bank1
  4731  0544  140E               	bsf	14,0	;volatile
  4732                           
  4733                           ;main.c: 124:         INTCONbits.IOCIF = FALSE;
  4734  0545  0024               	movlb	4	; select bank4
  4735  0546  140E               	bsf	14,0	;volatile
  4736                           
  4737                           ;main.c: 128: 
  4738  0547  3001               	movlw	1
  4739  0548  318C  24E8         	fcall	_display_set
  4740  054A  0008               	return
  4741  054B                     __end_of_init_env:	
  4742                           
  4743                           	psect	text8
  4744  0269                     __ptext8:	
  4745 ;; *************** function _display_update *****************
  4746 ;; Defined at:
  4747 ;;		line 74 in file "display.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  pdata           1   39[BANK0 ] PTR volatile struct .
  4752 ;;		 -> g_data(39), 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Totals:         0       3       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;Total ram usage:       12 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:   10
  4769 ;; This function calls:
  4770 ;;		___awdiv
  4771 ;;		___awmod
  4772 ;;		_data_getdata
  4773 ;;		_display_write_once
  4774 ;; This function is called by:
  4775 ;;		_init_env
  4776 ;;		_main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _display_update
  4782  0269                     _display_update:	
  4783                           
  4784                           ;display.c: 88:     G_DATA *pdata = data_getdata();
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _display_update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4788  0269  3180  2002  3182   	fcall	_data_getdata
  4789  026C  0021               	movlb	1	; select bank1
  4790  026D  00C7               	movwf	??_display_update^(0+128)
  4791  026E  0847               	movf	??_display_update^(0+128),w
  4792  026F  0020               	movlb	0	; select bank0
  4793  0270  00C7               	movwf	display_update@pdata
  4794                           
  4795                           ;display.c: 89:     display_write_once(segmcode[(pdata->g_time_h/10 == 0? 10:pdata->g_ti
      +                          me_h/10)], segmcode[pdata->g_time_h%10], segmcode[pdata->g_time_m/10], segmcode[pdata->g
      +                          _time_m%10]);
  4796  0271  300A               	movlw	10
  4797  0272  00B8               	movwf	___awdiv@divisor
  4798  0273  3000               	movlw	0
  4799  0274  00B9               	movwf	___awdiv@divisor+1
  4800  0275  0847               	movf	display_update@pdata,w
  4801  0276  3E03               	addlw	3
  4802  0277  0086               	movwf	6
  4803  0278  0187               	clrf	7
  4804  0279  0801               	movf	1,w
  4805  027A  0021               	movlb	1	; select bank1
  4806  027B  00C7               	movwf	??_display_update^(0+128)
  4807  027C  01C8               	clrf	(??_display_update^(0+128)+1)
  4808  027D  0847               	movf	??_display_update^(0+128),w
  4809  027E  0020               	movlb	0	; select bank0
  4810  027F  00BA               	movwf	___awdiv@dividend
  4811  0280  0021               	movlb	1	; select bank1
  4812  0281  0848               	movf	(??_display_update+1)^(0+128),w
  4813  0282  0020               	movlb	0	; select bank0
  4814  0283  00BB               	movwf	___awdiv@dividend+1
  4815  0284  3186  2621  3182   	fcall	___awdiv
  4816  0287  0020               	movlb	0	; select bank0
  4817  0288  0838               	movf	?___awdiv,w
  4818  0289  0439               	iorwf	?___awdiv+1,w
  4819  028A  1903               	btfsc	3,2
  4820  028B  2AA8               	goto	l3711
  4821  028C  300A               	movlw	10
  4822  028D  00B8               	movwf	___awdiv@divisor
  4823  028E  3000               	movlw	0
  4824  028F  00B9               	movwf	___awdiv@divisor+1
  4825  0290  0847               	movf	display_update@pdata,w
  4826  0291  3E03               	addlw	3
  4827  0292  0086               	movwf	6
  4828  0293  0187               	clrf	7
  4829  0294  0801               	movf	1,w
  4830  0295  0021               	movlb	1	; select bank1
  4831  0296  00C7               	movwf	??_display_update^(0+128)
  4832  0297  01C8               	clrf	(??_display_update^(0+128)+1)
  4833  0298  0847               	movf	??_display_update^(0+128),w
  4834  0299  0020               	movlb	0	; select bank0
  4835  029A  00BA               	movwf	___awdiv@dividend
  4836  029B  0021               	movlb	1	; select bank1
  4837  029C  0848               	movf	(??_display_update+1)^(0+128),w
  4838  029D  0020               	movlb	0	; select bank0
  4839  029E  00BB               	movwf	___awdiv@dividend+1
  4840  029F  3186  2621  3182   	fcall	___awdiv
  4841  02A2  0020               	movlb	0	; select bank0
  4842  02A3  0839               	movf	?___awdiv+1,w
  4843  02A4  00C6               	movwf	_display_update$1572+1
  4844  02A5  0838               	movf	?___awdiv,w
  4845  02A6  00C5               	movwf	_display_update$1572
  4846  02A7  2AAC               	goto	l3713
  4847  02A8                     l3711:	
  4848  02A8  300A               	movlw	10
  4849  02A9  00C5               	movwf	_display_update$1572
  4850  02AA  3000               	movlw	0
  4851  02AB  00C6               	movwf	_display_update$1572+1
  4852  02AC                     l3713:	
  4853  02AC  300A               	movlw	10
  4854  02AD  00B8               	movwf	___awmod@divisor
  4855  02AE  3000               	movlw	0
  4856  02AF  00B9               	movwf	___awmod@divisor+1
  4857  02B0  0847               	movf	display_update@pdata,w
  4858  02B1  3E03               	addlw	3
  4859  02B2  0086               	movwf	6
  4860  02B3  0187               	clrf	7
  4861  02B4  0801               	movf	1,w
  4862  02B5  0021               	movlb	1	; select bank1
  4863  02B6  00C7               	movwf	??_display_update^(0+128)
  4864  02B7  01C8               	clrf	(??_display_update^(0+128)+1)
  4865  02B8  0847               	movf	??_display_update^(0+128),w
  4866  02B9  0020               	movlb	0	; select bank0
  4867  02BA  00BA               	movwf	___awmod@dividend
  4868  02BB  0021               	movlb	1	; select bank1
  4869  02BC  0848               	movf	(??_display_update+1)^(0+128),w
  4870  02BD  0020               	movlb	0	; select bank0
  4871  02BE  00BB               	movwf	___awmod@dividend+1
  4872  02BF  3186  26C4  3182   	fcall	___awmod
  4873  02C2  0020               	movlb	0	; select bank0
  4874  02C3  0839               	movf	?___awmod+1,w
  4875  02C4  0085               	movwf	5
  4876  02C5  0838               	movf	?___awmod,w
  4877  02C6  0084               	movwf	4
  4878  02C7  3000               	movlw	low (_segmcode| (0+32768))
  4879  02C8  0784               	addwf	4,f
  4880  02C9  3090               	movlw	high (_segmcode| (0+32768))
  4881  02CA  3D85               	addwfc	5,f
  4882  02CB  0800               	movf	0,w	;code access
  4883  02CC  0021               	movlb	1	; select bank1
  4884  02CD  00C9               	movwf	(??_display_update+2)^(0+128)
  4885  02CE  0849               	movf	(??_display_update+2)^(0+128),w
  4886  02CF  0020               	movlb	0	; select bank0
  4887  02D0  00C1               	movwf	display_write_once@HR
  4888  02D1  300A               	movlw	10
  4889  02D2  00B8               	movwf	___awdiv@divisor
  4890  02D3  3000               	movlw	0
  4891  02D4  00B9               	movwf	___awdiv@divisor+1
  4892  02D5  0847               	movf	display_update@pdata,w
  4893  02D6  3E04               	addlw	4
  4894  02D7  0086               	movwf	6
  4895  02D8  0187               	clrf	7
  4896  02D9  0801               	movf	1,w
  4897  02DA  0021               	movlb	1	; select bank1
  4898  02DB  00CA               	movwf	(??_display_update+3)^(0+128)
  4899  02DC  01CB               	clrf	((??_display_update+3)^(0+128)+1)
  4900  02DD  084A               	movf	(??_display_update+3)^(0+128),w
  4901  02DE  0020               	movlb	0	; select bank0
  4902  02DF  00BA               	movwf	___awdiv@dividend
  4903  02E0  0021               	movlb	1	; select bank1
  4904  02E1  084B               	movf	(??_display_update+4)^(0+128),w
  4905  02E2  0020               	movlb	0	; select bank0
  4906  02E3  00BB               	movwf	___awdiv@dividend+1
  4907  02E4  3186  2621  3182   	fcall	___awdiv
  4908  02E7  0020               	movlb	0	; select bank0
  4909  02E8  0839               	movf	?___awdiv+1,w
  4910  02E9  0085               	movwf	5
  4911  02EA  0838               	movf	?___awdiv,w
  4912  02EB  0084               	movwf	4
  4913  02EC  3000               	movlw	low (_segmcode| (0+32768))
  4914  02ED  0784               	addwf	4,f
  4915  02EE  3090               	movlw	high (_segmcode| (0+32768))
  4916  02EF  3D85               	addwfc	5,f
  4917  02F0  0800               	movf	0,w	;code access
  4918  02F1  0021               	movlb	1	; select bank1
  4919  02F2  00CC               	movwf	(??_display_update+5)^(0+128)
  4920  02F3  084C               	movf	(??_display_update+5)^(0+128),w
  4921  02F4  0020               	movlb	0	; select bank0
  4922  02F5  00C2               	movwf	display_write_once@ML
  4923  02F6  300A               	movlw	10
  4924  02F7  00B8               	movwf	___awmod@divisor
  4925  02F8  3000               	movlw	0
  4926  02F9  00B9               	movwf	___awmod@divisor+1
  4927  02FA  0847               	movf	display_update@pdata,w
  4928  02FB  3E04               	addlw	4
  4929  02FC  0086               	movwf	6
  4930  02FD  0187               	clrf	7
  4931  02FE  0801               	movf	1,w
  4932  02FF  0021               	movlb	1	; select bank1
  4933  0300  00CD               	movwf	(??_display_update+6)^(0+128)
  4934  0301  01CE               	clrf	((??_display_update+6)^(0+128)+1)
  4935  0302  084D               	movf	(??_display_update+6)^(0+128),w
  4936  0303  0020               	movlb	0	; select bank0
  4937  0304  00BA               	movwf	___awmod@dividend
  4938  0305  0021               	movlb	1	; select bank1
  4939  0306  084E               	movf	(??_display_update+7)^(0+128),w
  4940  0307  0020               	movlb	0	; select bank0
  4941  0308  00BB               	movwf	___awmod@dividend+1
  4942  0309  3186  26C4  3182   	fcall	___awmod
  4943  030C  0020               	movlb	0	; select bank0
  4944  030D  0839               	movf	?___awmod+1,w
  4945  030E  0085               	movwf	5
  4946  030F  0838               	movf	?___awmod,w
  4947  0310  0084               	movwf	4
  4948  0311  3000               	movlw	low (_segmcode| (0+32768))
  4949  0312  0784               	addwf	4,f
  4950  0313  3090               	movlw	high (_segmcode| (0+32768))
  4951  0314  3D85               	addwfc	5,f
  4952  0315  0800               	movf	0,w	;code access
  4953  0316  0021               	movlb	1	; select bank1
  4954  0317  00CF               	movwf	(??_display_update+8)^(0+128)
  4955  0318  084F               	movf	(??_display_update+8)^(0+128),w
  4956  0319  0020               	movlb	0	; select bank0
  4957  031A  00C3               	movwf	display_write_once@MR
  4958  031B  0846               	movf	_display_update$1572+1,w
  4959  031C  0085               	movwf	5
  4960  031D  0845               	movf	_display_update$1572,w
  4961  031E  0084               	movwf	4
  4962  031F  3000               	movlw	low (_segmcode| (0+32768))
  4963  0320  0784               	addwf	4,f
  4964  0321  3090               	movlw	high (_segmcode| (0+32768))
  4965  0322  3D85               	addwfc	5,f
  4966  0323  0800               	movf	0,w	;code access
  4967  0324  318E  26B0         	fcall	_display_write_once
  4968  0326  0008               	return
  4969  0327                     __end_of_display_update:	
  4970                           
  4971                           	psect	text9
  4972  0EB0                     __ptext9:	
  4973 ;; *************** function _display_write_once *****************
  4974 ;; Defined at:
  4975 ;;		line 56 in file "display.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  HL              1    wreg     unsigned char 
  4978 ;;  HR              1   33[BANK0 ] unsigned char 
  4979 ;;  ML              1   34[BANK0 ] unsigned char 
  4980 ;;  MR              1   35[BANK0 ] unsigned char 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  HL              1   36[BANK0 ] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0, pclath, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4992 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;Total ram usage:        4 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    9
  4999 ;; This function calls:
  5000 ;;		_display_control595_delay
  5001 ;;		_display_write_byte
  5002 ;; This function is called by:
  5003 ;;		_display_update
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           
  5008                           ;psect for function _display_write_once
  5009  0EB0                     _display_write_once:	
  5010                           
  5011                           ;incstack = 0
  5012                           ; Regs used in _display_write_once: [wreg+status,2+status,0+pclath+cstack]
  5013                           ;display_write_once@HL stored from wreg
  5014  0EB0  0020               	movlb	0	; select bank0
  5015  0EB1  00C4               	movwf	display_write_once@HL
  5016                           
  5017                           ;display.c: 58:     display_write_byte(HL);
  5018  0EB2  0844               	movf	display_write_once@HL,w
  5019  0EB3  318F  2777  318E   	fcall	_display_write_byte
  5020                           
  5021                           ;display.c: 59:     display_write_byte(HR);
  5022  0EB6  0020               	movlb	0	; select bank0
  5023  0EB7  0841               	movf	display_write_once@HR,w
  5024  0EB8  318F  2777  318E   	fcall	_display_write_byte
  5025                           
  5026                           ;display.c: 60:     display_write_byte(ML);
  5027  0EBB  0020               	movlb	0	; select bank0
  5028  0EBC  0842               	movf	display_write_once@ML,w
  5029  0EBD  318F  2777  318E   	fcall	_display_write_byte
  5030                           
  5031                           ;display.c: 61:     display_write_byte(MR);
  5032  0EC0  0020               	movlb	0	; select bank0
  5033  0EC1  0843               	movf	display_write_once@MR,w
  5034  0EC2  318F  2777  318E   	fcall	_display_write_byte
  5035                           
  5036                           ;display.c: 64:     LATBbits.LATB0 = PIN_LOW;
  5037  0EC5  0022               	movlb	2	; select bank2
  5038  0EC6  100D               	bcf	13,0	;volatile
  5039                           
  5040                           ;display.c: 65:     display_control595_delay();
  5041  0EC7  318D  256A  318E   	fcall	_display_control595_delay
  5042                           
  5043                           ;display.c: 66:     LATBbits.LATB0 = PIN_HIGH;
  5044  0ECA  0022               	movlb	2	; select bank2
  5045  0ECB  140D               	bsf	13,0	;volatile
  5046                           
  5047                           ;display.c: 67:     display_control595_delay();
  5048  0ECC  318D  256A  318E   	fcall	_display_control595_delay
  5049                           
  5050                           ;display.c: 69:     LATBbits.LATB1 = PIN_HIGH;
  5051  0ECF  0022               	movlb	2	; select bank2
  5052  0ED0  148D               	bsf	13,1	;volatile
  5053                           
  5054                           ;display.c: 70:  display_control595_delay();
  5055  0ED1  318D  256A         	fcall	_display_control595_delay
  5056                           
  5057                           ;display.c: 71:     LATBbits.LATB1 = PIN_LOW;
  5058  0ED3  0022               	movlb	2	; select bank2
  5059  0ED4  108D               	bcf	13,1	;volatile
  5060  0ED5  0008               	return
  5061  0ED6                     __end_of_display_write_once:	
  5062                           
  5063                           	psect	text10
  5064  0F77                     __ptext10:	
  5065 ;; *************** function _display_write_byte *****************
  5066 ;; Defined at:
  5067 ;;		line 44 in file "display.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  data            1    wreg     unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  data            1   28[BANK0 ] unsigned char 
  5072 ;;  i               1   29[BANK0 ] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;Total ram usage:        4 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    8
  5089 ;; This function calls:
  5090 ;;		_display_control595_delay
  5091 ;; This function is called by:
  5092 ;;		_display_write_once
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _display_write_byte
  5098  0F77                     _display_write_byte:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _display_write_byte: [wreg+status,2+status,0+pclath+cstack]
  5102                           ;display_write_byte@data stored from wreg
  5103  0F77  0020               	movlb	0	; select bank0
  5104  0F78  00BC               	movwf	display_write_byte@data
  5105                           
  5106                           ;display.c: 45:     u8 i;;display.c: 46:     for(i = 0; i < 8; i++){
  5107  0F79  01BD               	clrf	display_write_byte@i
  5108  0F7A                     l2541:	
  5109                           
  5110                           ;display.c: 47:   LATBbits.LATB5 = (data & 0x80) >> 7;
  5111  0F7A  083C               	movf	display_write_byte@data,w
  5112  0F7B  00BA               	movwf	??_display_write_byte
  5113  0F7C  3007               	movlw	7
  5114  0F7D                     u1695:	
  5115  0F7D  36BA               	lsrf	??_display_write_byte,f
  5116  0F7E  0B89               	decfsz	9,f
  5117  0F7F  2F7D               	goto	u1695
  5118  0F80  083A               	movf	??_display_write_byte,w
  5119  0F81  3901               	andlw	1
  5120  0F82  00BB               	movwf	??_display_write_byte+1
  5121  0F83  0EBB               	swapf	??_display_write_byte+1,f
  5122  0F84  0DBB               	rlf	??_display_write_byte+1,f
  5123  0F85  0022               	movlb	2	; select bank2
  5124  0F86  080D               	movf	13,w	;volatile
  5125  0F87  0020               	movlb	0	; select bank0
  5126  0F88  063B               	xorwf	??_display_write_byte+1,w
  5127  0F89  39DF               	andlw	-33
  5128  0F8A  063B               	xorwf	??_display_write_byte+1,w
  5129  0F8B  0022               	movlb	2	; select bank2
  5130  0F8C  008D               	movwf	13	;volatile
  5131                           
  5132                           ;display.c: 48:         LATBbits.LATB0 = PIN_LOW;
  5133  0F8D  100D               	bcf	13,0	;volatile
  5134                           
  5135                           ;display.c: 49:   display_control595_delay();
  5136  0F8E  318D  256A  318F   	fcall	_display_control595_delay
  5137                           
  5138                           ;display.c: 50:         LATBbits.LATB0 = PIN_HIGH;
  5139  0F91  0022               	movlb	2	; select bank2
  5140  0F92  140D               	bsf	13,0	;volatile
  5141                           
  5142                           ;display.c: 51:   display_control595_delay();
  5143  0F93  318D  256A  318F   	fcall	_display_control595_delay
  5144                           
  5145                           ;display.c: 52:         data <<= 1;
  5146  0F96  1003               	clrc
  5147  0F97  0020               	movlb	0	; select bank0
  5148  0F98  0DBC               	rlf	display_write_byte@data,f
  5149                           
  5150                           ;display.c: 53:     }
  5151  0F99  3001               	movlw	1
  5152  0F9A  00BA               	movwf	??_display_write_byte
  5153  0F9B  083A               	movf	??_display_write_byte,w
  5154  0F9C  07BD               	addwf	display_write_byte@i,f
  5155  0F9D  3008               	movlw	8
  5156  0F9E  023D               	subwf	display_write_byte@i,w
  5157  0F9F  1803               	btfsc	3,0
  5158  0FA0  0008               	return
  5159  0FA1  2F7A               	goto	l2541
  5160  0FA2                     __end_of_display_write_byte:	
  5161                           
  5162                           	psect	text11
  5163  0D6A                     __ptext11:	
  5164 ;; *************** function _display_control595_delay *****************
  5165 ;; Defined at:
  5166 ;;		line 28 in file "display.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  times           1   25[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;Total ram usage:        2 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    7
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_display_write_byte
  5191 ;;		_display_write_once
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _display_control595_delay
  5197  0D6A                     _display_control595_delay:	
  5198                           
  5199                           ;display.c: 29:    u8 times = 10;
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _display_control595_delay: [wreg+status,2+status,0]
  5203  0D6A  300A               	movlw	10
  5204  0D6B  0020               	movlb	0	; select bank0
  5205  0D6C  00B8               	movwf	??_display_control595_delay
  5206  0D6D  0838               	movf	??_display_control595_delay,w
  5207  0D6E  00B9               	movwf	display_control595_delay@times
  5208  0D6F                     l565:	
  5209                           ;display.c: 33:    }
  5210                           
  5211                           ;display.c: 30:    while(times > 0){
  5212                           
  5213                           
  5214                           ;display.c: 30:    while(times > 0){
  5215  0D6F  0839               	movf	display_control595_delay@times,w
  5216  0D70  1903               	btfsc	3,2
  5217  0D71  0008               	return
  5218                           
  5219                           ;display.c: 31:     __nop();
  5220  0D72  0000               	nop
  5221                           
  5222                           ;display.c: 32:        times--;
  5223  0D73  3001               	movlw	1
  5224  0D74  0020               	movlb	0	; select bank0
  5225  0D75  02B9               	subwf	display_control595_delay@times,f
  5226  0D76  2D6F               	goto	l565
  5227  0D77                     __end_of_display_control595_delay:	
  5228                           
  5229                           	psect	text12
  5230  06C4                     __ptext12:	
  5231 ;; *************** function ___awmod *****************
  5232 ;; Defined at:
  5233 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  divisor         2   24[BANK0 ] int 
  5236 ;;  dividend        2   26[BANK0 ] int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  sign            1   30[BANK0 ] unsigned char 
  5239 ;;  counter         1   29[BANK0 ] unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  2   24[BANK0 ] int 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;Total ram usage:        7 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    7
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_display_update
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           
  5264                           ;psect for function ___awmod
  5265  06C4                     ___awmod:	
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5269  06C4  0020               	movlb	0	; select bank0
  5270  06C5  01BE               	clrf	___awmod@sign
  5271  06C6  1FBB               	btfss	___awmod@dividend+1,7
  5272  06C7  2ECF               	goto	l2941
  5273  06C8  09BA               	comf	___awmod@dividend,f
  5274  06C9  09BB               	comf	___awmod@dividend+1,f
  5275  06CA  0ABA               	incf	___awmod@dividend,f
  5276  06CB  1903               	skipnz
  5277  06CC  0ABB               	incf	___awmod@dividend+1,f
  5278  06CD  01BE               	clrf	___awmod@sign
  5279  06CE  0ABE               	incf	___awmod@sign,f
  5280  06CF                     l2941:	
  5281  06CF  1FB9               	btfss	___awmod@divisor+1,7
  5282  06D0  2ED6               	goto	l2945
  5283  06D1  09B8               	comf	___awmod@divisor,f
  5284  06D2  09B9               	comf	___awmod@divisor+1,f
  5285  06D3  0AB8               	incf	___awmod@divisor,f
  5286  06D4  1903               	skipnz
  5287  06D5  0AB9               	incf	___awmod@divisor+1,f
  5288  06D6                     l2945:	
  5289  06D6  0838               	movf	___awmod@divisor,w
  5290  06D7  0439               	iorwf	___awmod@divisor+1,w
  5291  06D8  1903               	btfsc	3,2
  5292  06D9  2EFD               	goto	l2963
  5293  06DA  01BD               	clrf	___awmod@counter
  5294  06DB  0ABD               	incf	___awmod@counter,f
  5295  06DC                     l2953:	
  5296  06DC  1BB9               	btfsc	___awmod@divisor+1,7
  5297  06DD  2EE8               	goto	l2955
  5298  06DE  3001               	movlw	1
  5299  06DF                     u2305:	
  5300  06DF  35B8               	lslf	___awmod@divisor,f
  5301  06E0  0DB9               	rlf	___awmod@divisor+1,f
  5302  06E1  0B89               	decfsz	9,f
  5303  06E2  2EDF               	goto	u2305
  5304  06E3  3001               	movlw	1
  5305  06E4  00BC               	movwf	??___awmod
  5306  06E5  083C               	movf	??___awmod,w
  5307  06E6  07BD               	addwf	___awmod@counter,f
  5308  06E7  2EDC               	goto	l2953
  5309  06E8                     l2955:	
  5310  06E8  0839               	movf	___awmod@divisor+1,w
  5311  06E9  023B               	subwf	___awmod@dividend+1,w
  5312  06EA  1D03               	skipz
  5313  06EB  2EEE               	goto	u2325
  5314  06EC  0838               	movf	___awmod@divisor,w
  5315  06ED  023A               	subwf	___awmod@dividend,w
  5316  06EE                     u2325:	
  5317  06EE  1C03               	skipc
  5318  06EF  2EF4               	goto	l2959
  5319  06F0  0838               	movf	___awmod@divisor,w
  5320  06F1  02BA               	subwf	___awmod@dividend,f
  5321  06F2  0839               	movf	___awmod@divisor+1,w
  5322  06F3  3BBB               	subwfb	___awmod@dividend+1,f
  5323  06F4                     l2959:	
  5324  06F4  3001               	movlw	1
  5325  06F5                     u2335:	
  5326  06F5  36B9               	lsrf	___awmod@divisor+1,f
  5327  06F6  0CB8               	rrf	___awmod@divisor,f
  5328  06F7  0B89               	decfsz	9,f
  5329  06F8  2EF5               	goto	u2335
  5330  06F9  3001               	movlw	1
  5331  06FA  02BD               	subwf	___awmod@counter,f
  5332  06FB  1D03               	btfss	3,2
  5333  06FC  2EE8               	goto	l2955
  5334  06FD                     l2963:	
  5335  06FD  083E               	movf	___awmod@sign,w
  5336  06FE  1903               	btfsc	3,2
  5337  06FF  2F05               	goto	l2967
  5338  0700  09BA               	comf	___awmod@dividend,f
  5339  0701  09BB               	comf	___awmod@dividend+1,f
  5340  0702  0ABA               	incf	___awmod@dividend,f
  5341  0703  1903               	skipnz
  5342  0704  0ABB               	incf	___awmod@dividend+1,f
  5343  0705                     l2967:	
  5344  0705  083B               	movf	___awmod@dividend+1,w
  5345  0706  00B9               	movwf	?___awmod+1
  5346  0707  083A               	movf	___awmod@dividend,w
  5347  0708  00B8               	movwf	?___awmod
  5348  0709  0008               	return
  5349  070A                     __end_of___awmod:	
  5350                           
  5351                           	psect	text13
  5352  0621                     __ptext13:	
  5353 ;; *************** function ___awdiv *****************
  5354 ;; Defined at:
  5355 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  divisor         2   24[BANK0 ] int 
  5358 ;;  dividend        2   26[BANK0 ] int 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  quotient        2   31[BANK0 ] int 
  5361 ;;  sign            1   30[BANK0 ] unsigned char 
  5362 ;;  counter         1   29[BANK0 ] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2   24[BANK0 ] int 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;Total ram usage:        9 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    7
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_display_update
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function ___awdiv
  5388  0621                     ___awdiv:	
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5392  0621  0020               	movlb	0	; select bank0
  5393  0622  01BE               	clrf	___awdiv@sign
  5394  0623  1FB9               	btfss	___awdiv@divisor+1,7
  5395  0624  2E2C               	goto	l2897
  5396  0625  09B8               	comf	___awdiv@divisor,f
  5397  0626  09B9               	comf	___awdiv@divisor+1,f
  5398  0627  0AB8               	incf	___awdiv@divisor,f
  5399  0628  1903               	skipnz
  5400  0629  0AB9               	incf	___awdiv@divisor+1,f
  5401  062A  01BE               	clrf	___awdiv@sign
  5402  062B  0ABE               	incf	___awdiv@sign,f
  5403  062C                     l2897:	
  5404  062C  1FBB               	btfss	___awdiv@dividend+1,7
  5405  062D  2E37               	goto	l2903
  5406  062E  09BA               	comf	___awdiv@dividend,f
  5407  062F  09BB               	comf	___awdiv@dividend+1,f
  5408  0630  0ABA               	incf	___awdiv@dividend,f
  5409  0631  1903               	skipnz
  5410  0632  0ABB               	incf	___awdiv@dividend+1,f
  5411  0633  3001               	movlw	1
  5412  0634  00BC               	movwf	??___awdiv
  5413  0635  083C               	movf	??___awdiv,w
  5414  0636  06BE               	xorwf	___awdiv@sign,f
  5415  0637                     l2903:	
  5416  0637  01BF               	clrf	___awdiv@quotient
  5417  0638  01C0               	clrf	___awdiv@quotient+1
  5418  0639  0838               	movf	___awdiv@divisor,w
  5419  063A  0439               	iorwf	___awdiv@divisor+1,w
  5420  063B  1903               	btfsc	3,2
  5421  063C  2E66               	goto	l2925
  5422  063D  01BD               	clrf	___awdiv@counter
  5423  063E  0ABD               	incf	___awdiv@counter,f
  5424  063F                     l2913:	
  5425  063F  1BB9               	btfsc	___awdiv@divisor+1,7
  5426  0640  2E4B               	goto	l2915
  5427  0641  3001               	movlw	1
  5428  0642                     u2205:	
  5429  0642  35B8               	lslf	___awdiv@divisor,f
  5430  0643  0DB9               	rlf	___awdiv@divisor+1,f
  5431  0644  0B89               	decfsz	9,f
  5432  0645  2E42               	goto	u2205
  5433  0646  3001               	movlw	1
  5434  0647  00BC               	movwf	??___awdiv
  5435  0648  083C               	movf	??___awdiv,w
  5436  0649  07BD               	addwf	___awdiv@counter,f
  5437  064A  2E3F               	goto	l2913
  5438  064B                     l2915:	
  5439  064B  3001               	movlw	1
  5440  064C                     u2225:	
  5441  064C  35BF               	lslf	___awdiv@quotient,f
  5442  064D  0DC0               	rlf	___awdiv@quotient+1,f
  5443  064E  0B89               	decfsz	9,f
  5444  064F  2E4C               	goto	u2225
  5445  0650  0839               	movf	___awdiv@divisor+1,w
  5446  0651  023B               	subwf	___awdiv@dividend+1,w
  5447  0652  1D03               	skipz
  5448  0653  2E56               	goto	u2235
  5449  0654  0838               	movf	___awdiv@divisor,w
  5450  0655  023A               	subwf	___awdiv@dividend,w
  5451  0656                     u2235:	
  5452  0656  1C03               	skipc
  5453  0657  2E5D               	goto	l2921
  5454  0658  0838               	movf	___awdiv@divisor,w
  5455  0659  02BA               	subwf	___awdiv@dividend,f
  5456  065A  0839               	movf	___awdiv@divisor+1,w
  5457  065B  3BBB               	subwfb	___awdiv@dividend+1,f
  5458  065C  143F               	bsf	___awdiv@quotient,0
  5459  065D                     l2921:	
  5460  065D  3001               	movlw	1
  5461  065E                     u2245:	
  5462  065E  36B9               	lsrf	___awdiv@divisor+1,f
  5463  065F  0CB8               	rrf	___awdiv@divisor,f
  5464  0660  0B89               	decfsz	9,f
  5465  0661  2E5E               	goto	u2245
  5466  0662  3001               	movlw	1
  5467  0663  02BD               	subwf	___awdiv@counter,f
  5468  0664  1D03               	btfss	3,2
  5469  0665  2E4B               	goto	l2915
  5470  0666                     l2925:	
  5471  0666  083E               	movf	___awdiv@sign,w
  5472  0667  1903               	btfsc	3,2
  5473  0668  2E6E               	goto	l2929
  5474  0669  09BF               	comf	___awdiv@quotient,f
  5475  066A  09C0               	comf	___awdiv@quotient+1,f
  5476  066B  0ABF               	incf	___awdiv@quotient,f
  5477  066C  1903               	skipnz
  5478  066D  0AC0               	incf	___awdiv@quotient+1,f
  5479  066E                     l2929:	
  5480  066E  0840               	movf	___awdiv@quotient+1,w
  5481  066F  00B9               	movwf	?___awdiv+1
  5482  0670  083F               	movf	___awdiv@quotient,w
  5483  0671  00B8               	movwf	?___awdiv
  5484  0672  0008               	return
  5485  0673                     __end_of___awdiv:	
  5486                           
  5487                           	psect	text14
  5488  0CE8                     __ptext14:	
  5489 ;; *************** function _display_set *****************
  5490 ;; Defined at:
  5491 ;;		line 16 in file "display.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  ison            1    wreg     enum E5232
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  ison            1   24[BANK0 ] enum E5232
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;Total ram usage:        1 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    7
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_init_env
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _display_set
  5521  0CE8                     _display_set:	
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _display_set: [wreg+status,0]
  5525                           ;display_set@ison stored from wreg
  5526  0CE8  0020               	movlb	0	; select bank0
  5527  0CE9  00B8               	movwf	display_set@ison
  5528                           
  5529                           ;display.c: 16: void display_set(BOOL ison);display.c: 17: {;display.c: 18:     PORTAbit
      +                          s.RA0 = ison;
  5530  0CEA  0C38               	rrf	display_set@ison,w
  5531  0CEB  1C03               	skipc
  5532  0CEC  100C               	bcf	12,0	;volatile
  5533  0CED  1803               	skipnc
  5534  0CEE  140C               	bsf	12,0	;volatile
  5535  0CEF  0008               	return
  5536  0CF0                     __end_of_display_set:	
  5537                           
  5538                           	psect	text15
  5539  0CE0                     __ptext15:	
  5540 ;; *************** function _capture_init *****************
  5541 ;; Defined at:
  5542 ;;		line 25 in file "hardware.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    8
  5563 ;; This function calls:
  5564 ;;		_capture_setEdge
  5565 ;; This function is called by:
  5566 ;;		_main
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _capture_init
  5572  0CE0                     _capture_init:	
  5573                           
  5574                           ;hardware.c: 30:     capture_setEdge((0b0100));
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in _capture_init: [wreg+status,2+status,0+pclath+cstack]
  5578  0CE0  3004               	movlw	4
  5579  0CE1  318D  25E2         	fcall	_capture_setEdge
  5580                           
  5581                           ;hardware.c: 31:     TRISCbits.TRISC1 = 1;
  5582  0CE3  0021               	movlb	1	; select bank1
  5583  0CE4  148E               	bsf	14,1	;volatile
  5584                           
  5585                           ;hardware.c: 33:     PIR2bits.CCP2IF = 0;
  5586  0CE5  0020               	movlb	0	; select bank0
  5587  0CE6  1012               	bcf	18,0	;volatile
  5588  0CE7  0008               	return
  5589  0CE8                     __end_of_capture_init:	
  5590                           
  5591                           	psect	text16
  5592  0DE2                     __ptext16:	
  5593 ;; *************** function _capture_setEdge *****************
  5594 ;; Defined at:
  5595 ;;		line 12 in file "hardware.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  edge            1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  edge            1   24[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2  492[None  ] int 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    7
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_capture_init
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _capture_setEdge
  5625  0DE2                     _capture_setEdge:	
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _capture_setEdge: [wreg+status,2+status,0]
  5629                           ;capture_setEdge@edge stored from wreg
  5630  0DE2  0020               	movlb	0	; select bank0
  5631  0DE3  00B8               	movwf	capture_setEdge@edge
  5632                           
  5633                           ;hardware.c: 12: static int capture_setEdge(u8 edge);hardware.c: 13: {;hardware.c: 14:  
      +                             if((edge == (0b0101)) || (edge == (0b0100)))
  5634  0DE4  3005               	movlw	5
  5635  0DE5  0638               	xorwf	capture_setEdge@edge,w
  5636  0DE6  1903               	btfsc	3,2
  5637  0DE7  2DEC               	goto	l3229
  5638  0DE8  3004               	movlw	4
  5639  0DE9  0638               	xorwf	capture_setEdge@edge,w
  5640  0DEA  1D03               	btfss	3,2
  5641  0DEB  0008               	return
  5642  0DEC                     l3229:	
  5643                           
  5644                           ;hardware.c: 15:     {;hardware.c: 16:         CCP2CONbits.CCP2M = edge;
  5645  0DEC  0025               	movlb	5	; select bank5
  5646  0DED  081A               	movf	26,w	;volatile
  5647  0DEE  0020               	movlb	0	; select bank0
  5648  0DEF  0638               	xorwf	capture_setEdge@edge,w
  5649  0DF0  39F0               	andlw	-16
  5650  0DF1  0638               	xorwf	capture_setEdge@edge,w
  5651  0DF2  0025               	movlb	5	; select bank5
  5652  0DF3  009A               	movwf	26	;volatile
  5653  0DF4  0008               	return
  5654  0DF5                     __end_of_capture_setEdge:	
  5655                           
  5656                           	psect	text17
  5657  0D51                     __ptext17:	
  5658 ;; *************** function _capture_Set *****************
  5659 ;; Defined at:
  5660 ;;		line 38 in file "hardware.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  isON            1    wreg     unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  isON            1   24[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      unsigned char 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        1 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    7
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_main
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function _capture_Set
  5690  0D51                     _capture_Set:	
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in _capture_Set: [wreg+status,2+status,0]
  5694                           ;capture_Set@isON stored from wreg
  5695  0D51  0020               	movlb	0	; select bank0
  5696  0D52  00B8               	movwf	capture_Set@isON
  5697                           
  5698                           ;hardware.c: 38: u8 capture_Set(u8 isON);hardware.c: 39: {;hardware.c: 42:     PIR2bits.
      +                          CCP2IF = 0;
  5699  0D53  1012               	bcf	18,0	;volatile
  5700                           
  5701                           ;hardware.c: 45:     PIE2bits.CCP2IE = (isON)? 1 : 0;
  5702  0D54  0838               	movf	capture_Set@isON,w
  5703  0D55  1903               	btfsc	3,2
  5704  0D56  2D5A               	goto	u2810
  5705  0D57  0021               	movlb	1	; select bank1
  5706  0D58  1412               	bsf	18,0	;volatile
  5707  0D59  0008               	return
  5708  0D5A                     u2810:	
  5709  0D5A  0021               	movlb	1	; select bank1
  5710  0D5B  1012               	bcf	18,0	;volatile
  5711  0D5C  0008               	return
  5712  0D5D                     __end_of_capture_Set:	
  5713                           
  5714                           	psect	text18
  5715  054B                     __ptext18:	
  5716 ;; *************** function _bpc_read_time *****************
  5717 ;; Defined at:
  5718 ;;		line 52 in file "bpc.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;		None
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  dataBin         1   35[BANK0 ] unsigned char 
  5723 ;;  dataBCD         1   34[BANK0 ] unsigned char 
  5724 ;;  pdata           1   33[BANK0 ] PTR volatile struct .
  5725 ;;		 -> g_data(39), 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      char 
  5728 ;; Registers used:
  5729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        4 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:   11
  5742 ;; This function calls:
  5743 ;;		_BCD2bit
  5744 ;;		_IIC_RdRTCReg
  5745 ;;		_data_getdata
  5746 ;; This function is called by:
  5747 ;;		_main
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _bpc_read_time
  5753  054B                     _bpc_read_time:	
  5754                           
  5755                           ;bpc.c: 54:    G_DATA *pdata = data_getdata();
  5756                           
  5757                           ;incstack = 0
  5758                           ; Regs used in _bpc_read_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5759  054B  3180  2002  3185   	fcall	_data_getdata
  5760  054E  0020               	movlb	0	; select bank0
  5761  054F  00C0               	movwf	??_bpc_read_time
  5762  0550  0840               	movf	??_bpc_read_time,w
  5763  0551  00C1               	movwf	bpc_read_time@pdata
  5764                           
  5765                           ;bpc.c: 55:    u8 dataBCD = 0, dataBin = 0;
  5766  0552  01C2               	clrf	bpc_read_time@dataBCD
  5767                           
  5768                           ;bpc.c: 57:         if( -1 == IIC_RdRTCReg((0x4), &dataBCD)){
  5769  0553  3042               	movlw	(low (bpc_read_time@dataBCD| 0))& (0+255)
  5770  0554  00C0               	movwf	??_bpc_read_time
  5771  0555  0840               	movf	??_bpc_read_time,w
  5772  0556  00BC               	movwf	IIC_RdRTCReg@value
  5773  0557  3004               	movlw	4
  5774  0558  3187  278F  3185   	fcall	_IIC_RdRTCReg
  5775  055B  3AFF               	xorlw	255
  5776  055C  1903               	btfsc	3,2
  5777  055D  2DB8               	goto	l3555
  5778                           
  5779                           ;bpc.c: 61:         {;bpc.c: 62:             dataBin = BCD2bit(dataBCD & (0x3F));
  5780  055E  0020               	movlb	0	; select bank0
  5781  055F  0842               	movf	bpc_read_time@dataBCD,w
  5782  0560  393F               	andlw	63
  5783  0561  318E  2609  3185   	fcall	_BCD2bit
  5784  0564  0020               	movlb	0	; select bank0
  5785  0565  00C0               	movwf	??_bpc_read_time
  5786  0566  0840               	movf	??_bpc_read_time,w
  5787  0567  00C3               	movwf	bpc_read_time@dataBin
  5788                           
  5789                           ;bpc.c: 63:             if(dataBin > 23){
  5790  0568  3018               	movlw	24
  5791  0569  0243               	subwf	bpc_read_time@dataBin,w
  5792  056A  1803               	btfsc	3,0
  5793  056B  2DB8               	goto	l3555
  5794                           
  5795                           ;bpc.c: 66:             pdata->g_time_h = dataBin;
  5796  056C  0843               	movf	bpc_read_time@dataBin,w
  5797  056D  00C0               	movwf	??_bpc_read_time
  5798  056E  0841               	movf	bpc_read_time@pdata,w
  5799  056F  3E03               	addlw	3
  5800  0570  0086               	movwf	6
  5801  0571  0187               	clrf	7
  5802  0572  0840               	movf	??_bpc_read_time,w
  5803  0573  0081               	movwf	1
  5804                           
  5805                           ;bpc.c: 68:         if( -1 == IIC_RdRTCReg((0x3), &dataBCD)) break;
  5806  0574  3042               	movlw	(low (bpc_read_time@dataBCD| 0))& (0+255)
  5807  0575  00C0               	movwf	??_bpc_read_time
  5808  0576  0840               	movf	??_bpc_read_time,w
  5809  0577  00BC               	movwf	IIC_RdRTCReg@value
  5810  0578  3003               	movlw	3
  5811  0579  3187  278F  3185   	fcall	_IIC_RdRTCReg
  5812  057C  3AFF               	xorlw	255
  5813  057D  1903               	btfsc	3,2
  5814  057E  2DB8               	goto	l3555
  5815                           
  5816                           ;bpc.c: 70:         {;bpc.c: 71:             dataBin = BCD2bit(dataBCD & (0x7F));
  5817  057F  0020               	movlb	0	; select bank0
  5818  0580  0842               	movf	bpc_read_time@dataBCD,w
  5819  0581  397F               	andlw	127
  5820  0582  318E  2609  3185   	fcall	_BCD2bit
  5821  0585  0020               	movlb	0	; select bank0
  5822  0586  00C0               	movwf	??_bpc_read_time
  5823  0587  0840               	movf	??_bpc_read_time,w
  5824  0588  00C3               	movwf	bpc_read_time@dataBin
  5825                           
  5826                           ;bpc.c: 72:             if(dataBin > 59){
  5827  0589  303C               	movlw	60
  5828  058A  0243               	subwf	bpc_read_time@dataBin,w
  5829  058B  1803               	btfsc	3,0
  5830  058C  2DB8               	goto	l3555
  5831                           
  5832                           ;bpc.c: 75:             pdata->g_time_m = dataBin;
  5833  058D  0843               	movf	bpc_read_time@dataBin,w
  5834  058E  00C0               	movwf	??_bpc_read_time
  5835  058F  0841               	movf	bpc_read_time@pdata,w
  5836  0590  3E04               	addlw	4
  5837  0591  0086               	movwf	6
  5838  0592  0187               	clrf	7
  5839  0593  0840               	movf	??_bpc_read_time,w
  5840  0594  0081               	movwf	1
  5841                           
  5842                           ;bpc.c: 77:         if(-1 == IIC_RdRTCReg((0x2), &dataBCD)) break;
  5843  0595  3042               	movlw	(low (bpc_read_time@dataBCD| 0))& (0+255)
  5844  0596  00C0               	movwf	??_bpc_read_time
  5845  0597  0840               	movf	??_bpc_read_time,w
  5846  0598  00BC               	movwf	IIC_RdRTCReg@value
  5847  0599  3002               	movlw	2
  5848  059A  3187  278F  3185   	fcall	_IIC_RdRTCReg
  5849  059D  3AFF               	xorlw	255
  5850  059E  1903               	btfsc	3,2
  5851  059F  2DB8               	goto	l3555
  5852                           
  5853                           ;bpc.c: 79:         {;bpc.c: 80:             dataBin = BCD2bit(dataBCD & (0x7F));
  5854  05A0  0020               	movlb	0	; select bank0
  5855  05A1  0842               	movf	bpc_read_time@dataBCD,w
  5856  05A2  397F               	andlw	127
  5857  05A3  318E  2609  3185   	fcall	_BCD2bit
  5858  05A6  0020               	movlb	0	; select bank0
  5859  05A7  00C0               	movwf	??_bpc_read_time
  5860  05A8  0840               	movf	??_bpc_read_time,w
  5861  05A9  00C3               	movwf	bpc_read_time@dataBin
  5862                           
  5863                           ;bpc.c: 81:             if(dataBin > 59){
  5864  05AA  303C               	movlw	60
  5865  05AB  0243               	subwf	bpc_read_time@dataBin,w
  5866  05AC  1803               	btfsc	3,0
  5867  05AD  2DB8               	goto	l3555
  5868                           
  5869                           ;bpc.c: 84:             pdata->g_time_s = dataBin;
  5870  05AE  0843               	movf	bpc_read_time@dataBin,w
  5871  05AF  00C0               	movwf	??_bpc_read_time
  5872  05B0  0841               	movf	bpc_read_time@pdata,w
  5873  05B1  3E05               	addlw	5
  5874  05B2  0086               	movwf	6
  5875  05B3  0187               	clrf	7
  5876  05B4  0840               	movf	??_bpc_read_time,w
  5877  05B5  0081               	movwf	1
  5878                           
  5879                           ;bpc.c: 86:         return 0;
  5880  05B6  3000               	movlw	0
  5881  05B7  0008               	return
  5882  05B8                     l3555:	
  5883                           
  5884                           ;bpc.c: 88:     return -1;
  5885  05B8  30FF               	movlw	255
  5886  05B9  0008               	return
  5887  05BA                     __end_of_bpc_read_time:	
  5888                           
  5889                           	psect	text19
  5890  0002                     __ptext19:	
  5891 ;; *************** function _data_getdata *****************
  5892 ;; Defined at:
  5893 ;;		line 9 in file "data.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;		None
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      PTR volatile struct .
  5900 ;; Registers used:
  5901 ;;		wreg
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;Total ram usage:        0 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    7
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_init_env
  5918 ;;		_bpc_read_time
  5919 ;;		_display_update
  5920 ;;		_tmp_change
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _data_getdata
  5926  0002                     _data_getdata:	
  5927                           
  5928                           ;data.c: 11:     return &g_data;
  5929                           
  5930                           ;incstack = 0
  5931                           ; Regs used in _data_getdata: [wreg]
  5932  0002  30A0               	movlw	(low (_g_data| 0))& (0+255)
  5933  0003  0008               	return
  5934  0004                     __end_of_data_getdata:	
  5935                           
  5936                           	psect	text20
  5937  078F                     __ptext20:	
  5938 ;; *************** function _IIC_RdRTCReg *****************
  5939 ;; Defined at:
  5940 ;;		line 151 in file "myiic.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  regAddr         1    wreg     unsigned char 
  5943 ;;  value           1   28[BANK0 ] PTR unsigned char 
  5944 ;;		 -> bpc_read_time@dataBCD(1), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  regAddr         1   30[BANK0 ] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      char 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5956 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;Total ram usage:        3 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:   10
  5963 ;; This function calls:
  5964 ;;		_IIC_Read_Byte
  5965 ;;		_IIC_Send_Byte
  5966 ;;		_IIC_Start
  5967 ;;		_IIC_Stop
  5968 ;;		_IIC_Wait_Ack
  5969 ;; This function is called by:
  5970 ;;		_bpc_read_time
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _IIC_RdRTCReg
  5976  078F                     _IIC_RdRTCReg:	
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in _IIC_RdRTCReg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5980                           ;IIC_RdRTCReg@regAddr stored from wreg
  5981  078F  0020               	movlb	0	; select bank0
  5982  0790  00BE               	movwf	IIC_RdRTCReg@regAddr
  5983                           
  5984                           ;myiic.c: 151: s8 IIC_RdRTCReg(u8 regAddr, u8* value);myiic.c: 152: {;myiic.c: 153:     
      +                          IIC_Start();
  5985  0791  318D  2524  3187   	fcall	_IIC_Start
  5986                           
  5987                           ;myiic.c: 154:     IIC_Send_Byte((0b10100010));
  5988  0794  30A2               	movlw	162
  5989  0795  318F  27D1  3187   	fcall	_IIC_Send_Byte
  5990                           
  5991                           ;myiic.c: 155:     if(!IIC_Wait_Ack())
  5992  0798  318E  266D  3187   	fcall	_IIC_Wait_Ack
  5993  079B  3A00               	xorlw	0
  5994  079C  1D03               	skipz
  5995  079D  2FC5               	goto	l3029
  5996                           
  5997                           ;myiic.c: 156:     {;myiic.c: 157:         IIC_Send_Byte(regAddr);
  5998  079E  0020               	movlb	0	; select bank0
  5999  079F  083E               	movf	IIC_RdRTCReg@regAddr,w
  6000  07A0  318F  27D1  3187   	fcall	_IIC_Send_Byte
  6001                           
  6002                           ;myiic.c: 158:         if(!IIC_Wait_Ack())
  6003  07A3  318E  266D  3187   	fcall	_IIC_Wait_Ack
  6004  07A6  3A00               	xorlw	0
  6005  07A7  1D03               	skipz
  6006  07A8  2FC5               	goto	l3029
  6007                           
  6008                           ;myiic.c: 159:         {;myiic.c: 160:             IIC_Start();
  6009  07A9  318D  2524  3187   	fcall	_IIC_Start
  6010                           
  6011                           ;myiic.c: 161:             IIC_Send_Byte((0b10100011));
  6012  07AC  30A3               	movlw	163
  6013  07AD  318F  27D1  3187   	fcall	_IIC_Send_Byte
  6014                           
  6015                           ;myiic.c: 162:             if(!IIC_Wait_Ack())
  6016  07B0  318E  266D  3187   	fcall	_IIC_Wait_Ack
  6017  07B3  3A00               	xorlw	0
  6018  07B4  1D03               	skipz
  6019  07B5  2FC5               	goto	l3029
  6020                           
  6021                           ;myiic.c: 163:             {;myiic.c: 164:                 *value = IIC_Read_Byte(0);
  6022  07B6  3000               	movlw	0
  6023  07B7  318F  27A2  3187   	fcall	_IIC_Read_Byte
  6024  07BA  0020               	movlb	0	; select bank0
  6025  07BB  00BD               	movwf	??_IIC_RdRTCReg
  6026  07BC  083C               	movf	IIC_RdRTCReg@value,w
  6027  07BD  0086               	movwf	6
  6028  07BE  0187               	clrf	7
  6029  07BF  083D               	movf	??_IIC_RdRTCReg,w
  6030  07C0  0081               	movwf	1
  6031                           
  6032                           ;myiic.c: 165:                 IIC_Stop();
  6033  07C1  318D  2592         	fcall	_IIC_Stop
  6034                           
  6035                           ;myiic.c: 166:                 return 0;
  6036  07C3  3000               	movlw	0
  6037  07C4  0008               	return
  6038  07C5                     l3029:	
  6039                           
  6040                           ;myiic.c: 168:             return -1;
  6041  07C5  30FF               	movlw	255
  6042  07C6  0008               	return
  6043  07C7                     __end_of_IIC_RdRTCReg:	
  6044                           
  6045                           	psect	text21
  6046  0E6D                     __ptext21:	
  6047 ;; *************** function _IIC_Wait_Ack *****************
  6048 ;; Defined at:
  6049 ;;		line 51 in file "myiic.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  ucErrTime       1   25[BANK0 ] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0, pclath, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;Total ram usage:        2 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    9
  6070 ;; This function calls:
  6071 ;;		_IIC_Stop
  6072 ;;		_delay_4us
  6073 ;; This function is called by:
  6074 ;;		_IIC_RdRTCReg
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           
  6079                           ;psect for function _IIC_Wait_Ack
  6080  0E6D                     _IIC_Wait_Ack:	
  6081                           
  6082                           ;myiic.c: 53:  unsigned char ucErrTime=0;
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _IIC_Wait_Ack: [wreg+status,2+status,0+pclath+cstack]
  6086  0E6D  0020               	movlb	0	; select bank0
  6087  0E6E  01B9               	clrf	IIC_Wait_Ack@ucErrTime
  6088                           
  6089                           ;myiic.c: 54:  {TRISC4 = 1;};
  6090  0E6F  0021               	movlb	1	; select bank1
  6091  0E70  160E               	bsf	14,4	;volatile
  6092                           
  6093                           ;myiic.c: 55:  LATC4=1;delay_4us();
  6094  0E71  0022               	movlb	2	; select bank2
  6095  0E72  160E               	bsf	14,4	;volatile
  6096  0E73  318C  24B0  318E   	fcall	_delay_4us
  6097                           
  6098                           ;myiic.c: 56:  LATC3=1;delay_4us();
  6099  0E76  0022               	movlb	2	; select bank2
  6100  0E77  158E               	bsf	14,3	;volatile
  6101  0E78  318C  24B0  318E   	fcall	_delay_4us
  6102  0E7B                     l191:	
  6103                           ;myiic.c: 65:  }
  6104                           
  6105                           ;myiic.c: 57:  while(RC4)
  6106                           
  6107                           
  6108                           ;myiic.c: 57:  while(RC4)
  6109  0E7B  0020               	movlb	0	; select bank0
  6110  0E7C  1E0E               	btfss	14,4	;volatile
  6111  0E7D  2E8A               	goto	l195
  6112                           
  6113                           ;myiic.c: 58:  {;myiic.c: 59:   ucErrTime++;
  6114  0E7E  3001               	movlw	1
  6115  0E7F  00B8               	movwf	??_IIC_Wait_Ack
  6116  0E80  0838               	movf	??_IIC_Wait_Ack,w
  6117  0E81  07B9               	addwf	IIC_Wait_Ack@ucErrTime,f
  6118                           
  6119                           ;myiic.c: 60:   if(ucErrTime>250)
  6120  0E82  30FB               	movlw	251
  6121  0E83  0239               	subwf	IIC_Wait_Ack@ucErrTime,w
  6122  0E84  1C03               	skipc
  6123  0E85  2E7B               	goto	l191
  6124                           
  6125                           ;myiic.c: 61:   {;myiic.c: 62:    IIC_Stop();
  6126  0E86  318D  2592         	fcall	_IIC_Stop
  6127                           
  6128                           ;myiic.c: 63:    return 1;
  6129  0E88  3001               	movlw	1
  6130  0E89  0008               	return
  6131  0E8A                     l195:	
  6132                           
  6133                           ;myiic.c: 66:  LATC3=0;
  6134  0E8A  0022               	movlb	2	; select bank2
  6135  0E8B  118E               	bcf	14,3	;volatile
  6136                           
  6137                           ;myiic.c: 67:  return 0;
  6138  0E8C  3000               	movlw	0
  6139  0E8D  0008               	return
  6140  0E8E                     __end_of_IIC_Wait_Ack:	
  6141                           
  6142                           	psect	text22
  6143  0D92                     __ptext22:	
  6144 ;; *************** function _IIC_Stop *****************
  6145 ;; Defined at:
  6146 ;;		line 37 in file "myiic.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		status,2, status,0, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    8
  6167 ;; This function calls:
  6168 ;;		_delay_4us
  6169 ;; This function is called by:
  6170 ;;		_IIC_Wait_Ack
  6171 ;;		_IIC_RdRTCReg
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           
  6176                           ;psect for function _IIC_Stop
  6177  0D92                     _IIC_Stop:	
  6178                           
  6179                           ;myiic.c: 39:  {TRISC4 = 0;};
  6180                           
  6181                           ;incstack = 0
  6182                           ; Regs used in _IIC_Stop: [status,2+status,0+pclath+cstack]
  6183  0D92  0021               	movlb	1	; select bank1
  6184  0D93  120E               	bcf	14,4	;volatile
  6185                           
  6186                           ;myiic.c: 40:  LATC3=0;
  6187  0D94  0022               	movlb	2	; select bank2
  6188  0D95  118E               	bcf	14,3	;volatile
  6189                           
  6190                           ;myiic.c: 41:  LATC4=0;
  6191  0D96  120E               	bcf	14,4	;volatile
  6192                           
  6193                           ;myiic.c: 42:   delay_4us();
  6194  0D97  318C  24B0  318D   	fcall	_delay_4us
  6195                           
  6196                           ;myiic.c: 43:  LATC3=1;
  6197  0D9A  0022               	movlb	2	; select bank2
  6198  0D9B  158E               	bsf	14,3	;volatile
  6199                           
  6200                           ;myiic.c: 44:  LATC4=1;
  6201  0D9C  160E               	bsf	14,4	;volatile
  6202                           
  6203                           ;myiic.c: 45:  delay_4us();
  6204  0D9D  318C  24B0         	fcall	_delay_4us
  6205  0D9F  0008               	return
  6206  0DA0                     __end_of_IIC_Stop:	
  6207                           
  6208                           	psect	text23
  6209  0D24                     __ptext23:	
  6210 ;; *************** function _IIC_Start *****************
  6211 ;; Defined at:
  6212 ;;		line 25 in file "myiic.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		status,2, status,0, pclath, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    8
  6233 ;; This function calls:
  6234 ;;		_delay_4us
  6235 ;; This function is called by:
  6236 ;;		_IIC_RdRTCReg
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _IIC_Start
  6242  0D24                     _IIC_Start:	
  6243                           
  6244                           ;myiic.c: 27:  {TRISC4 = 0;};
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in _IIC_Start: [status,2+status,0+pclath+cstack]
  6248  0D24  0021               	movlb	1	; select bank1
  6249  0D25  120E               	bcf	14,4	;volatile
  6250                           
  6251                           ;myiic.c: 28:  LATC4=1;
  6252  0D26  0022               	movlb	2	; select bank2
  6253  0D27  160E               	bsf	14,4	;volatile
  6254                           
  6255                           ;myiic.c: 29:  LATC3=1;
  6256  0D28  158E               	bsf	14,3	;volatile
  6257                           
  6258                           ;myiic.c: 30:  delay_4us();
  6259  0D29  318C  24B0         	fcall	_delay_4us
  6260                           
  6261                           ;myiic.c: 31:   LATC4=0;
  6262  0D2B  0022               	movlb	2	; select bank2
  6263  0D2C  120E               	bcf	14,4	;volatile
  6264                           
  6265                           ;myiic.c: 33:  LATC3=0;
  6266  0D2D  118E               	bcf	14,3	;volatile
  6267  0D2E  0008               	return
  6268  0D2F                     __end_of_IIC_Start:	
  6269                           
  6270                           	psect	text24
  6271  0FD1                     __ptext24:	
  6272 ;; *************** function _IIC_Send_Byte *****************
  6273 ;; Defined at:
  6274 ;;		line 95 in file "myiic.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  txd             1    wreg     unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  txd             1   25[BANK0 ] unsigned char 
  6279 ;;  t               1   26[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, pclath, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;Total ram usage:        3 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    8
  6296 ;; This function calls:
  6297 ;;		_delay_4us
  6298 ;; This function is called by:
  6299 ;;		_IIC_RdRTCReg
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function _IIC_Send_Byte
  6305  0FD1                     _IIC_Send_Byte:	
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _IIC_Send_Byte: [wreg+status,2+status,0+pclath+cstack]
  6309                           ;IIC_Send_Byte@txd stored from wreg
  6310  0FD1  0020               	movlb	0	; select bank0
  6311  0FD2  00B9               	movwf	IIC_Send_Byte@txd
  6312                           
  6313                           ;myiic.c: 95: void IIC_Send_Byte(unsigned char txd);myiic.c: 96: {;myiic.c: 97:     unsi
      +                          gned char t;;myiic.c: 98:  {TRISC4 = 0;};
  6314  0FD3  0021               	movlb	1	; select bank1
  6315  0FD4  120E               	bcf	14,4	;volatile
  6316                           
  6317                           ;myiic.c: 99:     LATC3=0;
  6318  0FD5  0022               	movlb	2	; select bank2
  6319  0FD6  118E               	bcf	14,3	;volatile
  6320                           
  6321                           ;myiic.c: 100:     for(t=0;t<8;t++)
  6322  0FD7  0020               	movlb	0	; select bank0
  6323  0FD8  01BA               	clrf	IIC_Send_Byte@t
  6324  0FD9                     l2761:	
  6325                           
  6326                           ;myiic.c: 101:     {;myiic.c: 102:         LATC4=(txd&0x80)>>7;
  6327  0FD9  0839               	movf	IIC_Send_Byte@txd,w
  6328  0FDA  00B8               	movwf	??_IIC_Send_Byte
  6329  0FDB  3007               	movlw	7
  6330  0FDC                     u2005:	
  6331  0FDC  36B8               	lsrf	??_IIC_Send_Byte,f
  6332  0FDD  0B89               	decfsz	9,f
  6333  0FDE  2FDC               	goto	u2005
  6334  0FDF  1C38               	btfss	??_IIC_Send_Byte,0
  6335  0FE0  2FE4               	goto	u2010
  6336  0FE1  0022               	movlb	2	; select bank2
  6337  0FE2  160E               	bsf	14,4	;volatile
  6338  0FE3  2FE6               	goto	l2763
  6339  0FE4                     u2010:	
  6340  0FE4  0022               	movlb	2	; select bank2
  6341  0FE5  120E               	bcf	14,4	;volatile
  6342  0FE6                     l2763:	
  6343                           
  6344                           ;myiic.c: 103:         txd<<=1;
  6345  0FE6  1003               	clrc
  6346  0FE7  0020               	movlb	0	; select bank0
  6347  0FE8  0DB9               	rlf	IIC_Send_Byte@txd,f
  6348                           
  6349                           ;myiic.c: 104:   delay_4us();
  6350  0FE9  318C  24B0  318F   	fcall	_delay_4us
  6351                           
  6352                           ;myiic.c: 105:   LATC3=1;
  6353  0FEC  0022               	movlb	2	; select bank2
  6354  0FED  158E               	bsf	14,3	;volatile
  6355                           
  6356                           ;myiic.c: 106:   delay_4us();
  6357  0FEE  318C  24B0  318F   	fcall	_delay_4us
  6358                           
  6359                           ;myiic.c: 107:   LATC3=0;
  6360  0FF1  0022               	movlb	2	; select bank2
  6361  0FF2  118E               	bcf	14,3	;volatile
  6362                           
  6363                           ;myiic.c: 108:   delay_4us();
  6364  0FF3  318C  24B0  318F   	fcall	_delay_4us
  6365                           
  6366                           ;myiic.c: 109:     }
  6367  0FF6  3001               	movlw	1
  6368  0FF7  0020               	movlb	0	; select bank0
  6369  0FF8  00B8               	movwf	??_IIC_Send_Byte
  6370  0FF9  0838               	movf	??_IIC_Send_Byte,w
  6371  0FFA  07BA               	addwf	IIC_Send_Byte@t,f
  6372  0FFB  3008               	movlw	8
  6373  0FFC  023A               	subwf	IIC_Send_Byte@t,w
  6374  0FFD  1803               	btfsc	3,0
  6375  0FFE  0008               	return
  6376  0FFF  2FD9               	goto	l2761
  6377  1000                     __end_of_IIC_Send_Byte:	
  6378                           
  6379                           	psect	text25
  6380  0FA2                     __ptext25:	
  6381 ;; *************** function _IIC_Read_Byte *****************
  6382 ;; Defined at:
  6383 ;;		line 112 in file "myiic.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  ack             1    wreg     unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  ack             1   25[BANK0 ] unsigned char 
  6388 ;;  i               1   27[BANK0 ] unsigned char 
  6389 ;;  receive         1   26[BANK0 ] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, pclath, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    9
  6406 ;; This function calls:
  6407 ;;		_IIC_Ack
  6408 ;;		_IIC_NAck
  6409 ;;		_delay_4us
  6410 ;; This function is called by:
  6411 ;;		_IIC_RdRTCReg
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           
  6416                           ;psect for function _IIC_Read_Byte
  6417  0FA2                     _IIC_Read_Byte:	
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _IIC_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  6421                           ;IIC_Read_Byte@ack stored from wreg
  6422  0FA2  0020               	movlb	0	; select bank0
  6423  0FA3  00B9               	movwf	IIC_Read_Byte@ack
  6424                           
  6425                           ;myiic.c: 112: unsigned char IIC_Read_Byte(unsigned char ack);myiic.c: 113: {;myiic.c: 1
      +                          14:  unsigned char i,receive=0;
  6426  0FA4  01BA               	clrf	IIC_Read_Byte@receive
  6427                           
  6428                           ;myiic.c: 115:  {TRISC4 = 1;};
  6429  0FA5  0021               	movlb	1	; select bank1
  6430  0FA6  160E               	bsf	14,4	;volatile
  6431                           
  6432                           ;myiic.c: 116:     for(i=0;i<8;i++ )
  6433  0FA7  0020               	movlb	0	; select bank0
  6434  0FA8  01BB               	clrf	IIC_Read_Byte@i
  6435  0FA9                     l209:	
  6436                           
  6437                           ;myiic.c: 117:  {;myiic.c: 118:         LATC3=0;
  6438  0FA9  0022               	movlb	2	; select bank2
  6439  0FAA  118E               	bcf	14,3	;volatile
  6440                           
  6441                           ;myiic.c: 119:         delay_4us();
  6442  0FAB  318C  24B0  318F   	fcall	_delay_4us
  6443                           
  6444                           ;myiic.c: 120:   LATC3=1;
  6445  0FAE  0022               	movlb	2	; select bank2
  6446  0FAF  158E               	bsf	14,3	;volatile
  6447                           
  6448                           ;myiic.c: 121:         receive<<=1;
  6449  0FB0  1003               	clrc
  6450  0FB1  0020               	movlb	0	; select bank0
  6451  0FB2  0DBA               	rlf	IIC_Read_Byte@receive,f
  6452                           
  6453                           ;myiic.c: 122:         if(RC4)receive++;
  6454  0FB3  1E0E               	btfss	14,4	;volatile
  6455  0FB4  2FB9               	goto	l2797
  6456  0FB5  3001               	movlw	1
  6457  0FB6  00B8               	movwf	??_IIC_Read_Byte
  6458  0FB7  0838               	movf	??_IIC_Read_Byte,w
  6459  0FB8  07BA               	addwf	IIC_Read_Byte@receive,f
  6460  0FB9                     l2797:	
  6461                           
  6462                           ;myiic.c: 123:   delay_4us();
  6463  0FB9  318C  24B0  318F   	fcall	_delay_4us
  6464                           
  6465                           ;myiic.c: 124:     }
  6466  0FBC  3001               	movlw	1
  6467  0FBD  0020               	movlb	0	; select bank0
  6468  0FBE  00B8               	movwf	??_IIC_Read_Byte
  6469  0FBF  0838               	movf	??_IIC_Read_Byte,w
  6470  0FC0  07BB               	addwf	IIC_Read_Byte@i,f
  6471  0FC1  3008               	movlw	8
  6472  0FC2  023B               	subwf	IIC_Read_Byte@i,w
  6473  0FC3  1C03               	skipc
  6474  0FC4  2FA9               	goto	l209
  6475                           
  6476                           ;myiic.c: 125:     if (!ack)
  6477  0FC5  0839               	movf	IIC_Read_Byte@ack,w
  6478  0FC6  1D03               	btfss	3,2
  6479  0FC7  2FCC               	goto	l2807
  6480                           
  6481                           ;myiic.c: 126:         IIC_NAck();
  6482  0FC8  318D  25C0  318F   	fcall	_IIC_NAck
  6483  0FCB  2FCE               	goto	l2809
  6484  0FCC                     l2807:	
  6485                           
  6486                           ;myiic.c: 128:         IIC_Ack();
  6487  0FCC  318D  25B0         	fcall	_IIC_Ack
  6488  0FCE                     l2809:	
  6489                           
  6490                           ;myiic.c: 129:     return receive;
  6491  0FCE  0020               	movlb	0	; select bank0
  6492  0FCF  083A               	movf	IIC_Read_Byte@receive,w
  6493  0FD0  0008               	return
  6494  0FD1                     __end_of_IIC_Read_Byte:	
  6495                           
  6496                           	psect	text26
  6497  0DC0                     __ptext26:	
  6498 ;; *************** function _IIC_NAck *****************
  6499 ;; Defined at:
  6500 ;;		line 81 in file "myiic.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		status,2, status,0, pclath, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    8
  6521 ;; This function calls:
  6522 ;;		_delay_4us
  6523 ;; This function is called by:
  6524 ;;		_IIC_Read_Byte
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function _IIC_NAck
  6530  0DC0                     _IIC_NAck:	
  6531                           
  6532                           ;myiic.c: 83:  LATC3=0;
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in _IIC_NAck: [status,2+status,0+pclath+cstack]
  6536  0DC0  0022               	movlb	2	; select bank2
  6537  0DC1  118E               	bcf	14,3	;volatile
  6538                           
  6539                           ;myiic.c: 84:  {TRISC4 = 0;};
  6540  0DC2  0021               	movlb	1	; select bank1
  6541  0DC3  120E               	bcf	14,4	;volatile
  6542                           
  6543                           ;myiic.c: 85:  LATC4=1;
  6544  0DC4  0022               	movlb	2	; select bank2
  6545  0DC5  160E               	bsf	14,4	;volatile
  6546                           
  6547                           ;myiic.c: 86:  delay_4us();
  6548  0DC6  318C  24B0  318D   	fcall	_delay_4us
  6549                           
  6550                           ;myiic.c: 87:  LATC3=1;
  6551  0DC9  0022               	movlb	2	; select bank2
  6552  0DCA  158E               	bsf	14,3	;volatile
  6553                           
  6554                           ;myiic.c: 88:  delay_4us();
  6555  0DCB  318C  24B0         	fcall	_delay_4us
  6556                           
  6557                           ;myiic.c: 89:  LATC3=0;
  6558  0DCD  0022               	movlb	2	; select bank2
  6559  0DCE  118E               	bcf	14,3	;volatile
  6560  0DCF  0008               	return
  6561  0DD0                     __end_of_IIC_NAck:	
  6562                           
  6563                           	psect	text27
  6564  0DB0                     __ptext27:	
  6565 ;; *************** function _IIC_Ack *****************
  6566 ;; Defined at:
  6567 ;;		line 70 in file "myiic.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    8
  6588 ;; This function calls:
  6589 ;;		_delay_4us
  6590 ;; This function is called by:
  6591 ;;		_IIC_Read_Byte
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _IIC_Ack
  6597  0DB0                     _IIC_Ack:	
  6598                           
  6599                           ;myiic.c: 72:  LATC3=0;
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _IIC_Ack: [status,2+status,0+pclath+cstack]
  6603  0DB0  0022               	movlb	2	; select bank2
  6604  0DB1  118E               	bcf	14,3	;volatile
  6605                           
  6606                           ;myiic.c: 73:  {TRISC4 = 0;};
  6607  0DB2  0021               	movlb	1	; select bank1
  6608  0DB3  120E               	bcf	14,4	;volatile
  6609                           
  6610                           ;myiic.c: 74:  LATC4=0;
  6611  0DB4  0022               	movlb	2	; select bank2
  6612  0DB5  120E               	bcf	14,4	;volatile
  6613                           
  6614                           ;myiic.c: 75:  delay_4us();
  6615  0DB6  318C  24B0  318D   	fcall	_delay_4us
  6616                           
  6617                           ;myiic.c: 76:  LATC3=1;
  6618  0DB9  0022               	movlb	2	; select bank2
  6619  0DBA  158E               	bsf	14,3	;volatile
  6620                           
  6621                           ;myiic.c: 77:  delay_4us();
  6622  0DBB  318C  24B0         	fcall	_delay_4us
  6623                           
  6624                           ;myiic.c: 78:  LATC3=0;
  6625  0DBD  0022               	movlb	2	; select bank2
  6626  0DBE  118E               	bcf	14,3	;volatile
  6627  0DBF  0008               	return
  6628  0DC0                     __end_of_IIC_Ack:	
  6629                           
  6630                           	psect	text28
  6631  0CB0                     __ptext28:	
  6632 ;; *************** function _delay_4us *****************
  6633 ;; Defined at:
  6634 ;;		line 3 in file "delay.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		None
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    7
  6655 ;; This function calls:
  6656 ;;		Nothing
  6657 ;; This function is called by:
  6658 ;;		_IIC_Start
  6659 ;;		_IIC_Stop
  6660 ;;		_IIC_Wait_Ack
  6661 ;;		_IIC_Ack
  6662 ;;		_IIC_NAck
  6663 ;;		_IIC_Send_Byte
  6664 ;;		_IIC_Read_Byte
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           
  6669                           ;psect for function _delay_4us
  6670  0CB0                     _delay_4us:	
  6671                           
  6672                           ;delay.c: 5:     __nop();
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in _delay_4us: []
  6676  0CB0  0000               	nop
  6677  0CB1  0008               	return
  6678  0CB2                     __end_of_delay_4us:	
  6679                           
  6680                           	psect	text29
  6681  0E09                     __ptext29:	
  6682 ;; *************** function _BCD2bit *****************
  6683 ;; Defined at:
  6684 ;;		line 30 in file "bpc.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  inVal           1    wreg     unsigned char 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  inVal           1   31[BANK0 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      unsigned char 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        4 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    8
  6705 ;; This function calls:
  6706 ;;		___bmul
  6707 ;; This function is called by:
  6708 ;;		_bpc_read_time
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _BCD2bit
  6714  0E09                     _BCD2bit:	
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _BCD2bit: [wreg+status,2+status,0+pclath+cstack]
  6718                           ;BCD2bit@inVal stored from wreg
  6719  0E09  0020               	movlb	0	; select bank0
  6720  0E0A  00BF               	movwf	BCD2bit@inVal
  6721                           
  6722                           ;bpc.c: 31:     return (inVal >> 4) * 10 + (inVal & 0xf);
  6723  0E0B  300F               	movlw	15
  6724  0E0C  053F               	andwf	BCD2bit@inVal,w
  6725  0E0D  00BC               	movwf	??_BCD2bit
  6726  0E0E  300A               	movlw	10
  6727  0E0F  00BD               	movwf	??_BCD2bit+1
  6728  0E10  083D               	movf	??_BCD2bit+1,w
  6729  0E11  00B8               	movwf	___bmul@multiplicand
  6730  0E12  083F               	movf	BCD2bit@inVal,w
  6731  0E13  00BE               	movwf	??_BCD2bit+2
  6732  0E14  3004               	movlw	4
  6733  0E15                     u2505:	
  6734  0E15  36BE               	lsrf	??_BCD2bit+2,f
  6735  0E16  0B89               	decfsz	9,f
  6736  0E17  2E15               	goto	u2505
  6737  0E18  083E               	movf	??_BCD2bit+2,w
  6738  0E19  318D  25D0         	fcall	___bmul
  6739  0E1B  0020               	movlb	0	; select bank0
  6740  0E1C  073C               	addwf	??_BCD2bit,w
  6741  0E1D  0008               	return
  6742  0E1E                     __end_of_BCD2bit:	
  6743                           
  6744                           	psect	text30
  6745  0DD0                     __ptext30:	
  6746 ;; *************** function ___bmul *****************
  6747 ;; Defined at:
  6748 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  multiplier      1    wreg     unsigned char 
  6751 ;;  multiplicand    1   24[BANK0 ] unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  multiplier      1   27[BANK0 ] unsigned char 
  6754 ;;  product         1   26[BANK0 ] unsigned char 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6764 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;Total ram usage:        4 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    7
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_BCD2bit
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function ___bmul
  6780  0DD0                     ___bmul:	
  6781                           
  6782                           ;incstack = 0
  6783                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6784                           ;___bmul@multiplier stored from wreg
  6785  0DD0  0020               	movlb	0	; select bank0
  6786  0DD1  00BB               	movwf	___bmul@multiplier
  6787  0DD2  01BA               	clrf	___bmul@product
  6788  0DD3                     l2877:	
  6789  0DD3  1C3B               	btfss	___bmul@multiplier,0
  6790  0DD4  2DD9               	goto	l2881
  6791  0DD5  0838               	movf	___bmul@multiplicand,w
  6792  0DD6  00B9               	movwf	??___bmul
  6793  0DD7  0839               	movf	??___bmul,w
  6794  0DD8  07BA               	addwf	___bmul@product,f
  6795  0DD9                     l2881:	
  6796  0DD9  1003               	clrc
  6797  0DDA  0DB8               	rlf	___bmul@multiplicand,f
  6798  0DDB  1003               	clrc
  6799  0DDC  0CBB               	rrf	___bmul@multiplier,f
  6800  0DDD  083B               	movf	___bmul@multiplier,w
  6801  0DDE  1D03               	btfss	3,2
  6802  0DDF  2DD3               	goto	l2877
  6803  0DE0  083A               	movf	___bmul@product,w
  6804  0DE1  0008               	return
  6805  0DE2                     __end_of___bmul:	
  6806                           
  6807                           	psect	text31
  6808  0D5D                     __ptext31:	
  6809 ;; *************** function _IIC_Init *****************
  6810 ;; Defined at:
  6811 ;;		line 9 in file "myiic.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		None
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    7
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_main
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           
  6840                           ;psect for function _IIC_Init
  6841  0D5D                     _IIC_Init:	
  6842                           
  6843                           ;myiic.c: 11:     LATC3=1;
  6844                           
  6845                           ;incstack = 0
  6846                           ; Regs used in _IIC_Init: []
  6847  0D5D  0022               	movlb	2	; select bank2
  6848  0D5E  158E               	bsf	14,3	;volatile
  6849                           
  6850                           ;myiic.c: 12:  LATC4=1;
  6851  0D5F  160E               	bsf	14,4	;volatile
  6852                           
  6853                           ;myiic.c: 14:     ODCONC3 = 1;
  6854  0D60  0025               	movlb	5	; select bank5
  6855  0D61  158E               	bsf	14,3	;volatile
  6856                           
  6857                           ;myiic.c: 15:     ODCONC4 = 1;
  6858  0D62  160E               	bsf	14,4	;volatile
  6859                           
  6860                           ;myiic.c: 17:     TRISC4 = 0;
  6861  0D63  0021               	movlb	1	; select bank1
  6862  0D64  120E               	bcf	14,4	;volatile
  6863                           
  6864                           ;myiic.c: 18:     TRISC3 = 0;
  6865  0D65  118E               	bcf	14,3	;volatile
  6866                           
  6867                           ;myiic.c: 20:  WPUC4 = 1;
  6868  0D66  0024               	movlb	4	; select bank4
  6869  0D67  160E               	bsf	14,4	;volatile
  6870                           
  6871                           ;myiic.c: 21:     WPUC3 = 1;
  6872  0D68  158E               	bsf	14,3	;volatile
  6873  0D69  0008               	return
  6874  0D6A                     __end_of_IIC_Init:	
  6875                           
  6876                           	psect	intentry
  6877  0004                     __pintentry:	
  6878 ;; *************** function _ISR *****************
  6879 ;; Defined at:
  6880 ;;		line 199 in file "main.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    6
  6901 ;; This function calls:
  6902 ;;		_bpc_proc
  6903 ;;		_capture_IsEnable
  6904 ;;		_capture_IsIntrpt
  6905 ;;		_capture_clrIntrpt
  6906 ;;		_capture_handdle
  6907 ;;		_key_isPressed
  6908 ;;		_timer_IsTimer0Itrpt
  6909 ;;		_timer_IsTimer1Itrpt
  6910 ;;		_timer_Timer0Handdle
  6911 ;;		_timer_Timer1ClrIntrpt
  6912 ;;		i1_capture_Set
  6913 ;;		i1_timer_Timer0Reset
  6914 ;; This function is called by:
  6915 ;;		Interrupt level 1
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919  0004                     _ISR:	
  6920                           
  6921                           ;incstack = 0
  6922  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6923                           
  6924                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6925  0005  3180               	pagesel	$
  6926  0006  318C  24C7  3180   	fcall	_timer_IsTimer1Itrpt
  6927  0009  3A00               	xorlw	0
  6928  000A  1903               	skipnz
  6929  000B  280F               	goto	i1l3631
  6930  000C  318C  24B5  3180   	fcall	_timer_Timer1ClrIntrpt
  6931  000F                     i1l3631:	
  6932  000F  318C  24C3  3180   	fcall	_timer_IsTimer0Itrpt
  6933  0012  3A00               	xorlw	0
  6934  0013  1903               	skipnz
  6935  0014  2825               	goto	i1l134
  6936  0015  318C  24D4  3180   	fcall	_timer_Timer0Handdle
  6937  0018  318D  25F5  3180   	fcall	_key_isPressed
  6938  001B  3A00               	xorlw	0
  6939  001C  1903               	skipnz
  6940  001D  2822               	goto	i1l135
  6941  001E  3001               	movlw	1
  6942  001F  318D  2545  3180   	fcall	i1_capture_Set
  6943  0022                     i1l135:	
  6944                           
  6945                           ;main.c: 240:         timer_Timer0Reset();
  6946  0022  318C  24CF  3180   	fcall	i1_timer_Timer0Reset
  6947  0025                     i1l134:	
  6948                           ;main.c: 241:     }
  6949                           
  6950                           
  6951                           ;main.c: 243:     if(capture_IsEnable() && capture_IsIntrpt())
  6952  0025  318C  24BB  3180   	fcall	_capture_IsEnable
  6953  0028  3A00               	xorlw	0
  6954  0029  1903               	skipnz
  6955  002A  2839               	goto	i1l137
  6956  002B  318C  24BF  3180   	fcall	_capture_IsIntrpt
  6957  002E  3A00               	xorlw	0
  6958  002F  1903               	skipnz
  6959  0030  2839               	goto	i1l137
  6960                           
  6961                           ;main.c: 244:     {;main.c: 245:         capture_handdle();
  6962  0031  3185  25BA  3180   	fcall	_capture_handdle
  6963                           
  6964                           ;main.c: 247:         bpc_proc();
  6965  0034  3180  2050  3180   	fcall	_bpc_proc
  6966                           
  6967                           ;main.c: 249:         capture_clrIntrpt();
  6968  0037  318C  24B2         	fcall	_capture_clrIntrpt
  6969  0039                     i1l137:	
  6970  0039  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6971  003A  0009               	retfie
  6972  003B                     __end_of_ISR:	
  6973                           
  6974                           	psect	text33
  6975  0CCF                     __ptext33:	
  6976 ;; *************** function i1_timer_Timer0Reset *****************
  6977 ;; Defined at:
  6978 ;;		line 92 in file "timer.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_ISR
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function i1_timer_Timer0Reset
  7007  0CCF                     i1_timer_Timer0Reset:	
  7008                           
  7009                           ;timer.c: 94:     INTCONbits.TMR0IF = 0;
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in i1_timer_Timer0Reset: [wreg]
  7013  0CCF  110B               	bcf	11,2	;volatile
  7014                           
  7015                           ;timer.c: 95:     TMR0 = (158 + 0);
  7016  0CD0  309E               	movlw	158
  7017  0CD1  0020               	movlb	0	; select bank0
  7018  0CD2  0095               	movwf	21	;volatile
  7019  0CD3  0008               	return
  7020  0CD4                     __end_ofi1_timer_Timer0Reset:	
  7021                           
  7022                           	psect	text34
  7023  0CB5                     __ptext34:	
  7024 ;; *************** function _timer_Timer1ClrIntrpt *****************
  7025 ;; Defined at:
  7026 ;;		line 51 in file "timer.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;		None
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		None
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;Total ram usage:        0 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_ISR
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _timer_Timer1ClrIntrpt
  7055  0CB5                     _timer_Timer1ClrIntrpt:	
  7056                           
  7057                           ;timer.c: 53:     PIR1bits.TMR1IF = 0b0;
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _timer_Timer1ClrIntrpt: []
  7061  0CB5  0020               	movlb	0	; select bank0
  7062  0CB6  1011               	bcf	17,0	;volatile
  7063  0CB7  0008               	return
  7064  0CB8                     __end_of_timer_Timer1ClrIntrpt:	
  7065                           
  7066                           	psect	text35
  7067  0CD4                     __ptext35:	
  7068 ;; *************** function _timer_Timer0Handdle *****************
  7069 ;; Defined at:
  7070 ;;		line 110 in file "timer.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;		None
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2   70[None  ] int 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;Total ram usage:        0 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    5
  7091 ;; This function calls:
  7092 ;;		_key_checkPressed
  7093 ;;		_update_time
  7094 ;; This function is called by:
  7095 ;;		_ISR
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _timer_Timer0Handdle
  7101  0CD4                     _timer_Timer0Handdle:	
  7102                           
  7103                           ;timer.c: 112:     key_checkPressed();
  7104                           
  7105                           ;incstack = 0
  7106                           ; Regs used in _timer_Timer0Handdle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7107  0CD4  318E  2634  318C   	fcall	_key_checkPressed
  7108                           
  7109                           ;timer.c: 114:     update_time();
  7110  0CD7  3183  23CB         	fcall	_update_time
  7111  0CD9  0008               	return
  7112  0CDA                     __end_of_timer_Timer0Handdle:	
  7113                           
  7114                           	psect	text36
  7115  03CB                     __ptext36:	
  7116 ;; *************** function _update_time *****************
  7117 ;; Defined at:
  7118 ;;		line 97 in file "display.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  pdata           1   13[COMMON] PTR volatile struct .
  7123 ;;		 -> g_data(39), 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;Total ram usage:        3 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    4
  7140 ;; This function calls:
  7141 ;;		i1___awmod
  7142 ;;		i1_capture_Set
  7143 ;;		i1_data_getdata
  7144 ;;		i1_display_update
  7145 ;; This function is called by:
  7146 ;;		_timer_Timer0Handdle
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           
  7151                           ;psect for function _update_time
  7152  03CB                     _update_time:	
  7153                           
  7154                           ;display.c: 99:     G_DATA *pdata = data_getdata();
  7155                           
  7156                           ;incstack = 0
  7157                           ; Regs used in _update_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7158  03CB  318C  24AC  3183   	fcall	i1_data_getdata
  7159  03CE  0020               	movlb	0	; select bank0
  7160  03CF  00AC               	movwf	??_update_time
  7161  03D0  082C               	movf	??_update_time,w
  7162  03D1  00FD               	movwf	update_time@pdata
  7163                           
  7164                           ;display.c: 100:     pdata->g_time_100ms++;
  7165  03D2  3001               	movlw	1
  7166  03D3  00AC               	movwf	??_update_time
  7167  03D4  087D               	movf	update_time@pdata,w
  7168  03D5  3E06               	addlw	6
  7169  03D6  0086               	movwf	6
  7170  03D7  0187               	clrf	7
  7171  03D8  082C               	movf	??_update_time,w
  7172  03D9  0781               	addwf	1,f
  7173                           
  7174                           ;display.c: 101:     if(pdata->g_time_100ms == 10)
  7175  03DA  087D               	movf	update_time@pdata,w
  7176  03DB  3E06               	addlw	6
  7177  03DC  0086               	movwf	6
  7178  03DD  0187               	clrf	7
  7179  03DE  300A               	movlw	10
  7180  03DF  0601               	xorwf	1,w
  7181  03E0  1D03               	btfss	3,2
  7182  03E1  0008               	return
  7183                           
  7184                           ;display.c: 102:     {;display.c: 103:         pdata->g_time_100ms = 0;
  7185  03E2  087D               	movf	update_time@pdata,w
  7186  03E3  3E06               	addlw	6
  7187  03E4  0086               	movwf	6
  7188  03E5  0187               	clrf	7
  7189  03E6  0181               	clrf	1
  7190                           
  7191                           ;display.c: 104:         pdata->g_time_s++;
  7192  03E7  3001               	movlw	1
  7193  03E8  00AC               	movwf	??_update_time
  7194  03E9  087D               	movf	update_time@pdata,w
  7195  03EA  3E05               	addlw	5
  7196  03EB  0086               	movwf	6
  7197  03EC  0187               	clrf	7
  7198  03ED  082C               	movf	??_update_time,w
  7199  03EE  0781               	addwf	1,f
  7200                           
  7201                           ;display.c: 106:         if(pdata->g_time_s == 60)
  7202  03EF  087D               	movf	update_time@pdata,w
  7203  03F0  3E05               	addlw	5
  7204  03F1  0086               	movwf	6
  7205  03F2  0187               	clrf	7
  7206  03F3  303C               	movlw	60
  7207  03F4  0601               	xorwf	1,w
  7208  03F5  1D03               	btfss	3,2
  7209  03F6  0008               	return
  7210                           
  7211                           ;display.c: 107:         {;display.c: 108:             pdata->g_time_m++;
  7212  03F7  3001               	movlw	1
  7213  03F8  00AC               	movwf	??_update_time
  7214  03F9  087D               	movf	update_time@pdata,w
  7215  03FA  3E04               	addlw	4
  7216  03FB  0086               	movwf	6
  7217  03FC  0187               	clrf	7
  7218  03FD  082C               	movf	??_update_time,w
  7219  03FE  0781               	addwf	1,f
  7220                           
  7221                           ;display.c: 109:             pdata->g_time_s = 0;
  7222  03FF  087D               	movf	update_time@pdata,w
  7223  0400  3E05               	addlw	5
  7224  0401  0086               	movwf	6
  7225  0402  0187               	clrf	7
  7226  0403  0181               	clrf	1
  7227                           
  7228                           ;display.c: 110:             pdata->cnt_update++;
  7229  0404  087D               	movf	update_time@pdata,w
  7230  0405  3E21               	addlw	33
  7231  0406  0086               	movwf	6
  7232  0407  0187               	clrf	7
  7233  0408  3001               	movlw	1
  7234  0409  0781               	addwf	1,f
  7235  040A  3141               	addfsr 1,1
  7236  040B  1803               	skipnc
  7237  040C  0A81               	incf	1,f
  7238                           
  7239                           ;display.c: 111:             if(pdata->g_time_m % 30 == 0){
  7240  040D  301E               	movlw	30
  7241  040E  00F0               	movwf	i1___awmod@divisor
  7242  040F  3000               	movlw	0
  7243  0410  00F1               	movwf	i1___awmod@divisor+1
  7244  0411  087D               	movf	update_time@pdata,w
  7245  0412  3E04               	addlw	4
  7246  0413  0086               	movwf	6
  7247  0414  0187               	clrf	7
  7248  0415  0801               	movf	1,w
  7249  0416  00AC               	movwf	??_update_time
  7250  0417  01AD               	clrf	??_update_time+1
  7251  0418  082C               	movf	??_update_time,w
  7252  0419  00F2               	movwf	i1___awmod@dividend
  7253  041A  082D               	movf	??_update_time+1,w
  7254  041B  00F3               	movwf	i1___awmod@dividend+1
  7255  041C  3187  270A  3183   	fcall	i1___awmod
  7256  041F  0870               	movf	?i1___awmod,w
  7257  0420  0471               	iorwf	?i1___awmod+1,w
  7258  0421  1D03               	btfss	3,2
  7259  0422  2C27               	goto	i1l3065
  7260                           
  7261                           ;display.c: 112:                 capture_Set(TRUE);
  7262  0423  3001               	movlw	1
  7263  0424  318D  2545  3183   	fcall	i1_capture_Set
  7264  0427                     i1l3065:	
  7265                           
  7266                           ;display.c: 114:             if(pdata->g_time_m == 60)
  7267  0427  087D               	movf	update_time@pdata,w
  7268  0428  3E04               	addlw	4
  7269  0429  0086               	movwf	6
  7270  042A  0187               	clrf	7
  7271  042B  303C               	movlw	60
  7272  042C  0601               	xorwf	1,w
  7273  042D  1D03               	btfss	3,2
  7274  042E  2C4A               	goto	i1l3071
  7275                           
  7276                           ;display.c: 115:             {;display.c: 116:                 pdata->g_time_h++;
  7277  042F  3001               	movlw	1
  7278  0430  0020               	movlb	0	; select bank0
  7279  0431  00AC               	movwf	??_update_time
  7280  0432  087D               	movf	update_time@pdata,w
  7281  0433  3E03               	addlw	3
  7282  0434  0086               	movwf	6
  7283  0435  0187               	clrf	7
  7284  0436  082C               	movf	??_update_time,w
  7285  0437  0781               	addwf	1,f
  7286                           
  7287                           ;display.c: 117:                 pdata->g_time_m = 0;
  7288  0438  087D               	movf	update_time@pdata,w
  7289  0439  3E04               	addlw	4
  7290  043A  0086               	movwf	6
  7291  043B  0187               	clrf	7
  7292  043C  0181               	clrf	1
  7293                           
  7294                           ;display.c: 119:                 if(pdata->g_time_h == 24)
  7295  043D  087D               	movf	update_time@pdata,w
  7296  043E  3E03               	addlw	3
  7297  043F  0086               	movwf	6
  7298  0440  0187               	clrf	7
  7299  0441  3018               	movlw	24
  7300  0442  0601               	xorwf	1,w
  7301  0443  1D03               	btfss	3,2
  7302  0444  2C4A               	goto	i1l3071
  7303                           
  7304                           ;display.c: 120:                 {;display.c: 121:                     pdata->g_time_h =
      +                           0;
  7305  0445  087D               	movf	update_time@pdata,w
  7306  0446  3E03               	addlw	3
  7307  0447  0086               	movwf	6
  7308  0448  0187               	clrf	7
  7309  0449  0181               	clrf	1
  7310  044A                     i1l3071:	
  7311                           
  7312                           ;display.c: 125:             display_update();
  7313  044A  3183  2327         	fcall	i1_display_update
  7314  044C  0008               	return
  7315  044D                     __end_of_update_time:	
  7316                           
  7317                           	psect	text37
  7318  0E34                     __ptext37:	
  7319 ;; *************** function _key_checkPressed *****************
  7320 ;; Defined at:
  7321 ;;		line 126 in file "hardware.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  pdata           1    3[COMMON] PTR volatile struct .
  7326 ;;		 -> g_data(39), 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;Total ram usage:        2 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    2
  7343 ;; This function calls:
  7344 ;;		_led_Blink
  7345 ;;		i1_data_getdata
  7346 ;; This function is called by:
  7347 ;;		_timer_Timer0Handdle
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _key_checkPressed
  7353  0E34                     _key_checkPressed:	
  7354                           
  7355                           ;hardware.c: 146:     G_DATA *pdata = data_getdata();
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _key_checkPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7359  0E34  318C  24AC  318E   	fcall	i1_data_getdata
  7360  0E37  00F2               	movwf	??_key_checkPressed
  7361  0E38  0872               	movf	??_key_checkPressed,w
  7362  0E39  00F3               	movwf	key_checkPressed@pdata
  7363                           
  7364                           ;hardware.c: 148:     if(PORTCbits.RC5 == PIN_HIGH && FALSE == pdata->g_flg_switch)
  7365  0E3A  0020               	movlb	0	; select bank0
  7366  0E3B  1E8E               	btfss	14,5	;volatile
  7367  0E3C  0008               	return
  7368  0E3D  0873               	movf	key_checkPressed@pdata,w
  7369  0E3E  0086               	movwf	6
  7370  0E3F  0187               	clrf	7
  7371  0E40  0801               	movf	1,w
  7372  0E41  1D03               	btfss	3,2
  7373  0E42  0008               	return
  7374                           
  7375                           ;hardware.c: 149:     {;hardware.c: 151:         pdata->g_flg_switch = TRUE;
  7376  0E43  3001               	movlw	1
  7377  0E44  00F2               	movwf	??_key_checkPressed
  7378  0E45  0873               	movf	key_checkPressed@pdata,w
  7379  0E46  0086               	movwf	6
  7380  0E47  0187               	clrf	7
  7381  0E48  0872               	movf	??_key_checkPressed,w
  7382  0E49  0081               	movwf	1
  7383                           
  7384                           ;hardware.c: 153:         led_Blink();
  7385  0E4A  318D  2504         	fcall	_led_Blink
  7386  0E4C  0008               	return
  7387  0E4D                     __end_of_key_checkPressed:	
  7388                           
  7389                           	psect	text38
  7390  0D04                     __ptext38:	
  7391 ;; *************** function _led_Blink *****************
  7392 ;; Defined at:
  7393 ;;		line 116 in file "hardware.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;		None
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      unsigned char 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0, pclath, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7411 ;;Total ram usage:        1 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    1
  7414 ;; This function calls:
  7415 ;;		i1_led_SetState
  7416 ;; This function is called by:
  7417 ;;		_key_checkPressed
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _led_Blink
  7423  0D04                     _led_Blink:	
  7424                           
  7425                           ;hardware.c: 118:     static u8 State = 0;;hardware.c: 119:     led_SetState(++State & 0
      +                          x01);
  7426                           
  7427                           ;incstack = 0
  7428                           ; Regs used in _led_Blink: [wreg+status,2+status,0+pclath+cstack]
  7429  0D04  3001               	movlw	1
  7430  0D05  00F1               	movwf	??_led_Blink
  7431  0D06  0871               	movf	??_led_Blink,w
  7432  0D07  0020               	movlb	0	; select bank0
  7433  0D08  07D1               	addwf	led_Blink@State,f
  7434  0D09  0851               	movf	led_Blink@State,w
  7435  0D0A  3901               	andlw	1
  7436  0D0B  318C  24FA         	fcall	i1_led_SetState
  7437  0D0D  0008               	return
  7438  0D0E                     __end_of_led_Blink:	
  7439                           
  7440                           	psect	text39
  7441  0CC7                     __ptext39:	
  7442 ;; *************** function _timer_IsTimer1Itrpt *****************
  7443 ;; Defined at:
  7444 ;;		line 46 in file "timer.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      enum E5232
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_ISR
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           
  7472                           ;psect for function _timer_IsTimer1Itrpt
  7473  0CC7                     _timer_IsTimer1Itrpt:	
  7474                           
  7475                           ;timer.c: 48:     return (PIR1bits.TMR1IF == 0b1)? TRUE : FALSE;
  7476                           
  7477                           ;incstack = 0
  7478                           ; Regs used in _timer_IsTimer1Itrpt: [wreg+status,2+status,0]
  7479  0CC7  0020               	movlb	0	; select bank0
  7480  0CC8  0811               	movf	17,w	;volatile
  7481  0CC9  3901               	andlw	1
  7482  0CCA  0008               	return
  7483  0CCB                     __end_of_timer_IsTimer1Itrpt:	
  7484                           
  7485                           	psect	text40
  7486  0CC3                     __ptext40:	
  7487 ;; *************** function _timer_IsTimer0Itrpt *****************
  7488 ;; Defined at:
  7489 ;;		line 103 in file "timer.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      enum E5232
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_ISR
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           
  7517                           ;psect for function _timer_IsTimer0Itrpt
  7518  0CC3                     _timer_IsTimer0Itrpt:	
  7519                           
  7520                           ;timer.c: 105:     return (INTCONbits.TMR0IF == 0b1)? TRUE : FALSE;
  7521                           
  7522                           ;incstack = 0
  7523                           ; Regs used in _timer_IsTimer0Itrpt: [wreg+status,2+status,0]
  7524  0CC3  0C0B               	rrf	11,w	;volatile
  7525  0CC4  0C89               	rrf	9,f
  7526  0CC5  3901               	andlw	1
  7527  0CC6  0008               	return
  7528  0CC7                     __end_of_timer_IsTimer0Itrpt:	
  7529                           
  7530                           	psect	text41
  7531  0DF5                     __ptext41:	
  7532 ;; *************** function _key_isPressed *****************
  7533 ;; Defined at:
  7534 ;;		line 158 in file "hardware.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  pdata           1    1[COMMON] PTR volatile struct .
  7539 ;;		 -> g_data(39), 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      enum E5232
  7542 ;; Registers used:
  7543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;Total ram usage:        2 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    1
  7556 ;; This function calls:
  7557 ;;		i1_data_getdata
  7558 ;; This function is called by:
  7559 ;;		_ISR
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           
  7564                           ;psect for function _key_isPressed
  7565  0DF5                     _key_isPressed:	
  7566                           
  7567                           ;hardware.c: 160:     G_DATA *pdata = data_getdata();
  7568                           
  7569                           ;incstack = 0
  7570                           ; Regs used in _key_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7571  0DF5  318C  24AC  318D   	fcall	i1_data_getdata
  7572  0DF8  00F0               	movwf	??_key_isPressed
  7573  0DF9  0870               	movf	??_key_isPressed,w
  7574  0DFA  00F1               	movwf	key_isPressed@pdata
  7575                           
  7576                           ;hardware.c: 161:     if(pdata->g_flg_switch == TRUE){
  7577  0DFB  0871               	movf	key_isPressed@pdata,w
  7578  0DFC  0086               	movwf	6
  7579  0DFD  0187               	clrf	7
  7580  0DFE  0301               	decf	1,w
  7581  0DFF  1D03               	btfss	3,2
  7582  0E00  2E07               	goto	i1l3347
  7583                           
  7584                           ;hardware.c: 162:         pdata->g_flg_switch = FALSE;
  7585  0E01  0871               	movf	key_isPressed@pdata,w
  7586  0E02  0086               	movwf	6
  7587  0E03  0187               	clrf	7
  7588  0E04  0181               	clrf	1
  7589                           
  7590                           ;hardware.c: 163:         return TRUE;
  7591  0E05  3001               	movlw	1
  7592  0E06  0008               	return
  7593  0E07                     i1l3347:	
  7594                           
  7595                           ;hardware.c: 165:         return FALSE;
  7596  0E07  3000               	movlw	0
  7597  0E08  0008               	return
  7598  0E09                     __end_of_key_isPressed:	
  7599                           
  7600                           	psect	text42
  7601  05BA                     __ptext42:	
  7602 ;; *************** function _capture_handdle *****************
  7603 ;; Defined at:
  7604 ;;		line 65 in file "hardware.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  cnt_tmp         2   12[COMMON] unsigned short 
  7609 ;;  cnt_int         2   10[COMMON] unsigned short 
  7610 ;;  pdata           1    9[COMMON] PTR volatile struct .
  7611 ;;		 -> g_data(39), 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  2   80[None  ] int 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;Total ram usage:       13 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    1
  7628 ;; This function calls:
  7629 ;;		_capture_IsNegEdge
  7630 ;;		i1_capture_setEdge
  7631 ;;		i1_data_getdata
  7632 ;;		i1_led_SetState
  7633 ;; This function is called by:
  7634 ;;		_ISR
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           
  7639                           ;psect for function _capture_handdle
  7640  05BA                     _capture_handdle:	
  7641                           
  7642                           ;hardware.c: 67:     G_DATA *pdata = data_getdata();
  7643                           
  7644                           ;incstack = 0
  7645                           ; Regs used in _capture_handdle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7646  05BA  318C  24AC  3185   	fcall	i1_data_getdata
  7647  05BD  00F1               	movwf	??_capture_handdle
  7648  05BE  0871               	movf	??_capture_handdle,w
  7649  05BF  00F9               	movwf	capture_handdle@pdata
  7650                           
  7651                           ;hardware.c: 72:     cnt_tmp = CCPR2H;
  7652  05C0  0025               	movlb	5	; select bank5
  7653  05C1  0819               	movf	25,w	;volatile
  7654  05C2  00F1               	movwf	??_capture_handdle
  7655  05C3  01F2               	clrf	??_capture_handdle+1
  7656  05C4  0871               	movf	??_capture_handdle,w
  7657  05C5  00FC               	movwf	capture_handdle@cnt_tmp
  7658  05C6  0872               	movf	??_capture_handdle+1,w
  7659  05C7  00FD               	movwf	capture_handdle@cnt_tmp+1
  7660                           
  7661                           ;hardware.c: 73:     cnt_tmp = (cnt_tmp << 8) + CCPR2L;
  7662  05C8  0818               	movf	24,w	;volatile
  7663  05C9  00F1               	movwf	??_capture_handdle
  7664  05CA  01F2               	clrf	??_capture_handdle+1
  7665  05CB  087C               	movf	capture_handdle@cnt_tmp,w
  7666  05CC  00F4               	movwf	??_capture_handdle+3
  7667  05CD  01F3               	clrf	??_capture_handdle+2
  7668  05CE  0871               	movf	??_capture_handdle,w
  7669  05CF  0773               	addwf	??_capture_handdle+2,w
  7670  05D0  00F5               	movwf	??_capture_handdle+4
  7671  05D1  0872               	movf	??_capture_handdle+1,w
  7672  05D2  3D74               	addwfc	??_capture_handdle+3,w
  7673  05D3  00F6               	movwf	??_capture_handdle+5
  7674  05D4  0875               	movf	??_capture_handdle+4,w
  7675  05D5  00FC               	movwf	capture_handdle@cnt_tmp
  7676  05D6  0876               	movf	??_capture_handdle+5,w
  7677  05D7  00FD               	movwf	capture_handdle@cnt_tmp+1
  7678                           
  7679                           ;hardware.c: 75:     if(cnt_tmp > last_cnt)
  7680  05D8  087D               	movf	capture_handdle@cnt_tmp+1,w
  7681  05D9  0020               	movlb	0	; select bank0
  7682  05DA  024E               	subwf	capture_handdle@last_cnt+1,w
  7683  05DB  1D03               	skipz
  7684  05DC  2DDF               	goto	u283_25
  7685  05DD  087C               	movf	capture_handdle@cnt_tmp,w
  7686  05DE  024D               	subwf	capture_handdle@last_cnt,w
  7687  05DF                     u283_25:	
  7688  05DF  1803               	skipnc
  7689  05E0  2DE8               	goto	i1l3371
  7690                           
  7691                           ;hardware.c: 76:     {;hardware.c: 77:         cnt_int = cnt_tmp - last_cnt;
  7692  05E1  084D               	movf	capture_handdle@last_cnt,w
  7693  05E2  027C               	subwf	capture_handdle@cnt_tmp,w
  7694  05E3  00FA               	movwf	capture_handdle@cnt_int
  7695  05E4  084E               	movf	capture_handdle@last_cnt+1,w
  7696  05E5  3B7D               	subwfb	capture_handdle@cnt_tmp+1,w
  7697  05E6  00FB               	movwf	capture_handdle@cnt_int+1
  7698                           
  7699                           ;hardware.c: 78:     }
  7700  05E7  2DF0               	goto	i1l3375
  7701  05E8                     i1l3371:	
  7702                           
  7703                           ;hardware.c: 80:     {;hardware.c: 81:         cnt_int = 0xffff - last_cnt;
  7704  05E8  094D               	comf	capture_handdle@last_cnt,w
  7705  05E9  00FA               	movwf	capture_handdle@cnt_int
  7706  05EA  094E               	comf	capture_handdle@last_cnt+1,w
  7707  05EB  00FB               	movwf	capture_handdle@cnt_int+1
  7708                           
  7709                           ;hardware.c: 82:         cnt_int += cnt_tmp;
  7710  05EC  087C               	movf	capture_handdle@cnt_tmp,w
  7711  05ED  07FA               	addwf	capture_handdle@cnt_int,f
  7712  05EE  087D               	movf	capture_handdle@cnt_tmp+1,w
  7713  05EF  3DFB               	addwfc	capture_handdle@cnt_int+1,f
  7714  05F0                     i1l3375:	
  7715                           
  7716                           ;hardware.c: 87:     if(capture_IsNegEdge())
  7717  05F0  318C  24F0  3185   	fcall	_capture_IsNegEdge
  7718  05F3  3A00               	xorlw	0
  7719  05F4  1903               	skipnz
  7720  05F5  2E00               	goto	i1l3381
  7721                           
  7722                           ;hardware.c: 88:     {;hardware.c: 89:         pdata->cnt_high = cnt_int;
  7723  05F6  0879               	movf	capture_handdle@pdata,w
  7724  05F7  3E23               	addlw	35
  7725  05F8  0086               	movwf	6
  7726  05F9  0187               	clrf	7
  7727  05FA  087A               	movf	capture_handdle@cnt_int,w
  7728  05FB  3FC0               	movwi [0]fsr1
  7729  05FC  087B               	movf	capture_handdle@cnt_int+1,w
  7730  05FD  3FC1               	movwi [1]fsr1
  7731                           
  7732                           ;hardware.c: 90:         led_SetState(FALSE);
  7733  05FE  3000               	movlw	0
  7734  05FF  2E09               	goto	L1
  7735  0600                     i1l3381:	
  7736                           ;hardware.c: 91:     }
  7737                           
  7738                           
  7739                           ;hardware.c: 93:     {;hardware.c: 94:         pdata->cnt_low = cnt_int;
  7740  0600  0879               	movf	capture_handdle@pdata,w
  7741  0601  3E25               	addlw	37
  7742  0602  0086               	movwf	6
  7743  0603  0187               	clrf	7
  7744  0604  087A               	movf	capture_handdle@cnt_int,w
  7745  0605  3FC0               	movwi [0]fsr1
  7746  0606  087B               	movf	capture_handdle@cnt_int+1,w
  7747  0607  3FC1               	movwi [1]fsr1
  7748                           
  7749                           ;hardware.c: 95:         led_SetState(TRUE);
  7750  0608  3001               	movlw	1
  7751  0609                     L1:	
  7752  0609  318C  24FA  3185   	fcall	i1_led_SetState
  7753                           
  7754                           ;hardware.c: 98:     last_cnt = cnt_tmp;
  7755  060C  087D               	movf	capture_handdle@cnt_tmp+1,w
  7756  060D  0020               	movlb	0	; select bank0
  7757  060E  00CE               	movwf	capture_handdle@last_cnt+1
  7758  060F  087C               	movf	capture_handdle@cnt_tmp,w
  7759  0610  00CD               	movwf	capture_handdle@last_cnt
  7760                           
  7761                           ;hardware.c: 101:     capture_setEdge( (capture_IsNegEdge())? (0b0101) : (0b0100));
  7762  0611  318C  24F0  3185   	fcall	_capture_IsNegEdge
  7763  0614  3A00               	xorlw	0
  7764  0615  1D03               	skipz
  7765  0616  2E19               	goto	i1l3391
  7766  0617  3004               	movlw	4
  7767  0618  2E1A               	goto	L2
  7768  0619                     i1l3391:	
  7769  0619  3005               	movlw	5
  7770  061A                     L2:	
  7771  061A  00F7               	movwf	_capture_handdle$1404
  7772  061B  3000               	movlw	0
  7773  061C  00F8               	movwf	_capture_handdle$1404+1
  7774  061D  0877               	movf	_capture_handdle$1404,w
  7775  061E  318D  25A0         	fcall	i1_capture_setEdge
  7776  0620  0008               	return
  7777  0621                     __end_of_capture_handdle:	
  7778                           
  7779                           	psect	text43
  7780  0CFA                     __ptext43:	
  7781 ;; *************** function i1_led_SetState *****************
  7782 ;; Defined at:
  7783 ;;		line 110 in file "hardware.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  isOn            1    wreg     unsigned char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  isOn            1    0[COMMON] unsigned char 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      unsigned char 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;Total ram usage:        1 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_capture_handdle
  7807 ;;		_led_Blink
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function i1_led_SetState
  7813  0CFA                     i1_led_SetState:	
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in i1_led_SetState: [wreg+status,2+status,0]
  7817                           ;i1led_SetState@isOn stored from wreg
  7818  0CFA  00F0               	movwf	i1led_SetState@isOn
  7819                           
  7820                           ;hardware.c: 110: u8 led_SetState(u8 isOn);hardware.c: 111: {;hardware.c: 112:     LATBb
      +                          its.LATB3 = (isOn)? LED_STATE_ON : LED_STATE_OFF;
  7821  0CFB  0870               	movf	i1led_SetState@isOn,w
  7822  0CFC  1D03               	btfss	3,2
  7823  0CFD  2D01               	goto	u177_20
  7824  0CFE  0022               	movlb	2	; select bank2
  7825  0CFF  158D               	bsf	13,3	;volatile
  7826  0D00  0008               	return
  7827  0D01                     u177_20:	
  7828  0D01  0022               	movlb	2	; select bank2
  7829  0D02  118D               	bcf	13,3	;volatile
  7830  0D03  0008               	return
  7831  0D04                     __end_ofi1_led_SetState:	
  7832                           
  7833                           	psect	text44
  7834  0DA0                     __ptext44:	
  7835 ;; *************** function i1_capture_setEdge *****************
  7836 ;; Defined at:
  7837 ;;		line 12 in file "hardware.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  edge            1    wreg     unsigned char 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  edge            1    0[COMMON] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  2    0[None  ] int 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;Total ram usage:        1 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_capture_handdle
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function i1_capture_setEdge
  7866  0DA0                     i1_capture_setEdge:	
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in i1_capture_setEdge: [wreg+status,2+status,0]
  7870                           ;i1capture_setEdge@edge stored from wreg
  7871  0DA0  00F0               	movwf	i1capture_setEdge@edge
  7872                           
  7873                           ;hardware.c: 12: static int capture_setEdge(u8 edge);hardware.c: 13: {;hardware.c: 14:  
      +                             if((edge == (0b0101)) || (edge == (0b0100)))
  7874  0DA1  3005               	movlw	5
  7875  0DA2  0670               	xorwf	i1capture_setEdge@edge,w
  7876  0DA3  1903               	btfsc	3,2
  7877  0DA4  2DA9               	goto	i1l3239
  7878  0DA5  3004               	movlw	4
  7879  0DA6  0670               	xorwf	i1capture_setEdge@edge,w
  7880  0DA7  1D03               	btfss	3,2
  7881  0DA8  0008               	return
  7882  0DA9                     i1l3239:	
  7883                           
  7884                           ;hardware.c: 15:     {;hardware.c: 16:         CCP2CONbits.CCP2M = edge;
  7885  0DA9  0025               	movlb	5	; select bank5
  7886  0DAA  081A               	movf	26,w	;volatile
  7887  0DAB  0670               	xorwf	i1capture_setEdge@edge,w
  7888  0DAC  39F0               	andlw	-16
  7889  0DAD  0670               	xorwf	i1capture_setEdge@edge,w
  7890  0DAE  009A               	movwf	26	;volatile
  7891  0DAF  0008               	return
  7892  0DB0                     __end_ofi1_capture_setEdge:	
  7893                           
  7894                           	psect	text45
  7895  0CB2                     __ptext45:	
  7896 ;; *************** function _capture_clrIntrpt *****************
  7897 ;; Defined at:
  7898 ;;		line 56 in file "hardware.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		None
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        0 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_ISR
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function _capture_clrIntrpt
  7927  0CB2                     _capture_clrIntrpt:	
  7928                           
  7929                           ;hardware.c: 58:     PIR2bits.CCP2IF = 0;
  7930                           
  7931                           ;incstack = 0
  7932                           ; Regs used in _capture_clrIntrpt: []
  7933  0CB2  0020               	movlb	0	; select bank0
  7934  0CB3  1012               	bcf	18,0	;volatile
  7935  0CB4  0008               	return
  7936  0CB5                     __end_of_capture_clrIntrpt:	
  7937                           
  7938                           	psect	text46
  7939  0CBF                     __ptext46:	
  7940 ;; *************** function _capture_IsIntrpt *****************
  7941 ;; Defined at:
  7942 ;;		line 52 in file "hardware.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      enum E5232
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_ISR
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           
  7970                           ;psect for function _capture_IsIntrpt
  7971  0CBF                     _capture_IsIntrpt:	
  7972                           
  7973                           ;hardware.c: 54:     return (PIR2bits.CCP2IF == 0b1)? TRUE : FALSE;
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _capture_IsIntrpt: [wreg+status,2+status,0]
  7977  0CBF  0020               	movlb	0	; select bank0
  7978  0CC0  0812               	movf	18,w	;volatile
  7979  0CC1  3901               	andlw	1
  7980  0CC2  0008               	return
  7981  0CC3                     __end_of_capture_IsIntrpt:	
  7982                           
  7983                           	psect	text47
  7984  0CBB                     __ptext47:	
  7985 ;; *************** function _capture_IsEnable *****************
  7986 ;; Defined at:
  7987 ;;		line 48 in file "hardware.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      enum E5232
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_ISR
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           
  8015                           ;psect for function _capture_IsEnable
  8016  0CBB                     _capture_IsEnable:	
  8017                           
  8018                           ;hardware.c: 50:     return (PIE2bits.CCP2IE == 0b1)? TRUE : FALSE;
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in _capture_IsEnable: [wreg+status,2+status,0]
  8022  0CBB  0021               	movlb	1	; select bank1
  8023  0CBC  0812               	movf	18,w	;volatile
  8024  0CBD  3901               	andlw	1
  8025  0CBE  0008               	return
  8026  0CBF                     __end_of_capture_IsEnable:	
  8027                           
  8028                           	psect	text48
  8029  0050                     __ptext48:	
  8030 ;; *************** function _bpc_proc *****************
  8031 ;; Defined at:
  8032 ;;		line 146 in file "bpc.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  i               2   20[BANK0 ] int 
  8037 ;;  last_time_m     2   18[BANK0 ] unsigned short 
  8038 ;;  last_time_h     2   16[BANK0 ] unsigned short 
  8039 ;;  last_time_s     2   14[BANK0 ] unsigned short 
  8040 ;;  pdata           1   23[BANK0 ] PTR volatile struct .
  8041 ;;		 -> g_data(39), 
  8042 ;;  number          1   22[BANK0 ] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2   82[None  ] int 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;Total ram usage:       12 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    5
  8059 ;; This function calls:
  8060 ;;		_bpc_Cnt2Qua
  8061 ;;		_bpc_write_time
  8062 ;;		_check_err
  8063 ;;		i1_capture_Set
  8064 ;;		i1_data_getdata
  8065 ;;		i1_display_update
  8066 ;; This function is called by:
  8067 ;;		_ISR
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           
  8072                           ;psect for function _bpc_proc
  8073  0050                     _bpc_proc:	
  8074                           
  8075                           ;bpc.c: 147:     G_DATA *pdata = data_getdata();
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in _bpc_proc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8079  0050  318C  24AC  3180   	fcall	i1_data_getdata
  8080  0053  0020               	movlb	0	; select bank0
  8081  0054  00AC               	movwf	??_bpc_proc
  8082  0055  082C               	movf	??_bpc_proc,w
  8083  0056  00B7               	movwf	bpc_proc@pdata
  8084                           
  8085                           ;bpc.c: 148:     u8 number = bpc_Cnt2Qua();
  8086  0057  3184  244D  3180   	fcall	_bpc_Cnt2Qua
  8087  005A  0020               	movlb	0	; select bank0
  8088  005B  00AC               	movwf	??_bpc_proc
  8089  005C  082C               	movf	??_bpc_proc,w
  8090  005D  00B6               	movwf	bpc_proc@number
  8091                           
  8092                           ;bpc.c: 150:     if (6 == number) {
  8093  005E  3006               	movlw	6
  8094  005F  0636               	xorwf	bpc_proc@number,w
  8095  0060  1903               	btfsc	3,2
  8096  0061  0008               	return
  8097  0062  3004               	movlw	4
  8098  0063  0636               	xorwf	bpc_proc@number,w
  8099  0064  1D03               	btfss	3,2
  8100  0065  2873               	goto	i1l3413
  8101                           
  8102                           ;bpc.c: 153:         pdata->g_find_recv_start = FALSE;
  8103  0066  0837               	movf	bpc_proc@pdata,w
  8104  0067  3E02               	addlw	2
  8105  0068  0086               	movwf	6
  8106  0069  0187               	clrf	7
  8107  006A  0181               	clrf	1
  8108                           
  8109                           ;bpc.c: 154:         pdata->g_recv_count = 0;
  8110  006B  0837               	movf	bpc_proc@pdata,w
  8111  006C  3E0B               	addlw	11
  8112  006D  0086               	movwf	6
  8113  006E  0187               	clrf	7
  8114  006F  3000               	movlw	0
  8115  0070  3FC0               	movwi [0]fsr1
  8116  0071  3FC1               	movwi [1]fsr1
  8117  0072  0008               	return
  8118  0073                     i1l3413:	
  8119                           
  8120                           ;bpc.c: 160:     if (pdata->g_find_recv_start || 5 == number) {
  8121  0073  0837               	movf	bpc_proc@pdata,w
  8122  0074  3E02               	addlw	2
  8123  0075  0086               	movwf	6
  8124  0076  0187               	clrf	7
  8125  0077  0801               	movf	1,w
  8126  0078  1D03               	btfss	3,2
  8127  0079  287E               	goto	i1l3417
  8128  007A  3005               	movlw	5
  8129  007B  0636               	xorwf	bpc_proc@number,w
  8130  007C  1D03               	btfss	3,2
  8131  007D  28A6               	goto	i1l3423
  8132  007E                     i1l3417:	
  8133                           
  8134                           ;bpc.c: 161:         if (!pdata->g_find_recv_start) {
  8135  007E  0837               	movf	bpc_proc@pdata,w
  8136  007F  3E02               	addlw	2
  8137  0080  0086               	movwf	6
  8138  0081  0187               	clrf	7
  8139  0082  0801               	movf	1,w
  8140  0083  1D03               	btfss	3,2
  8141  0084  28AE               	goto	i1l3427
  8142                           
  8143                           ;bpc.c: 162:             pdata->g_find_recv_start = TRUE;
  8144  0085  3001               	movlw	1
  8145  0086  00AC               	movwf	??_bpc_proc
  8146  0087  0837               	movf	bpc_proc@pdata,w
  8147  0088  3E02               	addlw	2
  8148  0089  0086               	movwf	6
  8149  008A  0187               	clrf	7
  8150  008B  082C               	movf	??_bpc_proc,w
  8151  008C  0081               	movwf	1
  8152                           
  8153                           ;bpc.c: 163:             pdata->g_recv_buf[pdata->g_recv_count++] = number;
  8154  008D  0836               	movf	bpc_proc@number,w
  8155  008E  00AC               	movwf	??_bpc_proc
  8156  008F  0837               	movf	bpc_proc@pdata,w
  8157  0090  3E0B               	addlw	11
  8158  0091  0086               	movwf	6
  8159  0092  0187               	clrf	7
  8160  0093  0801               	movf	1,w
  8161  0094  0737               	addwf	bpc_proc@pdata,w
  8162  0095  00AD               	movwf	??_bpc_proc+1
  8163  0096  082D               	movf	??_bpc_proc+1,w
  8164  0097  3E0D               	addlw	13
  8165  0098  0086               	movwf	6
  8166  0099  0187               	clrf	7
  8167  009A  082C               	movf	??_bpc_proc,w
  8168  009B  0081               	movwf	1
  8169  009C  0837               	movf	bpc_proc@pdata,w
  8170  009D  3E0B               	addlw	11
  8171  009E  0086               	movwf	6
  8172  009F  0187               	clrf	7
  8173  00A0  3001               	movlw	1
  8174  00A1  0781               	addwf	1,f
  8175  00A2  3141               	addfsr 1,1
  8176  00A3  1803               	skipnc
  8177  00A4  0A81               	incf	1,f
  8178  00A5  0008               	return
  8179  00A6                     i1l3423:	
  8180                           
  8181                           ;bpc.c: 167:         pdata->g_recv_count = 0;
  8182  00A6  0837               	movf	bpc_proc@pdata,w
  8183  00A7  3E0B               	addlw	11
  8184  00A8  0086               	movwf	6
  8185  00A9  0187               	clrf	7
  8186  00AA  3000               	movlw	0
  8187  00AB  3FC0               	movwi [0]fsr1
  8188  00AC  3FC1               	movwi [1]fsr1
  8189  00AD  0008               	return
  8190  00AE                     i1l3427:	
  8191                           
  8192                           ;bpc.c: 172:     pdata->g_recv_buf[pdata->g_recv_count++] = number;
  8193  00AE  0836               	movf	bpc_proc@number,w
  8194  00AF  00AC               	movwf	??_bpc_proc
  8195  00B0  0837               	movf	bpc_proc@pdata,w
  8196  00B1  3E0B               	addlw	11
  8197  00B2  0086               	movwf	6
  8198  00B3  0187               	clrf	7
  8199  00B4  0801               	movf	1,w
  8200  00B5  0737               	addwf	bpc_proc@pdata,w
  8201  00B6  00AD               	movwf	??_bpc_proc+1
  8202  00B7  082D               	movf	??_bpc_proc+1,w
  8203  00B8  3E0D               	addlw	13
  8204  00B9  0086               	movwf	6
  8205  00BA  0187               	clrf	7
  8206  00BB  082C               	movf	??_bpc_proc,w
  8207  00BC  0081               	movwf	1
  8208  00BD  0837               	movf	bpc_proc@pdata,w
  8209  00BE  3E0B               	addlw	11
  8210  00BF  0086               	movwf	6
  8211  00C0  0187               	clrf	7
  8212  00C1  3001               	movlw	1
  8213  00C2  0781               	addwf	1,f
  8214  00C3  3141               	addfsr 1,1
  8215  00C4  1803               	skipnc
  8216  00C5  0A81               	incf	1,f
  8217                           
  8218                           ;bpc.c: 173:     if (pdata->g_recv_count <= CODE_P3) {
  8219  00C6  0837               	movf	bpc_proc@pdata,w
  8220  00C7  3E0B               	addlw	11
  8221  00C8  0086               	movwf	6
  8222  00C9  0187               	clrf	7
  8223  00CA  3F40               	moviw [0]fsr1
  8224  00CB  00AC               	movwf	??_bpc_proc
  8225  00CC  3F41               	moviw [1]fsr1
  8226  00CD  00AD               	movwf	??_bpc_proc+1
  8227  00CE  3000               	movlw	0
  8228  00CF  022D               	subwf	??_bpc_proc+1,w
  8229  00D0  300B               	movlw	11
  8230  00D1  1903               	skipnz
  8231  00D2  022C               	subwf	??_bpc_proc,w
  8232  00D3  1C03               	btfss	3,0
  8233  00D4  0008               	return
  8234                           
  8235                           ;bpc.c: 178:     if (pdata->g_recv_buf[CODE_P1] > 2) {
  8236  00D5  0837               	movf	bpc_proc@pdata,w
  8237  00D6  3E0E               	addlw	14
  8238  00D7  0086               	movwf	6
  8239  00D8  0187               	clrf	7
  8240  00D9  3003               	movlw	3
  8241  00DA  0201               	subwf	1,w
  8242  00DB  1C03               	skipc
  8243  00DC  28EE               	goto	i1l3441
  8244                           
  8245                           ;bpc.c: 179:         pdata->g_find_recv_start = FALSE;
  8246  00DD  0837               	movf	bpc_proc@pdata,w
  8247  00DE  3E02               	addlw	2
  8248  00DF  0086               	movwf	6
  8249  00E0  0187               	clrf	7
  8250  00E1  0181               	clrf	1
  8251                           
  8252                           ;bpc.c: 180:         pdata->g_isDecoding = 0;
  8253  00E2  0A37               	incf	bpc_proc@pdata,w
  8254  00E3  0086               	movwf	6
  8255  00E4  0187               	clrf	7
  8256  00E5  0181               	clrf	1
  8257                           
  8258                           ;bpc.c: 181:         pdata->g_recv_count = 0;
  8259  00E6  0837               	movf	bpc_proc@pdata,w
  8260  00E7  3E0B               	addlw	11
  8261  00E8  0086               	movwf	6
  8262  00E9  0187               	clrf	7
  8263  00EA  3000               	movlw	0
  8264  00EB  3FC0               	movwi [0]fsr1
  8265  00EC  3FC1               	movwi [1]fsr1
  8266  00ED  0008               	return
  8267  00EE                     i1l3441:	
  8268                           
  8269                           ;bpc.c: 185:     u16 last_time_h = pdata->g_time_h;
  8270  00EE  0837               	movf	bpc_proc@pdata,w
  8271  00EF  3E03               	addlw	3
  8272  00F0  0086               	movwf	6
  8273  00F1  0187               	clrf	7
  8274  00F2  0801               	movf	1,w
  8275  00F3  00AC               	movwf	??_bpc_proc
  8276  00F4  01AD               	clrf	??_bpc_proc+1
  8277  00F5  082C               	movf	??_bpc_proc,w
  8278  00F6  00B0               	movwf	bpc_proc@last_time_h
  8279  00F7  082D               	movf	??_bpc_proc+1,w
  8280  00F8  00B1               	movwf	bpc_proc@last_time_h+1
  8281                           
  8282                           ;bpc.c: 186:     u16 last_time_m = pdata->g_time_m;
  8283  00F9  0837               	movf	bpc_proc@pdata,w
  8284  00FA  3E04               	addlw	4
  8285  00FB  0086               	movwf	6
  8286  00FC  0187               	clrf	7
  8287  00FD  0801               	movf	1,w
  8288  00FE  00AC               	movwf	??_bpc_proc
  8289  00FF  01AD               	clrf	??_bpc_proc+1
  8290  0100  082C               	movf	??_bpc_proc,w
  8291  0101  00B2               	movwf	bpc_proc@last_time_m
  8292  0102  082D               	movf	??_bpc_proc+1,w
  8293  0103  00B3               	movwf	bpc_proc@last_time_m+1
  8294                           
  8295                           ;bpc.c: 187:     u16 last_time_s = pdata->g_time_s;
  8296  0104  0837               	movf	bpc_proc@pdata,w
  8297  0105  3E05               	addlw	5
  8298  0106  0086               	movwf	6
  8299  0107  0187               	clrf	7
  8300  0108  0801               	movf	1,w
  8301  0109  00AC               	movwf	??_bpc_proc
  8302  010A  01AD               	clrf	??_bpc_proc+1
  8303  010B  082C               	movf	??_bpc_proc,w
  8304  010C  00AE               	movwf	bpc_proc@last_time_s
  8305  010D  082D               	movf	??_bpc_proc+1,w
  8306  010E  00AF               	movwf	bpc_proc@last_time_s+1
  8307                           
  8308                           ;bpc.c: 189:     if (check_err(pdata)) {
  8309  010F  0837               	movf	bpc_proc@pdata,w
  8310  0110  3181  218A  3180   	fcall	_check_err
  8311  0113  0870               	movf	?_check_err,w
  8312  0114  0471               	iorwf	?_check_err+1,w
  8313  0115  1903               	btfsc	3,2
  8314  0116  2931               	goto	i1l3449
  8315                           
  8316                           ;bpc.c: 191:         pdata->g_time_h = last_time_h;
  8317  0117  0020               	movlb	0	; select bank0
  8318  0118  0830               	movf	bpc_proc@last_time_h,w
  8319  0119  00AC               	movwf	??_bpc_proc
  8320  011A  0837               	movf	bpc_proc@pdata,w
  8321  011B  3E03               	addlw	3
  8322  011C  0086               	movwf	6
  8323  011D  0187               	clrf	7
  8324  011E  082C               	movf	??_bpc_proc,w
  8325  011F  0081               	movwf	1
  8326                           
  8327                           ;bpc.c: 192:         pdata->g_time_m = last_time_m;
  8328  0120  0832               	movf	bpc_proc@last_time_m,w
  8329  0121  00AC               	movwf	??_bpc_proc
  8330  0122  0837               	movf	bpc_proc@pdata,w
  8331  0123  3E04               	addlw	4
  8332  0124  0086               	movwf	6
  8333  0125  0187               	clrf	7
  8334  0126  082C               	movf	??_bpc_proc,w
  8335  0127  0081               	movwf	1
  8336                           
  8337                           ;bpc.c: 193:         pdata->g_time_s = last_time_s;
  8338  0128  082E               	movf	bpc_proc@last_time_s,w
  8339  0129  00AC               	movwf	??_bpc_proc
  8340  012A  0837               	movf	bpc_proc@pdata,w
  8341  012B  3E05               	addlw	5
  8342  012C  0086               	movwf	6
  8343  012D  0187               	clrf	7
  8344  012E  082C               	movf	??_bpc_proc,w
  8345  012F  0081               	movwf	1
  8346  0130  0008               	return
  8347  0131                     i1l3449:	
  8348                           
  8349                           ;bpc.c: 198:     if (last_time_h != pdata->g_time_h || last_time_m != pdata->g_time_m) {
  8350  0131  0020               	movlb	0	; select bank0
  8351  0132  0837               	movf	bpc_proc@pdata,w
  8352  0133  3E03               	addlw	3
  8353  0134  0086               	movwf	6
  8354  0135  0187               	clrf	7
  8355  0136  0801               	movf	1,w
  8356  0137  00AC               	movwf	??_bpc_proc
  8357  0138  01AD               	clrf	??_bpc_proc+1
  8358  0139  0831               	movf	bpc_proc@last_time_h+1,w
  8359  013A  062D               	xorwf	??_bpc_proc+1,w
  8360  013B  1D03               	skipz
  8361  013C  293F               	goto	u294_25
  8362  013D  0830               	movf	bpc_proc@last_time_h,w
  8363  013E  062C               	xorwf	??_bpc_proc,w
  8364  013F                     u294_25:	
  8365  013F  1D03               	skipz
  8366  0140  2950               	goto	i1l3453
  8367  0141  0837               	movf	bpc_proc@pdata,w
  8368  0142  3E04               	addlw	4
  8369  0143  0086               	movwf	6
  8370  0144  0187               	clrf	7
  8371  0145  0801               	movf	1,w
  8372  0146  00AC               	movwf	??_bpc_proc
  8373  0147  01AD               	clrf	??_bpc_proc+1
  8374  0148  0833               	movf	bpc_proc@last_time_m+1,w
  8375  0149  062D               	xorwf	??_bpc_proc+1,w
  8376  014A  1D03               	skipz
  8377  014B  294E               	goto	u295_25
  8378  014C  0832               	movf	bpc_proc@last_time_m,w
  8379  014D  062C               	xorwf	??_bpc_proc,w
  8380  014E                     u295_25:	
  8381  014E  1903               	skipnz
  8382  014F  2953               	goto	i1l3455
  8383  0150                     i1l3453:	
  8384                           
  8385                           ;bpc.c: 199:         display_update();
  8386  0150  3183  2327  3180   	fcall	i1_display_update
  8387  0153                     i1l3455:	
  8388                           
  8389                           ;bpc.c: 203:     pdata->g_find_recv_start = FALSE;
  8390  0153  0020               	movlb	0	; select bank0
  8391  0154  0837               	movf	bpc_proc@pdata,w
  8392  0155  3E02               	addlw	2
  8393  0156  0086               	movwf	6
  8394  0157  0187               	clrf	7
  8395  0158  0181               	clrf	1
  8396                           
  8397                           ;bpc.c: 205:     pdata->g_isDecoding = FALSE;
  8398  0159  0A37               	incf	bpc_proc@pdata,w
  8399  015A  0086               	movwf	6
  8400  015B  0187               	clrf	7
  8401  015C  0181               	clrf	1
  8402                           
  8403                           ;bpc.c: 208:     capture_Set(FALSE);
  8404  015D  3000               	movlw	0
  8405  015E  318D  2545  3180   	fcall	i1_capture_Set
  8406                           
  8407                           ;bpc.c: 211:     if(-1 == bpc_write_time()){
  8408  0161  3187  274F  3180   	fcall	_bpc_write_time
  8409                           
  8410                           ;bpc.c: 215:     pdata->g_recv_count = CODE_P0;
  8411  0164  0020               	movlb	0	; select bank0
  8412  0165  0837               	movf	bpc_proc@pdata,w
  8413  0166  3E0B               	addlw	11
  8414  0167  0086               	movwf	6
  8415  0168  0187               	clrf	7
  8416  0169  3000               	movlw	0
  8417  016A  3FC0               	movwi [0]fsr1
  8418  016B  3FC1               	movwi [1]fsr1
  8419                           
  8420                           ;bpc.c: 216:     for (int i = 0; i < 20; i++) {
  8421  016C  01B4               	clrf	bpc_proc@i
  8422  016D  01B5               	clrf	bpc_proc@i+1
  8423  016E                     i1l3471:	
  8424                           
  8425                           ;bpc.c: 217:         pdata->g_recv_buf[i] = 5;
  8426  016E  3005               	movlw	5
  8427  016F  0020               	movlb	0	; select bank0
  8428  0170  00AC               	movwf	??_bpc_proc
  8429  0171  0834               	movf	bpc_proc@i,w
  8430  0172  0737               	addwf	bpc_proc@pdata,w
  8431  0173  00AD               	movwf	??_bpc_proc+1
  8432  0174  082D               	movf	??_bpc_proc+1,w
  8433  0175  3E0D               	addlw	13
  8434  0176  0086               	movwf	6
  8435  0177  0187               	clrf	7
  8436  0178  082C               	movf	??_bpc_proc,w
  8437  0179  0081               	movwf	1
  8438                           
  8439                           ;bpc.c: 218:     }
  8440  017A  3001               	movlw	1
  8441  017B  07B4               	addwf	bpc_proc@i,f
  8442  017C  3000               	movlw	0
  8443  017D  3DB5               	addwfc	bpc_proc@i+1,f
  8444  017E  0835               	movf	bpc_proc@i+1,w
  8445  017F  3A80               	xorlw	128
  8446  0180  00AC               	movwf	??_bpc_proc
  8447  0181  3080               	movlw	128
  8448  0182  022C               	subwf	??_bpc_proc,w
  8449  0183  1D03               	skipz
  8450  0184  2987               	goto	u296_25
  8451  0185  3014               	movlw	20
  8452  0186  0234               	subwf	bpc_proc@i,w
  8453  0187                     u296_25:	
  8454  0187  1803               	btfsc	3,0
  8455  0188  0008               	return
  8456  0189  296E               	goto	i1l3471
  8457  018A                     __end_of_bpc_proc:	
  8458                           
  8459                           	psect	text49
  8460  0327                     __ptext49:	
  8461 ;; *************** function i1_display_update *****************
  8462 ;; Defined at:
  8463 ;;		line 74 in file "display.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  display_upda    1   11[BANK0 ] PTR volatile struct .
  8468 ;;		 -> g_data(39), 
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8480 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;Total ram usage:       12 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    3
  8485 ;; This function calls:
  8486 ;;		i1___awdiv
  8487 ;;		i1___awmod
  8488 ;;		i1_data_getdata
  8489 ;;		i1_display_write_once
  8490 ;; This function is called by:
  8491 ;;		_bpc_proc
  8492 ;;		_update_time
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           
  8497                           ;psect for function i1_display_update
  8498  0327                     i1_display_update:	
  8499                           
  8500                           ;display.c: 88:     G_DATA *pdata = data_getdata();
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in i1_display_update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8504  0327  318C  24AC  3183   	fcall	i1_data_getdata
  8505  032A  0020               	movlb	0	; select bank0
  8506  032B  00A0               	movwf	??i1_display_update
  8507  032C  0820               	movf	??i1_display_update,w
  8508  032D  00AB               	movwf	i1display_update@pdata
  8509                           
  8510                           ;display.c: 89:     display_write_once(segmcode[(pdata->g_time_h/10 == 0? 10:pdata->g_ti
      +                          me_h/10)], segmcode[pdata->g_time_h%10], segmcode[pdata->g_time_m/10], segmcode[pdata->g
      +                          _time_m%10]);
  8511  032E  300A               	movlw	10
  8512  032F  00F0               	movwf	i1___awdiv@divisor
  8513  0330  3000               	movlw	0
  8514  0331  00F1               	movwf	i1___awdiv@divisor+1
  8515  0332  082B               	movf	i1display_update@pdata,w
  8516  0333  3E03               	addlw	3
  8517  0334  0086               	movwf	6
  8518  0335  0187               	clrf	7
  8519  0336  0801               	movf	1,w
  8520  0337  00A0               	movwf	??i1_display_update
  8521  0338  01A1               	clrf	??i1_display_update+1
  8522  0339  0820               	movf	??i1_display_update,w
  8523  033A  00F2               	movwf	i1___awdiv@dividend
  8524  033B  0821               	movf	??i1_display_update+1,w
  8525  033C  00F3               	movwf	i1___awdiv@dividend+1
  8526  033D  3186  2673  3183   	fcall	i1___awdiv
  8527  0340  0870               	movf	?i1___awdiv,w
  8528  0341  0471               	iorwf	?i1___awdiv+1,w
  8529  0342  1903               	btfsc	3,2
  8530  0343  2B5D               	goto	i1l2983
  8531  0344  300A               	movlw	10
  8532  0345  00F0               	movwf	i1___awdiv@divisor
  8533  0346  3000               	movlw	0
  8534  0347  00F1               	movwf	i1___awdiv@divisor+1
  8535  0348  0020               	movlb	0	; select bank0
  8536  0349  082B               	movf	i1display_update@pdata,w
  8537  034A  3E03               	addlw	3
  8538  034B  0086               	movwf	6
  8539  034C  0187               	clrf	7
  8540  034D  0801               	movf	1,w
  8541  034E  00A0               	movwf	??i1_display_update
  8542  034F  01A1               	clrf	??i1_display_update+1
  8543  0350  0820               	movf	??i1_display_update,w
  8544  0351  00F2               	movwf	i1___awdiv@dividend
  8545  0352  0821               	movf	??i1_display_update+1,w
  8546  0353  00F3               	movwf	i1___awdiv@dividend+1
  8547  0354  3186  2673  3183   	fcall	i1___awdiv
  8548  0357  0871               	movf	?i1___awdiv+1,w
  8549  0358  0020               	movlb	0	; select bank0
  8550  0359  00AA               	movwf	i1_display_update$1572+1
  8551  035A  0870               	movf	?i1___awdiv,w
  8552  035B  00A9               	movwf	i1_display_update$1572
  8553  035C  2B62               	goto	i1l2985
  8554  035D                     i1l2983:	
  8555  035D  300A               	movlw	10
  8556  035E  0020               	movlb	0	; select bank0
  8557  035F  00A9               	movwf	i1_display_update$1572
  8558  0360  3000               	movlw	0
  8559  0361  00AA               	movwf	i1_display_update$1572+1
  8560  0362                     i1l2985:	
  8561  0362  300A               	movlw	10
  8562  0363  00F0               	movwf	i1___awmod@divisor
  8563  0364  3000               	movlw	0
  8564  0365  00F1               	movwf	i1___awmod@divisor+1
  8565  0366  082B               	movf	i1display_update@pdata,w
  8566  0367  3E03               	addlw	3
  8567  0368  0086               	movwf	6
  8568  0369  0187               	clrf	7
  8569  036A  0801               	movf	1,w
  8570  036B  00A0               	movwf	??i1_display_update
  8571  036C  01A1               	clrf	??i1_display_update+1
  8572  036D  0820               	movf	??i1_display_update,w
  8573  036E  00F2               	movwf	i1___awmod@dividend
  8574  036F  0821               	movf	??i1_display_update+1,w
  8575  0370  00F3               	movwf	i1___awmod@dividend+1
  8576  0371  3187  270A  3183   	fcall	i1___awmod
  8577  0374  0871               	movf	?i1___awmod+1,w
  8578  0375  0085               	movwf	5
  8579  0376  0870               	movf	?i1___awmod,w
  8580  0377  0084               	movwf	4
  8581  0378  3000               	movlw	low (_segmcode| (0+32768))
  8582  0379  0784               	addwf	4,f
  8583  037A  3090               	movlw	high (_segmcode| (0+32768))
  8584  037B  3D85               	addwfc	5,f
  8585  037C  0800               	movf	0,w	;code access
  8586  037D  0020               	movlb	0	; select bank0
  8587  037E  00A2               	movwf	??i1_display_update+2
  8588  037F  0822               	movf	??i1_display_update+2,w
  8589  0380  00F9               	movwf	i1display_write_once@HR
  8590  0381  300A               	movlw	10
  8591  0382  00F0               	movwf	i1___awdiv@divisor
  8592  0383  3000               	movlw	0
  8593  0384  00F1               	movwf	i1___awdiv@divisor+1
  8594  0385  082B               	movf	i1display_update@pdata,w
  8595  0386  3E04               	addlw	4
  8596  0387  0086               	movwf	6
  8597  0388  0187               	clrf	7
  8598  0389  0801               	movf	1,w
  8599  038A  00A3               	movwf	??i1_display_update+3
  8600  038B  01A4               	clrf	??i1_display_update+4
  8601  038C  0823               	movf	??i1_display_update+3,w
  8602  038D  00F2               	movwf	i1___awdiv@dividend
  8603  038E  0824               	movf	??i1_display_update+4,w
  8604  038F  00F3               	movwf	i1___awdiv@dividend+1
  8605  0390  3186  2673  3183   	fcall	i1___awdiv
  8606  0393  0871               	movf	?i1___awdiv+1,w
  8607  0394  0085               	movwf	5
  8608  0395  0870               	movf	?i1___awdiv,w
  8609  0396  0084               	movwf	4
  8610  0397  3000               	movlw	low (_segmcode| (0+32768))
  8611  0398  0784               	addwf	4,f
  8612  0399  3090               	movlw	high (_segmcode| (0+32768))
  8613  039A  3D85               	addwfc	5,f
  8614  039B  0800               	movf	0,w	;code access
  8615  039C  0020               	movlb	0	; select bank0
  8616  039D  00A5               	movwf	??i1_display_update+5
  8617  039E  0825               	movf	??i1_display_update+5,w
  8618  039F  00FA               	movwf	i1display_write_once@ML
  8619  03A0  300A               	movlw	10
  8620  03A1  00F0               	movwf	i1___awmod@divisor
  8621  03A2  3000               	movlw	0
  8622  03A3  00F1               	movwf	i1___awmod@divisor+1
  8623  03A4  082B               	movf	i1display_update@pdata,w
  8624  03A5  3E04               	addlw	4
  8625  03A6  0086               	movwf	6
  8626  03A7  0187               	clrf	7
  8627  03A8  0801               	movf	1,w
  8628  03A9  00A6               	movwf	??i1_display_update+6
  8629  03AA  01A7               	clrf	??i1_display_update+7
  8630  03AB  0826               	movf	??i1_display_update+6,w
  8631  03AC  00F2               	movwf	i1___awmod@dividend
  8632  03AD  0827               	movf	??i1_display_update+7,w
  8633  03AE  00F3               	movwf	i1___awmod@dividend+1
  8634  03AF  3187  270A  3183   	fcall	i1___awmod
  8635  03B2  0871               	movf	?i1___awmod+1,w
  8636  03B3  0085               	movwf	5
  8637  03B4  0870               	movf	?i1___awmod,w
  8638  03B5  0084               	movwf	4
  8639  03B6  3000               	movlw	low (_segmcode| (0+32768))
  8640  03B7  0784               	addwf	4,f
  8641  03B8  3090               	movlw	high (_segmcode| (0+32768))
  8642  03B9  3D85               	addwfc	5,f
  8643  03BA  0800               	movf	0,w	;code access
  8644  03BB  0020               	movlb	0	; select bank0
  8645  03BC  00A8               	movwf	??i1_display_update+8
  8646  03BD  0828               	movf	??i1_display_update+8,w
  8647  03BE  00FB               	movwf	i1display_write_once@MR
  8648  03BF  082A               	movf	i1_display_update$1572+1,w
  8649  03C0  0085               	movwf	5
  8650  03C1  0829               	movf	i1_display_update$1572,w
  8651  03C2  0084               	movwf	4
  8652  03C3  3000               	movlw	low (_segmcode| (0+32768))
  8653  03C4  0784               	addwf	4,f
  8654  03C5  3090               	movlw	high (_segmcode| (0+32768))
  8655  03C6  3D85               	addwfc	5,f
  8656  03C7  0800               	movf	0,w	;code access
  8657  03C8  318E  268E         	fcall	i1_display_write_once
  8658  03CA  0008               	return
  8659  03CB                     __end_ofi1_display_update:	
  8660                           
  8661                           	psect	text50
  8662  0E8E                     __ptext50:	
  8663 ;; *************** function i1_display_write_once *****************
  8664 ;; Defined at:
  8665 ;;		line 56 in file "display.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  HL              1    wreg     unsigned char 
  8668 ;;  HR              1    9[COMMON] unsigned char 
  8669 ;;  ML              1   10[COMMON] unsigned char 
  8670 ;;  MR              1   11[COMMON] unsigned char 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  HL              1   12[COMMON] unsigned char 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8682 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;Total ram usage:        4 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    2
  8689 ;; This function calls:
  8690 ;;		i1_display_control595_delay
  8691 ;;		i1_display_write_byte
  8692 ;; This function is called by:
  8693 ;;		i1_display_update
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           
  8698                           ;psect for function i1_display_write_once
  8699  0E8E                     i1_display_write_once:	
  8700                           
  8701                           ;incstack = 0
  8702                           ; Regs used in i1_display_write_once: [wreg+status,2+status,0+pclath+cstack]
  8703                           ;i1display_write_once@HL stored from wreg
  8704  0E8E  00FC               	movwf	i1display_write_once@HL
  8705                           
  8706                           ;display.c: 58:     display_write_byte(HL);
  8707  0E8F  087C               	movf	i1display_write_once@HL,w
  8708  0E90  318E  26D6  318E   	fcall	i1_display_write_byte
  8709                           
  8710                           ;display.c: 59:     display_write_byte(HR);
  8711  0E93  0879               	movf	i1display_write_once@HR,w
  8712  0E94  318E  26D6  318E   	fcall	i1_display_write_byte
  8713                           
  8714                           ;display.c: 60:     display_write_byte(ML);
  8715  0E97  087A               	movf	i1display_write_once@ML,w
  8716  0E98  318E  26D6  318E   	fcall	i1_display_write_byte
  8717                           
  8718                           ;display.c: 61:     display_write_byte(MR);
  8719  0E9B  087B               	movf	i1display_write_once@MR,w
  8720  0E9C  318E  26D6  318E   	fcall	i1_display_write_byte
  8721                           
  8722                           ;display.c: 64:     LATBbits.LATB0 = PIN_LOW;
  8723  0E9F  0022               	movlb	2	; select bank2
  8724  0EA0  100D               	bcf	13,0	;volatile
  8725                           
  8726                           ;display.c: 65:     display_control595_delay();
  8727  0EA1  318D  2519  318E   	fcall	i1_display_control595_delay
  8728                           
  8729                           ;display.c: 66:     LATBbits.LATB0 = PIN_HIGH;
  8730  0EA4  0022               	movlb	2	; select bank2
  8731  0EA5  140D               	bsf	13,0	;volatile
  8732                           
  8733                           ;display.c: 67:     display_control595_delay();
  8734  0EA6  318D  2519  318E   	fcall	i1_display_control595_delay
  8735                           
  8736                           ;display.c: 69:     LATBbits.LATB1 = PIN_HIGH;
  8737  0EA9  0022               	movlb	2	; select bank2
  8738  0EAA  148D               	bsf	13,1	;volatile
  8739                           
  8740                           ;display.c: 70:  display_control595_delay();
  8741  0EAB  318D  2519         	fcall	i1_display_control595_delay
  8742                           
  8743                           ;display.c: 71:     LATBbits.LATB1 = PIN_LOW;
  8744  0EAD  0022               	movlb	2	; select bank2
  8745  0EAE  108D               	bcf	13,1	;volatile
  8746  0EAF  0008               	return
  8747  0EB0                     __end_ofi1_display_write_once:	
  8748                           
  8749                           	psect	text51
  8750  0ED6                     __ptext51:	
  8751 ;; *************** function i1_display_write_byte *****************
  8752 ;; Defined at:
  8753 ;;		line 44 in file "display.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  data            1    wreg     unsigned char 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  data            1    4[COMMON] unsigned char 
  8758 ;;  display_writ    1    5[COMMON] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, pclath, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;Total ram usage:        4 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    1
  8775 ;; This function calls:
  8776 ;;		i1_display_control595_delay
  8777 ;; This function is called by:
  8778 ;;		i1_display_write_once
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           
  8783                           ;psect for function i1_display_write_byte
  8784  0ED6                     i1_display_write_byte:	
  8785                           
  8786                           ;incstack = 0
  8787                           ; Regs used in i1_display_write_byte: [wreg+status,2+status,0+pclath+cstack]
  8788                           ;i1display_write_byte@data stored from wreg
  8789  0ED6  00F4               	movwf	i1display_write_byte@data
  8790                           
  8791                           ;display.c: 45:     u8 i;;display.c: 46:     for(i = 0; i < 8; i++){
  8792  0ED7  01F5               	clrf	i1display_write_byte@i
  8793  0ED8                     i1l2497:	
  8794                           
  8795                           ;display.c: 47:   LATBbits.LATB5 = (data & 0x80) >> 7;
  8796  0ED8  0874               	movf	i1display_write_byte@data,w
  8797  0ED9  00F2               	movwf	??i1_display_write_byte
  8798  0EDA  3007               	movlw	7
  8799  0EDB                     u167_25:	
  8800  0EDB  36F2               	lsrf	??i1_display_write_byte,f
  8801  0EDC  0B89               	decfsz	9,f
  8802  0EDD  2EDB               	goto	u167_25
  8803  0EDE  0872               	movf	??i1_display_write_byte,w
  8804  0EDF  3901               	andlw	1
  8805  0EE0  00F3               	movwf	??i1_display_write_byte+1
  8806  0EE1  0EF3               	swapf	??i1_display_write_byte+1,f
  8807  0EE2  0DF3               	rlf	??i1_display_write_byte+1,f
  8808  0EE3  0022               	movlb	2	; select bank2
  8809  0EE4  080D               	movf	13,w	;volatile
  8810  0EE5  0673               	xorwf	??i1_display_write_byte+1,w
  8811  0EE6  39DF               	andlw	-33
  8812  0EE7  0673               	xorwf	??i1_display_write_byte+1,w
  8813  0EE8  008D               	movwf	13	;volatile
  8814                           
  8815                           ;display.c: 48:         LATBbits.LATB0 = PIN_LOW;
  8816  0EE9  100D               	bcf	13,0	;volatile
  8817                           
  8818                           ;display.c: 49:   display_control595_delay();
  8819  0EEA  318D  2519  318E   	fcall	i1_display_control595_delay
  8820                           
  8821                           ;display.c: 50:         LATBbits.LATB0 = PIN_HIGH;
  8822  0EED  0022               	movlb	2	; select bank2
  8823  0EEE  140D               	bsf	13,0	;volatile
  8824                           
  8825                           ;display.c: 51:   display_control595_delay();
  8826  0EEF  318D  2519  318E   	fcall	i1_display_control595_delay
  8827                           
  8828                           ;display.c: 52:         data <<= 1;
  8829  0EF2  1003               	clrc
  8830  0EF3  0DF4               	rlf	i1display_write_byte@data,f
  8831                           
  8832                           ;display.c: 53:     }
  8833  0EF4  3001               	movlw	1
  8834  0EF5  00F2               	movwf	??i1_display_write_byte
  8835  0EF6  0872               	movf	??i1_display_write_byte,w
  8836  0EF7  07F5               	addwf	i1display_write_byte@i,f
  8837  0EF8  3008               	movlw	8
  8838  0EF9  0275               	subwf	i1display_write_byte@i,w
  8839  0EFA  1803               	btfsc	3,0
  8840  0EFB  0008               	return
  8841  0EFC  2ED8               	goto	i1l2497
  8842  0EFD                     __end_ofi1_display_write_byte:	
  8843                           
  8844                           	psect	text52
  8845  0D19                     __ptext52:	
  8846 ;; *************** function i1_display_control595_delay *****************
  8847 ;; Defined at:
  8848 ;;		line 28 in file "display.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;  display_cont    1    1[COMMON] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		i1_display_write_byte
  8872 ;;		i1_display_write_once
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function i1_display_control595_delay
  8878  0D19                     i1_display_control595_delay:	
  8879                           
  8880                           ;display.c: 29:    u8 times = 10;
  8881                           
  8882                           ;incstack = 0
  8883                           ; Regs used in i1_display_control595_delay: [wreg+status,2+status,0]
  8884  0D19  300A               	movlw	10
  8885  0D1A  00F0               	movwf	??i1_display_control595_delay
  8886  0D1B  0870               	movf	??i1_display_control595_delay,w
  8887  0D1C  00F1               	movwf	i1display_control595_delay@times
  8888  0D1D                     i1l565:	
  8889                           ;display.c: 33:    }
  8890                           
  8891                           ;display.c: 30:    while(times > 0){
  8892                           
  8893                           
  8894                           ;display.c: 30:    while(times > 0){
  8895  0D1D  0871               	movf	i1display_control595_delay@times,w
  8896  0D1E  1903               	btfsc	3,2
  8897  0D1F  0008               	return
  8898                           
  8899                           ;display.c: 31:     __nop();
  8900  0D20  0000               	nop
  8901                           
  8902                           ;display.c: 32:        times--;
  8903  0D21  3001               	movlw	1
  8904  0D22  02F1               	subwf	i1display_control595_delay@times,f
  8905  0D23  2D1D               	goto	i1l565
  8906  0D24                     __end_ofi1_display_control595_delay:	
  8907                           
  8908                           	psect	text53
  8909  0D45                     __ptext53:	
  8910 ;; *************** function i1_capture_Set *****************
  8911 ;; Defined at:
  8912 ;;		line 38 in file "hardware.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  isON            1    wreg     unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  isON            1    0[COMMON] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      unsigned char 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;Total ram usage:        1 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_ISR
  8936 ;;		_bpc_proc
  8937 ;;		_update_time
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function i1_capture_Set
  8943  0D45                     i1_capture_Set:	
  8944                           
  8945                           ;incstack = 0
  8946                           ; Regs used in i1_capture_Set: [wreg+status,2+status,0]
  8947                           ;i1capture_Set@isON stored from wreg
  8948  0D45  00F0               	movwf	i1capture_Set@isON
  8949                           
  8950                           ;hardware.c: 38: u8 capture_Set(u8 isON);hardware.c: 39: {;hardware.c: 42:     PIR2bits.
      +                          CCP2IF = 0;
  8951  0D46  0020               	movlb	0	; select bank0
  8952  0D47  1012               	bcf	18,0	;volatile
  8953                           
  8954                           ;hardware.c: 45:     PIE2bits.CCP2IE = (isON)? 1 : 0;
  8955  0D48  0870               	movf	i1capture_Set@isON,w
  8956  0D49  1903               	btfsc	3,2
  8957  0D4A  2D4E               	goto	u236_20
  8958  0D4B  0021               	movlb	1	; select bank1
  8959  0D4C  1412               	bsf	18,0	;volatile
  8960  0D4D  0008               	return
  8961  0D4E                     u236_20:	
  8962  0D4E  0021               	movlb	1	; select bank1
  8963  0D4F  1012               	bcf	18,0	;volatile
  8964  0D50  0008               	return
  8965  0D51                     __end_ofi1_capture_Set:	
  8966                           
  8967                           	psect	text54
  8968  018A                     __ptext54:	
  8969 ;; *************** function _check_err *****************
  8970 ;; Defined at:
  8971 ;;		line 122 in file "bpc.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  pdata           1    wreg     PTR volatile struct .
  8974 ;;		 -> g_data(39), 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  pdata           1   10[BANK0 ] PTR volatile struct .
  8977 ;;		 -> g_data(39), 
  8978 ;;  i               1    8[BANK0 ] unsigned char 
  8979 ;;  check           1    9[BANK0 ] unsigned char 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  2    0[COMMON] int 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;Total ram usage:       16 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_bpc_proc
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _check_err
  9004  018A                     _check_err:	
  9005                           
  9006                           ;incstack = 0
  9007                           ; Regs used in _check_err: [wreg-fsr1h+status,2+status,0]
  9008                           ;check_err@pdata stored from wreg
  9009  018A  0020               	movlb	0	; select bank0
  9010  018B  00AA               	movwf	check_err@pdata
  9011                           
  9012                           ;bpc.c: 124:     pdata->g_time_h = pdata->g_recv_buf[CODE_H_1] * 4 + pdata->g_recv_buf[C
      +                          ODE_H_2];
  9013  018C  082A               	movf	check_err@pdata,w
  9014  018D  3E11               	addlw	17
  9015  018E  0086               	movwf	6
  9016  018F  0187               	clrf	7
  9017  0190  082A               	movf	check_err@pdata,w
  9018  0191  3E10               	addlw	16
  9019  0192  0084               	movwf	4
  9020  0193  0185               	clrf	5
  9021  0194  0800               	movf	0,w
  9022  0195  00F2               	movwf	??_check_err
  9023  0196  3001               	movlw	1
  9024  0197                     u260_25:	
  9025  0197  35F2               	lslf	??_check_err,f
  9026  0198  3EFF               	addlw	-1
  9027  0199  1D03               	skipz
  9028  019A  2997               	goto	u260_25
  9029  019B  3572               	lslf	??_check_err,w
  9030  019C  0701               	addwf	1,w
  9031  019D  00F3               	movwf	??_check_err+1
  9032  019E  082A               	movf	check_err@pdata,w
  9033  019F  3E03               	addlw	3
  9034  01A0  0086               	movwf	6
  9035  01A1  0187               	clrf	7
  9036  01A2  0873               	movf	??_check_err+1,w
  9037  01A3  0081               	movwf	1
  9038                           
  9039                           ;bpc.c: 125:     pdata->g_time_m = pdata->g_recv_buf[CODE_M_1] * 16 + pdata->g_recv_buf[
      +                          CODE_M_2] * 4 + pdata->g_recv_buf[CODE_M_3];
  9040  01A4  082A               	movf	check_err@pdata,w
  9041  01A5  3E14               	addlw	20
  9042  01A6  0086               	movwf	6
  9043  01A7  0187               	clrf	7
  9044  01A8  082A               	movf	check_err@pdata,w
  9045  01A9  3E13               	addlw	19
  9046  01AA  0084               	movwf	4
  9047  01AB  0185               	clrf	5
  9048  01AC  0800               	movf	0,w
  9049  01AD  00F2               	movwf	??_check_err
  9050  01AE  3002               	movlw	2
  9051  01AF                     u261_25:	
  9052  01AF  35F2               	lslf	??_check_err,f
  9053  01B0  0B89               	decfsz	9,f
  9054  01B1  29AF               	goto	u261_25
  9055  01B2  082A               	movf	check_err@pdata,w
  9056  01B3  3E12               	addlw	18
  9057  01B4  0084               	movwf	4
  9058  01B5  0185               	clrf	5
  9059  01B6  0800               	movf	0,w
  9060  01B7  00F3               	movwf	??_check_err+1
  9061  01B8  3003               	movlw	3
  9062  01B9                     u262_25:	
  9063  01B9  35F3               	lslf	??_check_err+1,f
  9064  01BA  3EFF               	addlw	-1
  9065  01BB  1D03               	skipz
  9066  01BC  29B9               	goto	u262_25
  9067  01BD  3573               	lslf	??_check_err+1,w
  9068  01BE  0772               	addwf	??_check_err,w
  9069  01BF  0701               	addwf	1,w
  9070  01C0  00F4               	movwf	??_check_err+2
  9071  01C1  082A               	movf	check_err@pdata,w
  9072  01C2  3E04               	addlw	4
  9073  01C3  0086               	movwf	6
  9074  01C4  0187               	clrf	7
  9075  01C5  0874               	movf	??_check_err+2,w
  9076  01C6  0081               	movwf	1
  9077                           
  9078                           ;bpc.c: 126:     pdata->g_time_s = 10 + ((pdata->g_recv_buf[CODE_P1] == 1) ? 20 : (pdata
      +                          ->g_recv_buf[CODE_P1] == 2) ? 40 : 0);
  9079  01C7  082A               	movf	check_err@pdata,w
  9080  01C8  3E0E               	addlw	14
  9081  01C9  0086               	movwf	6
  9082  01CA  0187               	clrf	7
  9083  01CB  0301               	decf	1,w
  9084  01CC  1903               	btfsc	3,2
  9085  01CD  29E2               	goto	i1l3163
  9086  01CE  082A               	movf	check_err@pdata,w
  9087  01CF  3E0E               	addlw	14
  9088  01D0  0086               	movwf	6
  9089  01D1  0187               	clrf	7
  9090  01D2  3002               	movlw	2
  9091  01D3  0601               	xorwf	1,w
  9092  01D4  1903               	btfsc	3,2
  9093  01D5  29D9               	goto	i1l3161
  9094  01D6  01A2               	clrf	_check_err$1167
  9095  01D7  01A3               	clrf	_check_err$1167+1
  9096  01D8  29DD               	goto	i1l427
  9097  01D9                     i1l3161:	
  9098  01D9  3028               	movlw	40
  9099  01DA  00A2               	movwf	_check_err$1167
  9100  01DB  3000               	movlw	0
  9101  01DC  00A3               	movwf	_check_err$1167+1
  9102  01DD                     i1l427:	
  9103  01DD  0823               	movf	_check_err$1167+1,w
  9104  01DE  00A1               	movwf	_check_err$1166+1
  9105  01DF  0822               	movf	_check_err$1167,w
  9106  01E0  00A0               	movwf	_check_err$1166
  9107  01E1  29E6               	goto	i1l3165
  9108  01E2                     i1l3163:	
  9109  01E2  3014               	movlw	20
  9110  01E3  00A0               	movwf	_check_err$1166
  9111  01E4  3000               	movlw	0
  9112  01E5  00A1               	movwf	_check_err$1166+1
  9113  01E6                     i1l3165:	
  9114  01E6  0820               	movf	_check_err$1166,w
  9115  01E7  3E0A               	addlw	10
  9116  01E8  00F2               	movwf	??_check_err
  9117  01E9  082A               	movf	check_err@pdata,w
  9118  01EA  3E05               	addlw	5
  9119  01EB  0086               	movwf	6
  9120  01EC  0187               	clrf	7
  9121  01ED  0872               	movf	??_check_err,w
  9122  01EE  0081               	movwf	1
  9123                           
  9124                           ;bpc.c: 128:     u8 check = 0;
  9125  01EF  01A9               	clrf	check_err@check
  9126                           
  9127                           ;bpc.c: 129:     for (u8 i = CODE_P1; i < CODE_P3; i++) {
  9128  01F0  01A8               	clrf	check_err@i
  9129  01F1  0AA8               	incf	check_err@i,f
  9130  01F2                     i1l3175:	
  9131                           
  9132                           ;bpc.c: 130:         check ^= pdata->g_recv_buf[i];
  9133  01F2  0828               	movf	check_err@i,w
  9134  01F3  072A               	addwf	check_err@pdata,w
  9135  01F4  00F2               	movwf	??_check_err
  9136  01F5  0872               	movf	??_check_err,w
  9137  01F6  3E0D               	addlw	13
  9138  01F7  0086               	movwf	6
  9139  01F8  0187               	clrf	7
  9140  01F9  0801               	movf	1,w
  9141  01FA  00F3               	movwf	??_check_err+1
  9142  01FB  0873               	movf	??_check_err+1,w
  9143  01FC  06A9               	xorwf	check_err@check,f
  9144                           
  9145                           ;bpc.c: 131:     }
  9146  01FD  3001               	movlw	1
  9147  01FE  00F2               	movwf	??_check_err
  9148  01FF  0872               	movf	??_check_err,w
  9149  0200  07A8               	addwf	check_err@i,f
  9150  0201  300A               	movlw	10
  9151  0202  0228               	subwf	check_err@i,w
  9152  0203  1C03               	skipc
  9153  0204  29F2               	goto	i1l3175
  9154                           
  9155                           ;bpc.c: 132:     if ((((0 == check) || (3 == check))) && (pdata->g_recv_buf[CODE_P3] % 2
      +                           == 0)) {
  9156  0205  0829               	movf	check_err@check,w
  9157  0206  1903               	btfsc	3,2
  9158  0207  2A0C               	goto	i1l3185
  9159  0208  3003               	movlw	3
  9160  0209  0629               	xorwf	check_err@check,w
  9161  020A  1D03               	btfss	3,2
  9162  020B  2A23               	goto	i1l3195
  9163  020C                     i1l3185:	
  9164  020C  082A               	movf	check_err@pdata,w
  9165  020D  3E17               	addlw	23
  9166  020E  0086               	movwf	6
  9167  020F  0187               	clrf	7
  9168  0210  1801               	btfsc	1,0
  9169  0211  2A23               	goto	i1l3195
  9170                           
  9171                           ;bpc.c: 133:         pdata->g_time_h += (2 == pdata->g_recv_buf[CODE_P3]) ? 12 : 0;
  9172  0212  082A               	movf	check_err@pdata,w
  9173  0213  3E17               	addlw	23
  9174  0214  0086               	movwf	6
  9175  0215  0187               	clrf	7
  9176  0216  3002               	movlw	2
  9177  0217  0601               	xorwf	1,w
  9178  0218  1903               	btfsc	3,2
  9179  0219  2A1D               	goto	i1l3191
  9180  021A  01A4               	clrf	_check_err$1170
  9181  021B  01A5               	clrf	_check_err$1170+1
  9182  021C  2A21               	goto	i1l3193
  9183  021D                     i1l3191:	
  9184  021D  300C               	movlw	12
  9185  021E  00A4               	movwf	_check_err$1170
  9186  021F  3000               	movlw	0
  9187  0220  00A5               	movwf	_check_err$1170+1
  9188  0221                     i1l3193:	
  9189  0221  0824               	movf	_check_err$1170,w
  9190  0222  2A49               	goto	L3
  9191  0223                     i1l3195:	
  9192                           ;bpc.c: 134:     } else if ((((1 == check) || (2 == check))) && ((pdata->g_recv_buf[CODE
      +                          _P3] == 1) || (pdata->g_recv_buf[CODE_P3] == 3))) {
  9193                           
  9194  0223  0329               	decf	check_err@check,w
  9195  0224  1903               	btfsc	3,2
  9196  0225  2A2A               	goto	i1l3199
  9197  0226  3002               	movlw	2
  9198  0227  0629               	xorwf	check_err@check,w
  9199  0228  1D03               	btfss	3,2
  9200  0229  2A51               	goto	i1l3211
  9201  022A                     i1l3199:	
  9202  022A  082A               	movf	check_err@pdata,w
  9203  022B  3E17               	addlw	23
  9204  022C  0086               	movwf	6
  9205  022D  0187               	clrf	7
  9206  022E  0301               	decf	1,w
  9207  022F  1903               	btfsc	3,2
  9208  0230  2A39               	goto	i1l3203
  9209  0231  082A               	movf	check_err@pdata,w
  9210  0232  3E17               	addlw	23
  9211  0233  0086               	movwf	6
  9212  0234  0187               	clrf	7
  9213  0235  3003               	movlw	3
  9214  0236  0601               	xorwf	1,w
  9215  0237  1D03               	btfss	3,2
  9216  0238  2A51               	goto	i1l3211
  9217  0239                     i1l3203:	
  9218                           
  9219                           ;bpc.c: 135: ;bpc.c: 136:         pdata->g_time_h += (3 == pdata->g_recv_buf[CODE_P3]) ?
      +                           12 : 0;
  9220  0239  082A               	movf	check_err@pdata,w
  9221  023A  3E17               	addlw	23
  9222  023B  0086               	movwf	6
  9223  023C  0187               	clrf	7
  9224  023D  3003               	movlw	3
  9225  023E  0601               	xorwf	1,w
  9226  023F  1903               	btfsc	3,2
  9227  0240  2A44               	goto	i1l3207
  9228  0241  01A6               	clrf	_check_err$1171
  9229  0242  01A7               	clrf	_check_err$1171+1
  9230  0243  2A48               	goto	i1l3209
  9231  0244                     i1l3207:	
  9232  0244  300C               	movlw	12
  9233  0245  00A6               	movwf	_check_err$1171
  9234  0246  3000               	movlw	0
  9235  0247  00A7               	movwf	_check_err$1171+1
  9236  0248                     i1l3209:	
  9237  0248  0826               	movf	_check_err$1171,w
  9238  0249                     L3:	
  9239  0249  00F2               	movwf	??_check_err
  9240  024A  082A               	movf	check_err@pdata,w
  9241  024B  3E03               	addlw	3
  9242  024C  0086               	movwf	6
  9243  024D  0187               	clrf	7
  9244  024E  0872               	movf	??_check_err,w
  9245  024F  0781               	addwf	1,f
  9246                           
  9247                           ;bpc.c: 137:     } else {
  9248  0250  2A66               	goto	i1l3221
  9249  0251                     i1l3211:	
  9250                           
  9251                           ;bpc.c: 138:         pdata->g_find_recv_start = FALSE;
  9252  0251  082A               	movf	check_err@pdata,w
  9253  0252  3E02               	addlw	2
  9254  0253  0086               	movwf	6
  9255  0254  0187               	clrf	7
  9256  0255  0181               	clrf	1
  9257                           
  9258                           ;bpc.c: 139:         pdata->g_isDecoding = 0;
  9259  0256  0A2A               	incf	check_err@pdata,w
  9260  0257  0086               	movwf	6
  9261  0258  0187               	clrf	7
  9262  0259  0181               	clrf	1
  9263                           
  9264                           ;bpc.c: 140:         pdata->g_recv_count = 0;
  9265  025A  082A               	movf	check_err@pdata,w
  9266  025B  3E0B               	addlw	11
  9267  025C  0086               	movwf	6
  9268  025D  0187               	clrf	7
  9269  025E  3000               	movlw	0
  9270  025F  3FC0               	movwi [0]fsr1
  9271  0260  3FC1               	movwi [1]fsr1
  9272                           
  9273                           ;bpc.c: 141:         return -1;
  9274  0261  30FF               	movlw	255
  9275  0262  00F0               	movwf	?_check_err
  9276  0263  30FF               	movlw	255
  9277  0264  00F1               	movwf	?_check_err+1
  9278  0265  0008               	return
  9279  0266                     i1l3221:	
  9280                           
  9281                           ;bpc.c: 143:     return 0;
  9282  0266  01F0               	clrf	?_check_err
  9283  0267  01F1               	clrf	?_check_err+1
  9284  0268  0008               	return
  9285  0269                     __end_of_check_err:	
  9286                           
  9287                           	psect	text55
  9288  074F                     __ptext55:	
  9289 ;; *************** function _bpc_write_time *****************
  9290 ;; Defined at:
  9291 ;;		line 41 in file "bpc.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  pdata           1   13[COMMON] PTR volatile struct .
  9296 ;;		 -> g_data(39), 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      char 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;Total ram usage:        2 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    4
  9313 ;; This function calls:
  9314 ;;		_IIC_WtRTCReg
  9315 ;;		_bit2BCD
  9316 ;;		i1_data_getdata
  9317 ;; This function is called by:
  9318 ;;		_bpc_proc
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           
  9323                           ;psect for function _bpc_write_time
  9324  074F                     _bpc_write_time:	
  9325                           
  9326                           ;bpc.c: 42:     G_DATA *pdata = data_getdata();
  9327                           
  9328                           ;incstack = 0
  9329                           ; Regs used in _bpc_write_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9330  074F  318C  24AC  3187   	fcall	i1_data_getdata
  9331  0752  00FC               	movwf	??_bpc_write_time
  9332  0753  087C               	movf	??_bpc_write_time,w
  9333  0754  00FD               	movwf	bpc_write_time@pdata
  9334                           
  9335                           ;bpc.c: 44:         if(-1 == IIC_WtRTCReg((0x2), bit2BCD(pdata->g_time_s))) break;
  9336  0755  087D               	movf	bpc_write_time@pdata,w
  9337  0756  3E05               	addlw	5
  9338  0757  0086               	movwf	6
  9339  0758  0187               	clrf	7
  9340  0759  0801               	movf	1,w
  9341  075A  3187  27C7  3187   	fcall	_bit2BCD
  9342  075D  00FC               	movwf	??_bpc_write_time
  9343  075E  087C               	movf	??_bpc_write_time,w
  9344  075F  00FA               	movwf	IIC_WtRTCReg@value
  9345  0760  3002               	movlw	2
  9346  0761  318F  2724  3187   	fcall	_IIC_WtRTCReg
  9347  0764  3AFF               	xorlw	255
  9348  0765  1903               	btfsc	3,2
  9349  0766  2F8D               	goto	i1l3097
  9350                           
  9351                           ;bpc.c: 45:         if( -1 == IIC_WtRTCReg((0x3), bit2BCD(pdata->g_time_m))) break;
  9352  0767  087D               	movf	bpc_write_time@pdata,w
  9353  0768  3E04               	addlw	4
  9354  0769  0086               	movwf	6
  9355  076A  0187               	clrf	7
  9356  076B  0801               	movf	1,w
  9357  076C  3187  27C7  3187   	fcall	_bit2BCD
  9358  076F  00FC               	movwf	??_bpc_write_time
  9359  0770  087C               	movf	??_bpc_write_time,w
  9360  0771  00FA               	movwf	IIC_WtRTCReg@value
  9361  0772  3003               	movlw	3
  9362  0773  318F  2724  3187   	fcall	_IIC_WtRTCReg
  9363  0776  3AFF               	xorlw	255
  9364  0777  1903               	btfsc	3,2
  9365  0778  2F8D               	goto	i1l3097
  9366                           
  9367                           ;bpc.c: 46:         if( -1 == IIC_WtRTCReg((0x4), bit2BCD(pdata->g_time_h))) break;
  9368  0779  087D               	movf	bpc_write_time@pdata,w
  9369  077A  3E03               	addlw	3
  9370  077B  0086               	movwf	6
  9371  077C  0187               	clrf	7
  9372  077D  0801               	movf	1,w
  9373  077E  3187  27C7  3187   	fcall	_bit2BCD
  9374  0781  00FC               	movwf	??_bpc_write_time
  9375  0782  087C               	movf	??_bpc_write_time,w
  9376  0783  00FA               	movwf	IIC_WtRTCReg@value
  9377  0784  3004               	movlw	4
  9378  0785  318F  2724  3187   	fcall	_IIC_WtRTCReg
  9379  0788  3AFF               	xorlw	255
  9380  0789  1903               	btfsc	3,2
  9381  078A  2F8D               	goto	i1l3097
  9382                           
  9383                           ;bpc.c: 47:         return 0;
  9384  078B  3000               	movlw	0
  9385  078C  0008               	return
  9386  078D                     i1l3097:	
  9387                           
  9388                           ;bpc.c: 49:     return -1;
  9389  078D  30FF               	movlw	255
  9390  078E  0008               	return
  9391  078F                     __end_of_bpc_write_time:	
  9392                           
  9393                           	psect	text56
  9394  07C7                     __ptext56:	
  9395 ;; *************** function _bit2BCD *****************
  9396 ;; Defined at:
  9397 ;;		line 23 in file "bpc.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  inVal           1    wreg     unsigned char 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  inVal           1    9[COMMON] unsigned char 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1    wreg      unsigned char 
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;Total ram usage:        8 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    1
  9418 ;; This function calls:
  9419 ;;		i1___awdiv
  9420 ;;		i1___awmod
  9421 ;; This function is called by:
  9422 ;;		_bpc_write_time
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function _bit2BCD
  9428  07C7                     _bit2BCD:	
  9429                           
  9430                           ;incstack = 0
  9431                           ; Regs used in _bit2BCD: [wreg+status,2+status,0+pclath+cstack]
  9432                           ;bit2BCD@inVal stored from wreg
  9433  07C7  00F9               	movwf	bit2BCD@inVal
  9434                           
  9435                           ;bpc.c: 24:     if(inVal < 60){
  9436  07C8  303C               	movlw	60
  9437  07C9  0279               	subwf	bit2BCD@inVal,w
  9438  07CA  1803               	skipnc
  9439  07CB  2FF9               	goto	i1l2853
  9440                           
  9441                           ;bpc.c: 25:         return (((inVal / 10) << 4) + inVal % 10);
  9442  07CC  300A               	movlw	10
  9443  07CD  00F0               	movwf	i1___awmod@divisor
  9444  07CE  3000               	movlw	0
  9445  07CF  00F1               	movwf	i1___awmod@divisor+1
  9446  07D0  0879               	movf	bit2BCD@inVal,w
  9447  07D1  0020               	movlb	0	; select bank0
  9448  07D2  00A0               	movwf	??_bit2BCD
  9449  07D3  01A1               	clrf	??_bit2BCD+1
  9450  07D4  0820               	movf	??_bit2BCD,w
  9451  07D5  00F2               	movwf	i1___awmod@dividend
  9452  07D6  0821               	movf	??_bit2BCD+1,w
  9453  07D7  00F3               	movwf	i1___awmod@dividend+1
  9454  07D8  3187  270A  3187   	fcall	i1___awmod
  9455  07DB  0870               	movf	?i1___awmod,w
  9456  07DC  0020               	movlb	0	; select bank0
  9457  07DD  00A2               	movwf	??_bit2BCD+2
  9458  07DE  0871               	movf	?i1___awmod+1,w
  9459  07DF  00A3               	movwf	??_bit2BCD+3
  9460  07E0  300A               	movlw	10
  9461  07E1  00F0               	movwf	i1___awdiv@divisor
  9462  07E2  3000               	movlw	0
  9463  07E3  00F1               	movwf	i1___awdiv@divisor+1
  9464  07E4  0879               	movf	bit2BCD@inVal,w
  9465  07E5  00A4               	movwf	??_bit2BCD+4
  9466  07E6  01A5               	clrf	??_bit2BCD+5
  9467  07E7  0824               	movf	??_bit2BCD+4,w
  9468  07E8  00F2               	movwf	i1___awdiv@dividend
  9469  07E9  0825               	movf	??_bit2BCD+5,w
  9470  07EA  00F3               	movwf	i1___awdiv@dividend+1
  9471  07EB  3186  2673  3187   	fcall	i1___awdiv
  9472  07EE  0870               	movf	?i1___awdiv,w
  9473  07EF  0020               	movlb	0	; select bank0
  9474  07F0  00A6               	movwf	??_bit2BCD+6
  9475  07F1  3003               	movlw	3
  9476  07F2                     u212_25:	
  9477  07F2  35A6               	lslf	??_bit2BCD+6,f
  9478  07F3  3EFF               	addlw	-1
  9479  07F4  1D03               	skipz
  9480  07F5  2FF2               	goto	u212_25
  9481  07F6  3526               	lslf	??_bit2BCD+6,w
  9482  07F7  0722               	addwf	??_bit2BCD+2,w
  9483  07F8  0008               	return
  9484  07F9                     i1l2853:	
  9485                           
  9486                           ;bpc.c: 27:         return 255;
  9487  07F9  30FF               	movlw	255
  9488  07FA  0008               	return
  9489  07FB                     __end_of_bit2BCD:	
  9490                           
  9491                           	psect	text57
  9492  070A                     __ptext57:	
  9493 ;; *************** function i1___awmod *****************
  9494 ;; Defined at:
  9495 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  divisor         2    0[COMMON] int 
  9498 ;;  dividend        2    2[COMMON] int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  __awmod         1    6[COMMON] unsigned char 
  9501 ;;  __awmod         1    5[COMMON] unsigned char 
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  2    0[COMMON] int 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;Total ram usage:        7 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_bit2BCD
  9521 ;;		_update_time
  9522 ;;		i1_display_update
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function i1___awmod
  9528  070A                     i1___awmod:	
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  9532  070A  01F6               	clrf	i1___awmod@sign
  9533  070B  1FF3               	btfss	i1___awmod@dividend+1,7
  9534  070C  2F14               	goto	i1l2685
  9535  070D  09F2               	comf	i1___awmod@dividend,f
  9536  070E  09F3               	comf	i1___awmod@dividend+1,f
  9537  070F  0AF2               	incf	i1___awmod@dividend,f
  9538  0710  1903               	skipnz
  9539  0711  0AF3               	incf	i1___awmod@dividend+1,f
  9540  0712  01F6               	clrf	i1___awmod@sign
  9541  0713  0AF6               	incf	i1___awmod@sign,f
  9542  0714                     i1l2685:	
  9543  0714  1FF1               	btfss	i1___awmod@divisor+1,7
  9544  0715  2F1B               	goto	i1l2689
  9545  0716  09F0               	comf	i1___awmod@divisor,f
  9546  0717  09F1               	comf	i1___awmod@divisor+1,f
  9547  0718  0AF0               	incf	i1___awmod@divisor,f
  9548  0719  1903               	skipnz
  9549  071A  0AF1               	incf	i1___awmod@divisor+1,f
  9550  071B                     i1l2689:	
  9551  071B  0870               	movf	i1___awmod@divisor,w
  9552  071C  0471               	iorwf	i1___awmod@divisor+1,w
  9553  071D  1903               	btfsc	3,2
  9554  071E  2F42               	goto	i1l2707
  9555  071F  01F5               	clrf	i1___awmod@counter
  9556  0720  0AF5               	incf	i1___awmod@counter,f
  9557  0721                     i1l2697:	
  9558  0721  1BF1               	btfsc	i1___awmod@divisor+1,7
  9559  0722  2F2D               	goto	i1l2699
  9560  0723  3001               	movlw	1
  9561  0724                     u192_25:	
  9562  0724  35F0               	lslf	i1___awmod@divisor,f
  9563  0725  0DF1               	rlf	i1___awmod@divisor+1,f
  9564  0726  0B89               	decfsz	9,f
  9565  0727  2F24               	goto	u192_25
  9566  0728  3001               	movlw	1
  9567  0729  00F4               	movwf	??i1___awmod
  9568  072A  0874               	movf	??i1___awmod,w
  9569  072B  07F5               	addwf	i1___awmod@counter,f
  9570  072C  2F21               	goto	i1l2697
  9571  072D                     i1l2699:	
  9572  072D  0871               	movf	i1___awmod@divisor+1,w
  9573  072E  0273               	subwf	i1___awmod@dividend+1,w
  9574  072F  1D03               	skipz
  9575  0730  2F33               	goto	u194_25
  9576  0731  0870               	movf	i1___awmod@divisor,w
  9577  0732  0272               	subwf	i1___awmod@dividend,w
  9578  0733                     u194_25:	
  9579  0733  1C03               	skipc
  9580  0734  2F39               	goto	i1l2703
  9581  0735  0870               	movf	i1___awmod@divisor,w
  9582  0736  02F2               	subwf	i1___awmod@dividend,f
  9583  0737  0871               	movf	i1___awmod@divisor+1,w
  9584  0738  3BF3               	subwfb	i1___awmod@dividend+1,f
  9585  0739                     i1l2703:	
  9586  0739  3001               	movlw	1
  9587  073A                     u195_25:	
  9588  073A  36F1               	lsrf	i1___awmod@divisor+1,f
  9589  073B  0CF0               	rrf	i1___awmod@divisor,f
  9590  073C  0B89               	decfsz	9,f
  9591  073D  2F3A               	goto	u195_25
  9592  073E  3001               	movlw	1
  9593  073F  02F5               	subwf	i1___awmod@counter,f
  9594  0740  1D03               	btfss	3,2
  9595  0741  2F2D               	goto	i1l2699
  9596  0742                     i1l2707:	
  9597  0742  0876               	movf	i1___awmod@sign,w
  9598  0743  1903               	btfsc	3,2
  9599  0744  2F4A               	goto	i1l2711
  9600  0745  09F2               	comf	i1___awmod@dividend,f
  9601  0746  09F3               	comf	i1___awmod@dividend+1,f
  9602  0747  0AF2               	incf	i1___awmod@dividend,f
  9603  0748  1903               	skipnz
  9604  0749  0AF3               	incf	i1___awmod@dividend+1,f
  9605  074A                     i1l2711:	
  9606  074A  0873               	movf	i1___awmod@dividend+1,w
  9607  074B  00F1               	movwf	?i1___awmod+1
  9608  074C  0872               	movf	i1___awmod@dividend,w
  9609  074D  00F0               	movwf	?i1___awmod
  9610  074E  0008               	return
  9611  074F                     __end_ofi1___awmod:	
  9612                           
  9613                           	psect	text58
  9614  0673                     __ptext58:	
  9615 ;; *************** function i1___awdiv *****************
  9616 ;; Defined at:
  9617 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  divisor         2    0[COMMON] int 
  9620 ;;  dividend        2    2[COMMON] int 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  __awdiv         2    7[COMMON] int 
  9623 ;;  __awdiv         1    6[COMMON] unsigned char 
  9624 ;;  __awdiv         1    5[COMMON] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  2    0[COMMON] int 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;Total ram usage:        9 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_bit2BCD
  9644 ;;		i1_display_update
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           
  9649                           ;psect for function i1___awdiv
  9650  0673                     i1___awdiv:	
  9651                           
  9652                           ;incstack = 0
  9653                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  9654  0673  01F6               	clrf	i1___awdiv@sign
  9655  0674  1FF1               	btfss	i1___awdiv@divisor+1,7
  9656  0675  2E7D               	goto	i1l2641
  9657  0676  09F0               	comf	i1___awdiv@divisor,f
  9658  0677  09F1               	comf	i1___awdiv@divisor+1,f
  9659  0678  0AF0               	incf	i1___awdiv@divisor,f
  9660  0679  1903               	skipnz
  9661  067A  0AF1               	incf	i1___awdiv@divisor+1,f
  9662  067B  01F6               	clrf	i1___awdiv@sign
  9663  067C  0AF6               	incf	i1___awdiv@sign,f
  9664  067D                     i1l2641:	
  9665  067D  1FF3               	btfss	i1___awdiv@dividend+1,7
  9666  067E  2E88               	goto	i1l2647
  9667  067F  09F2               	comf	i1___awdiv@dividend,f
  9668  0680  09F3               	comf	i1___awdiv@dividend+1,f
  9669  0681  0AF2               	incf	i1___awdiv@dividend,f
  9670  0682  1903               	skipnz
  9671  0683  0AF3               	incf	i1___awdiv@dividend+1,f
  9672  0684  3001               	movlw	1
  9673  0685  00F4               	movwf	??i1___awdiv
  9674  0686  0874               	movf	??i1___awdiv,w
  9675  0687  06F6               	xorwf	i1___awdiv@sign,f
  9676  0688                     i1l2647:	
  9677  0688  01F7               	clrf	i1___awdiv@quotient
  9678  0689  01F8               	clrf	i1___awdiv@quotient+1
  9679  068A  0870               	movf	i1___awdiv@divisor,w
  9680  068B  0471               	iorwf	i1___awdiv@divisor+1,w
  9681  068C  1903               	btfsc	3,2
  9682  068D  2EB7               	goto	i1l2669
  9683  068E  01F5               	clrf	i1___awdiv@counter
  9684  068F  0AF5               	incf	i1___awdiv@counter,f
  9685  0690                     i1l2657:	
  9686  0690  1BF1               	btfsc	i1___awdiv@divisor+1,7
  9687  0691  2E9C               	goto	i1l2659
  9688  0692  3001               	movlw	1
  9689  0693                     u182_25:	
  9690  0693  35F0               	lslf	i1___awdiv@divisor,f
  9691  0694  0DF1               	rlf	i1___awdiv@divisor+1,f
  9692  0695  0B89               	decfsz	9,f
  9693  0696  2E93               	goto	u182_25
  9694  0697  3001               	movlw	1
  9695  0698  00F4               	movwf	??i1___awdiv
  9696  0699  0874               	movf	??i1___awdiv,w
  9697  069A  07F5               	addwf	i1___awdiv@counter,f
  9698  069B  2E90               	goto	i1l2657
  9699  069C                     i1l2659:	
  9700  069C  3001               	movlw	1
  9701  069D                     u184_25:	
  9702  069D  35F7               	lslf	i1___awdiv@quotient,f
  9703  069E  0DF8               	rlf	i1___awdiv@quotient+1,f
  9704  069F  0B89               	decfsz	9,f
  9705  06A0  2E9D               	goto	u184_25
  9706  06A1  0871               	movf	i1___awdiv@divisor+1,w
  9707  06A2  0273               	subwf	i1___awdiv@dividend+1,w
  9708  06A3  1D03               	skipz
  9709  06A4  2EA7               	goto	u185_25
  9710  06A5  0870               	movf	i1___awdiv@divisor,w
  9711  06A6  0272               	subwf	i1___awdiv@dividend,w
  9712  06A7                     u185_25:	
  9713  06A7  1C03               	skipc
  9714  06A8  2EAE               	goto	i1l2665
  9715  06A9  0870               	movf	i1___awdiv@divisor,w
  9716  06AA  02F2               	subwf	i1___awdiv@dividend,f
  9717  06AB  0871               	movf	i1___awdiv@divisor+1,w
  9718  06AC  3BF3               	subwfb	i1___awdiv@dividend+1,f
  9719  06AD  1477               	bsf	i1___awdiv@quotient,0
  9720  06AE                     i1l2665:	
  9721  06AE  3001               	movlw	1
  9722  06AF                     u186_25:	
  9723  06AF  36F1               	lsrf	i1___awdiv@divisor+1,f
  9724  06B0  0CF0               	rrf	i1___awdiv@divisor,f
  9725  06B1  0B89               	decfsz	9,f
  9726  06B2  2EAF               	goto	u186_25
  9727  06B3  3001               	movlw	1
  9728  06B4  02F5               	subwf	i1___awdiv@counter,f
  9729  06B5  1D03               	btfss	3,2
  9730  06B6  2E9C               	goto	i1l2659
  9731  06B7                     i1l2669:	
  9732  06B7  0876               	movf	i1___awdiv@sign,w
  9733  06B8  1903               	btfsc	3,2
  9734  06B9  2EBF               	goto	i1l2673
  9735  06BA  09F7               	comf	i1___awdiv@quotient,f
  9736  06BB  09F8               	comf	i1___awdiv@quotient+1,f
  9737  06BC  0AF7               	incf	i1___awdiv@quotient,f
  9738  06BD  1903               	skipnz
  9739  06BE  0AF8               	incf	i1___awdiv@quotient+1,f
  9740  06BF                     i1l2673:	
  9741  06BF  0878               	movf	i1___awdiv@quotient+1,w
  9742  06C0  00F1               	movwf	?i1___awdiv+1
  9743  06C1  0877               	movf	i1___awdiv@quotient,w
  9744  06C2  00F0               	movwf	?i1___awdiv
  9745  06C3  0008               	return
  9746  06C4                     __end_ofi1___awdiv:	
  9747                           
  9748                           	psect	text59
  9749  0F24                     __ptext59:	
  9750 ;; *************** function _IIC_WtRTCReg *****************
  9751 ;; Defined at:
  9752 ;;		line 175 in file "myiic.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  regAddr         1    wreg     unsigned char 
  9755 ;;  value           1   10[COMMON] unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  regAddr         1   11[COMMON] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      char 
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0, pclath, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9767 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;Total ram usage:        2 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:    3
  9774 ;; This function calls:
  9775 ;;		i1_IIC_Send_Byte
  9776 ;;		i1_IIC_Start
  9777 ;;		i1_IIC_Stop
  9778 ;;		i1_IIC_Wait_Ack
  9779 ;; This function is called by:
  9780 ;;		_bpc_write_time
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           
  9785                           ;psect for function _IIC_WtRTCReg
  9786  0F24                     _IIC_WtRTCReg:	
  9787                           
  9788                           ;incstack = 0
  9789                           ; Regs used in _IIC_WtRTCReg: [wreg+status,2+status,0+pclath+cstack]
  9790                           ;IIC_WtRTCReg@regAddr stored from wreg
  9791  0F24  00FB               	movwf	IIC_WtRTCReg@regAddr
  9792                           
  9793                           ;myiic.c: 175: s8 IIC_WtRTCReg(u8 regAddr, u8 value);myiic.c: 176: {;myiic.c: 177:     I
      +                          IC_Start();
  9794  0F25  318D  250E  318F   	fcall	i1_IIC_Start
  9795                           
  9796                           ;myiic.c: 178:     IIC_Send_Byte((0b10100010));
  9797  0F28  30A2               	movlw	162
  9798  0F29  318F  274C  318F   	fcall	i1_IIC_Send_Byte
  9799                           
  9800                           ;myiic.c: 179:     if(!IIC_Wait_Ack())
  9801  0F2C  318E  264D  318F   	fcall	i1_IIC_Wait_Ack
  9802  0F2F  3A00               	xorlw	0
  9803  0F30  1D03               	skipz
  9804  0F31  2F4A               	goto	i1l2829
  9805                           
  9806                           ;myiic.c: 180:     {;myiic.c: 181:         IIC_Send_Byte(regAddr);
  9807  0F32  087B               	movf	IIC_WtRTCReg@regAddr,w
  9808  0F33  318F  274C  318F   	fcall	i1_IIC_Send_Byte
  9809                           
  9810                           ;myiic.c: 182:         if(!IIC_Wait_Ack())
  9811  0F36  318E  264D  318F   	fcall	i1_IIC_Wait_Ack
  9812  0F39  3A00               	xorlw	0
  9813  0F3A  1D03               	skipz
  9814  0F3B  2F4A               	goto	i1l2829
  9815                           
  9816                           ;myiic.c: 183:         {;myiic.c: 184:             IIC_Send_Byte(value);
  9817  0F3C  087A               	movf	IIC_WtRTCReg@value,w
  9818  0F3D  318F  274C  318F   	fcall	i1_IIC_Send_Byte
  9819                           
  9820                           ;myiic.c: 185:             if(!IIC_Wait_Ack())
  9821  0F40  318E  264D  318F   	fcall	i1_IIC_Wait_Ack
  9822  0F43  3A00               	xorlw	0
  9823  0F44  1D03               	skipz
  9824  0F45  2F4A               	goto	i1l2829
  9825                           
  9826                           ;myiic.c: 186:             {;myiic.c: 187:                 IIC_Stop();
  9827  0F46  318D  2584         	fcall	i1_IIC_Stop
  9828                           
  9829                           ;myiic.c: 188:                 return 0;
  9830  0F48  3000               	movlw	0
  9831  0F49  0008               	return
  9832  0F4A                     i1l2829:	
  9833                           
  9834                           ;myiic.c: 191:         return -1;
  9835  0F4A  30FF               	movlw	255
  9836  0F4B  0008               	return
  9837  0F4C                     __end_of_IIC_WtRTCReg:	
  9838                           
  9839                           	psect	text60
  9840  0E4D                     __ptext60:	
  9841 ;; *************** function i1_IIC_Wait_Ack *****************
  9842 ;; Defined at:
  9843 ;;		line 51 in file "myiic.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  IIC_Wait_Ack    1    1[COMMON] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      unsigned char 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0, pclath, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;Total ram usage:        2 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    2
  9864 ;; This function calls:
  9865 ;;		i1_IIC_Stop
  9866 ;;		i1_delay_4us
  9867 ;; This function is called by:
  9868 ;;		_IIC_WtRTCReg
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function i1_IIC_Wait_Ack
  9874  0E4D                     i1_IIC_Wait_Ack:	
  9875                           
  9876                           ;myiic.c: 53:  unsigned char ucErrTime=0;
  9877                           
  9878                           ;incstack = 0
  9879                           ; Regs used in i1_IIC_Wait_Ack: [wreg+status,2+status,0+pclath+cstack]
  9880  0E4D  01F1               	clrf	i1IIC_Wait_Ack@ucErrTime
  9881                           
  9882                           ;myiic.c: 54:  {TRISC4 = 1;};
  9883  0E4E  0021               	movlb	1	; select bank1
  9884  0E4F  160E               	bsf	14,4	;volatile
  9885                           
  9886                           ;myiic.c: 55:  LATC4=1;delay_4us();
  9887  0E50  0022               	movlb	2	; select bank2
  9888  0E51  160E               	bsf	14,4	;volatile
  9889  0E52  318C  24AE  318E   	fcall	i1_delay_4us
  9890                           
  9891                           ;myiic.c: 56:  LATC3=1;delay_4us();
  9892  0E55  0022               	movlb	2	; select bank2
  9893  0E56  158E               	bsf	14,3	;volatile
  9894  0E57  318C  24AE  318E   	fcall	i1_delay_4us
  9895  0E5A                     i1l191:	
  9896                           ;myiic.c: 65:  }
  9897                           
  9898                           ;myiic.c: 57:  while(RC4)
  9899                           
  9900                           
  9901                           ;myiic.c: 57:  while(RC4)
  9902  0E5A  0020               	movlb	0	; select bank0
  9903  0E5B  1E0E               	btfss	14,4	;volatile
  9904  0E5C  2E69               	goto	i1l195
  9905                           
  9906                           ;myiic.c: 58:  {;myiic.c: 59:   ucErrTime++;
  9907  0E5D  3001               	movlw	1
  9908  0E5E  00F0               	movwf	??i1_IIC_Wait_Ack
  9909  0E5F  0870               	movf	??i1_IIC_Wait_Ack,w
  9910  0E60  07F1               	addwf	i1IIC_Wait_Ack@ucErrTime,f
  9911                           
  9912                           ;myiic.c: 60:   if(ucErrTime>250)
  9913  0E61  30FB               	movlw	251
  9914  0E62  0271               	subwf	i1IIC_Wait_Ack@ucErrTime,w
  9915  0E63  1C03               	skipc
  9916  0E64  2E5A               	goto	i1l191
  9917                           
  9918                           ;myiic.c: 61:   {;myiic.c: 62:    IIC_Stop();
  9919  0E65  318D  2584         	fcall	i1_IIC_Stop
  9920                           
  9921                           ;myiic.c: 63:    return 1;
  9922  0E67  3001               	movlw	1
  9923  0E68  0008               	return
  9924  0E69                     i1l195:	
  9925                           
  9926                           ;myiic.c: 66:  LATC3=0;
  9927  0E69  0022               	movlb	2	; select bank2
  9928  0E6A  118E               	bcf	14,3	;volatile
  9929                           
  9930                           ;myiic.c: 67:  return 0;
  9931  0E6B  3000               	movlw	0
  9932  0E6C  0008               	return
  9933  0E6D                     __end_ofi1_IIC_Wait_Ack:	
  9934                           
  9935                           	psect	text61
  9936  0D84                     __ptext61:	
  9937 ;; *************** function i1_IIC_Stop *****************
  9938 ;; Defined at:
  9939 ;;		line 37 in file "myiic.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    1
  9960 ;; This function calls:
  9961 ;;		i1_delay_4us
  9962 ;; This function is called by:
  9963 ;;		_IIC_WtRTCReg
  9964 ;;		i1_IIC_Wait_Ack
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           
  9969                           ;psect for function i1_IIC_Stop
  9970  0D84                     i1_IIC_Stop:	
  9971                           
  9972                           ;myiic.c: 39:  {TRISC4 = 0;};
  9973                           
  9974                           ;incstack = 0
  9975                           ; Regs used in i1_IIC_Stop: [status,2+status,0+pclath+cstack]
  9976  0D84  0021               	movlb	1	; select bank1
  9977  0D85  120E               	bcf	14,4	;volatile
  9978                           
  9979                           ;myiic.c: 40:  LATC3=0;
  9980  0D86  0022               	movlb	2	; select bank2
  9981  0D87  118E               	bcf	14,3	;volatile
  9982                           
  9983                           ;myiic.c: 41:  LATC4=0;
  9984  0D88  120E               	bcf	14,4	;volatile
  9985                           
  9986                           ;myiic.c: 42:   delay_4us();
  9987  0D89  318C  24AE  318D   	fcall	i1_delay_4us
  9988                           
  9989                           ;myiic.c: 43:  LATC3=1;
  9990  0D8C  0022               	movlb	2	; select bank2
  9991  0D8D  158E               	bsf	14,3	;volatile
  9992                           
  9993                           ;myiic.c: 44:  LATC4=1;
  9994  0D8E  160E               	bsf	14,4	;volatile
  9995                           
  9996                           ;myiic.c: 45:  delay_4us();
  9997  0D8F  318C  24AE         	fcall	i1_delay_4us
  9998  0D91  0008               	return
  9999  0D92                     __end_ofi1_IIC_Stop:	
 10000                           
 10001                           	psect	text62
 10002  0D0E                     __ptext62:	
 10003 ;; *************** function i1_IIC_Start *****************
 10004 ;; Defined at:
 10005 ;;		line 25 in file "myiic.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    1
 10026 ;; This function calls:
 10027 ;;		i1_delay_4us
 10028 ;; This function is called by:
 10029 ;;		_IIC_WtRTCReg
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function i1_IIC_Start
 10035  0D0E                     i1_IIC_Start:	
 10036                           
 10037                           ;myiic.c: 27:  {TRISC4 = 0;};
 10038                           
 10039                           ;incstack = 0
 10040                           ; Regs used in i1_IIC_Start: [status,2+status,0+pclath+cstack]
 10041  0D0E  0021               	movlb	1	; select bank1
 10042  0D0F  120E               	bcf	14,4	;volatile
 10043                           
 10044                           ;myiic.c: 28:  LATC4=1;
 10045  0D10  0022               	movlb	2	; select bank2
 10046  0D11  160E               	bsf	14,4	;volatile
 10047                           
 10048                           ;myiic.c: 29:  LATC3=1;
 10049  0D12  158E               	bsf	14,3	;volatile
 10050                           
 10051                           ;myiic.c: 30:  delay_4us();
 10052  0D13  318C  24AE         	fcall	i1_delay_4us
 10053                           
 10054                           ;myiic.c: 31:   LATC4=0;
 10055  0D15  0022               	movlb	2	; select bank2
 10056  0D16  120E               	bcf	14,4	;volatile
 10057                           
 10058                           ;myiic.c: 33:  LATC3=0;
 10059  0D17  118E               	bcf	14,3	;volatile
 10060  0D18  0008               	return
 10061  0D19                     __end_ofi1_IIC_Start:	
 10062                           
 10063                           	psect	text63
 10064  0F4C                     __ptext63:	
 10065 ;; *************** function i1_IIC_Send_Byte *****************
 10066 ;; Defined at:
 10067 ;;		line 95 in file "myiic.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  txd             1    wreg     unsigned char 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  txd             1    1[COMMON] unsigned char 
 10072 ;;  IIC_Send_Byt    1    2[COMMON] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, status,2, status,0, pclath, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;Total ram usage:        3 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    1
 10089 ;; This function calls:
 10090 ;;		i1_delay_4us
 10091 ;; This function is called by:
 10092 ;;		_IIC_WtRTCReg
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function i1_IIC_Send_Byte
 10098  0F4C                     i1_IIC_Send_Byte:	
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in i1_IIC_Send_Byte: [wreg+status,2+status,0+pclath+cstack]
 10102                           ;i1IIC_Send_Byte@txd stored from wreg
 10103  0F4C  00F1               	movwf	i1IIC_Send_Byte@txd
 10104                           
 10105                           ;myiic.c: 95: void IIC_Send_Byte(unsigned char txd);myiic.c: 96: {;myiic.c: 97:     unsi
      +                          gned char t;;myiic.c: 98:  {TRISC4 = 0;};
 10106  0F4D  0021               	movlb	1	; select bank1
 10107  0F4E  120E               	bcf	14,4	;volatile
 10108                           
 10109                           ;myiic.c: 99:     LATC3=0;
 10110  0F4F  0022               	movlb	2	; select bank2
 10111  0F50  118E               	bcf	14,3	;volatile
 10112                           
 10113                           ;myiic.c: 100:     for(t=0;t<8;t++)
 10114  0F51  01F2               	clrf	i1IIC_Send_Byte@t
 10115  0F52                     i1l2597:	
 10116                           
 10117                           ;myiic.c: 101:     {;myiic.c: 102:         LATC4=(txd&0x80)>>7;
 10118  0F52  0871               	movf	i1IIC_Send_Byte@txd,w
 10119  0F53  00F0               	movwf	??i1_IIC_Send_Byte
 10120  0F54  3007               	movlw	7
 10121  0F55                     u173_25:	
 10122  0F55  36F0               	lsrf	??i1_IIC_Send_Byte,f
 10123  0F56  0B89               	decfsz	9,f
 10124  0F57  2F55               	goto	u173_25
 10125  0F58  1C70               	btfss	??i1_IIC_Send_Byte,0
 10126  0F59  2F5D               	goto	u174_20
 10127  0F5A  0022               	movlb	2	; select bank2
 10128  0F5B  160E               	bsf	14,4	;volatile
 10129  0F5C  2F5F               	goto	i1l2599
 10130  0F5D                     u174_20:	
 10131  0F5D  0022               	movlb	2	; select bank2
 10132  0F5E  120E               	bcf	14,4	;volatile
 10133  0F5F                     i1l2599:	
 10134                           
 10135                           ;myiic.c: 103:         txd<<=1;
 10136  0F5F  1003               	clrc
 10137  0F60  0DF1               	rlf	i1IIC_Send_Byte@txd,f
 10138                           
 10139                           ;myiic.c: 104:   delay_4us();
 10140  0F61  318C  24AE  318F   	fcall	i1_delay_4us
 10141                           
 10142                           ;myiic.c: 105:   LATC3=1;
 10143  0F64  0022               	movlb	2	; select bank2
 10144  0F65  158E               	bsf	14,3	;volatile
 10145                           
 10146                           ;myiic.c: 106:   delay_4us();
 10147  0F66  318C  24AE  318F   	fcall	i1_delay_4us
 10148                           
 10149                           ;myiic.c: 107:   LATC3=0;
 10150  0F69  0022               	movlb	2	; select bank2
 10151  0F6A  118E               	bcf	14,3	;volatile
 10152                           
 10153                           ;myiic.c: 108:   delay_4us();
 10154  0F6B  318C  24AE  318F   	fcall	i1_delay_4us
 10155                           
 10156                           ;myiic.c: 109:     }
 10157  0F6E  3001               	movlw	1
 10158  0F6F  00F0               	movwf	??i1_IIC_Send_Byte
 10159  0F70  0870               	movf	??i1_IIC_Send_Byte,w
 10160  0F71  07F2               	addwf	i1IIC_Send_Byte@t,f
 10161  0F72  3008               	movlw	8
 10162  0F73  0272               	subwf	i1IIC_Send_Byte@t,w
 10163  0F74  1803               	btfsc	3,0
 10164  0F75  0008               	return
 10165  0F76  2F52               	goto	i1l2597
 10166  0F77                     __end_ofi1_IIC_Send_Byte:	
 10167                           
 10168                           	psect	text64
 10169  0CAE                     __ptext64:	
 10170 ;; *************** function i1_delay_4us *****************
 10171 ;; Defined at:
 10172 ;;		line 3 in file "delay.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		None
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;Total ram usage:        0 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		i1_IIC_Start
 10196 ;;		i1_IIC_Stop
 10197 ;;		i1_IIC_Wait_Ack
 10198 ;;		i1_IIC_Send_Byte
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           
 10203                           ;psect for function i1_delay_4us
 10204  0CAE                     i1_delay_4us:	
 10205                           
 10206                           ;delay.c: 5:     __nop();
 10207                           
 10208                           ;incstack = 0
 10209                           ; Regs used in i1_delay_4us: []
 10210  0CAE  0000               	nop
 10211  0CAF  0008               	return
 10212  0CB0                     __end_ofi1_delay_4us:	
 10213                           
 10214                           	psect	text65
 10215  044D                     __ptext65:	
 10216 ;; *************** function _bpc_Cnt2Qua *****************
 10217 ;; Defined at:
 10218 ;;		line 95 in file "bpc.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;		None
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  pdata           1    6[COMMON] PTR volatile struct .
 10223 ;;		 -> g_data(39), 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      unsigned char 
 10226 ;; Registers used:
 10227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;Total ram usage:        3 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    1
 10240 ;; This function calls:
 10241 ;;		_capture_IsNegEdge
 10242 ;;		_cnt_abs
 10243 ;;		i1_data_getdata
 10244 ;; This function is called by:
 10245 ;;		_bpc_proc
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function _bpc_Cnt2Qua
 10251  044D                     _bpc_Cnt2Qua:	
 10252                           
 10253                           ;bpc.c: 96:     G_DATA *pdata = data_getdata();
 10254                           
 10255                           ;incstack = 0
 10256                           ; Regs used in _bpc_Cnt2Qua: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10257  044D  318C  24AC  3184   	fcall	i1_data_getdata
 10258  0450  00F4               	movwf	??_bpc_Cnt2Qua
 10259  0451  0874               	movf	??_bpc_Cnt2Qua,w
 10260  0452  00F6               	movwf	bpc_Cnt2Qua@pdata
 10261                           
 10262                           ;bpc.c: 97:     if (capture_IsNegEdge()) {
 10263  0453  318C  24F0  3184   	fcall	_capture_IsNegEdge
 10264  0456  3A00               	xorlw	0
 10265  0457  1903               	skipnz
 10266  0458  2C6C               	goto	i1l3117
 10267                           
 10268                           ;bpc.c: 99:         if (pdata->cnt_low > 31030 - 1500) {
 10269  0459  0876               	movf	bpc_Cnt2Qua@pdata,w
 10270  045A  3E25               	addlw	37
 10271  045B  0086               	movwf	6
 10272  045C  0187               	clrf	7
 10273  045D  3F40               	moviw [0]fsr1
 10274  045E  00F4               	movwf	??_bpc_Cnt2Qua
 10275  045F  3F41               	moviw [1]fsr1
 10276  0460  00F5               	movwf	??_bpc_Cnt2Qua+1
 10277  0461  3073               	movlw	115
 10278  0462  0275               	subwf	??_bpc_Cnt2Qua+1,w
 10279  0463  305B               	movlw	91
 10280  0464  1903               	skipnz
 10281  0465  0274               	subwf	??_bpc_Cnt2Qua,w
 10282  0466  1C03               	skipc
 10283  0467  2C6A               	goto	i1l3113
 10284                           
 10285                           ;bpc.c: 100:             return 5;
 10286  0468  3005               	movlw	5
 10287  0469  0008               	return
 10288  046A                     i1l3113:	
 10289                           
 10290                           ;bpc.c: 102:             return 6;
 10291  046A  3006               	movlw	6
 10292  046B  0008               	return
 10293  046C                     i1l3117:	
 10294                           
 10295                           ;bpc.c: 107:         if (cnt_abs(pdata->cnt_high, 3103) < 1500) {
 10296  046C  0876               	movf	bpc_Cnt2Qua@pdata,w
 10297  046D  3E23               	addlw	35
 10298  046E  0086               	movwf	6
 10299  046F  0187               	clrf	7
 10300  0470  3F40               	moviw [0]fsr1
 10301  0471  00F0               	movwf	cnt_abs@a
 10302  0472  3F41               	moviw [1]fsr1
 10303  0473  00F1               	movwf	cnt_abs@a+1
 10304  0474  301F               	movlw	31
 10305  0475  00F2               	movwf	cnt_abs@b
 10306  0476  300C               	movlw	12
 10307  0477  00F3               	movwf	cnt_abs@b+1
 10308  0478  318E  261E  3184   	fcall	_cnt_abs
 10309  047B  3005               	movlw	5
 10310  047C  0271               	subwf	?_cnt_abs+1,w
 10311  047D  30DC               	movlw	220
 10312  047E  1903               	skipnz
 10313  047F  0270               	subwf	?_cnt_abs,w
 10314  0480  1803               	skipnc
 10315  0481  2C84               	goto	i1l3125
 10316                           
 10317                           ;bpc.c: 108:             return 0;
 10318  0482  3000               	movlw	0
 10319  0483  0008               	return
 10320  0484                     i1l3125:	
 10321  0484  0876               	movf	bpc_Cnt2Qua@pdata,w
 10322  0485  3E23               	addlw	35
 10323  0486  0086               	movwf	6
 10324  0487  0187               	clrf	7
 10325  0488  3F40               	moviw [0]fsr1
 10326  0489  00F0               	movwf	cnt_abs@a
 10327  048A  3F41               	moviw [1]fsr1
 10328  048B  00F1               	movwf	cnt_abs@a+1
 10329  048C  3040               	movlw	64
 10330  048D  00F2               	movwf	cnt_abs@b
 10331  048E  3018               	movlw	24
 10332  048F  00F3               	movwf	cnt_abs@b+1
 10333  0490  318E  261E  3184   	fcall	_cnt_abs
 10334  0493  3005               	movlw	5
 10335  0494  0271               	subwf	?_cnt_abs+1,w
 10336  0495  30DC               	movlw	220
 10337  0496  1903               	skipnz
 10338  0497  0270               	subwf	?_cnt_abs,w
 10339  0498  1803               	skipnc
 10340  0499  2C9C               	goto	i1l3133
 10341                           
 10342                           ;bpc.c: 110:             return 1;
 10343  049A  3001               	movlw	1
 10344  049B  0008               	return
 10345  049C                     i1l3133:	
 10346  049C  0876               	movf	bpc_Cnt2Qua@pdata,w
 10347  049D  3E23               	addlw	35
 10348  049E  0086               	movwf	6
 10349  049F  0187               	clrf	7
 10350  04A0  3F40               	moviw [0]fsr1
 10351  04A1  00F0               	movwf	cnt_abs@a
 10352  04A2  3F41               	moviw [1]fsr1
 10353  04A3  00F1               	movwf	cnt_abs@a+1
 10354  04A4  305F               	movlw	95
 10355  04A5  00F2               	movwf	cnt_abs@b
 10356  04A6  3024               	movlw	36
 10357  04A7  00F3               	movwf	cnt_abs@b+1
 10358  04A8  318E  261E  3184   	fcall	_cnt_abs
 10359  04AB  3005               	movlw	5
 10360  04AC  0271               	subwf	?_cnt_abs+1,w
 10361  04AD  30DC               	movlw	220
 10362  04AE  1903               	skipnz
 10363  04AF  0270               	subwf	?_cnt_abs,w
 10364  04B0  1803               	skipnc
 10365  04B1  2CB4               	goto	i1l3141
 10366                           
 10367                           ;bpc.c: 112:             return 2;
 10368  04B2  3002               	movlw	2
 10369  04B3  0008               	return
 10370  04B4                     i1l3141:	
 10371  04B4  0876               	movf	bpc_Cnt2Qua@pdata,w
 10372  04B5  3E23               	addlw	35
 10373  04B6  0086               	movwf	6
 10374  04B7  0187               	clrf	7
 10375  04B8  3F40               	moviw [0]fsr1
 10376  04B9  00F0               	movwf	cnt_abs@a
 10377  04BA  3F41               	moviw [1]fsr1
 10378  04BB  00F1               	movwf	cnt_abs@a+1
 10379  04BC  3081               	movlw	129
 10380  04BD  00F2               	movwf	cnt_abs@b
 10381  04BE  3030               	movlw	48
 10382  04BF  00F3               	movwf	cnt_abs@b+1
 10383  04C0  318E  261E  3184   	fcall	_cnt_abs
 10384  04C3  3005               	movlw	5
 10385  04C4  0271               	subwf	?_cnt_abs+1,w
 10386  04C5  30DC               	movlw	220
 10387  04C6  1903               	skipnz
 10388  04C7  0270               	subwf	?_cnt_abs,w
 10389  04C8  1803               	skipnc
 10390  04C9  2CCC               	goto	i1l3149
 10391                           
 10392                           ;bpc.c: 114:             return 3;
 10393  04CA  3003               	movlw	3
 10394  04CB  0008               	return
 10395  04CC                     i1l3149:	
 10396                           
 10397                           ;bpc.c: 116:             return 4;
 10398  04CC  3004               	movlw	4
 10399  04CD  0008               	return
 10400  04CE                     __end_of_bpc_Cnt2Qua:	
 10401                           
 10402                           	psect	text66
 10403  0CAC                     __ptext66:	
 10404 ;; *************** function i1_data_getdata *****************
 10405 ;; Defined at:
 10406 ;;		line 9 in file "data.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      PTR volatile struct .
 10413 ;; Registers used:
 10414 ;;		wreg
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; This function calls:
 10427 ;;		Nothing
 10428 ;; This function is called by:
 10429 ;;		_bpc_write_time
 10430 ;;		_bpc_Cnt2Qua
 10431 ;;		_bpc_proc
 10432 ;;		_capture_handdle
 10433 ;;		_key_checkPressed
 10434 ;;		_key_isPressed
 10435 ;;		_update_time
 10436 ;;		i1_display_update
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function i1_data_getdata
 10442  0CAC                     i1_data_getdata:	
 10443                           
 10444                           ;data.c: 11:     return &g_data;
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in i1_data_getdata: [wreg]
 10448  0CAC  30A0               	movlw	(low (_g_data| 0))& (0+255)
 10449  0CAD  0008               	return
 10450  0CAE                     __end_ofi1_data_getdata:	
 10451                           
 10452                           	psect	text67
 10453  0E1E                     __ptext67:	
 10454 ;; *************** function _cnt_abs *****************
 10455 ;; Defined at:
 10456 ;;		line 19 in file "bpc.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  a               2    0[COMMON] unsigned short 
 10459 ;;  b               2    2[COMMON] unsigned short 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;		None
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  2    0[COMMON] unsigned short 
 10464 ;; Registers used:
 10465 ;;		wreg, status,2, status,0
 10466 ;; Tracked objects:
 10467 ;;		On entry : 0/0
 10468 ;;		On exit  : 0/0
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;Total ram usage:        4 bytes
 10476 ;; Hardware stack levels used:    1
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_bpc_Cnt2Qua
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           
 10485                           ;psect for function _cnt_abs
 10486  0E1E                     _cnt_abs:	
 10487                           
 10488                           ;bpc.c: 20:     return a > b ? (a - b) : (b - a);
 10489                           
 10490                           ;incstack = 0
 10491                           ; Regs used in _cnt_abs: [wreg+status,2+status,0]
 10492  0E1E  0871               	movf	cnt_abs@a+1,w
 10493  0E1F  0273               	subwf	cnt_abs@b+1,w
 10494  0E20  1D03               	skipz
 10495  0E21  2E24               	goto	u210_25
 10496  0E22  0870               	movf	cnt_abs@a,w
 10497  0E23  0272               	subwf	cnt_abs@b,w
 10498  0E24                     u210_25:	
 10499  0E24  1C03               	skipc
 10500  0E25  2E2D               	goto	i1l2841
 10501  0E26  0870               	movf	cnt_abs@a,w
 10502  0E27  0272               	subwf	cnt_abs@b,w
 10503  0E28  00F0               	movwf	?_cnt_abs
 10504  0E29  0871               	movf	cnt_abs@a+1,w
 10505  0E2A  3B73               	subwfb	cnt_abs@b+1,w
 10506  0E2B  00F1               	movwf	?_cnt_abs+1
 10507  0E2C  0008               	return
 10508  0E2D                     i1l2841:	
 10509  0E2D  0872               	movf	cnt_abs@b,w
 10510  0E2E  0270               	subwf	cnt_abs@a,w
 10511  0E2F  00F0               	movwf	?_cnt_abs
 10512  0E30  0873               	movf	cnt_abs@b+1,w
 10513  0E31  3B71               	subwfb	cnt_abs@a+1,w
 10514  0E32  00F1               	movwf	?_cnt_abs+1
 10515  0E33  0008               	return
 10516  0E34                     __end_of_cnt_abs:	
 10517                           
 10518                           	psect	text68
 10519  0CF0                     __ptext68:	
 10520 ;; *************** function _capture_IsNegEdge *****************
 10521 ;; Defined at:
 10522 ;;		line 60 in file "hardware.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      enum E5232
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_bpc_Cnt2Qua
 10546 ;;		_capture_handdle
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           
 10551                           ;psect for function _capture_IsNegEdge
 10552  0CF0                     _capture_IsNegEdge:	
 10553                           
 10554                           ;hardware.c: 62:     return (CCP2CONbits.CCP2M == (0b0100))? TRUE : FALSE;
 10555                           
 10556                           ;incstack = 0
 10557                           ; Regs used in _capture_IsNegEdge: [wreg+status,2+status,0]
 10558  0CF0  0025               	movlb	5	; select bank5
 10559  0CF1  081A               	movf	26,w	;volatile
 10560  0CF2  390F               	andlw	15
 10561  0CF3  3A04               	xorlw	4
 10562  0CF4  1D03               	btfss	3,2
 10563  0CF5  2CF8               	goto	u213_20
 10564  0CF6  3001               	movlw	1
 10565  0CF7  0008               	return
 10566  0CF8                     u213_20:	
 10567  0CF8  3000               	movlw	0
 10568  0CF9  0008               	return
 10569  0CFA                     __end_of_capture_IsNegEdge:	
 10570  007E                     btemp	set	126	;btemp
 10571  007E                     int$flags	set	126
 10572  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      56
    BANK1            80      9      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    update_time@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    display_update@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    key_isPressed@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    key_checkPressed@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    capture_handdle@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_proc@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    check_err@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_Cnt2Qua@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_read_time@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    bpc_write_time@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    IIC_RdRTCReg@value	PTR unsigned char  size(1) Largest target is 1
		 -> bpc_read_time@dataBCD(BANK0[1]), 

    sp__data_getdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 

    init_env@pdata	PTR volatile struct . size(1) Largest target is 39
		 -> g_data(BANK1[39]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_capture_handdle
    _timer_Timer0Handdle->_update_time
    _key_checkPressed->_led_Blink
    _led_Blink->i1_led_SetState
    _capture_handdle->i1_capture_setEdge
    _capture_handdle->i1_led_SetState
    _bpc_proc->_bpc_write_time
    i1_display_update->i1_display_write_once
    i1_display_write_once->i1___awdiv
    i1_display_write_byte->i1_display_control595_delay
    _bpc_write_time->_IIC_WtRTCReg
    _bit2BCD->i1___awdiv
    _IIC_WtRTCReg->_bit2BCD
    _bpc_Cnt2Qua->_cnt_abs

Critical Paths under _main in BANK0

    _main->_init_env
    _init_env->_display_update
    _display_update->_display_write_once
    _display_write_once->___awdiv
    _display_write_byte->_display_control595_delay
    _capture_init->_capture_setEdge
    _bpc_read_time->_BCD2bit
    _IIC_RdRTCReg->_IIC_Read_Byte
    _BCD2bit->___bmul

Critical Paths under _ISR in BANK0

    _ISR->_bpc_proc
    _timer_Timer0Handdle->_update_time
    _update_time->i1_display_update
    _bpc_proc->i1_display_update
    _bpc_write_time->_bit2BCD
    _IIC_WtRTCReg->_bit2BCD

Critical Paths under _main in BANK1

    _main->_display_update
    _init_env->_display_update

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5934
                           _IIC_Init
                      _bpc_read_time
                        _capture_Set
                       _capture_init
                     _display_update
                           _init_env
                       _led_SetState
                   _timer_Timer0Init
                  _timer_Timer0Start
                   _timer_Timer1Init
                  _timer_Timer1Start
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer1Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Start                                    0     0      0       0
                  _timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (2) _timer_Timer0Reset                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_Timer0Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_SetState                                         1     1      0      22
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             5     5      0    2532
                                             40 BANK0      5     5      0
                       _data_getdata
                        _display_set
                     _display_update
 ---------------------------------------------------------------------------------
 (2) _display_update                                      12    12      0    2284
                                             37 BANK0      3     3      0
                                              0 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                       _data_getdata
                 _display_write_once
 ---------------------------------------------------------------------------------
 (3) _display_write_once                                   4     1      3     433
                                             33 BANK0      4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
           _display_control595_delay
                 _display_write_byte
 ---------------------------------------------------------------------------------
 (4) _display_write_byte                                   4     4      0      93
                                             26 BANK0      4     4      0
           _display_control595_delay
 ---------------------------------------------------------------------------------
 (5) _display_control595_delay                             2     2      0      24
                                             24 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     800
                                             24 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     856
                                             24 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _display_set                                          1     1      0      22
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _capture_init                                         0     0      0      66
                    _capture_setEdge
 ---------------------------------------------------------------------------------
 (2) _capture_setEdge                                      1     1      0      66
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _capture_Set                                          1     1      0      22
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bpc_read_time                                        4     4      0    1008
                                             32 BANK0      4     4      0
                            _BCD2bit
                       _IIC_RdRTCReg
                       _data_getdata
 ---------------------------------------------------------------------------------
 (3) _data_getdata                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IIC_RdRTCReg                                         3     2      1     458
                                             28 BANK0      3     2      1
                      _IIC_Read_Byte
                      _IIC_Send_Byte
                          _IIC_Start
                           _IIC_Stop
                       _IIC_Wait_Ack
 ---------------------------------------------------------------------------------
 (3) _IIC_Wait_Ack                                         2     2      0      24
                                             24 BANK0      2     2      0
                           _IIC_Stop
                          _delay_4us
 ---------------------------------------------------------------------------------
 (4) _IIC_Stop                                             0     0      0       0
                          _delay_4us
 ---------------------------------------------------------------------------------
 (3) _IIC_Start                                            0     0      0       0
                          _delay_4us
 ---------------------------------------------------------------------------------
 (3) _IIC_Send_Byte                                        3     3      0      69
                                             24 BANK0      3     3      0
                          _delay_4us
 ---------------------------------------------------------------------------------
 (3) _IIC_Read_Byte                                        4     4      0      93
                                             24 BANK0      4     4      0
                            _IIC_Ack
                           _IIC_NAck
                          _delay_4us
 ---------------------------------------------------------------------------------
 (4) _IIC_NAck                                             0     0      0       0
                          _delay_4us
 ---------------------------------------------------------------------------------
 (4) _IIC_Ack                                              0     0      0       0
                          _delay_4us
 ---------------------------------------------------------------------------------
 (4) _delay_4us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD2bit                                              4     4      0     212
                                             28 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                             24 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0    8232
                           _bpc_proc
                   _capture_IsEnable
                   _capture_IsIntrpt
                  _capture_clrIntrpt
                    _capture_handdle
                      _key_isPressed
                _timer_IsTimer0Itrpt
                _timer_IsTimer1Itrpt
                _timer_Timer0Handdle
              _timer_Timer1ClrIntrpt
                      i1_capture_Set
                i1_timer_Timer0Reset
 ---------------------------------------------------------------------------------
 (7) i1_timer_Timer0Reset                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer_Timer1ClrIntrpt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer_Timer0Handdle                                  0     0      0    2332
                   _key_checkPressed
                        _update_time
 ---------------------------------------------------------------------------------
 (8) _update_time                                          3     3      0    2265
                                             13 COMMON     1     1      0
                                             12 BANK0      2     2      0
                          i1___awmod
                      i1_capture_Set
                     i1_data_getdata
                   i1_display_update
 ---------------------------------------------------------------------------------
 (8) _key_checkPressed                                     2     2      0      67
                                              2 COMMON     2     2      0
                          _led_Blink
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (9) _led_Blink                                            1     1      0      22
                                              1 COMMON     1     1      0
                     i1_led_SetState
 ---------------------------------------------------------------------------------
 (7) _timer_IsTimer1Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer_IsTimer0Itrpt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _key_isPressed                                        2     2      0      45
                                              0 COMMON     2     2      0
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (7) _capture_handdle                                     13    13      0     318
                                              1 COMMON    13    13      0
                  _capture_IsNegEdge
                  i1_capture_setEdge
                     i1_data_getdata
                     i1_led_SetState
 ---------------------------------------------------------------------------------
 (10) i1_led_SetState                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_capture_setEdge                                    1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _capture_clrIntrpt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _capture_IsIntrpt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _capture_IsEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _bpc_proc                                            12    12      0    5515
                                             12 BANK0     12    12      0
                        _bpc_Cnt2Qua
                     _bpc_write_time
                          _check_err
                      i1_capture_Set
                     i1_data_getdata
                   i1_display_update
 ---------------------------------------------------------------------------------
 (9) i1_display_update                                    12    12      0    1430
                                              0 BANK0     12    12      0
                          i1___awdiv
                          i1___awmod
                     i1_data_getdata
               i1_display_write_once
 ---------------------------------------------------------------------------------
 (10) i1_display_write_once                                4     1      3     283
                                              9 COMMON     4     1      3
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
         i1_display_control595_delay
               i1_display_write_byte
 ---------------------------------------------------------------------------------
 (11) i1_display_write_byte                                4     4      0      93
                                              2 COMMON     4     4      0
         i1_display_control595_delay
 ---------------------------------------------------------------------------------
 (12) i1_display_control595_delay                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) i1_capture_Set                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _check_err                                           16    14      2     749
                                              0 COMMON     5     3      2
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (8) _bpc_write_time                                       2     2      0    1510
                                             12 COMMON     2     2      0
                       _IIC_WtRTCReg
                            _bit2BCD
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (9) _bit2BCD                                              8     8      0    1078
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           7     3      4     504
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) i1___awdiv                                           9     5      4     508
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (9) _IIC_WtRTCReg                                         2     1      1     365
                                             10 COMMON     2     1      1
                            _bit2BCD (ARG)
                    i1_IIC_Send_Byte
                        i1_IIC_Start
                         i1_IIC_Stop
                     i1_IIC_Wait_Ack
 ---------------------------------------------------------------------------------
 (10) i1_IIC_Wait_Ack                                      2     2      0      24
                                              0 COMMON     2     2      0
                         i1_IIC_Stop
                        i1_delay_4us
 ---------------------------------------------------------------------------------
 (11) i1_IIC_Stop                                          0     0      0       0
                        i1_delay_4us
 ---------------------------------------------------------------------------------
 (10) i1_IIC_Start                                         0     0      0       0
                        i1_delay_4us
 ---------------------------------------------------------------------------------
 (10) i1_IIC_Send_Byte                                     3     3      0      69
                                              0 COMMON     3     3      0
                        i1_delay_4us
 ---------------------------------------------------------------------------------
 (11) i1_delay_4us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _bpc_Cnt2Qua                                          3     3      0     851
                                              4 COMMON     3     3      0
                  _capture_IsNegEdge
                            _cnt_abs
                     i1_data_getdata
 ---------------------------------------------------------------------------------
 (10) i1_data_getdata                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _cnt_abs                                              4     0      4     740
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (8) _capture_IsNegEdge                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IIC_Init
   _bpc_read_time
     _BCD2bit
       ___bmul
     _IIC_RdRTCReg
       _IIC_Read_Byte
         _IIC_Ack
           _delay_4us
         _IIC_NAck
           _delay_4us
         _delay_4us
       _IIC_Send_Byte
         _delay_4us
       _IIC_Start
         _delay_4us
       _IIC_Stop
         _delay_4us
       _IIC_Wait_Ack
         _IIC_Stop
           _delay_4us
         _delay_4us
     _data_getdata
   _capture_Set
   _capture_init
     _capture_setEdge
   _display_update
     ___awdiv
     ___awmod
     _data_getdata
     _display_write_once
       ___awdiv (ARG)
       ___awmod (ARG)
       _display_control595_delay (ARG)
       _display_write_byte (ARG)
         _display_control595_delay
   _init_env
     _data_getdata
     _display_set
     _display_update
       ___awdiv
       ___awmod
       _data_getdata
       _display_write_once
         ___awdiv (ARG)
         ___awmod (ARG)
         _display_control595_delay (ARG)
         _display_write_byte (ARG)
           _display_control595_delay
   _led_SetState
   _timer_Timer0Init
   _timer_Timer0Start
     _timer_Timer0Reset
   _timer_Timer1Init
   _timer_Timer1Start

 _ISR (ROOT)
   _bpc_proc
     _bpc_Cnt2Qua
       _capture_IsNegEdge
       _cnt_abs
       i1_data_getdata
     _bpc_write_time
       _IIC_WtRTCReg
         _bit2BCD (ARG)
           i1___awdiv
           i1___awmod
         i1_IIC_Send_Byte (ARG)
           i1_delay_4us
         i1_IIC_Start (ARG)
           i1_delay_4us
         i1_IIC_Stop (ARG)
           i1_delay_4us
         i1_IIC_Wait_Ack (ARG)
           i1_IIC_Stop
             i1_delay_4us
           i1_delay_4us
       _bit2BCD
         i1___awdiv
         i1___awmod
       i1_data_getdata
     _check_err
     i1_capture_Set
     i1_data_getdata
     i1_display_update
       i1___awdiv
       i1___awmod
       i1_data_getdata
       i1_display_write_once
         i1___awdiv (ARG)
         i1___awmod (ARG)
         i1_display_control595_delay (ARG)
         i1_display_write_byte (ARG)
           i1_display_control595_delay
   _capture_IsEnable
   _capture_IsIntrpt
   _capture_clrIntrpt
   _capture_handdle
     _capture_IsNegEdge
     i1_capture_setEdge
     i1_data_getdata
     i1_led_SetState
   _key_isPressed
     i1_data_getdata
   _timer_IsTimer0Itrpt
   _timer_IsTimer1Itrpt
   _timer_Timer0Handdle
     _key_checkPressed
       _led_Blink
         i1_led_SetState
       i1_data_getdata
     _update_time
       i1___awmod
       i1_capture_Set
       i1_data_getdata
       i1_display_update
         i1___awdiv
         i1___awmod
         i1_data_getdata
         i1_display_write_once
           i1___awdiv (ARG)
           i1___awmod (ARG)
           i1_display_control595_delay (ARG)
           i1_display_write_byte (ARG)
             i1_display_control595_delay
   _timer_Timer1ClrIntrpt
   i1_capture_Set
   i1_timer_Timer0Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      76      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      76      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 19 03:42:59 2019

                        _update_time 03CB                        ?_IIC_RdRTCReg 003C  
                     ___bmul@product 003A   __end_ofi1_display_control595_delay 0D24  
         i1_display_control595_delay 0D19                          __CFG_CP$OFF 0000  
                       ?_display_set 0070                         ___awdiv@sign 003E  
                _display_update$1572 0045                          __CFG_LVP$ON 0000  
                                l143 0F23                                  l209 0FA9  
                                l191 0E7B                                  l195 0E8A  
                                l565 0D6F                                  _GIE 005F  
                                _RC4 0074                         __CFG_CPD$OFF 0000  
                                _ISR 0004                      __end_of_BCD2bit 0E1E  
                       ___awmod@sign 003E               __end_of_display_update 0327  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         __CFG_FOSC$HS 0000  
         __size_of_capture_clrIntrpt 0003                        ?_IIC_WtRTCReg 007A  
                 bpc_read_time@pdata 0041                       ??_led_SetState 0038  
              i1display_write_byte@i 0075                        ?_IIC_Wait_Ack 0070  
               __end_of_data_getdata 0004                 capture_handdle@pdata 0079  
                    __end_of_IIC_Ack 0DC0                                 ?_ISR 0070  
                               l3029 07C5                                 l3229 0DEC  
                               l2541 0F7A                                 l2807 0FCC  
                               l2903 0637                                 l3711 02A8  
                               l2809 0FCE                                 l2761 0FD9  
                               l2921 065D                                 l2913 063F  
                               l3713 02AC                                 l2763 0FE6  
                               l3555 05B8                                 l2915 064B  
                               l2925 0666                                 l2941 06CF  
                               l3815 0F1C                                 l2881 0DD9  
                               l2929 066E                                 l2953 06DC  
                               l2945 06D6                                 l2955 06E8  
                               l2963 06FD                                 l2877 0DD3  
                               l2797 0FB9                                 l2967 0705  
                               l2959 06F4                                 l2897 062C  
                               l3777 050B                                 _BRGH 0CF2  
                               _CREN 0CEC                                 u2010 0FE4  
                               u2005 0FDC                                 u2205 0642  
                               _LATA 010C                                 u3030 0D37  
                               _LATB 010D                                 _LATC 010E  
                               u2225 064C                                 u2305 06DF  
                               u2235 0656                                 u2245 065E  
                               u2325 06EE                          ?i1_IIC_Stop 0070  
                               u2335 06F5                                 _ENUM 0057  
                               u2505 0E15                                 u2810 0D5A  
                               u3355 0524                                 u1695 0F7D  
                               _PEIE 005E                                 _RCIE 048D  
                     ?_IIC_Read_Byte 0070                          i1_delay_4us 0CAE  
                               _TMR0 0015                                 _SPEN 0CEF  
                  i1capture_Set@isON 0070                                 _TXIE 048C  
                               _TXEN 0CF5                                 _SYNC 0CF4  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0EFD  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                 __size_of_IIC_Start 000B                                 start 003B  
                     ?_IIC_Send_Byte 0070                    ___bmul@multiplier 003B  
                      __CFG_MCLRE$ON 0000            __size_ofi1_display_update 00A4  
                i1_timer_Timer0Reset 0CCF                       ??_IIC_RdRTCReg 003D  
                              ??_ISR 007E               i1display_write_once@HL 007C  
             i1display_write_once@HR 0079               i1display_write_once@ML 007A  
             i1display_write_once@MR 007B                     __end_of_IIC_NAck 0DD0  
                   __end_of_IIC_Init 0D6A                        __CFG_PLLEN$ON 0000  
                   __end_of_IIC_Stop 0DA0              i1IIC_Wait_Ack@ucErrTime 0071  
               IIC_Read_Byte@receive 003A             __end_of_timer_Timer0Init 0D45  
           __end_of_timer_Timer1Init 0D84                                ?_main 0070  
                     i1___awdiv@sign 0076                      __end_of___awdiv 0673  
                    __end_of_bit2BCD 07FB                                _BRG16 0CFB  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 070A  
                    ___awdiv@divisor 0038                                _LATC3 0873  
                              _LATC4 0874                                _IOCAN 0392  
                              _IOCAP 0391                                _IOCBN 0395  
                              _IOCBP 0394                                _IOCCN 0398  
                       ?i1_IIC_Start 0070                                _IOCCP 0397  
                              i1l134 0025                                i1l135 0022  
                              i1l137 0039                                i1l191 0E5A  
                              i1l195 0E69                                i1l427 01DD  
                              i1l565 0D1D                      ___awdiv@counter 003D  
                              _RCREG 0199                                _TMR1H 0017  
                              _TMR1L 0016                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _WPUC3 1073                                _WPUC4 1074  
                              _RXSEL 08E9                                _TXREG 019A  
                              _TXSEL 08EA                      ?_display_update 0070  
                     ??_IIC_WtRTCReg 007B                                _TX_en 0053  
               __size_of_bpc_Cnt2Qua 0081                       ??_IIC_Wait_Ack 0038  
               ?i1_timer_Timer0Reset 0070                  _timer_IsTimer0Itrpt 0CC3  
                    __end_of_cnt_abs 0E34             __end_of_key_checkPressed 0E4D  
                _timer_IsTimer1Itrpt 0CC7                       i1___awmod@sign 0076  
               __end_of_capture_init 0CE8               __size_ofi1_capture_Set 000C  
                              status 0003                                wtemp0 007E  
                 __size_ofi1___awdiv 0051                   __size_ofi1___awmod 0045  
               bpc_read_time@dataBCD 0042                 bpc_read_time@dataBin 0043  
               ?_timer_IsTimer0Itrpt 0070                 ?_timer_IsTimer1Itrpt 0070  
       __end_ofi1_display_write_byte 0EFD         __end_ofi1_display_write_once 0EB0  
                    __initialization 003D                         __end_of_main 0F24  
               __size_of_capture_Set 000C                            ??_BCD2bit 003C  
               display_write_once@HL 0044                 display_write_once@HR 0041  
               display_write_once@ML 0042                 display_write_once@MR 0043  
                     __CFG_LPBOR$OFF 0000               capture_handdle@cnt_int 007A  
             capture_handdle@cnt_tmp 007C                      i1_IIC_Send_Byte 0F4C  
            __size_ofi1_data_getdata 0002                  __size_ofi1_IIC_Stop 000E  
                             ??_main 004D            __size_of_capture_IsEnable 0004  
                          ??_IIC_Ack 0038                         bit2BCD@inVal 0079  
                       BCD2bit@inVal 003F                    __end_of_IIC_Start 0D2F  
          __size_of_capture_IsIntrpt 0004                ??i1_timer_Timer0Reset 0070  
                   IIC_Send_Byte@txd 0039                      ??_IIC_Read_Byte 0038  
             __size_of_key_isPressed 0014                               _CCPR2H 0299  
                             _CCPR2L 0298                     ___awdiv@dividend 003A  
                bpc_proc@last_time_h 0030                  bpc_proc@last_time_m 0032  
                bpc_proc@last_time_s 002E                _timer_Timer1ClrIntrpt 0CB5  
                             i1l3113 046A                               i1l3203 0239  
                             i1l3211 0251                               i1l3141 04B4  
                             i1l3133 049C                               i1l3125 0484  
                             i1l3117 046C                               i1l3221 0266  
                             i1l3207 0244                               i1l3071 044A  
                             i1l3209 0248                               i1l3161 01D9  
                             i1l3065 0427                               i1l3163 01E2  
                             i1l3149 04CC                               i1l3165 01E6  
                             i1l3413 0073                               i1l2711 074A  
                             i1l2703 0739                               i1l3191 021D  
                             i1l3175 01F2                               i1l3423 00A6  
                             i1l3239 0DA9                               i1l2641 067D  
                             i1l3097 078D                               i1l3193 0221  
                             i1l3185 020C                               i1l3441 00EE  
                             i1l3417 007E                               i1l2707 0742  
                             i1l3195 0223                               i1l3427 00AE  
                             i1l3371 05E8                               i1l3347 0E07  
                             u210_25 0E24                               i1l3453 0150  
                             i1l3381 0600                               i1l2647 0688  
                             i1l3199 022A                               i1l3471 016E  
                             i1l3455 0153                               i1l3391 0619  
                             i1l3375 05F0                               i1l3631 000F  
                             i1l2841 0E2D                               i1l2673 06BF  
                             i1l2665 06AE                               i1l2657 0690  
                             i1l2497 0ED8                               i1l3449 0131  
                             i1l2659 069C                               i1l2597 0F52  
                             i1l2829 0F4A                               i1l2669 06B7  
                             i1l2685 0714                               i1l2853 07F9  
                             i1l2599 0F5F                               i1l2697 0721  
                             i1l2689 071B                               i1l2699 072D  
                             u212_25 07F2                               i1l2983 035D  
                             u213_20 0CF8                               i1l2985 0362  
                             u236_20 0D4E                               u260_25 0197  
                             u173_25 0F55                               u261_25 01AF  
                             u174_20 0F5D                               u182_25 0693  
                             u262_25 01B9                               u167_25 0EDB  
                             u184_25 069D                               u192_25 0724  
                             u177_20 0D01                               u185_25 06A7  
                             u186_25 06AF                               u194_25 0733  
                             u195_25 073A                               u283_25 05DF  
                             u294_25 013F                               u295_25 014E  
                             u296_25 0187                               _SPBRGH 019C  
                             _SPBRGL 019B                               _TRISC3 0473  
                             _TRISC4 0474                      ??_IIC_Send_Byte 0038  
                     __CFG_PWRTE$OFF 0000                     __end_of_bpc_proc 018A  
              ??_timer_IsTimer0Itrpt 0070                ??_timer_IsTimer1Itrpt 0070  
                             ___bmul 0DD0                        i1_capture_Set 0D45  
               __end_of_led_SetState 0D3A                            ??___awdiv 003C  
                          ??_bit2BCD 0020                               _g_data 00A0  
                     __CFG_STVREN$ON 0000          __end_of_timer_Timer0Handdle 0CDA  
                          ??___awmod 003C           ??_display_control595_delay 0038  
              __end_of_bpc_read_time 05BA                               _flg_rc 0052  
                   __end_of_init_env 054B                     ___awdiv@quotient 003F  
                    ___awmod@divisor 0038                      ___awmod@counter 003D  
                          ??_cnt_abs 0074                 __size_of_display_set 0008  
                   __end_of_segmcode 100B                IIC_Wait_Ack@ucErrTime 0039  
                  __end_ofi1___awdiv 06C4                __size_of_data_getdata 0002  
                  __end_ofi1___awmod 074F                 __end_of_IIC_RdRTCReg 07C7  
                          ?_IIC_NAck 0070              __end_of__initialization 004C  
                          ?_IIC_Init 0070                            ?_IIC_Stop 0070  
                ___bmul@multiplicand 0038              __end_ofi1_IIC_Send_Byte 0F77  
                   i1_display_update 0327                 __end_of_IIC_WtRTCReg 0F4C  
                     ?i1_capture_Set 0070                       __pcstackCOMMON 0070  
                       ?_update_time 0070                 __end_of_IIC_Wait_Ack 0E8E  
                      _key_isPressed 0DF5                         _data_getdata 0002  
                 __size_of_check_err 00DF          ?i1_display_control595_delay 0070  
         __end_of_display_write_byte 0FA2           __end_of_display_write_once 0ED6  
                 __size_of_delay_4us 0002                     led_SetState@isOn 0038  
           i1display_write_byte@data 0074              __size_of_bpc_write_time 0040  
              __size_of_capture_init 0008                       _OPTION_REGbits 0095  
                 __size_of_led_Blink 000A                tmp_change@history_key 0056  
               __size_ofi1_IIC_Start 000B              capture_handdle@last_cnt 004D  
               i1_display_write_byte 0ED6               ?_timer_Timer1ClrIntrpt 0070  
               i1_display_write_once 0E8E                         ??i1_IIC_Stop 0070  
                       ?i1_delay_4us 0070                           __pbssBANK0 004D  
                         __pbssBANK1 00A0                    i1_capture_setEdge 0DA0  
                         ??_IIC_NAck 0038             __size_of_capture_handdle 0067  
                         ??_IIC_Init 0038              __size_ofi1_led_SetState 000A  
                         ??_IIC_Stop 0038                      __CFG_VCAPEN$OFF 0000  
                 ?i1_capture_setEdge 0070             __size_of_capture_setEdge 0013  
                     ?_key_isPressed 0070                           __pmaintext 0EFD  
                            ?___bmul 0038                  ??i1_capture_setEdge 0070  
                       _capture_init 0CE0                           __pintentry 0004  
                            _BCD2bit 0E09                       i1_data_getdata 0CAC  
                   ??_display_update 00C7                   i1IIC_Send_Byte@txd 0071  
                 __end_ofi1_IIC_Stop 0D92                       bpc_proc@number 0036  
                  ?_timer_Timer0Init 0070                    ?_timer_Timer1Init 0070  
                   _capture_IsEnable 0CBB                   i1___awdiv@dividend 0072  
                            _IIC_Ack 0DB0                              _ODCONC3 1473  
                            _ODCONC4 1474                     _capture_IsIntrpt 0CBF  
                 ??_timer_Timer0Init 0038                   ??_timer_Timer1Init 0038  
                display_update@pdata 0047                            ?_bpc_proc 0070  
              ?i1_display_write_byte 0070                ?i1_display_write_once 0079  
                  ?_key_checkPressed 0070            __end_ofi1_capture_setEdge 0DB0  
                capture_setEdge@edge 0038                    __end_of_check_err 0269  
                   update_time@pdata 007D                   ??_key_checkPressed 0072  
            __size_ofi1_IIC_Wait_Ack 0020                    __end_of_delay_4us 0CB2  
                            _RX_data 0054                            ?_init_env 0070  
                            _TX_data 0055                __size_of_led_SetState 000B  
                    ??i1_capture_Set 0070                    __end_of_led_Blink 0D0E  
                 i1___awdiv@quotient 0077                     ?i1_IIC_Send_Byte 0070  
   __end_of_display_control595_delay 0D77               __end_ofi1_data_getdata 0CAE  
                    __size_of___bmul 0012                              ___awdiv 0621  
                            _bit2BCD 07C7                              ___awmod 06C4  
    i1display_control595_delay@times 0071                           check_err@i 0028  
                            __ptext1 0CB8                              __ptext2 0D77  
                            __ptext3 0CCB                              __ptext4 07FB  
                            __ptext5 0D3A                              __ptext6 0D2F  
                            __ptext7 04CE                              __ptext8 0269  
                      ??_bpc_Cnt2Qua 0074                              __ptext9 0EB0  
                            _cnt_abs 0E1E                  bpc_write_time@pdata 007D  
                       __size_of_ISR 0037                            _T1CONbits 0018  
              __size_of_IIC_RdRTCReg 0038                     ___awmod@dividend 003A  
                          _IOCCFbits 0399                           ??_bpc_proc 002C  
                          _IOCCPbits 0397                            _IIC_Start 0D24  
                            clrloop0 0CDB                         _led_SetState 0D2F  
                  IIC_WtRTCReg@value 007A                 end_of_initialization 004C  
__size_ofi1_display_control595_delay 000B                __size_of_IIC_WtRTCReg 0028  
                         ??_init_env 0048                      capture_Set@isON 0038  
              __size_of_IIC_Wait_Ack 0021                      ??_key_isPressed 0070  
                      ??_capture_Set 0038                    ??_capture_handdle 0071  
                 i1led_SetState@isOn 0070                       IIC_Read_Byte@i 003B  
                    ?i1_data_getdata 0070                         _IIC_RdRTCReg 078F  
                  ??_capture_setEdge 0038                 __size_of_update_time 0082  
        __end_ofi1_timer_Timer0Reset 0CD4                i1_display_update$1572 0029  
                          _PORTAbits 000C                            _PORTCbits 000E  
                     _bpc_write_time 074F               ??i1_display_write_byte 0072  
             ??i1_display_write_once 007C                            _TRISAbits 008C  
                          _TRISCbits 008E             __end_ofi1_display_update 03CB  
                       _IIC_WtRTCReg 0F24                            i1___awdiv 0673  
                          i1___awmod 070A                  __end_of_bpc_Cnt2Qua 04CE  
         __size_ofi1_capture_setEdge 0010                         _IIC_Wait_Ack 0E6D  
                         ?_IIC_Start 0070                __end_of_IIC_Read_Byte 0FD1  
        __end_of_timer_IsTimer0Itrpt 0CC7          __end_of_timer_IsTimer1Itrpt 0CCB  
                     i1_led_SetState 0CFA                 __size_ofi1_delay_4us 0002  
                        _CCP2CONbits 029A                    __size_of_IIC_NAck 0010  
                  __size_of_IIC_Init 000D                    __size_of_IIC_Stop 000E  
              __end_of_IIC_Send_Byte 1000                       IIC_Send_Byte@t 003A  
                      ??_display_set 0038                       __end_of___bmul 0DE2  
             __end_of_bpc_write_time 078F                  __end_of_capture_Set 0D5D  
       __size_of_timer_Timer0Handdle 0006              ??_timer_Timer1ClrIntrpt 0070  
                start_initialization 003D                          __end_of_ISR 003B  
                         ?i1___awdiv 0070                           ?i1___awmod 0070  
                display_write_byte@i 003D    __size_of_display_control595_delay 000D  
                 _display_write_byte 0F77               display_write_byte@data 003C  
                 _display_write_once 0EB0            ?_display_control595_delay 0070  
             __end_ofi1_led_SetState 0D04                       check_err@check 0029  
                     i1_IIC_Wait_Ack 0E4D               __size_of_bpc_read_time 006F  
              key_checkPressed@pdata 0073                       check_err@pdata 002A  
             tmp_change@key_time_cnt 004F                  ?_display_write_byte 0070  
                ?_display_write_once 0041             __end_of_capture_IsEnable 0CBF  
           __end_of_capture_IsIntrpt 0CC3                             ??___bmul 0039  
                           ?_BCD2bit 0070                   i1___awmod@dividend 0072  
                    ?_bpc_write_time 0070                 ??_display_write_byte 003A  
               ??_display_write_once 0044                        ??i1_IIC_Start 0070  
                        _bpc_Cnt2Qua 044D                             ?_IIC_Ack 0070  
                __end_of_display_set 0CF0                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00C7  
             __end_ofi1_IIC_Wait_Ack 0E6D                          ??_IIC_Start 0038  
                    ?i1_led_SetState 0070                    __size_of_bpc_proc 013A  
          __size_of_timer_Timer0Init 000B            __size_of_timer_Timer1Init 000D  
                          _check_err 018A                            _delay_4us 0CB0  
                  __size_of_init_env 007D            __size_of_key_checkPressed 0019  
                        _capture_Set 0D51                             ?___awdiv 0038  
                           ?_bit2BCD 0070                             ?___awmod 0038  
                      bpc_proc@pdata 0037                            _led_Blink 0D04  
                      _bpc_read_time 054B                    i1___awdiv@divisor 0070  
                  IIC_RdRTCReg@value 003C                    i1___awdiv@counter 0075  
                           ?_cnt_abs 0070                    _timer_Timer0Reset 07FB  
                        ??i1___awdiv 0074                          ??i1___awmod 0074  
                  _timer_Timer0Start 0CCB                    _timer_Timer1Start 0CB8  
                    ?i1_IIC_Wait_Ack 0070                  __end_ofi1_IIC_Start 0D19  
                 ?_timer_Timer0Reset 0070                      _capture_handdle 05BA  
                 ?_timer_Timer0Start 0070                   ?_timer_Timer1Start 0070  
                  _capture_IsNegEdge 0CF0                 _capture_handdle$1404 0077  
                           _IIC_NAck 0DC0                             _IIC_Init 0D5D  
                IIC_RdRTCReg@regAddr 003E                   ?_capture_IsNegEdge 0070  
                           _IIC_Stop 0D92                             _LATBbits 010D  
                    _capture_setEdge 0DE2                           ?_check_err 0070  
                          clear_ram0 0CDA                     ??i1_data_getdata 0070  
                           _PIE1bits 0091                             _PIE2bits 0092  
                ??_timer_Timer0Reset 0038                  ??_timer_Timer0Start 0038  
                ??_timer_Timer1Start 0038                           ?_delay_4us 0070  
                          bpc_proc@i 0034                             _PIR1bits 0011  
                           _PIR2bits 0012                __end_ofi1_capture_Set 0D51  
                ??_capture_IsNegEdge 0070                       ?_bpc_read_time 0070  
                         ?_led_Blink 0070                          _display_set 0CE8  
                   __size_of_BCD2bit 0015             __size_ofi1_IIC_Send_Byte 002B  
                IIC_WtRTCReg@regAddr 007B            __end_of_timer_Timer0Reset 0800  
                           _WPUCbits 020E            __end_of_timer_Timer0Start 0CCF  
          __end_of_timer_Timer1Start 0CBB                     __size_of_IIC_Ack 0010  
                  ?i1_display_update 0070            __end_of_capture_IsNegEdge 0CFA  
            __size_of_display_update 00BE                   ??i1_display_update 0020  
                _timer_Timer0Handdle 0CD4                __end_of_key_isPressed 0E09  
                      ??_update_time 002C                            init_env@i 004A  
                      ?_data_getdata 0070                    i1___awmod@divisor 0070  
                  i1___awmod@counter 0075                     __size_of___awdiv 0052  
                   __size_of_bit2BCD 0034                     __size_of___awmod 0046  
       ??i1_display_control595_delay 0070                       led_Blink@State 0051  
                        i1_IIC_Start 0D0E                 ?_timer_Timer0Handdle 0070  
                   __size_of_cnt_abs 0016              __end_of_capture_handdle 0621  
              i1display_update@pdata 002B       __size_of_timer_Timer1ClrIntrpt 0003  
      __end_of_timer_Timer1ClrIntrpt 0CB8         __size_ofi1_timer_Timer0Reset 0005  
                           _bpc_proc 0050                i1capture_setEdge@edge 0070  
      __size_ofi1_display_write_byte 0027                             __ptext10 0F77  
                           __ptext11 0D6A                             __ptext20 078F  
                           __ptext12 06C4                             __ptext21 0E6D  
                           __ptext13 0621                             __ptext30 0DD0  
                           __ptext22 0D92                             __ptext14 0CE8  
                           __ptext31 0D5D                             __ptext23 0D24  
                           __ptext15 0CE0                             __ptext40 0CC3  
                           __ptext24 0FD1                             __ptext16 0DE2  
                           __ptext41 0DF5                             __ptext33 0CCF  
                           __ptext25 0FA2                             __ptext17 0D51  
                           __ptext50 0E8E                             __ptext42 05BA  
                           __ptext34 0CB5                             __ptext26 0DC0  
                           __ptext18 054B                             __ptext51 0ED6  
                           __ptext43 0CFA                             __ptext35 0CD4  
                           __ptext27 0DB0                             __ptext19 0002  
                           __ptext60 0E4D                             __ptext52 0D19  
                           __ptext44 0DA0                             __ptext36 03CB  
                           __ptext28 0CB0                             __ptext61 0D84  
                           __ptext53 0D45                             __ptext45 0CB2  
                           __ptext37 0E34                             __ptext29 0E09  
                           __ptext62 0D0E                             __ptext54 018A  
                           __ptext46 0CBF                             __ptext38 0D04  
                           __ptext63 0F4C                             __ptext55 074F  
                           __ptext47 0CBB                             __ptext39 0CC7  
                           __ptext64 0CAE                             __ptext56 07C7  
                           __ptext48 0050                             __ptext65 044D  
                           __ptext57 070A                             __ptext49 0327  
                           __ptext66 0CAC                             __ptext58 0673  
                           __ptext67 0E1E                             __ptext59 0F24  
                           __ptext68 0CF0        __size_ofi1_display_write_once 0022  
                   i1IIC_Send_Byte@t 0072              __end_of_capture_setEdge 0DF5  
                  _capture_clrIntrpt 0CB2                        ??i1_delay_4us 0070  
                 ?_capture_clrIntrpt 0070        display_control595_delay@times 0039  
                   _timer_Timer0Init 0D3A                     _timer_Timer1Init 0D77  
                           _init_env 04CE                        __size_of_main 0027  
                        ??_check_err 0072                    ?_capture_IsEnable 0070  
                        ??_delay_4us 0038                             _segmcode 1000  
                ??_capture_clrIntrpt 0070                     ??_bpc_write_time 007C  
                      init_env@pdata 004C                    ?_capture_IsIntrpt 0070  
                   _key_checkPressed 0E34         __size_of_timer_IsTimer0Itrpt 0004  
                 ??_capture_IsEnable 0070                      ??_bpc_read_time 0040  
       __size_of_timer_IsTimer1Itrpt 0004                       ??_data_getdata 0038  
                      ?_capture_init 0070                   ??_capture_IsIntrpt 0070  
                           int$flags 007E                          ??_led_Blink 0071  
                           cnt_abs@a 0070                             cnt_abs@b 0072  
                   IIC_Read_Byte@ack 0039               __size_of_IIC_Read_Byte 002F  
                __end_of_update_time 044D                         ?_bpc_Cnt2Qua 0070  
              ??_timer_Timer0Handdle 007E           __size_of_timer_Timer0Reset 0005  
                   ??i1_led_SetState 0070                           _INTCONbits 000B  
         __size_of_timer_Timer0Start 0004           __size_of_timer_Timer1Start 0003  
          __end_of_capture_clrIntrpt 0CB5               __size_of_IIC_Send_Byte 002F  
         __size_of_capture_IsNegEdge 000A                    ??i1_IIC_Send_Byte 0070  
                           intlevel1 0000                           i1_IIC_Stop 0D84  
                  __CFG_CLKOUTEN$OFF 0000                  __end_ofi1_delay_4us 0CB0  
                         _OSCCONbits 0099                         ?_capture_Set 0070  
                     ??_capture_init 0039                   key_isPressed@pdata 0071  
                    display_set@ison 0038                     bpc_Cnt2Qua@pdata 0076  
                      __pstringtext1 1000          __size_of_display_write_byte 002B  
        __size_of_display_write_once 0026                     ??i1_IIC_Wait_Ack 0070  
           _display_control595_delay 0D6A                     ?_capture_handdle 0070  
                     _display_update 0269                        ?_led_SetState 0070  
                   ?_capture_setEdge 0070                        _IIC_Read_Byte 0FA2  
                     _check_err$1170 0024                       _check_err$1171 0026  
                     _check_err$1166 0020                       _check_err$1167 0022  
                      _IIC_Send_Byte 0FD1  

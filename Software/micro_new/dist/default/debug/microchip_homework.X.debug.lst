

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 31 17:49:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1786 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  038C                     	;# 
   205  038D                     	;# 
   206  038E                     	;# 
   207  0390                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0511                     	;# 
   221  0513                     	;# 
   222  051A                     	;# 
   223  0811                     	;# 
   224  0812                     	;# 
   225  0813                     	;# 
   226  0814                     	;# 
   227  0815                     	;# 
   228  0816                     	;# 
   229  0817                     	;# 
   230  0818                     	;# 
   231  0819                     	;# 
   232  081A                     	;# 
   233  081B                     	;# 
   234  081C                     	;# 
   235  081D                     	;# 
   236  081E                     	;# 
   237  081F                     	;# 
   238  0820                     	;# 
   239  0821                     	;# 
   240  0821                     	;# 
   241  0822                     	;# 
   242  0823                     	;# 
   243  0823                     	;# 
   244  0824                     	;# 
   245  0825                     	;# 
   246  0825                     	;# 
   247  0826                     	;# 
   248  0827                     	;# 
   249  0827                     	;# 
   250  0828                     	;# 
   251  0829                     	;# 
   252  082A                     	;# 
   253  082B                     	;# 
   254  082C                     	;# 
   255  082D                     	;# 
   256  082E                     	;# 
   257  082F                     	;# 
   258  0831                     	;# 
   259  0832                     	;# 
   260  0833                     	;# 
   261  0834                     	;# 
   262  0835                     	;# 
   263  0836                     	;# 
   264  0837                     	;# 
   265  0838                     	;# 
   266  0839                     	;# 
   267  083A                     	;# 
   268  083B                     	;# 
   269  083C                     	;# 
   270  083D                     	;# 
   271  083E                     	;# 
   272  083F                     	;# 
   273  0840                     	;# 
   274  0841                     	;# 
   275  0841                     	;# 
   276  0842                     	;# 
   277  0843                     	;# 
   278  0843                     	;# 
   279  0844                     	;# 
   280  0845                     	;# 
   281  0845                     	;# 
   282  0846                     	;# 
   283  0847                     	;# 
   284  0847                     	;# 
   285  0848                     	;# 
   286  0849                     	;# 
   287  084A                     	;# 
   288  084B                     	;# 
   289  084C                     	;# 
   290  084D                     	;# 
   291  084E                     	;# 
   292  084F                     	;# 
   293  0851                     	;# 
   294  0852                     	;# 
   295  0853                     	;# 
   296  0854                     	;# 
   297  0855                     	;# 
   298  0856                     	;# 
   299  0857                     	;# 
   300  0858                     	;# 
   301  0859                     	;# 
   302  085A                     	;# 
   303  085B                     	;# 
   304  085C                     	;# 
   305  085D                     	;# 
   306  085E                     	;# 
   307  085F                     	;# 
   308  0860                     	;# 
   309  0861                     	;# 
   310  0861                     	;# 
   311  0862                     	;# 
   312  0863                     	;# 
   313  0863                     	;# 
   314  0864                     	;# 
   315  0865                     	;# 
   316  0865                     	;# 
   317  0866                     	;# 
   318  0867                     	;# 
   319  0867                     	;# 
   320  0868                     	;# 
   321  0869                     	;# 
   322  086A                     	;# 
   323  086B                     	;# 
   324  086C                     	;# 
   325  086D                     	;# 
   326  086E                     	;# 
   327  086F                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011C                     	;# 
   403  011D                     	;# 
   404  011D                     	;# 
   405  011D                     	;# 
   406  011E                     	;# 
   407  011F                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  028C                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  0291                     	;# 
   469  0291                     	;# 
   470  0292                     	;# 
   471  0293                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  030C                     	;# 
   477  030D                     	;# 
   478  030E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  0390                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  0397                     	;# 
   494  0398                     	;# 
   495  0399                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0511                     	;# 
   500  0513                     	;# 
   501  051A                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  0815                     	;# 
   507  0816                     	;# 
   508  0817                     	;# 
   509  0818                     	;# 
   510  0819                     	;# 
   511  081A                     	;# 
   512  081B                     	;# 
   513  081C                     	;# 
   514  081D                     	;# 
   515  081E                     	;# 
   516  081F                     	;# 
   517  0820                     	;# 
   518  0821                     	;# 
   519  0821                     	;# 
   520  0822                     	;# 
   521  0823                     	;# 
   522  0823                     	;# 
   523  0824                     	;# 
   524  0825                     	;# 
   525  0825                     	;# 
   526  0826                     	;# 
   527  0827                     	;# 
   528  0827                     	;# 
   529  0828                     	;# 
   530  0829                     	;# 
   531  082A                     	;# 
   532  082B                     	;# 
   533  082C                     	;# 
   534  082D                     	;# 
   535  082E                     	;# 
   536  082F                     	;# 
   537  0831                     	;# 
   538  0832                     	;# 
   539  0833                     	;# 
   540  0834                     	;# 
   541  0835                     	;# 
   542  0836                     	;# 
   543  0837                     	;# 
   544  0838                     	;# 
   545  0839                     	;# 
   546  083A                     	;# 
   547  083B                     	;# 
   548  083C                     	;# 
   549  083D                     	;# 
   550  083E                     	;# 
   551  083F                     	;# 
   552  0840                     	;# 
   553  0841                     	;# 
   554  0841                     	;# 
   555  0842                     	;# 
   556  0843                     	;# 
   557  0843                     	;# 
   558  0844                     	;# 
   559  0845                     	;# 
   560  0845                     	;# 
   561  0846                     	;# 
   562  0847                     	;# 
   563  0847                     	;# 
   564  0848                     	;# 
   565  0849                     	;# 
   566  084A                     	;# 
   567  084B                     	;# 
   568  084C                     	;# 
   569  084D                     	;# 
   570  084E                     	;# 
   571  084F                     	;# 
   572  0851                     	;# 
   573  0852                     	;# 
   574  0853                     	;# 
   575  0854                     	;# 
   576  0855                     	;# 
   577  0856                     	;# 
   578  0857                     	;# 
   579  0858                     	;# 
   580  0859                     	;# 
   581  085A                     	;# 
   582  085B                     	;# 
   583  085C                     	;# 
   584  085D                     	;# 
   585  085E                     	;# 
   586  085F                     	;# 
   587  0860                     	;# 
   588  0861                     	;# 
   589  0861                     	;# 
   590  0862                     	;# 
   591  0863                     	;# 
   592  0863                     	;# 
   593  0864                     	;# 
   594  0865                     	;# 
   595  0865                     	;# 
   596  0866                     	;# 
   597  0867                     	;# 
   598  0867                     	;# 
   599  0868                     	;# 
   600  0869                     	;# 
   601  086A                     	;# 
   602  086B                     	;# 
   603  086C                     	;# 
   604  086D                     	;# 
   605  086E                     	;# 
   606  086F                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0016                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  0090                     	;# 
   651  0091                     	;# 
   652  0092                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0115                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0118                     	;# 
   678  0119                     	;# 
   679  011A                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0199                     	;# 
   700  0199                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019A                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019D                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019E                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  019F                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  030C                     	;# 
   756  030D                     	;# 
   757  030E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  0393                     	;# 
   769  0394                     	;# 
   770  0395                     	;# 
   771  0396                     	;# 
   772  0397                     	;# 
   773  0398                     	;# 
   774  0399                     	;# 
   775  039D                     	;# 
   776  039E                     	;# 
   777  039F                     	;# 
   778  0511                     	;# 
   779  0513                     	;# 
   780  051A                     	;# 
   781  0811                     	;# 
   782  0812                     	;# 
   783  0813                     	;# 
   784  0814                     	;# 
   785  0815                     	;# 
   786  0816                     	;# 
   787  0817                     	;# 
   788  0818                     	;# 
   789  0819                     	;# 
   790  081A                     	;# 
   791  081B                     	;# 
   792  081C                     	;# 
   793  081D                     	;# 
   794  081E                     	;# 
   795  081F                     	;# 
   796  0820                     	;# 
   797  0821                     	;# 
   798  0821                     	;# 
   799  0822                     	;# 
   800  0823                     	;# 
   801  0823                     	;# 
   802  0824                     	;# 
   803  0825                     	;# 
   804  0825                     	;# 
   805  0826                     	;# 
   806  0827                     	;# 
   807  0827                     	;# 
   808  0828                     	;# 
   809  0829                     	;# 
   810  082A                     	;# 
   811  082B                     	;# 
   812  082C                     	;# 
   813  082D                     	;# 
   814  082E                     	;# 
   815  082F                     	;# 
   816  0831                     	;# 
   817  0832                     	;# 
   818  0833                     	;# 
   819  0834                     	;# 
   820  0835                     	;# 
   821  0836                     	;# 
   822  0837                     	;# 
   823  0838                     	;# 
   824  0839                     	;# 
   825  083A                     	;# 
   826  083B                     	;# 
   827  083C                     	;# 
   828  083D                     	;# 
   829  083E                     	;# 
   830  083F                     	;# 
   831  0840                     	;# 
   832  0841                     	;# 
   833  0841                     	;# 
   834  0842                     	;# 
   835  0843                     	;# 
   836  0843                     	;# 
   837  0844                     	;# 
   838  0845                     	;# 
   839  0845                     	;# 
   840  0846                     	;# 
   841  0847                     	;# 
   842  0847                     	;# 
   843  0848                     	;# 
   844  0849                     	;# 
   845  084A                     	;# 
   846  084B                     	;# 
   847  084C                     	;# 
   848  084D                     	;# 
   849  084E                     	;# 
   850  084F                     	;# 
   851  0851                     	;# 
   852  0852                     	;# 
   853  0853                     	;# 
   854  0854                     	;# 
   855  0855                     	;# 
   856  0856                     	;# 
   857  0857                     	;# 
   858  0858                     	;# 
   859  0859                     	;# 
   860  085A                     	;# 
   861  085B                     	;# 
   862  085C                     	;# 
   863  085D                     	;# 
   864  085E                     	;# 
   865  085F                     	;# 
   866  0860                     	;# 
   867  0861                     	;# 
   868  0861                     	;# 
   869  0862                     	;# 
   870  0863                     	;# 
   871  0863                     	;# 
   872  0864                     	;# 
   873  0865                     	;# 
   874  0865                     	;# 
   875  0866                     	;# 
   876  0867                     	;# 
   877  0867                     	;# 
   878  0868                     	;# 
   879  0869                     	;# 
   880  086A                     	;# 
   881  086B                     	;# 
   882  086C                     	;# 
   883  086D                     	;# 
   884  086E                     	;# 
   885  086F                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  000E                     	;# 
   912  0010                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0013                     	;# 
   916  0014                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  008E                     	;# 
   929  0090                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0093                     	;# 
   933  0094                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  010E                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011C                     	;# 
   961  011D                     	;# 
   962  011D                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  011F                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0197                     	;# 
   978  0199                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019C                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019D                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019E                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  020C                     	;# 
  1004  020D                     	;# 
  1005  020E                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0298                     	;# 
  1031  0298                     	;# 
  1032  0299                     	;# 
  1033  029A                     	;# 
  1034  030C                     	;# 
  1035  030D                     	;# 
  1036  030E                     	;# 
  1037  0311                     	;# 
  1038  0311                     	;# 
  1039  0312                     	;# 
  1040  0313                     	;# 
  1041  038C                     	;# 
  1042  038D                     	;# 
  1043  038E                     	;# 
  1044  0390                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0397                     	;# 
  1052  0398                     	;# 
  1053  0399                     	;# 
  1054  039D                     	;# 
  1055  039E                     	;# 
  1056  039F                     	;# 
  1057  0511                     	;# 
  1058  0513                     	;# 
  1059  051A                     	;# 
  1060  0811                     	;# 
  1061  0812                     	;# 
  1062  0813                     	;# 
  1063  0814                     	;# 
  1064  0815                     	;# 
  1065  0816                     	;# 
  1066  0817                     	;# 
  1067  0818                     	;# 
  1068  0819                     	;# 
  1069  081A                     	;# 
  1070  081B                     	;# 
  1071  081C                     	;# 
  1072  081D                     	;# 
  1073  081E                     	;# 
  1074  081F                     	;# 
  1075  0820                     	;# 
  1076  0821                     	;# 
  1077  0821                     	;# 
  1078  0822                     	;# 
  1079  0823                     	;# 
  1080  0823                     	;# 
  1081  0824                     	;# 
  1082  0825                     	;# 
  1083  0825                     	;# 
  1084  0826                     	;# 
  1085  0827                     	;# 
  1086  0827                     	;# 
  1087  0828                     	;# 
  1088  0829                     	;# 
  1089  082A                     	;# 
  1090  082B                     	;# 
  1091  082C                     	;# 
  1092  082D                     	;# 
  1093  082E                     	;# 
  1094  082F                     	;# 
  1095  0831                     	;# 
  1096  0832                     	;# 
  1097  0833                     	;# 
  1098  0834                     	;# 
  1099  0835                     	;# 
  1100  0836                     	;# 
  1101  0837                     	;# 
  1102  0838                     	;# 
  1103  0839                     	;# 
  1104  083A                     	;# 
  1105  083B                     	;# 
  1106  083C                     	;# 
  1107  083D                     	;# 
  1108  083E                     	;# 
  1109  083F                     	;# 
  1110  0840                     	;# 
  1111  0841                     	;# 
  1112  0841                     	;# 
  1113  0842                     	;# 
  1114  0843                     	;# 
  1115  0843                     	;# 
  1116  0844                     	;# 
  1117  0845                     	;# 
  1118  0845                     	;# 
  1119  0846                     	;# 
  1120  0847                     	;# 
  1121  0847                     	;# 
  1122  0848                     	;# 
  1123  0849                     	;# 
  1124  084A                     	;# 
  1125  084B                     	;# 
  1126  084C                     	;# 
  1127  084D                     	;# 
  1128  084E                     	;# 
  1129  084F                     	;# 
  1130  0851                     	;# 
  1131  0852                     	;# 
  1132  0853                     	;# 
  1133  0854                     	;# 
  1134  0855                     	;# 
  1135  0856                     	;# 
  1136  0857                     	;# 
  1137  0858                     	;# 
  1138  0859                     	;# 
  1139  085A                     	;# 
  1140  085B                     	;# 
  1141  085C                     	;# 
  1142  085D                     	;# 
  1143  085E                     	;# 
  1144  085F                     	;# 
  1145  0860                     	;# 
  1146  0861                     	;# 
  1147  0861                     	;# 
  1148  0862                     	;# 
  1149  0863                     	;# 
  1150  0863                     	;# 
  1151  0864                     	;# 
  1152  0865                     	;# 
  1153  0865                     	;# 
  1154  0866                     	;# 
  1155  0867                     	;# 
  1156  0867                     	;# 
  1157  0868                     	;# 
  1158  0869                     	;# 
  1159  086A                     	;# 
  1160  086B                     	;# 
  1161  086C                     	;# 
  1162  086D                     	;# 
  1163  086E                     	;# 
  1164  086F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  0010                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  009F                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  011A                     	;# 
  1238  011B                     	;# 
  1239  011C                     	;# 
  1240  011D                     	;# 
  1241  011D                     	;# 
  1242  011D                     	;# 
  1243  011E                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  0210                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  028C                     	;# 
  1303  028D                     	;# 
  1304  028E                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  030C                     	;# 
  1314  030D                     	;# 
  1315  030E                     	;# 
  1316  0311                     	;# 
  1317  0311                     	;# 
  1318  0312                     	;# 
  1319  0313                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0390                     	;# 
  1324  0391                     	;# 
  1325  0392                     	;# 
  1326  0393                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0397                     	;# 
  1331  0398                     	;# 
  1332  0399                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0511                     	;# 
  1337  0513                     	;# 
  1338  051A                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  0815                     	;# 
  1344  0816                     	;# 
  1345  0817                     	;# 
  1346  0818                     	;# 
  1347  0819                     	;# 
  1348  081A                     	;# 
  1349  081B                     	;# 
  1350  081C                     	;# 
  1351  081D                     	;# 
  1352  081E                     	;# 
  1353  081F                     	;# 
  1354  0820                     	;# 
  1355  0821                     	;# 
  1356  0821                     	;# 
  1357  0822                     	;# 
  1358  0823                     	;# 
  1359  0823                     	;# 
  1360  0824                     	;# 
  1361  0825                     	;# 
  1362  0825                     	;# 
  1363  0826                     	;# 
  1364  0827                     	;# 
  1365  0827                     	;# 
  1366  0828                     	;# 
  1367  0829                     	;# 
  1368  082A                     	;# 
  1369  082B                     	;# 
  1370  082C                     	;# 
  1371  082D                     	;# 
  1372  082E                     	;# 
  1373  082F                     	;# 
  1374  0831                     	;# 
  1375  0832                     	;# 
  1376  0833                     	;# 
  1377  0834                     	;# 
  1378  0835                     	;# 
  1379  0836                     	;# 
  1380  0837                     	;# 
  1381  0838                     	;# 
  1382  0839                     	;# 
  1383  083A                     	;# 
  1384  083B                     	;# 
  1385  083C                     	;# 
  1386  083D                     	;# 
  1387  083E                     	;# 
  1388  083F                     	;# 
  1389  0840                     	;# 
  1390  0841                     	;# 
  1391  0841                     	;# 
  1392  0842                     	;# 
  1393  0843                     	;# 
  1394  0843                     	;# 
  1395  0844                     	;# 
  1396  0845                     	;# 
  1397  0845                     	;# 
  1398  0846                     	;# 
  1399  0847                     	;# 
  1400  0847                     	;# 
  1401  0848                     	;# 
  1402  0849                     	;# 
  1403  084A                     	;# 
  1404  084B                     	;# 
  1405  084C                     	;# 
  1406  084D                     	;# 
  1407  084E                     	;# 
  1408  084F                     	;# 
  1409  0851                     	;# 
  1410  0852                     	;# 
  1411  0853                     	;# 
  1412  0854                     	;# 
  1413  0855                     	;# 
  1414  0856                     	;# 
  1415  0857                     	;# 
  1416  0858                     	;# 
  1417  0859                     	;# 
  1418  085A                     	;# 
  1419  085B                     	;# 
  1420  085C                     	;# 
  1421  085D                     	;# 
  1422  085E                     	;# 
  1423  085F                     	;# 
  1424  0860                     	;# 
  1425  0861                     	;# 
  1426  0861                     	;# 
  1427  0862                     	;# 
  1428  0863                     	;# 
  1429  0863                     	;# 
  1430  0864                     	;# 
  1431  0865                     	;# 
  1432  0865                     	;# 
  1433  0866                     	;# 
  1434  0867                     	;# 
  1435  0867                     	;# 
  1436  0868                     	;# 
  1437  0869                     	;# 
  1438  086A                     	;# 
  1439  086B                     	;# 
  1440  086C                     	;# 
  1441  086D                     	;# 
  1442  086E                     	;# 
  1443  086F                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455  0000                     	;# 
  1456  0001                     	;# 
  1457  0002                     	;# 
  1458  0003                     	;# 
  1459  0004                     	;# 
  1460  0005                     	;# 
  1461  0006                     	;# 
  1462  0007                     	;# 
  1463  0008                     	;# 
  1464  0009                     	;# 
  1465  000A                     	;# 
  1466  000B                     	;# 
  1467  000C                     	;# 
  1468  000D                     	;# 
  1469  000E                     	;# 
  1470  0010                     	;# 
  1471  0011                     	;# 
  1472  0012                     	;# 
  1473  0013                     	;# 
  1474  0014                     	;# 
  1475  0015                     	;# 
  1476  0016                     	;# 
  1477  0016                     	;# 
  1478  0017                     	;# 
  1479  0018                     	;# 
  1480  0019                     	;# 
  1481  001A                     	;# 
  1482  001B                     	;# 
  1483  001C                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  0090                     	;# 
  1488  0091                     	;# 
  1489  0092                     	;# 
  1490  0093                     	;# 
  1491  0094                     	;# 
  1492  0095                     	;# 
  1493  0096                     	;# 
  1494  0097                     	;# 
  1495  0098                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0111                     	;# 
  1508  0112                     	;# 
  1509  0113                     	;# 
  1510  0114                     	;# 
  1511  0115                     	;# 
  1512  0116                     	;# 
  1513  0117                     	;# 
  1514  0118                     	;# 
  1515  0119                     	;# 
  1516  011A                     	;# 
  1517  011B                     	;# 
  1518  011C                     	;# 
  1519  011D                     	;# 
  1520  011D                     	;# 
  1521  011D                     	;# 
  1522  011E                     	;# 
  1523  011F                     	;# 
  1524  018C                     	;# 
  1525  018D                     	;# 
  1526  0191                     	;# 
  1527  0191                     	;# 
  1528  0192                     	;# 
  1529  0193                     	;# 
  1530  0193                     	;# 
  1531  0193                     	;# 
  1532  0194                     	;# 
  1533  0195                     	;# 
  1534  0196                     	;# 
  1535  0197                     	;# 
  1536  0199                     	;# 
  1537  0199                     	;# 
  1538  0199                     	;# 
  1539  019A                     	;# 
  1540  019A                     	;# 
  1541  019A                     	;# 
  1542  019B                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019C                     	;# 
  1548  019C                     	;# 
  1549  019C                     	;# 
  1550  019D                     	;# 
  1551  019D                     	;# 
  1552  019D                     	;# 
  1553  019E                     	;# 
  1554  019E                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  019F                     	;# 
  1558  019F                     	;# 
  1559  019F                     	;# 
  1560  019F                     	;# 
  1561  020C                     	;# 
  1562  020D                     	;# 
  1563  020E                     	;# 
  1564  0210                     	;# 
  1565  0211                     	;# 
  1566  0211                     	;# 
  1567  0212                     	;# 
  1568  0212                     	;# 
  1569  0213                     	;# 
  1570  0213                     	;# 
  1571  0214                     	;# 
  1572  0214                     	;# 
  1573  0215                     	;# 
  1574  0215                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0216                     	;# 
  1578  0216                     	;# 
  1579  0217                     	;# 
  1580  0217                     	;# 
  1581  028C                     	;# 
  1582  028D                     	;# 
  1583  028E                     	;# 
  1584  0291                     	;# 
  1585  0291                     	;# 
  1586  0292                     	;# 
  1587  0293                     	;# 
  1588  0298                     	;# 
  1589  0298                     	;# 
  1590  0299                     	;# 
  1591  029A                     	;# 
  1592  030C                     	;# 
  1593  030D                     	;# 
  1594  030E                     	;# 
  1595  0311                     	;# 
  1596  0311                     	;# 
  1597  0312                     	;# 
  1598  0313                     	;# 
  1599  038C                     	;# 
  1600  038D                     	;# 
  1601  038E                     	;# 
  1602  0390                     	;# 
  1603  0391                     	;# 
  1604  0392                     	;# 
  1605  0393                     	;# 
  1606  0394                     	;# 
  1607  0395                     	;# 
  1608  0396                     	;# 
  1609  0397                     	;# 
  1610  0398                     	;# 
  1611  0399                     	;# 
  1612  039D                     	;# 
  1613  039E                     	;# 
  1614  039F                     	;# 
  1615  0511                     	;# 
  1616  0513                     	;# 
  1617  051A                     	;# 
  1618  0811                     	;# 
  1619  0812                     	;# 
  1620  0813                     	;# 
  1621  0814                     	;# 
  1622  0815                     	;# 
  1623  0816                     	;# 
  1624  0817                     	;# 
  1625  0818                     	;# 
  1626  0819                     	;# 
  1627  081A                     	;# 
  1628  081B                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  081E                     	;# 
  1632  081F                     	;# 
  1633  0820                     	;# 
  1634  0821                     	;# 
  1635  0821                     	;# 
  1636  0822                     	;# 
  1637  0823                     	;# 
  1638  0823                     	;# 
  1639  0824                     	;# 
  1640  0825                     	;# 
  1641  0825                     	;# 
  1642  0826                     	;# 
  1643  0827                     	;# 
  1644  0827                     	;# 
  1645  0828                     	;# 
  1646  0829                     	;# 
  1647  082A                     	;# 
  1648  082B                     	;# 
  1649  082C                     	;# 
  1650  082D                     	;# 
  1651  082E                     	;# 
  1652  082F                     	;# 
  1653  0831                     	;# 
  1654  0832                     	;# 
  1655  0833                     	;# 
  1656  0834                     	;# 
  1657  0835                     	;# 
  1658  0836                     	;# 
  1659  0837                     	;# 
  1660  0838                     	;# 
  1661  0839                     	;# 
  1662  083A                     	;# 
  1663  083B                     	;# 
  1664  083C                     	;# 
  1665  083D                     	;# 
  1666  083E                     	;# 
  1667  083F                     	;# 
  1668  0840                     	;# 
  1669  0841                     	;# 
  1670  0841                     	;# 
  1671  0842                     	;# 
  1672  0843                     	;# 
  1673  0843                     	;# 
  1674  0844                     	;# 
  1675  0845                     	;# 
  1676  0845                     	;# 
  1677  0846                     	;# 
  1678  0847                     	;# 
  1679  0847                     	;# 
  1680  0848                     	;# 
  1681  0849                     	;# 
  1682  084A                     	;# 
  1683  084B                     	;# 
  1684  084C                     	;# 
  1685  084D                     	;# 
  1686  084E                     	;# 
  1687  084F                     	;# 
  1688  0851                     	;# 
  1689  0852                     	;# 
  1690  0853                     	;# 
  1691  0854                     	;# 
  1692  0855                     	;# 
  1693  0856                     	;# 
  1694  0857                     	;# 
  1695  0858                     	;# 
  1696  0859                     	;# 
  1697  085A                     	;# 
  1698  085B                     	;# 
  1699  085C                     	;# 
  1700  085D                     	;# 
  1701  085E                     	;# 
  1702  085F                     	;# 
  1703  0860                     	;# 
  1704  0861                     	;# 
  1705  0861                     	;# 
  1706  0862                     	;# 
  1707  0863                     	;# 
  1708  0863                     	;# 
  1709  0864                     	;# 
  1710  0865                     	;# 
  1711  0865                     	;# 
  1712  0866                     	;# 
  1713  0867                     	;# 
  1714  0867                     	;# 
  1715  0868                     	;# 
  1716  0869                     	;# 
  1717  086A                     	;# 
  1718  086B                     	;# 
  1719  086C                     	;# 
  1720  086D                     	;# 
  1721  086E                     	;# 
  1722  086F                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  0010                     	;# 
  1750  0011                     	;# 
  1751  0012                     	;# 
  1752  0013                     	;# 
  1753  0014                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  0090                     	;# 
  1767  0091                     	;# 
  1768  0092                     	;# 
  1769  0093                     	;# 
  1770  0094                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  0111                     	;# 
  1787  0112                     	;# 
  1788  0113                     	;# 
  1789  0114                     	;# 
  1790  0115                     	;# 
  1791  0116                     	;# 
  1792  0117                     	;# 
  1793  0118                     	;# 
  1794  0119                     	;# 
  1795  011A                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  018C                     	;# 
  1804  018D                     	;# 
  1805  0191                     	;# 
  1806  0191                     	;# 
  1807  0192                     	;# 
  1808  0193                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  0210                     	;# 
  1844  0211                     	;# 
  1845  0211                     	;# 
  1846  0212                     	;# 
  1847  0212                     	;# 
  1848  0213                     	;# 
  1849  0213                     	;# 
  1850  0214                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0216                     	;# 
  1857  0216                     	;# 
  1858  0217                     	;# 
  1859  0217                     	;# 
  1860  028C                     	;# 
  1861  028D                     	;# 
  1862  028E                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0298                     	;# 
  1868  0298                     	;# 
  1869  0299                     	;# 
  1870  029A                     	;# 
  1871  030C                     	;# 
  1872  030D                     	;# 
  1873  030E                     	;# 
  1874  0311                     	;# 
  1875  0311                     	;# 
  1876  0312                     	;# 
  1877  0313                     	;# 
  1878  038C                     	;# 
  1879  038D                     	;# 
  1880  038E                     	;# 
  1881  0390                     	;# 
  1882  0391                     	;# 
  1883  0392                     	;# 
  1884  0393                     	;# 
  1885  0394                     	;# 
  1886  0395                     	;# 
  1887  0396                     	;# 
  1888  0397                     	;# 
  1889  0398                     	;# 
  1890  0399                     	;# 
  1891  039D                     	;# 
  1892  039E                     	;# 
  1893  039F                     	;# 
  1894  0511                     	;# 
  1895  0513                     	;# 
  1896  051A                     	;# 
  1897  0811                     	;# 
  1898  0812                     	;# 
  1899  0813                     	;# 
  1900  0814                     	;# 
  1901  0815                     	;# 
  1902  0816                     	;# 
  1903  0817                     	;# 
  1904  0818                     	;# 
  1905  0819                     	;# 
  1906  081A                     	;# 
  1907  081B                     	;# 
  1908  081C                     	;# 
  1909  081D                     	;# 
  1910  081E                     	;# 
  1911  081F                     	;# 
  1912  0820                     	;# 
  1913  0821                     	;# 
  1914  0821                     	;# 
  1915  0822                     	;# 
  1916  0823                     	;# 
  1917  0823                     	;# 
  1918  0824                     	;# 
  1919  0825                     	;# 
  1920  0825                     	;# 
  1921  0826                     	;# 
  1922  0827                     	;# 
  1923  0827                     	;# 
  1924  0828                     	;# 
  1925  0829                     	;# 
  1926  082A                     	;# 
  1927  082B                     	;# 
  1928  082C                     	;# 
  1929  082D                     	;# 
  1930  082E                     	;# 
  1931  082F                     	;# 
  1932  0831                     	;# 
  1933  0832                     	;# 
  1934  0833                     	;# 
  1935  0834                     	;# 
  1936  0835                     	;# 
  1937  0836                     	;# 
  1938  0837                     	;# 
  1939  0838                     	;# 
  1940  0839                     	;# 
  1941  083A                     	;# 
  1942  083B                     	;# 
  1943  083C                     	;# 
  1944  083D                     	;# 
  1945  083E                     	;# 
  1946  083F                     	;# 
  1947  0840                     	;# 
  1948  0841                     	;# 
  1949  0841                     	;# 
  1950  0842                     	;# 
  1951  0843                     	;# 
  1952  0843                     	;# 
  1953  0844                     	;# 
  1954  0845                     	;# 
  1955  0845                     	;# 
  1956  0846                     	;# 
  1957  0847                     	;# 
  1958  0847                     	;# 
  1959  0848                     	;# 
  1960  0849                     	;# 
  1961  084A                     	;# 
  1962  084B                     	;# 
  1963  084C                     	;# 
  1964  084D                     	;# 
  1965  084E                     	;# 
  1966  084F                     	;# 
  1967  0851                     	;# 
  1968  0852                     	;# 
  1969  0853                     	;# 
  1970  0854                     	;# 
  1971  0855                     	;# 
  1972  0856                     	;# 
  1973  0857                     	;# 
  1974  0858                     	;# 
  1975  0859                     	;# 
  1976  085A                     	;# 
  1977  085B                     	;# 
  1978  085C                     	;# 
  1979  085D                     	;# 
  1980  085E                     	;# 
  1981  085F                     	;# 
  1982  0860                     	;# 
  1983  0861                     	;# 
  1984  0861                     	;# 
  1985  0862                     	;# 
  1986  0863                     	;# 
  1987  0863                     	;# 
  1988  0864                     	;# 
  1989  0865                     	;# 
  1990  0865                     	;# 
  1991  0866                     	;# 
  1992  0867                     	;# 
  1993  0867                     	;# 
  1994  0868                     	;# 
  1995  0869                     	;# 
  1996  086A                     	;# 
  1997  086B                     	;# 
  1998  086C                     	;# 
  1999  086D                     	;# 
  2000  086E                     	;# 
  2001  086F                     	;# 
  2002  0FE4                     	;# 
  2003  0FE5                     	;# 
  2004  0FE6                     	;# 
  2005  0FE7                     	;# 
  2006  0FE8                     	;# 
  2007  0FE9                     	;# 
  2008  0FEA                     	;# 
  2009  0FEB                     	;# 
  2010  0FED                     	;# 
  2011  0FEE                     	;# 
  2012  0FEF                     	;# 
  2013                           
  2014                           	psect	stringtext1
  2015  035E                     __pstringtext1:	
  2016  035E                     _segmcode:	
  2017  035E  343F               	retlw	63
  2018  035F  3406               	retlw	6
  2019  0360  345B               	retlw	91
  2020  0361  344F               	retlw	79
  2021  0362  3466               	retlw	102
  2022  0363  346D               	retlw	109
  2023  0364  347D               	retlw	125
  2024  0365  3407               	retlw	7
  2025  0366  347F               	retlw	127
  2026  0367  346F               	retlw	111
  2027  0368  3477               	retlw	119
  2028  0369  347C               	retlw	124
  2029  036A  3439               	retlw	57
  2030  036B  345E               	retlw	94
  2031  036C  3479               	retlw	121
  2032  036D  3471               	retlw	113
  2033  036E                     __end_of_segmcode:	
  2034  000C                     _PORTAbits	set	12
  2035  000E                     _PORTCbits	set	14
  2036  0015                     _TMR0	set	21
  2037  000B                     _INTCONbits	set	11
  2038  005F                     _GIE	set	95
  2039  0074                     _RC4	set	116
  2040  008E                     _TRISCbits	set	142
  2041  008E                     _TRISC	set	142
  2042  008D                     _TRISB	set	141
  2043  008C                     _TRISA	set	140
  2044  0095                     _OPTION_REGbits	set	149
  2045  0099                     _OSCCONbits	set	153
  2046  0473                     _TRISC3	set	1139
  2047  0474                     _TRISC4	set	1140
  2048  010C                     _LATAbits	set	268
  2049  010D                     _LATBbits	set	269
  2050  010E                     _LATC	set	270
  2051  010D                     _LATB	set	269
  2052  010C                     _LATA	set	268
  2053  0874                     _LATC4	set	2164
  2054  0873                     _LATC3	set	2163
  2055  020E                     _WPUCbits	set	526
  2056  020E                     _WPUC	set	526
  2057  020D                     _WPUB	set	525
  2058  020C                     _WPUA	set	524
  2059  1073                     _WPUC3	set	4211
  2060  1074                     _WPUC4	set	4212
  2061  1474                     _ODCONC4	set	5236
  2062  1473                     _ODCONC3	set	5235
  2063  0399                     _IOCCFbits	set	921
  2064  0397                     _IOCCPbits	set	919
  2065  0398                     _IOCCN	set	920
  2066  0397                     _IOCCP	set	919
  2067  0395                     _IOCBN	set	917
  2068  0394                     _IOCBP	set	916
  2069  0392                     _IOCAN	set	914
  2070  0391                     _IOCAP	set	913
  2071                           
  2072                           ; #config settings
  2073  0000                     
  2074                           	psect	cinit
  2075  0061                     start_initialization:	
  2076  0061                     __initialization:	
  2077                           
  2078                           ; Clear objects allocated to BANK0
  2079  0061  3020               	movlw	low __pbssBANK0
  2080  0062  0084               	movwf	4
  2081  0063  3000               	movlw	high __pbssBANK0
  2082  0064  0085               	movwf	5
  2083  0065  3029               	movlw	41
  2084  0066  3183  2396         	fcall	clear_ram0
  2085  0068                     end_of_initialization:	
  2086                           ;End of C runtime variable initialization code
  2087                           
  2088  0068                     __end_of__initialization:	
  2089  0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2090  0069  0020               	movlb	0
  2091  006A  3183  2B9C         	ljmp	_main	;jump to C main() function
  2092                           
  2093                           	psect	bssBANK0
  2094  0020                     __pbssBANK0:	
  2095  0020                     _g_data:	
  2096  0020                     	ds	33
  2097  0041                     _Temp:	
  2098  0041                     	ds	2
  2099  0043                     ISR@key_time_cnt:	
  2100  0043                     	ds	2
  2101  0045                     _temp_l:	
  2102  0045                     	ds	1
  2103  0046                     _temp_h:	
  2104  0046                     	ds	1
  2105  0047                     ISR@history_key:	
  2106  0047                     	ds	1
  2107  0048                     _ENUM:	
  2108  0048                     	ds	1
  2109                           
  2110                           	psect	clrtext
  2111  0396                     clear_ram0:	
  2112                           ;	Called with FSR0 containing the base address, and
  2113                           ;	WREG with the size to clear
  2114                           
  2115  0396  0064               	clrwdt	;clear the watchdog before getting into this loop
  2116  0397                     clrloop0:	
  2117  0397  0180               	clrf	0	;clear RAM location pointed to by FSR
  2118  0398  3101               	addfsr 0,1
  2119  0399  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2120  039A  2B97               	goto	clrloop0	;have we reached the end yet?
  2121  039B  3400               	retlw	0	;all done for this memory range, return
  2122                           
  2123                           	psect	cstackBANK1
  2124  00A0                     __pcstackBANK1:	
  2125  00A0                     ??_IIC_Init:	
  2126  00A0                     ??_init_env:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129                           
  2130                           ; 1 bytes @ 0x0
  2131  00A0                     	ds	1
  2132  00A1                     init_env@i:	
  2133                           
  2134                           ; 2 bytes @ 0x1
  2135  00A1                     	ds	2
  2136  00A3                     ??_main:	
  2137                           
  2138                           	psect	cstackCOMMON
  2139  0070                     __pcstackCOMMON:	
  2140                           ; 1 bytes @ 0x3
  2141                           
  2142  0070                     ?_IIC_Init:	
  2143  0070                     ?_update_time:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0070                     ?_receive_decode:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0070                     ?_update_display:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0070                     ?_init_env:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0070                     ?_ISR:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0070                     ?_main:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0070                     ?_times2number:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0070                     ?_test_get_number:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0070                     ??_test_get_number:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0070                     ?_control595_delay:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0070                     ??_control595_delay:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0070                     ?_write_byte:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0070                     ?___lwmod:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0070                     test_get_number@get_num:	
  2183                           ; 2 bytes @ 0x0
  2184                           
  2185  0070                     times2number@high_level_times:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188  0070                     ___lwmod@divisor:	
  2189                           ; 2 bytes @ 0x0
  2190                           
  2191                           
  2192                           ; 2 bytes @ 0x0
  2193  0070                     	ds	1
  2194  0071                     control595_delay@times:	
  2195                           
  2196                           ; 1 bytes @ 0x1
  2197  0071                     	ds	1
  2198  0072                     ??_times2number:	
  2199  0072                     ??_write_byte:	
  2200                           ; 1 bytes @ 0x2
  2201                           
  2202  0072                     ___lwmod@dividend:	
  2203                           ; 1 bytes @ 0x2
  2204                           
  2205                           
  2206                           ; 2 bytes @ 0x2
  2207  0072                     	ds	2
  2208  0074                     ??___lwmod:	
  2209  0074                     write_byte@data:	
  2210                           ; 1 bytes @ 0x4
  2211                           
  2212                           
  2213                           ; 1 bytes @ 0x4
  2214  0074                     	ds	1
  2215  0075                     write_byte@i:	
  2216  0075                     ___lwmod@counter:	
  2217                           ; 1 bytes @ 0x5
  2218                           
  2219                           
  2220                           ; 1 bytes @ 0x5
  2221  0075                     	ds	1
  2222  0076                     ?_write_once:	
  2223  0076                     write_once@HR:	
  2224                           ; 1 bytes @ 0x6
  2225                           
  2226                           
  2227                           ; 1 bytes @ 0x6
  2228  0076                     	ds	1
  2229  0077                     write_once@ML:	
  2230                           
  2231                           ; 1 bytes @ 0x7
  2232  0077                     	ds	1
  2233  0078                     write_once@MR:	
  2234                           
  2235                           ; 1 bytes @ 0x8
  2236  0078                     	ds	1
  2237  0079                     ??_write_once:	
  2238  0079                     write_once@HL:	
  2239                           ; 1 bytes @ 0x9
  2240                           
  2241                           
  2242                           ; 1 bytes @ 0x9
  2243  0079                     	ds	1
  2244  007A                     ??_update_display:	
  2245                           
  2246                           ; 1 bytes @ 0xA
  2247  007A                     	ds	3
  2248  007D                     ??_update_time:	
  2249                           
  2250                           ; 1 bytes @ 0xD
  2251  007D                     	ds	1
  2252                           
  2253                           	psect	cstackBANK0
  2254  0049                     __pcstackBANK0:	
  2255  0049                     ??_receive_decode:	
  2256                           
  2257                           ; 1 bytes @ 0x0
  2258  0049                     	ds	5
  2259  004E                     receive_decode@last_time_h:	
  2260                           
  2261                           ; 2 bytes @ 0x5
  2262  004E                     	ds	2
  2263  0050                     receive_decode@last_time_m:	
  2264                           
  2265                           ; 2 bytes @ 0x7
  2266  0050                     	ds	2
  2267  0052                     _receive_decode$591:	
  2268                           
  2269                           ; 2 bytes @ 0x9
  2270  0052                     	ds	2
  2271  0054                     _receive_decode$592:	
  2272                           
  2273                           ; 2 bytes @ 0xB
  2274  0054                     	ds	2
  2275  0056                     receive_decode@i_593:	
  2276                           
  2277                           ; 2 bytes @ 0xD
  2278  0056                     	ds	2
  2279  0058                     receive_decode@i:	
  2280                           
  2281                           ; 1 bytes @ 0xF
  2282  0058                     	ds	1
  2283  0059                     receive_decode@read_value:	
  2284                           
  2285                           ; 1 bytes @ 0x10
  2286  0059                     	ds	1
  2287  005A                     receive_decode@check:	
  2288                           
  2289                           ; 1 bytes @ 0x11
  2290  005A                     	ds	1
  2291  005B                     ??_ISR:	
  2292                           
  2293                           ; 1 bytes @ 0x12
  2294  005B                     	ds	2
  2295                           
  2296                           	psect	maintext
  2297  039C                     __pmaintext:	
  2298 ;;
  2299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2300 ;;
  2301 ;; *************** function _main *****************
  2302 ;; Defined at:
  2303 ;;		line 193 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : B1F/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels required when called:    8
  2323 ;; This function calls:
  2324 ;;		_init_env
  2325 ;; This function is called by:
  2326 ;;		Startup code after reset
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _main
  2332  039C                     _main:	
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2336  039C  3181  21BA  3183   	fcall	_init_env
  2337  039F                     l90:	
  2338  039F  2B9F               	goto	l90
  2339  03A0                     __end_of_main:	
  2340                           
  2341                           	psect	text1
  2342  01BA                     __ptext1:	
  2343 ;; *************** function _init_env *****************
  2344 ;; Defined at:
  2345 ;;		line 38 in file "main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  i               2    1[BANK1 ] int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    7
  2366 ;; This function calls:
  2367 ;;		_IIC_Init
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _init_env
  2375  01BA                     _init_env:	
  2376                           
  2377                           ;main.c: 43:     LATA = 0;
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2381  01BA  178B               	bsf	11,7	;volatile
  2382                           
  2383                           ;main.c: 45:     IOCAP = 0;
  2384  01BB  158B               	bsf	11,3	;volatile
  2385                           
  2386                           ;main.c: 49:     LATB = 0;
  2387  01BC  168B               	bsf	11,5	;volatile
  2388                           
  2389                           ;main.c: 55:     LATC = 0;
  2390  01BD  0021               	movlb	1	; select bank1
  2391  01BE  0819               	movf	25,w	;volatile
  2392  01BF  39FC               	andlw	-4
  2393  01C0  3802               	iorlw	2
  2394  01C1  0099               	movwf	25	;volatile
  2395                           
  2396                           ;main.c: 56:     WPUC = 1;
  2397  01C2  0819               	movf	25,w	;volatile
  2398  01C3  3987               	andlw	-121
  2399  01C4  3850               	iorlw	80
  2400  01C5  0099               	movwf	25	;volatile
  2401                           
  2402                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  2403  01C6  1195               	bcf	21,3	;volatile
  2404                           
  2405                           ;main.c: 65: 
  2406  01C7  1295               	bcf	21,5	;volatile
  2407                           
  2408                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  2409  01C8  0815               	movf	21,w	;volatile
  2410  01C9  39F8               	andlw	-8
  2411  01CA  3804               	iorlw	4
  2412  01CB  0095               	movwf	21	;volatile
  2413                           
  2414                           ;main.c: 67:     WPUCbits.WPUC1 = 1;
  2415  01CC  30E7               	movlw	231
  2416  01CD  0020               	movlb	0	; select bank0
  2417  01CE  0095               	movwf	21	;volatile
  2418                           
  2419                           ;main.c: 75:     g_data.g_time_s = 0;
  2420  01CF  0021               	movlb	1	; select bank1
  2421  01D0  1395               	bcf	21,7	;volatile
  2422                           
  2423                           ;main.c: 77: 
  2424  01D1  018C               	clrf	12	;volatile
  2425                           
  2426                           ;main.c: 78: 
  2427  01D2  0022               	movlb	2	; select bank2
  2428  01D3  018C               	clrf	12	;volatile
  2429                           
  2430                           ;main.c: 79:     g_data.g_flg_switch = FALSE;
  2431  01D4  0024               	movlb	4	; select bank4
  2432  01D5  018C               	clrf	12	;volatile
  2433                           
  2434                           ;main.c: 80:     g_data.g_start_read_data = FALSE;
  2435  01D6  0027               	movlb	7	; select bank7
  2436  01D7  0191               	clrf	17	;volatile
  2437                           
  2438                           ;main.c: 81:     g_data.g_find_recv_start = FALSE;
  2439  01D8  0192               	clrf	18	;volatile
  2440                           
  2441                           ;main.c: 83: 
  2442  01D9  0021               	movlb	1	; select bank1
  2443  01DA  018D               	clrf	13	;volatile
  2444                           
  2445                           ;main.c: 84:     g_data.g_high_level_times = 0;
  2446  01DB  0022               	movlb	2	; select bank2
  2447  01DC  018D               	clrf	13	;volatile
  2448                           
  2449                           ;main.c: 85:     g_data.g_all_level_times = 0;
  2450  01DD  0024               	movlb	4	; select bank4
  2451  01DE  018D               	clrf	13	;volatile
  2452                           
  2453                           ;main.c: 86:     g_data.g_recv_count = 0;
  2454  01DF  0027               	movlb	7	; select bank7
  2455  01E0  0194               	clrf	20	;volatile
  2456                           
  2457                           ;main.c: 87:     for(int i = 0;i < 20; i++){
  2458  01E1  0195               	clrf	21	;volatile
  2459                           
  2460                           ;main.c: 89:     }
  2461  01E2  0021               	movlb	1	; select bank1
  2462  01E3  018E               	clrf	14	;volatile
  2463                           
  2464                           ;main.c: 90: 
  2465  01E4  0022               	movlb	2	; select bank2
  2466  01E5  018E               	clrf	14	;volatile
  2467                           
  2468                           ;main.c: 91: 
  2469  01E6  3001               	movlw	1
  2470  01E7  0024               	movlb	4	; select bank4
  2471  01E8  008E               	movwf	14	;volatile
  2472                           
  2473                           ;main.c: 92: 
  2474  01E9  0027               	movlb	7	; select bank7
  2475  01EA  0197               	clrf	23	;volatile
  2476                           
  2477                           ;main.c: 93: 
  2478  01EB  0198               	clrf	24	;volatile
  2479                           
  2480                           ;main.c: 98: 
  2481  01EC  0021               	movlb	1	; select bank1
  2482  01ED  168E               	bsf	14,5	;volatile
  2483                           
  2484                           ;main.c: 99: 
  2485  01EE  0024               	movlb	4	; select bank4
  2486  01EF  168E               	bsf	14,5	;volatile
  2487                           
  2488                           ;main.c: 101:     WPUCbits.WPUC0 = 1;
  2489  01F0  0021               	movlb	1	; select bank1
  2490  01F1  148E               	bsf	14,1	;volatile
  2491                           
  2492                           ;main.c: 102: 
  2493  01F2  0024               	movlb	4	; select bank4
  2494  01F3  148E               	bsf	14,1	;volatile
  2495                           
  2496                           ;main.c: 103: 
  2497  01F4  0027               	movlb	7	; select bank7
  2498  01F5  1497               	bsf	23,1	;volatile
  2499                           
  2500                           ;main.c: 108: }
  2501  01F6  0020               	movlb	0	; select bank0
  2502  01F7  01A3               	clrf	_g_data+3	;volatile
  2503                           
  2504                           ;main.c: 109: 
  2505  01F8  01A4               	clrf	_g_data+4	;volatile
  2506                           
  2507                           ;main.c: 110: void __attribute__((picinterrupt(("")))) ISR(void){
  2508  01F9  01A5               	clrf	_g_data+5	;volatile
  2509                           
  2510                           ;main.c: 111:     static u8 history_key = 0;
  2511  01FA  01A6               	clrf	_g_data+6	;volatile
  2512                           
  2513                           ;main.c: 114: 
  2514  01FB  01A0               	clrf	_g_data	;volatile
  2515                           
  2516                           ;main.c: 115:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && g_
      +                          data.g_flg_switch == TRUE){
  2517  01FC  01A1               	clrf	_g_data+1	;volatile
  2518                           
  2519                           ;main.c: 116: 
  2520  01FD  01A2               	clrf	_g_data+2	;volatile
  2521                           
  2522                           ;main.c: 119: 
  2523  01FE  01A7               	clrf	_g_data+7	;volatile
  2524  01FF  01A8               	clrf	_g_data+8	;volatile
  2525                           
  2526                           ;main.c: 120:         g_data.g_start_read_data = TRUE;
  2527  0200  01A9               	clrf	_g_data+9	;volatile
  2528  0201  01AA               	clrf	_g_data+10	;volatile
  2529                           
  2530                           ;main.c: 121:         g_data.g_flg_switch = FALSE;
  2531  0202  01AB               	clrf	_g_data+11	;volatile
  2532  0203  01AC               	clrf	_g_data+12	;volatile
  2533                           
  2534                           ;main.c: 122:         PORTCbits.RC2 = BPC_PWR_ON;
  2535  0204  0021               	movlb	1	; select bank1
  2536  0205  01A1               	clrf	init_env@i^(0+128)
  2537  0206  01A2               	clrf	(init_env@i+1)^(0+128)
  2538  0207                     l2114:	
  2539                           
  2540                           ;main.c: 123: 
  2541  0207  3005               	movlw	5
  2542  0208  0021               	movlb	1	; select bank1
  2543  0209  00A0               	movwf	??_init_env^(0+128)
  2544  020A  0821               	movf	init_env@i^(0+128),w
  2545  020B  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2546  020C  0086               	movwf	6
  2547  020D  0187               	clrf	7
  2548  020E  0820               	movf	??_init_env^(0+128),w
  2549  020F  0081               	movwf	1
  2550                           
  2551                           ;main.c: 124:         INTCONbits.IOCIF = FALSE;
  2552  0210  3001               	movlw	1
  2553  0211  07A1               	addwf	init_env@i^(0+128),f
  2554  0212  3000               	movlw	0
  2555  0213  3DA2               	addwfc	(init_env@i+1)^(0+128),f
  2556  0214  0822               	movf	(init_env@i+1)^(0+128),w
  2557  0215  3A80               	xorlw	128
  2558  0216  00A0               	movwf	??_init_env^(0+128)
  2559  0217  3080               	movlw	128
  2560  0218  0220               	subwf	??_init_env^(0+128),w
  2561  0219  1D03               	skipz
  2562  021A  2A1D               	goto	u1515
  2563  021B  3014               	movlw	20
  2564  021C  0221               	subwf	init_env@i^(0+128),w
  2565  021D                     u1515:	
  2566  021D  1C03               	skipc
  2567  021E  2A07               	goto	l2114
  2568                           
  2569                           ;main.c: 129:         IOCCFbits.IOCCF1 = FALSE;
  2570  021F  0022               	movlb	2	; select bank2
  2571  0220  110D               	bcf	13,2	;volatile
  2572                           
  2573                           ;main.c: 132: 
  2574  0221  0020               	movlb	0	; select bank0
  2575  0222  110E               	bcf	14,2	;volatile
  2576                           
  2577                           ;main.c: 135: 
  2578  0223  0021               	movlb	1	; select bank1
  2579  0224  140E               	bsf	14,0	;volatile
  2580                           
  2581                           ;main.c: 136:         if(g_data.g_start_read_data == TRUE ){
  2582  0225  0024               	movlb	4	; select bank4
  2583  0226  140E               	bsf	14,0	;volatile
  2584                           
  2585                           ;main.c: 139: 
  2586  0227  3183  237E         	fcall	_IIC_Init
  2587                           
  2588                           ;main.c: 142:         {
  2589  0229  0020               	movlb	0	; select bank0
  2590  022A  140C               	bsf	12,0	;volatile
  2591  022B  0008               	return
  2592  022C                     __end_of_init_env:	
  2593                           
  2594                           	psect	text2
  2595  037E                     __ptext2:	
  2596 ;; *************** function _IIC_Init *****************
  2597 ;; Defined at:
  2598 ;;		line 8 in file "myiic.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		None
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    6
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_init_env
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _IIC_Init
  2628  037E                     _IIC_Init:	
  2629                           
  2630                           ;myiic.c: 10:     LATC3=1;
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _IIC_Init: []
  2634  037E  0022               	movlb	2	; select bank2
  2635  037F  158E               	bsf	14,3	;volatile
  2636                           
  2637                           ;myiic.c: 11:  LATC4=1;
  2638  0380  160E               	bsf	14,4	;volatile
  2639                           
  2640                           ;myiic.c: 13:     ODCONC3 = 1;
  2641  0381  0025               	movlb	5	; select bank5
  2642  0382  158E               	bsf	14,3	;volatile
  2643                           
  2644                           ;myiic.c: 14:     ODCONC4 = 1;
  2645  0383  160E               	bsf	14,4	;volatile
  2646                           
  2647                           ;myiic.c: 16:     TRISC4 = 0;
  2648  0384  0021               	movlb	1	; select bank1
  2649  0385  120E               	bcf	14,4	;volatile
  2650                           
  2651                           ;myiic.c: 17:     TRISC3 = 0;
  2652  0386  118E               	bcf	14,3	;volatile
  2653                           
  2654                           ;myiic.c: 19:  WPUC4 = 1;
  2655  0387  0024               	movlb	4	; select bank4
  2656  0388  160E               	bsf	14,4	;volatile
  2657                           
  2658                           ;myiic.c: 20:     WPUC3 = 1;
  2659  0389  158E               	bsf	14,3	;volatile
  2660  038A  0008               	return
  2661  038B                     __end_of_IIC_Init:	
  2662                           
  2663                           	psect	intentry
  2664  0004                     __pintentry:	
  2665 ;; *************** function _ISR *****************
  2666 ;; Defined at:
  2667 ;;		line 145 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;Total ram usage:        2 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    5
  2688 ;; This function calls:
  2689 ;;		___lwmod
  2690 ;;		_receive_decode
  2691 ;;		_update_time
  2692 ;; This function is called by:
  2693 ;;		Interrupt level 1
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697  0004                     _ISR:	
  2698                           
  2699                           ;incstack = 0
  2700  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2701                           
  2702                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2703  0005  3180               	pagesel	$
  2704                           
  2705                           ;main.c: 146:             {;main.c: 147:                 g_data.g_flg_switch = TRUE;;mai
      +                          n.c: 150: 
  2706  0006  0027               	movlb	7	; select bank7
  2707  0007  1C99               	btfss	25,1	;volatile
  2708  0008  281A               	goto	i1l76
  2709  0009  0020               	movlb	0	; select bank0
  2710  000A  0821               	movf	_g_data+1,w	;volatile
  2711  000B  1D03               	btfss	3,2
  2712  000C  281A               	goto	i1l76
  2713  000D  0320               	decf	_g_data,w	;volatile
  2714  000E  1D03               	btfss	3,2
  2715  000F  281A               	goto	i1l76
  2716                           
  2717                           ;main.c: 152:         TMR0 = (217 + 14);;main.c: 155:     return;
  2718  0010  3001               	movlw	1
  2719  0011  00DB               	movwf	??_ISR
  2720  0012  085B               	movf	??_ISR,w
  2721  0013  00A1               	movwf	_g_data+1	;volatile
  2722                           
  2723                           ;main.c: 156: }
  2724  0014  01A0               	clrf	_g_data	;volatile
  2725                           
  2726                           ;main.c: 157: 
  2727  0015  110E               	bcf	14,2	;volatile
  2728                           
  2729                           ;main.c: 159: 
  2730  0016  100B               	bcf	11,0	;volatile
  2731                           
  2732                           ;main.c: 160:     init_env();
  2733  0017  0027               	movlb	7	; select bank7
  2734  0018  1099               	bcf	25,1	;volatile
  2735  0019  285D               	goto	i1l77
  2736  001A                     i1l76:	
  2737  001A  180B               	btfsc	11,0	;volatile
  2738  001B  281F               	goto	i1l81
  2739  001C  0027               	movlb	7	; select bank7
  2740  001D  1C99               	btfss	25,1	;volatile
  2741  001E  2822               	goto	i1l78
  2742  001F                     i1l81:	
  2743                           
  2744                           ;main.c: 163:     return;
  2745  001F  100B               	bcf	11,0	;volatile
  2746                           
  2747                           ;main.c: 164: }
  2748  0020  0027               	movlb	7	; select bank7
  2749  0021  1099               	bcf	25,1	;volatile
  2750  0022                     i1l78:	
  2751  0022  1D0B               	btfss	11,2	;volatile
  2752  0023  285D               	goto	i1l77
  2753  0024  3182  2277  3180   	fcall	_update_time
  2754  0027  0020               	movlb	0	; select bank0
  2755  0028  0321               	decf	_g_data+1,w	;volatile
  2756  0029  1D03               	btfss	3,2
  2757  002A  282E               	goto	i1l2000
  2758  002B  3180  206C  3180   	fcall	_receive_decode
  2759  002E                     i1l2000:	
  2760  002E  300A               	movlw	10
  2761  002F  00F0               	movwf	___lwmod@divisor
  2762  0030  3000               	movlw	0
  2763  0031  00F1               	movwf	___lwmod@divisor+1
  2764  0032  0020               	movlb	0	; select bank0
  2765  0033  0844               	movf	ISR@key_time_cnt+1,w
  2766  0034  00DC               	movwf	??_ISR+1
  2767  0035  0843               	movf	ISR@key_time_cnt,w
  2768  0036  00DB               	movwf	??_ISR
  2769  0037  0AC3               	incf	ISR@key_time_cnt,f
  2770  0038  1903               	skipnz
  2771  0039  0AC4               	incf	ISR@key_time_cnt+1,f
  2772  003A  085B               	movf	??_ISR,w
  2773  003B  00F2               	movwf	___lwmod@dividend
  2774  003C  085C               	movf	??_ISR+1,w
  2775  003D  00F3               	movwf	___lwmod@dividend+1
  2776  003E  3182  22F3  3180   	fcall	___lwmod
  2777  0041  0870               	movf	?___lwmod,w
  2778  0042  0471               	iorwf	?___lwmod+1,w
  2779  0043  1D03               	btfss	3,2
  2780  0044  2859               	goto	i1l2010
  2781  0045  1003               	clrc
  2782  0046  0020               	movlb	0	; select bank0
  2783  0047  0DC7               	rlf	ISR@history_key,f
  2784  0048  0E0E               	swapf	14,w	;volatile
  2785  0049  0C89               	rrf	9,f
  2786  004A  3901               	andlw	1
  2787  004B  00DB               	movwf	??_ISR
  2788  004C  085B               	movf	??_ISR,w
  2789  004D  04C7               	iorwf	ISR@history_key,f
  2790  004E  300F               	movlw	15
  2791  004F  0547               	andwf	ISR@history_key,w
  2792  0050  00DB               	movwf	??_ISR
  2793  0051  3003               	movlw	3
  2794  0052  065B               	xorwf	??_ISR,w
  2795  0053  1D03               	btfss	3,2
  2796  0054  2859               	goto	i1l2010
  2797  0055  3001               	movlw	1
  2798  0056  00DB               	movwf	??_ISR
  2799  0057  085B               	movf	??_ISR,w
  2800  0058  00A0               	movwf	_g_data	;volatile
  2801  0059                     i1l2010:	
  2802  0059  110B               	bcf	11,2	;volatile
  2803  005A  30E7               	movlw	231
  2804  005B  0020               	movlb	0	; select bank0
  2805  005C  0095               	movwf	21	;volatile
  2806  005D                     i1l77:	
  2807  005D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2808  005E  0009               	retfie
  2809  005F                     __end_of_ISR:	
  2810                           
  2811                           	psect	text4
  2812  0277                     __ptext4:	
  2813 ;; *************** function _update_time *****************
  2814 ;; Defined at:
  2815 ;;		line 14 in file "update_time.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;Total ram usage:        1 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		_update_display
  2838 ;; This function is called by:
  2839 ;;		_ISR
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _update_time
  2845  0277                     _update_time:	
  2846                           
  2847                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2851  0277  3001               	movlw	1
  2852  0278  00FD               	movwf	??_update_time
  2853  0279  087D               	movf	??_update_time,w
  2854  027A  0020               	banksel	_g_data
  2855  027B  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  2856                           
  2857                           ;update_time.c: 17:     if( 50 == g_data.g_time_10ms ){
  2858  027C  3032               	movlw	50
  2859  027D  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2860  027E  1D03               	btfss	3,2
  2861  027F  2A83               	goto	i1l1792
  2862                           
  2863                           ;update_time.c: 18:         LATBbits.LATB3 = 1;
  2864  0280  0022               	movlb	2	; select bank2
  2865  0281  158D               	bsf	13,3	;volatile
  2866                           
  2867                           ;update_time.c: 19:     }else if( 100 == g_data.g_time_10ms ){
  2868  0282  2A89               	goto	i1l1796
  2869  0283                     i1l1792:	
  2870  0283  3064               	movlw	100
  2871  0284  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2872  0285  1D03               	btfss	3,2
  2873  0286  2A89               	goto	i1l1796
  2874                           
  2875                           ;update_time.c: 20:         LATBbits.LATB3 = 0;
  2876  0287  0022               	movlb	2	; select bank2
  2877  0288  118D               	bcf	13,3	;volatile
  2878  0289                     i1l1796:	
  2879                           
  2880                           ;update_time.c: 23:     if(g_data.g_time_10ms == 100){
  2881  0289  3064               	movlw	100
  2882  028A  0020               	banksel	_g_data
  2883  028B  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2884  028C  1D03               	btfss	3,2
  2885  028D  0008               	return
  2886                           
  2887                           ;update_time.c: 24:         g_data.g_time_10ms = 0;
  2888  028E  3000               	movlw	0
  2889  028F  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  2890                           
  2891                           ;update_time.c: 25:         g_data.g_time_s++;
  2892  0290  3001               	movlw	1
  2893  0291  00FD               	movwf	??_update_time
  2894  0292  087D               	movf	??_update_time,w
  2895  0293  0020               	banksel	_g_data
  2896  0294  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  2897                           
  2898                           ;update_time.c: 26:         update_display();
  2899  0295  3183  236E  3182   	fcall	_update_display
  2900                           
  2901                           ;update_time.c: 27:         if(g_data.g_time_s == 60){
  2902  0298  303C               	movlw	60
  2903  0299  0020               	banksel	_g_data
  2904  029A  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  2905  029B  1D03               	btfss	3,2
  2906  029C  0008               	return
  2907                           
  2908                           ;update_time.c: 28:             g_data.g_time_m++;
  2909  029D  3001               	movlw	1
  2910  029E  00FD               	movwf	??_update_time
  2911  029F  087D               	movf	??_update_time,w
  2912  02A0  0020               	banksel	_g_data
  2913  02A1  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  2914                           
  2915                           ;update_time.c: 29:             g_data.g_time_s = 0;
  2916  02A2  3000               	movlw	0
  2917  02A3  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  2918                           
  2919                           ;update_time.c: 31:             if(g_data.g_time_m == 60){
  2920  02A4  303C               	movlw	60
  2921  02A5  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  2922  02A6  1D03               	btfss	3,2
  2923  02A7  2AB5               	goto	i1l1816
  2924                           
  2925                           ;update_time.c: 32:                 g_data.g_time_h++;
  2926  02A8  3001               	movlw	1
  2927  02A9  00FD               	movwf	??_update_time
  2928  02AA  087D               	movf	??_update_time,w
  2929  02AB  0020               	banksel	_g_data
  2930  02AC  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  2931                           
  2932                           ;update_time.c: 33:                 g_data.g_time_m = 0;
  2933  02AD  3000               	movlw	0
  2934  02AE  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2935                           
  2936                           ;update_time.c: 35:                 if(g_data.g_time_h == 24){
  2937  02AF  3018               	movlw	24
  2938  02B0  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  2939  02B1  1D03               	btfss	3,2
  2940  02B2  2AB5               	goto	i1l1816
  2941                           
  2942                           ;update_time.c: 36:                     g_data.g_time_h = 0;
  2943  02B3  3000               	movlw	0
  2944  02B4  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2945  02B5                     i1l1816:	
  2946                           
  2947                           ;update_time.c: 40:             update_display();
  2948  02B5  3183  236E         	fcall	_update_display
  2949  02B7  0008               	return
  2950  02B8                     __end_of_update_time:	
  2951                           
  2952                           	psect	text5
  2953  006C                     __ptext5:	
  2954 ;; *************** function _receive_decode *****************
  2955 ;; Defined at:
  2956 ;;		line 71 in file "receive_decode.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  i               2   13[BANK0 ] int 
  2961 ;;  i               1   15[BANK0 ] unsigned char 
  2962 ;;  last_time_m     2    7[BANK0 ] unsigned short 
  2963 ;;  last_time_h     2    5[BANK0 ] unsigned short 
  2964 ;;  check           1   17[BANK0 ] unsigned char 
  2965 ;;  read_value      1   16[BANK0 ] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;Total ram usage:       18 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    4
  2982 ;; This function calls:
  2983 ;;		_test_get_number
  2984 ;;		_times2number
  2985 ;;		_update_display
  2986 ;; This function is called by:
  2987 ;;		_ISR
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _receive_decode
  2993  006C                     _receive_decode:	
  2994                           
  2995                           ;receive_decode.c: 73:     if(PORTCbits.RC1 == PIN_HIGH){
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2999  006C  0020               	movlb	0	; select bank0
  3000  006D  1C8E               	btfss	14,1	;volatile
  3001  006E  2874               	goto	i1l133
  3002                           
  3003                           ;receive_decode.c: 74:         g_data.g_high_level_times++;
  3004  006F  3001               	movlw	1
  3005  0070  0020               	banksel	_g_data
  3006  0071  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3007  0072  3000               	movlw	0
  3008  0073  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3009  0074                     i1l133:	
  3010                           ;receive_decode.c: 75:     }
  3011                           
  3012                           
  3013                           ;receive_decode.c: 77:     g_data.g_all_level_times++;
  3014  0074  3001               	movlw	1
  3015  0075  0020               	banksel	_g_data
  3016  0076  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3017  0077  3000               	movlw	0
  3018  0078  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3019                           
  3020                           ;receive_decode.c: 81:     if(g_data.g_all_level_times < 100){
  3021  0079  3000               	movlw	0
  3022  007A  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3023  007B  3064               	movlw	100
  3024  007C  1903               	skipnz
  3025  007D  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3026  007E  1C03               	btfss	3,0
  3027  007F  0008               	return
  3028                           
  3029                           ;receive_decode.c: 85:     u8 read_value = times2number(g_data.g_high_level_times);
  3030  0080  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3031  0081  00F1               	movwf	times2number@high_level_times+1
  3032  0082  0020               	banksel	_g_data
  3033  0083  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3034  0084  00F0               	movwf	times2number@high_level_times
  3035  0085  3182  222C  3180   	fcall	_times2number
  3036  0088  0020               	movlb	0	; select bank0
  3037  0089  00C9               	movwf	??_receive_decode
  3038  008A  0849               	movf	??_receive_decode,w
  3039  008B  00D9               	movwf	receive_decode@read_value
  3040                           
  3041                           ;receive_decode.c: 87:     test_get_number(read_value);
  3042  008C  0859               	movf	receive_decode@read_value,w
  3043  008D  3182  22B8  3180   	fcall	_test_get_number
  3044                           
  3045                           ;receive_decode.c: 89:     g_data.g_all_level_times = 0;
  3046  0090  0020               	banksel	_g_data
  3047  0091  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3048  0092  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3049                           
  3050                           ;receive_decode.c: 90:     g_data.g_high_level_times = 0;
  3051  0093  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3052  0094  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3053                           
  3054                           ;receive_decode.c: 92:     if(read_value == 5){
  3055  0095  3005               	movlw	5
  3056  0096  0020               	movlb	0	; select bank0
  3057  0097  0659               	xorwf	receive_decode@read_value,w
  3058  0098  1D03               	btfss	3,2
  3059  0099  28A4               	goto	i1l1838
  3060                           
  3061                           ;receive_decode.c: 94:         g_data.g_find_recv_start = TRUE;
  3062  009A  3001               	movlw	1
  3063  009B  0020               	banksel	_g_data
  3064  009C  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3065                           
  3066                           ;receive_decode.c: 95:         g_data.g_recv_buf[CODE_P0] = 0;
  3067  009D  3000               	movlw	0
  3068  009E  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3069                           
  3070                           ;receive_decode.c: 96:         g_data.g_recv_count = CODE_P1;
  3071  009F  3000               	movlw	0
  3072  00A0  00AC               	movwf	((_g_data+1)& (0+127)+11)	;volatile
  3073  00A1  3001               	movlw	1
  3074  00A2  00AB               	movwf	(_g_data& (0+127)+11)	;volatile
  3075                           
  3076                           ;receive_decode.c: 97:         return;
  3077  00A3  0008               	return
  3078  00A4                     i1l1838:	
  3079                           
  3080                           ;receive_decode.c: 100:     if(g_data.g_find_recv_start == FALSE || (read_value == 4)){
  3081  00A4  0020               	banksel	_g_data
  3082  00A5  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3083  00A6  1903               	btfsc	3,2
  3084  00A7  0008               	return
  3085  00A8  3004               	movlw	4
  3086  00A9  0020               	movlb	0	; select bank0
  3087  00AA  0659               	xorwf	receive_decode@read_value,w
  3088  00AB  1903               	btfsc	3,2
  3089  00AC  0008               	return
  3090                           
  3091                           ;receive_decode.c: 106:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3092  00AD  3020               	movlw	low _g_data
  3093  00AE  0086               	movwf	6
  3094  00AF  3000               	movlw	high _g_data
  3095  00B0  0087               	movwf	7
  3096  00B1  314B               	addfsr 1,11
  3097  00B2  302D               	movlw	low (_g_data+13)
  3098  00B3  00C9               	movwf	??_receive_decode
  3099  00B4  3000               	movlw	high (_g_data+13)
  3100  00B5  00CA               	movwf	??_receive_decode+1
  3101  00B6  3F40               	moviw [0]fsr1
  3102  00B7  0749               	addwf	??_receive_decode,w
  3103  00B8  00CB               	movwf	??_receive_decode+2
  3104  00B9  3F41               	moviw [1]fsr1
  3105  00BA  3D4A               	addwfc	??_receive_decode+1,w
  3106  00BB  00CC               	movwf	??_receive_decode+3
  3107  00BC  084B               	movf	??_receive_decode+2,w
  3108  00BD  0086               	movwf	6
  3109  00BE  084C               	movf	??_receive_decode+3,w
  3110  00BF  0087               	movwf	7
  3111  00C0  0859               	movf	receive_decode@read_value,w
  3112  00C1  0081               	movwf	1
  3113  00C2  3001               	movlw	1
  3114  00C3  0020               	banksel	_g_data
  3115  00C4  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3116  00C5  3000               	movlw	0
  3117  00C6  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3118                           
  3119                           ;receive_decode.c: 107:     if(g_data.g_recv_count <= CODE_P3){
  3120  00C7  3000               	movlw	0
  3121  00C8  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3122  00C9  300B               	movlw	11
  3123  00CA  1903               	skipnz
  3124  00CB  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3125  00CC  1C03               	btfss	3,0
  3126  00CD  0008               	return
  3127                           
  3128                           ;receive_decode.c: 111:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE
      +                          _P2] != 0){
  3129  00CE  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3130  00CF  1903               	btfsc	3,2
  3131  00D0  28DC               	goto	i1l1860
  3132  00D1  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3133  00D2  1903               	btfsc	3,2
  3134  00D3  28DC               	goto	i1l1860
  3135  00D4                     i1l1854:	
  3136                           
  3137                           ;receive_decode.c: 112:         g_data.g_find_recv_start = FALSE;
  3138  00D4  3000               	movlw	0
  3139  00D5  0020               	banksel	_g_data
  3140  00D6  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3141                           
  3142                           ;receive_decode.c: 113:         g_data.g_start_read_data = 0;
  3143  00D7  3000               	movlw	0
  3144  00D8  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3145                           
  3146                           ;receive_decode.c: 114:         g_data.g_recv_count = 0;
  3147  00D9  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3148  00DA  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3149  00DB  0008               	return
  3150  00DC                     i1l1860:	
  3151                           
  3152                           ;receive_decode.c: 118:     u16 last_time_h = g_data.g_time_h;
  3153  00DC  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3154  00DD  0020               	movlb	0	; select bank0
  3155  00DE  00C9               	movwf	??_receive_decode
  3156  00DF  01CA               	clrf	??_receive_decode+1
  3157  00E0  0849               	movf	??_receive_decode,w
  3158  00E1  00CE               	movwf	receive_decode@last_time_h
  3159  00E2  084A               	movf	??_receive_decode+1,w
  3160  00E3  00CF               	movwf	receive_decode@last_time_h+1
  3161                           
  3162                           ;receive_decode.c: 119:     u16 last_time_m = g_data.g_time_m;
  3163  00E4  0020               	banksel	_g_data
  3164  00E5  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3165  00E6  0020               	movlb	0	; select bank0
  3166  00E7  00C9               	movwf	??_receive_decode
  3167  00E8  01CA               	clrf	??_receive_decode+1
  3168  00E9  0849               	movf	??_receive_decode,w
  3169  00EA  00D0               	movwf	receive_decode@last_time_m
  3170  00EB  084A               	movf	??_receive_decode+1,w
  3171  00EC  00D1               	movwf	receive_decode@last_time_m+1
  3172                           
  3173                           ;receive_decode.c: 120:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g
      +                          _recv_buf[CODE_H_2];
  3174  00ED  0020               	banksel	_g_data
  3175  00EE  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  3176  00EF  0020               	movlb	0	; select bank0
  3177  00F0  00C9               	movwf	??_receive_decode
  3178  00F1  3002               	movlw	2
  3179  00F2                     u118_25:	
  3180  00F2  35C9               	lslf	??_receive_decode,f
  3181  00F3  0B89               	decfsz	9,f
  3182  00F4  28F2               	goto	u118_25
  3183  00F5  0020               	banksel	_g_data
  3184  00F6  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  3185  00F7  0020               	movlb	0	; select bank0
  3186  00F8  0749               	addwf	??_receive_decode,w
  3187  00F9  00CA               	movwf	??_receive_decode+1
  3188  00FA  084A               	movf	??_receive_decode+1,w
  3189  00FB  0020               	banksel	_g_data
  3190  00FC  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3191                           
  3192                           ;receive_decode.c: 121:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.
      +                          g_recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  3193  00FD  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  3194  00FE  0020               	movlb	0	; select bank0
  3195  00FF  00C9               	movwf	??_receive_decode
  3196  0100  3004               	movlw	4
  3197  0101                     u119_25:	
  3198  0101  35C9               	lslf	??_receive_decode,f
  3199  0102  0B89               	decfsz	9,f
  3200  0103  2901               	goto	u119_25
  3201  0104  0020               	banksel	_g_data
  3202  0105  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  3203  0106  0020               	movlb	0	; select bank0
  3204  0107  00CA               	movwf	??_receive_decode+1
  3205  0108  3001               	movlw	1
  3206  0109                     u120_25:	
  3207  0109  35CA               	lslf	??_receive_decode+1,f
  3208  010A  3EFF               	addlw	-1
  3209  010B  1D03               	skipz
  3210  010C  2909               	goto	u120_25
  3211  010D  354A               	lslf	??_receive_decode+1,w
  3212  010E  0749               	addwf	??_receive_decode,w
  3213  010F  00CB               	movwf	??_receive_decode+2
  3214  0110  0020               	banksel	_g_data
  3215  0111  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  3216  0112  0020               	movlb	0	; select bank0
  3217  0113  074B               	addwf	??_receive_decode+2,w
  3218  0114  00CC               	movwf	??_receive_decode+3
  3219  0115  084C               	movf	??_receive_decode+3,w
  3220  0116  0020               	banksel	_g_data
  3221  0117  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3222                           
  3223                           ;receive_decode.c: 122:     u8 check = 0;
  3224  0118  0020               	movlb	0	; select bank0
  3225  0119  01DA               	clrf	receive_decode@check
  3226                           
  3227                           ;receive_decode.c: 123:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  3228  011A  01D8               	clrf	receive_decode@i
  3229  011B  0AD8               	incf	receive_decode@i,f
  3230  011C                     i1l1874:	
  3231                           
  3232                           ;receive_decode.c: 124:     {;receive_decode.c: 125:         check ^= g_data.g_recv_buf[
      +                          i];
  3233  011C  0858               	movf	receive_decode@i,w
  3234  011D  00C9               	movwf	??_receive_decode
  3235  011E  01CA               	clrf	??_receive_decode+1
  3236  011F  302D               	movlw	low (_g_data+13)
  3237  0120  00CB               	movwf	??_receive_decode+2
  3238  0121  3000               	movlw	high (_g_data+13)
  3239  0122  00CC               	movwf	??_receive_decode+3
  3240  0123  0849               	movf	??_receive_decode,w
  3241  0124  074B               	addwf	??_receive_decode+2,w
  3242  0125  0086               	movwf	6
  3243  0126  084A               	movf	??_receive_decode+1,w
  3244  0127  3D4C               	addwfc	??_receive_decode+3,w
  3245  0128  0087               	movwf	7
  3246  0129  0801               	movf	1,w
  3247  012A  00CD               	movwf	??_receive_decode+4
  3248  012B  084D               	movf	??_receive_decode+4,w
  3249  012C  06DA               	xorwf	receive_decode@check,f
  3250                           
  3251                           ;receive_decode.c: 126:     }
  3252  012D  3001               	movlw	1
  3253  012E  00C9               	movwf	??_receive_decode
  3254  012F  0849               	movf	??_receive_decode,w
  3255  0130  07D8               	addwf	receive_decode@i,f
  3256  0131  300A               	movlw	10
  3257  0132  0258               	subwf	receive_decode@i,w
  3258  0133  1C03               	skipc
  3259  0134  291C               	goto	i1l1874
  3260                           
  3261                           ;receive_decode.c: 127:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[C
      +                          ODE_P3] % 2 == 0) )
  3262  0135  085A               	movf	receive_decode@check,w
  3263  0136  1903               	btfsc	3,2
  3264  0137  293C               	goto	i1l146
  3265  0138  3003               	movlw	3
  3266  0139  065A               	xorwf	receive_decode@check,w
  3267  013A  1D03               	btfss	3,2
  3268  013B  294E               	goto	i1l1892
  3269  013C                     i1l146:	
  3270  013C  0020               	banksel	_g_data
  3271  013D  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  3272  013E  294E               	goto	i1l1892
  3273                           
  3274                           ;receive_decode.c: 128:     {;receive_decode.c: 129:         g_data.g_time_h += (2 ==g_d
      +                          ata.g_recv_buf[CODE_P3])? 12 : 0;
  3275  013F  3002               	movlw	2
  3276  0140  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3277  0141  1903               	btfsc	3,2
  3278  0142  2947               	goto	i1l1888
  3279  0143  0020               	movlb	0	; select bank0
  3280  0144  01D2               	clrf	_receive_decode$591
  3281  0145  01D3               	clrf	_receive_decode$591+1
  3282  0146  294C               	goto	i1l1890
  3283  0147                     i1l1888:	
  3284  0147  300C               	movlw	12
  3285  0148  0020               	movlb	0	; select bank0
  3286  0149  00D2               	movwf	_receive_decode$591
  3287  014A  3000               	movlw	0
  3288  014B  00D3               	movwf	_receive_decode$591+1
  3289  014C                     i1l1890:	
  3290  014C  0852               	movf	_receive_decode$591,w
  3291  014D  296C               	goto	L1
  3292  014E                     i1l1892:	
  3293                           ;receive_decode.c: 130:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_rec
      +                          v_buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  3294                           
  3295  014E  0020               	movlb	0	; select bank0
  3296  014F  035A               	decf	receive_decode@check,w
  3297  0150  1903               	btfsc	3,2
  3298  0151  2956               	goto	i1l1896
  3299  0152  3002               	movlw	2
  3300  0153  065A               	xorwf	receive_decode@check,w
  3301  0154  1D03               	btfss	3,2
  3302  0155  28D4               	goto	i1l1854
  3303  0156                     i1l1896:	
  3304  0156  0020               	banksel	_g_data
  3305  0157  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  3306  0158  1903               	btfsc	3,2
  3307  0159  295E               	goto	i1l1900
  3308  015A  3003               	movlw	3
  3309  015B  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3310  015C  1D03               	btfss	3,2
  3311  015D  28D4               	goto	i1l1854
  3312  015E                     i1l1900:	
  3313                           
  3314                           ;receive_decode.c: 132:     {;receive_decode.c: 133:         g_data.g_time_h += (3 ==g_d
      +                          ata.g_recv_buf[CODE_P3])? 12 : 0;
  3315  015E  3003               	movlw	3
  3316  015F  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3317  0160  1903               	btfsc	3,2
  3318  0161  2966               	goto	i1l1904
  3319  0162  0020               	movlb	0	; select bank0
  3320  0163  01D4               	clrf	_receive_decode$592
  3321  0164  01D5               	clrf	_receive_decode$592+1
  3322  0165  296B               	goto	i1l1906
  3323  0166                     i1l1904:	
  3324  0166  300C               	movlw	12
  3325  0167  0020               	movlb	0	; select bank0
  3326  0168  00D4               	movwf	_receive_decode$592
  3327  0169  3000               	movlw	0
  3328  016A  00D5               	movwf	_receive_decode$592+1
  3329  016B                     i1l1906:	
  3330  016B  0854               	movf	_receive_decode$592,w
  3331  016C                     L1:	
  3332  016C  00C9               	movwf	??_receive_decode
  3333  016D  0849               	movf	??_receive_decode,w
  3334  016E  0020               	banksel	_g_data
  3335  016F  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  3336                           
  3337                           ;receive_decode.c: 141:     if(last_time_h != g_data.g_time_h || last_time_m != g_data.g
      +                          _time_m){
  3338                           
  3339                           ;receive_decode.c: 134:     }else{
  3340  0170  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3341  0171  0020               	movlb	0	; select bank0
  3342  0172  00C9               	movwf	??_receive_decode
  3343  0173  01CA               	clrf	??_receive_decode+1
  3344  0174  084F               	movf	receive_decode@last_time_h+1,w
  3345  0175  064A               	xorwf	??_receive_decode+1,w
  3346  0176  1D03               	skipz
  3347  0177  297A               	goto	u131_25
  3348  0178  084E               	movf	receive_decode@last_time_h,w
  3349  0179  0649               	xorwf	??_receive_decode,w
  3350  017A                     u131_25:	
  3351  017A  1D03               	skipz
  3352  017B  2989               	goto	i1l1916
  3353  017C  0020               	banksel	_g_data
  3354  017D  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3355  017E  0020               	movlb	0	; select bank0
  3356  017F  00C9               	movwf	??_receive_decode
  3357  0180  01CA               	clrf	??_receive_decode+1
  3358  0181  0851               	movf	receive_decode@last_time_m+1,w
  3359  0182  064A               	xorwf	??_receive_decode+1,w
  3360  0183  1D03               	skipz
  3361  0184  2987               	goto	u132_25
  3362  0185  0850               	movf	receive_decode@last_time_m,w
  3363  0186  0649               	xorwf	??_receive_decode,w
  3364  0187                     u132_25:	
  3365  0187  1903               	skipnz
  3366  0188  298C               	goto	i1l1918
  3367  0189                     i1l1916:	
  3368                           
  3369                           ;receive_decode.c: 142:         update_display();
  3370  0189  3183  236E  3180   	fcall	_update_display
  3371  018C                     i1l1918:	
  3372                           
  3373                           ;receive_decode.c: 146:     g_data.g_find_recv_start = FALSE;
  3374  018C  3000               	movlw	0
  3375  018D  0020               	banksel	_g_data
  3376  018E  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3377                           
  3378                           ;receive_decode.c: 147:     PORTCbits.RC2 = BPC_PWR_OFF;
  3379  018F  0020               	movlb	0	; select bank0
  3380  0190  150E               	bsf	14,2	;volatile
  3381                           
  3382                           ;receive_decode.c: 148:     g_data.g_start_read_data = 0;
  3383  0191  3000               	movlw	0
  3384  0192  0020               	banksel	_g_data
  3385  0193  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3386                           
  3387                           ;receive_decode.c: 149:     g_data.g_recv_count = 0;
  3388  0194  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3389  0195  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3390                           
  3391                           ;receive_decode.c: 150:     for(int i = 0;i < 20; i++){
  3392  0196  0020               	movlb	0	; select bank0
  3393  0197  01D6               	clrf	receive_decode@i_593
  3394  0198  01D7               	clrf	receive_decode@i_593+1
  3395  0199                     i1l1932:	
  3396                           
  3397                           ;receive_decode.c: 151:         g_data.g_recv_buf[i] = 5;
  3398  0199  302D               	movlw	low (_g_data+13)
  3399  019A  0020               	movlb	0	; select bank0
  3400  019B  00C9               	movwf	??_receive_decode
  3401  019C  3000               	movlw	high (_g_data+13)
  3402  019D  00CA               	movwf	??_receive_decode+1
  3403  019E  0856               	movf	receive_decode@i_593,w
  3404  019F  0749               	addwf	??_receive_decode,w
  3405  01A0  00CB               	movwf	??_receive_decode+2
  3406  01A1  0857               	movf	receive_decode@i_593+1,w
  3407  01A2  3D4A               	addwfc	??_receive_decode+1,w
  3408  01A3  00CC               	movwf	??_receive_decode+3
  3409  01A4  084B               	movf	??_receive_decode+2,w
  3410  01A5  0086               	movwf	6
  3411  01A6  084C               	movf	??_receive_decode+3,w
  3412  01A7  0087               	movwf	7
  3413  01A8  3005               	movlw	5
  3414  01A9  0081               	movwf	1
  3415                           
  3416                           ;receive_decode.c: 152:     }
  3417  01AA  3001               	movlw	1
  3418  01AB  07D6               	addwf	receive_decode@i_593,f
  3419  01AC  3000               	movlw	0
  3420  01AD  3DD7               	addwfc	receive_decode@i_593+1,f
  3421  01AE  0857               	movf	receive_decode@i_593+1,w
  3422  01AF  3A80               	xorlw	128
  3423  01B0  00C9               	movwf	??_receive_decode
  3424  01B1  3080               	movlw	128
  3425  01B2  0249               	subwf	??_receive_decode,w
  3426  01B3  1D03               	skipz
  3427  01B4  29B7               	goto	u133_25
  3428  01B5  3014               	movlw	20
  3429  01B6  0256               	subwf	receive_decode@i_593,w
  3430  01B7                     u133_25:	
  3431  01B7  1803               	btfsc	3,0
  3432  01B8  0008               	return
  3433  01B9  2999               	goto	i1l1932
  3434  01BA                     __end_of_receive_decode:	
  3435                           
  3436                           	psect	text6
  3437  036E                     __ptext6:	
  3438 ;; *************** function _update_display *****************
  3439 ;; Defined at:
  3440 ;;		line 62 in file "update_display.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;Total ram usage:        3 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    3
  3461 ;; This function calls:
  3462 ;;		_write_once
  3463 ;; This function is called by:
  3464 ;;		_receive_decode
  3465 ;;		_update_time
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _update_display
  3471  036E                     _update_display:	
  3472                           
  3473                           ;update_display.c: 73:     write_once(0xa5, 0x5a, 0xa5, 0x5a);
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  3477  036E  305A               	movlw	90
  3478  036F  00FA               	movwf	??_update_display
  3479  0370  087A               	movf	??_update_display,w
  3480  0371  00F6               	movwf	write_once@HR
  3481  0372  30A5               	movlw	165
  3482  0373  00FB               	movwf	??_update_display+1
  3483  0374  087B               	movf	??_update_display+1,w
  3484  0375  00F7               	movwf	write_once@ML
  3485  0376  305A               	movlw	90
  3486  0377  00FC               	movwf	??_update_display+2
  3487  0378  087C               	movf	??_update_display+2,w
  3488  0379  00F8               	movwf	write_once@MR
  3489  037A  30A5               	movlw	165
  3490  037B  3183  2346         	fcall	_write_once
  3491  037D  0008               	return
  3492  037E                     __end_of_update_display:	
  3493                           
  3494                           	psect	text7
  3495  0346                     __ptext7:	
  3496 ;; *************** function _write_once *****************
  3497 ;; Defined at:
  3498 ;;		line 50 in file "update_display.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  HL              1    wreg     unsigned char 
  3501 ;;  HR              1    6[COMMON] unsigned char 
  3502 ;;  ML              1    7[COMMON] unsigned char 
  3503 ;;  MR              1    8[COMMON] unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  HL              1    9[COMMON] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3515 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;Total ram usage:        4 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		_control595_delay
  3524 ;;		_write_byte
  3525 ;; This function is called by:
  3526 ;;		_update_display
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _write_once
  3532  0346                     _write_once:	
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  3536                           ;write_once@HL stored from wreg
  3537  0346  00F9               	movwf	write_once@HL
  3538                           
  3539                           ;update_display.c: 52:     write_byte(HL);
  3540  0347  0879               	movf	write_once@HL,w
  3541  0348  3183  231F  3183   	fcall	_write_byte
  3542                           
  3543                           ;update_display.c: 53:     write_byte(HR);
  3544  034B  0876               	movf	write_once@HR,w
  3545  034C  3183  231F  3183   	fcall	_write_byte
  3546                           
  3547                           ;update_display.c: 54:     write_byte(ML);
  3548  034F  0877               	movf	write_once@ML,w
  3549  0350  3183  231F  3183   	fcall	_write_byte
  3550                           
  3551                           ;update_display.c: 55:     write_byte(MR);
  3552  0353  0878               	movf	write_once@MR,w
  3553  0354  3183  231F  3183   	fcall	_write_byte
  3554                           
  3555                           ;update_display.c: 57:     LATBbits.LATB1 = PIN_HIGH;
  3556  0357  0022               	movlb	2	; select bank2
  3557  0358  148D               	bsf	13,1	;volatile
  3558                           
  3559                           ;update_display.c: 58:  control595_delay();
  3560  0359  3183  238B         	fcall	_control595_delay
  3561                           
  3562                           ;update_display.c: 59:     LATBbits.LATB1 = PIN_LOW;
  3563  035B  0022               	movlb	2	; select bank2
  3564  035C  108D               	bcf	13,1	;volatile
  3565  035D  0008               	return
  3566  035E                     __end_of_write_once:	
  3567                           
  3568                           	psect	text8
  3569  031F                     __ptext8:	
  3570 ;; *************** function _write_byte *****************
  3571 ;; Defined at:
  3572 ;;		line 38 in file "update_display.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  data            1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  data            1    4[COMMON] unsigned char 
  3577 ;;  i               1    5[COMMON] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0, pclath, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:        4 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    1
  3594 ;; This function calls:
  3595 ;;		_control595_delay
  3596 ;; This function is called by:
  3597 ;;		_write_once
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _write_byte
  3603  031F                     _write_byte:	
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3607                           ;write_byte@data stored from wreg
  3608  031F  00F4               	movwf	write_byte@data
  3609                           
  3610                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  3611  0320  01F5               	clrf	write_byte@i
  3612  0321                     i1l1478:	
  3613                           
  3614                           ;update_display.c: 41:   LATBbits.LATB5 = (data & 0x80) >> 7;
  3615  0321  0874               	movf	write_byte@data,w
  3616  0322  00F2               	movwf	??_write_byte
  3617  0323  3007               	movlw	7
  3618  0324                     u77_25:	
  3619  0324  36F2               	lsrf	??_write_byte,f
  3620  0325  0B89               	decfsz	9,f
  3621  0326  2B24               	goto	u77_25
  3622  0327  0872               	movf	??_write_byte,w
  3623  0328  3901               	andlw	1
  3624  0329  00F3               	movwf	??_write_byte+1
  3625  032A  0EF3               	swapf	??_write_byte+1,f
  3626  032B  0DF3               	rlf	??_write_byte+1,f
  3627  032C  0022               	movlb	2	; select bank2
  3628  032D  080D               	movf	13,w	;volatile
  3629  032E  0673               	xorwf	??_write_byte+1,w
  3630  032F  39DF               	andlw	-33
  3631  0330  0673               	xorwf	??_write_byte+1,w
  3632  0331  008D               	movwf	13	;volatile
  3633                           
  3634                           ;update_display.c: 42:         LATBbits.LATB0 = PIN_LOW;
  3635  0332  100D               	bcf	13,0	;volatile
  3636                           
  3637                           ;update_display.c: 43:   control595_delay();
  3638  0333  3183  238B  3183   	fcall	_control595_delay
  3639                           
  3640                           ;update_display.c: 44:         LATBbits.LATB0 = PIN_HIGH;
  3641  0336  0022               	movlb	2	; select bank2
  3642  0337  140D               	bsf	13,0	;volatile
  3643                           
  3644                           ;update_display.c: 45:   control595_delay();
  3645  0338  3183  238B  3183   	fcall	_control595_delay
  3646                           
  3647                           ;update_display.c: 46:         data <<= 1;
  3648  033B  1003               	clrc
  3649  033C  0DF4               	rlf	write_byte@data,f
  3650                           
  3651                           ;update_display.c: 47:     }
  3652  033D  3001               	movlw	1
  3653  033E  00F2               	movwf	??_write_byte
  3654  033F  0872               	movf	??_write_byte,w
  3655  0340  07F5               	addwf	write_byte@i,f
  3656  0341  3008               	movlw	8
  3657  0342  0275               	subwf	write_byte@i,w
  3658  0343  1803               	btfsc	3,0
  3659  0344  0008               	return
  3660  0345  2B21               	goto	i1l1478
  3661  0346                     __end_of_write_byte:	
  3662                           
  3663                           	psect	text9
  3664  038B                     __ptext9:	
  3665 ;; *************** function _control595_delay *****************
  3666 ;; Defined at:
  3667 ;;		line 21 in file "update_display.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  times           1    1[COMMON] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        2 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_write_byte
  3691 ;;		_write_once
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _control595_delay
  3697  038B                     _control595_delay:	
  3698                           
  3699                           ;update_display.c: 22:    u8 times = 10;
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  3703  038B  300A               	movlw	10
  3704  038C  00F0               	movwf	??_control595_delay
  3705  038D  0870               	movf	??_control595_delay,w
  3706  038E  00F1               	movwf	control595_delay@times
  3707  038F                     i1l195:	
  3708                           ;update_display.c: 26:    }
  3709                           
  3710                           ;update_display.c: 23:    while(times > 0){
  3711                           
  3712                           
  3713                           ;update_display.c: 23:    while(times > 0){
  3714  038F  0871               	movf	control595_delay@times,w
  3715  0390  1903               	btfsc	3,2
  3716  0391  0008               	return
  3717                           
  3718                           ;update_display.c: 24:     __nop();
  3719  0392  0000               	nop
  3720                           
  3721                           ;update_display.c: 25:        times--;
  3722  0393  3001               	movlw	1
  3723  0394  02F1               	subwf	control595_delay@times,f
  3724  0395  2B8F               	goto	i1l195
  3725  0396                     __end_of_control595_delay:	
  3726                           
  3727                           	psect	text10
  3728  022C                     __ptext10:	
  3729 ;; *************** function _times2number *****************
  3730 ;; Defined at:
  3731 ;;		line 14 in file "receive_decode.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  high_level_t    2    0[COMMON] unsigned short 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      unsigned char 
  3738 ;; Registers used:
  3739 ;;		wreg
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_receive_decode
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _times2number
  3760  022C                     _times2number:	
  3761                           
  3762                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _times2number: [wreg]
  3766  022C  3000               	movlw	0
  3767  022D  0271               	subwf	times2number@high_level_times+1,w
  3768  022E  3005               	movlw	5
  3769  022F  1903               	skipnz
  3770  0230  0270               	subwf	times2number@high_level_times,w
  3771  0231  1C03               	skipc
  3772  0232  2A3C               	goto	i1l1536
  3773  0233  3000               	movlw	0
  3774  0234  0271               	subwf	times2number@high_level_times+1,w
  3775  0235  300F               	movlw	15
  3776  0236  1903               	skipnz
  3777  0237  0270               	subwf	times2number@high_level_times,w
  3778  0238  1803               	skipnc
  3779  0239  2A3C               	goto	i1l1536
  3780                           
  3781                           ;receive_decode.c: 17:         return 0;
  3782  023A  3000               	movlw	0
  3783  023B  0008               	return
  3784  023C                     i1l1536:	
  3785  023C  3000               	movlw	0
  3786  023D  0271               	subwf	times2number@high_level_times+1,w
  3787  023E  300F               	movlw	15
  3788  023F  1903               	skipnz
  3789  0240  0270               	subwf	times2number@high_level_times,w
  3790  0241  1C03               	skipc
  3791  0242  2A4C               	goto	i1l1546
  3792  0243  3000               	movlw	0
  3793  0244  0271               	subwf	times2number@high_level_times+1,w
  3794  0245  3019               	movlw	25
  3795  0246  1903               	skipnz
  3796  0247  0270               	subwf	times2number@high_level_times,w
  3797  0248  1803               	skipnc
  3798  0249  2A4C               	goto	i1l1546
  3799                           
  3800                           ;receive_decode.c: 20:         return 1;
  3801  024A  3001               	movlw	1
  3802  024B  0008               	return
  3803  024C                     i1l1546:	
  3804  024C  3000               	movlw	0
  3805  024D  0271               	subwf	times2number@high_level_times+1,w
  3806  024E  3019               	movlw	25
  3807  024F  1903               	skipnz
  3808  0250  0270               	subwf	times2number@high_level_times,w
  3809  0251  1C03               	skipc
  3810  0252  2A5C               	goto	i1l1556
  3811  0253  3000               	movlw	0
  3812  0254  0271               	subwf	times2number@high_level_times+1,w
  3813  0255  3023               	movlw	35
  3814  0256  1903               	skipnz
  3815  0257  0270               	subwf	times2number@high_level_times,w
  3816  0258  1803               	skipnc
  3817  0259  2A5C               	goto	i1l1556
  3818                           
  3819                           ;receive_decode.c: 23:         return 2;
  3820  025A  3002               	movlw	2
  3821  025B  0008               	return
  3822  025C                     i1l1556:	
  3823  025C  3000               	movlw	0
  3824  025D  0271               	subwf	times2number@high_level_times+1,w
  3825  025E  3023               	movlw	35
  3826  025F  1903               	skipnz
  3827  0260  0270               	subwf	times2number@high_level_times,w
  3828  0261  1C03               	skipc
  3829  0262  2A6C               	goto	i1l1566
  3830  0263  3000               	movlw	0
  3831  0264  0271               	subwf	times2number@high_level_times+1,w
  3832  0265  302D               	movlw	45
  3833  0266  1903               	skipnz
  3834  0267  0270               	subwf	times2number@high_level_times,w
  3835  0268  1803               	skipnc
  3836  0269  2A6C               	goto	i1l1566
  3837                           
  3838                           ;receive_decode.c: 26:         return 3;
  3839  026A  3003               	movlw	3
  3840  026B  0008               	return
  3841  026C                     i1l1566:	
  3842  026C  3000               	movlw	0
  3843  026D  0271               	subwf	times2number@high_level_times+1,w
  3844  026E  302D               	movlw	45
  3845  026F  1903               	skipnz
  3846  0270  0270               	subwf	times2number@high_level_times,w
  3847  0271  1C03               	skipc
  3848  0272  2A75               	goto	i1l1574
  3849                           
  3850                           ;receive_decode.c: 29:         return 4;
  3851  0273  3004               	movlw	4
  3852  0274  0008               	return
  3853  0275                     i1l1574:	
  3854                           
  3855                           ;receive_decode.c: 32:         return 5;
  3856  0275  3005               	movlw	5
  3857  0276  0008               	return
  3858  0277                     __end_of_times2number:	
  3859                           
  3860                           	psect	text11
  3861  02B8                     __ptext11:	
  3862 ;; *************** function _test_get_number *****************
  3863 ;; Defined at:
  3864 ;;		line 37 in file "receive_decode.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  get_num         1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  get_num         1    0[COMMON] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;Total ram usage:        1 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_receive_decode
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _test_get_number
  3893  02B8                     _test_get_number:	
  3894                           
  3895                           ;incstack = 0
  3896                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  3897                           ;test_get_number@get_num stored from wreg
  3898  02B8  00F0               	movwf	test_get_number@get_num
  3899                           
  3900                           ;receive_decode.c: 38:     if(get_num == 0){
  3901  02B9  0870               	movf	test_get_number@get_num,w
  3902  02BA  1D03               	btfss	3,2
  3903  02BB  2AC2               	goto	i1l1582
  3904                           
  3905                           ;receive_decode.c: 39:         LATAbits.LATA2 = 1;
  3906  02BC  0022               	movlb	2	; select bank2
  3907  02BD  150C               	bsf	12,2	;volatile
  3908                           
  3909                           ;receive_decode.c: 40:         LATAbits.LATA3 = 0;
  3910  02BE  118C               	bcf	12,3	;volatile
  3911                           
  3912                           ;receive_decode.c: 41:         LATAbits.LATA4 = 0;
  3913  02BF  120C               	bcf	12,4	;volatile
  3914                           
  3915                           ;receive_decode.c: 42:         LATAbits.LATA5 = 0;
  3916  02C0  128C               	bcf	12,5	;volatile
  3917                           
  3918                           ;receive_decode.c: 43:     }else if(get_num == 1){
  3919  02C1  0008               	return
  3920  02C2                     i1l1582:	
  3921  02C2  0370               	decf	test_get_number@get_num,w
  3922  02C3  1D03               	btfss	3,2
  3923  02C4  2ACB               	goto	i1l1586
  3924                           
  3925                           ;receive_decode.c: 44:         LATAbits.LATA2 = 0;
  3926  02C5  0022               	movlb	2	; select bank2
  3927  02C6  110C               	bcf	12,2	;volatile
  3928                           
  3929                           ;receive_decode.c: 45:         LATAbits.LATA3 = 1;
  3930  02C7  158C               	bsf	12,3	;volatile
  3931                           
  3932                           ;receive_decode.c: 46:         LATAbits.LATA4 = 0;
  3933  02C8  120C               	bcf	12,4	;volatile
  3934                           
  3935                           ;receive_decode.c: 47:         LATAbits.LATA5 = 0;
  3936  02C9  128C               	bcf	12,5	;volatile
  3937                           
  3938                           ;receive_decode.c: 48:     }else if(get_num == 2){
  3939  02CA  0008               	return
  3940  02CB                     i1l1586:	
  3941  02CB  3002               	movlw	2
  3942  02CC  0670               	xorwf	test_get_number@get_num,w
  3943  02CD  1D03               	btfss	3,2
  3944  02CE  2AD5               	goto	i1l1590
  3945                           
  3946                           ;receive_decode.c: 49:         LATAbits.LATA2 = 0;
  3947  02CF  0022               	movlb	2	; select bank2
  3948  02D0  110C               	bcf	12,2	;volatile
  3949                           
  3950                           ;receive_decode.c: 50:         LATAbits.LATA3 = 0;
  3951  02D1  118C               	bcf	12,3	;volatile
  3952                           
  3953                           ;receive_decode.c: 51:         LATAbits.LATA4 = 1;
  3954  02D2  160C               	bsf	12,4	;volatile
  3955                           
  3956                           ;receive_decode.c: 52:         LATAbits.LATA5 = 0;
  3957  02D3  128C               	bcf	12,5	;volatile
  3958                           
  3959                           ;receive_decode.c: 53:     }else if(get_num == 3){
  3960  02D4  0008               	return
  3961  02D5                     i1l1590:	
  3962  02D5  3003               	movlw	3
  3963  02D6  0670               	xorwf	test_get_number@get_num,w
  3964  02D7  1D03               	btfss	3,2
  3965  02D8  2ADF               	goto	i1l1594
  3966                           
  3967                           ;receive_decode.c: 54:         LATAbits.LATA2 = 0;
  3968  02D9  0022               	movlb	2	; select bank2
  3969  02DA  110C               	bcf	12,2	;volatile
  3970                           
  3971                           ;receive_decode.c: 55:         LATAbits.LATA3 = 0;
  3972  02DB  118C               	bcf	12,3	;volatile
  3973                           
  3974                           ;receive_decode.c: 56:         LATAbits.LATA4 = 0;
  3975  02DC  120C               	bcf	12,4	;volatile
  3976                           
  3977                           ;receive_decode.c: 57:         LATAbits.LATA5 = 1;
  3978  02DD  168C               	bsf	12,5	;volatile
  3979                           
  3980                           ;receive_decode.c: 58:     }else if(get_num == 4){
  3981  02DE  0008               	return
  3982  02DF                     i1l1594:	
  3983  02DF  3004               	movlw	4
  3984  02E0  0670               	xorwf	test_get_number@get_num,w
  3985  02E1  1D03               	btfss	3,2
  3986  02E2  2AE9               	goto	i1l1598
  3987                           
  3988                           ;receive_decode.c: 59:         LATAbits.LATA2 = 1;
  3989  02E3  0022               	movlb	2	; select bank2
  3990  02E4  150C               	bsf	12,2	;volatile
  3991                           
  3992                           ;receive_decode.c: 60:         LATAbits.LATA3 = 1;
  3993  02E5  158C               	bsf	12,3	;volatile
  3994                           
  3995                           ;receive_decode.c: 61:         LATAbits.LATA4 = 1;
  3996  02E6  160C               	bsf	12,4	;volatile
  3997                           
  3998                           ;receive_decode.c: 62:         LATAbits.LATA5 = 1;
  3999  02E7  168C               	bsf	12,5	;volatile
  4000                           
  4001                           ;receive_decode.c: 63:     }else if(get_num == 5){
  4002  02E8  0008               	return
  4003  02E9                     i1l1598:	
  4004  02E9  3005               	movlw	5
  4005  02EA  0670               	xorwf	test_get_number@get_num,w
  4006  02EB  1D03               	btfss	3,2
  4007  02EC  0008               	return
  4008                           
  4009                           ;receive_decode.c: 64:         LATAbits.LATA2 = 0;
  4010  02ED  0022               	movlb	2	; select bank2
  4011  02EE  110C               	bcf	12,2	;volatile
  4012                           
  4013                           ;receive_decode.c: 65:         LATAbits.LATA3 = 0;
  4014  02EF  118C               	bcf	12,3	;volatile
  4015                           
  4016                           ;receive_decode.c: 66:         LATAbits.LATA4 = 0;
  4017  02F0  120C               	bcf	12,4	;volatile
  4018                           
  4019                           ;receive_decode.c: 67:         LATAbits.LATA5 = 0;
  4020  02F1  128C               	bcf	12,5	;volatile
  4021  02F2  0008               	return
  4022  02F3                     __end_of_test_get_number:	
  4023                           
  4024                           	psect	text12
  4025  02F3                     __ptext12:	
  4026 ;; *************** function ___lwmod *****************
  4027 ;; Defined at:
  4028 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  divisor         2    0[COMMON] unsigned int 
  4031 ;;  dividend        2    2[COMMON] unsigned int 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  counter         1    5[COMMON] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  2    0[COMMON] unsigned int 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;Total ram usage:        6 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_ISR
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function ___lwmod
  4058  02F3                     ___lwmod:	
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4062  02F3  0870               	movf	___lwmod@divisor,w
  4063  02F4  0471               	iorwf	___lwmod@divisor+1,w
  4064  02F5  1903               	btfsc	3,2
  4065  02F6  2B1A               	goto	i1l1968
  4066  02F7  01F5               	clrf	___lwmod@counter
  4067  02F8  0AF5               	incf	___lwmod@counter,f
  4068  02F9                     i1l1958:	
  4069  02F9  1BF1               	btfsc	___lwmod@divisor+1,7
  4070  02FA  2B05               	goto	i1l1960
  4071  02FB  3001               	movlw	1
  4072  02FC                     u136_25:	
  4073  02FC  35F0               	lslf	___lwmod@divisor,f
  4074  02FD  0DF1               	rlf	___lwmod@divisor+1,f
  4075  02FE  0B89               	decfsz	9,f
  4076  02FF  2AFC               	goto	u136_25
  4077  0300  3001               	movlw	1
  4078  0301  00F4               	movwf	??___lwmod
  4079  0302  0874               	movf	??___lwmod,w
  4080  0303  07F5               	addwf	___lwmod@counter,f
  4081  0304  2AF9               	goto	i1l1958
  4082  0305                     i1l1960:	
  4083  0305  0871               	movf	___lwmod@divisor+1,w
  4084  0306  0273               	subwf	___lwmod@dividend+1,w
  4085  0307  1D03               	skipz
  4086  0308  2B0B               	goto	u138_25
  4087  0309  0870               	movf	___lwmod@divisor,w
  4088  030A  0272               	subwf	___lwmod@dividend,w
  4089  030B                     u138_25:	
  4090  030B  1C03               	skipc
  4091  030C  2B11               	goto	i1l1964
  4092  030D  0870               	movf	___lwmod@divisor,w
  4093  030E  02F2               	subwf	___lwmod@dividend,f
  4094  030F  0871               	movf	___lwmod@divisor+1,w
  4095  0310  3BF3               	subwfb	___lwmod@dividend+1,f
  4096  0311                     i1l1964:	
  4097  0311  3001               	movlw	1
  4098  0312                     u139_25:	
  4099  0312  36F1               	lsrf	___lwmod@divisor+1,f
  4100  0313  0CF0               	rrf	___lwmod@divisor,f
  4101  0314  0B89               	decfsz	9,f
  4102  0315  2B12               	goto	u139_25
  4103  0316  3001               	movlw	1
  4104  0317  02F5               	subwf	___lwmod@counter,f
  4105  0318  1D03               	btfss	3,2
  4106  0319  2B05               	goto	i1l1960
  4107  031A                     i1l1968:	
  4108  031A  0873               	movf	___lwmod@dividend+1,w
  4109  031B  00F1               	movwf	?___lwmod+1
  4110  031C  0872               	movf	___lwmod@dividend,w
  4111  031D  00F0               	movwf	?___lwmod
  4112  031E  0008               	return
  4113  031F                     __end_of___lwmod:	
  4114  007E                     btemp	set	126	;btemp
  4115  007E                     int$flags	set	126
  4116  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      61
    BANK1            80      3       3
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    _main->_init_env

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      99
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      99
                                              0 BANK1      3     3      0
                           _IIC_Init
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    1992
                                             18 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             13 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      18    18      0    1248
                                              0 BANK0     18    18      0
                    _test_get_number
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       3     3      0     433
                                             10 COMMON     3     3      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _test_get_number
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      3D       5       76.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 31 17:49:48 2019

             ?_receive_decode 0070                   _update_time 0277                   __CFG_CP$OFF 0000  
                          l90 039F                _update_display 036E            _receive_decode$591 0052  
          _receive_decode$592 0054                   __CFG_LVP$ON 0000             ?_control595_delay 0070  
                         _GIE 005F                           _RC4 0074                  __CFG_CPD$OFF 0000  
                         _ISR 0004                  __CFG_BORV$LO 0000            ??_control595_delay 0070  
                         wreg 0009                  __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000  
                        ?_ISR 0070                          l2114 0207                          _LATA 010C  
                        _LATB 010D                          _LATC 010E                          u1515 021D  
                        _ENUM 0048                          i1l81 001F                          i1l76 001A  
                        i1l77 005D                          i1l78 0022                          _TMR0 0015  
                        _WPUA 020C                          _WPUB 020D                          _WPUC 020E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _Temp 0041  
                        _main 039C                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 005F                 __CFG_MCLRE$ON 0000                         ??_ISR 005B  
      __end_of_update_display 037E              __end_of_IIC_Init 038B                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATC3 0873  
                       _LATC4 0874                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l133 0074                         i1l146 013C  
             __end_of___lwmod 031F                         i1l195 038F                         _TRISA 008C  
                       _TRISB 008D                         _TRISC 008E                         u77_25 0324  
                       _WPUC3 1073                         _WPUC4 1074                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0061  
                __end_of_main 03A0               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 00A3                        i1l2000 002E                        i1l2010 0059  
                      u120_25 0109                        i1l1536 023C                        i1l1546 024C  
                      i1l1556 025C                        i1l1900 015E                        i1l1590 02D5  
                      i1l1582 02C2                        i1l1574 0275                        i1l1566 026C  
                      i1l1478 0321                        i1l1904 0166                        i1l1816 02B5  
                      i1l1594 02DF                        i1l1586 02CB                        i1l1906 016B  
                      i1l1932 0199                        i1l1916 0189                        i1l1860 00DC  
                      i1l1598 02E9                        i1l1918 018C                        i1l1854 00D4  
                      i1l1838 00A4                        i1l1960 0305                        i1l1792 0283  
                      i1l1890 014C                        i1l1874 011C                        i1l1964 0311  
                      i1l1892 014E                        i1l1796 0289                        u131_25 017A  
                      i1l1958 02F9                        i1l1968 031A                        i1l1896 0156  
                      i1l1888 0147                        u132_25 0187                        u133_25 01B7  
                      u118_25 00F2                        u119_25 0101                        u136_25 02FC  
                      u138_25 030B                        u139_25 0312                        _TRISC3 0473  
                      _TRISC4 0474                __CFG_PWRTE$OFF 0000                        _g_data 0020  
              __CFG_STVREN$ON 0000                     ??___lwmod 0074              __end_of_init_env 022C  
                      _temp_h 0046                        _temp_l 0045              __end_of_segmcode 036E  
times2number@high_level_times 0070      __size_of_test_get_number 003B       __end_of__initialization 0068  
                   ?_IIC_Init 0070              ??_receive_decode 0049                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                _OPTION_REGbits 0095  
                  __pbssBANK0 0020                    ??_IIC_Init 00A0     __size_of_control595_delay 000B  
             __CFG_VCAPEN$OFF 0000                    __pmaintext 039C                    __pintentry 0004  
              ISR@history_key 0047                       _ODCONC3 1473                       _ODCONC4 1474  
         receive_decode@i_593 0056                     ?_init_env 0070           receive_decode@check 005A  
            ??_update_display 007A             ??_test_get_number 0070                       ___lwmod 02F3  
                     __ptext1 01BA                       __ptext2 037E                       __ptext4 0277  
                     __ptext5 006C                       __ptext6 036E                       __ptext7 0346  
                     __ptext8 031F                       __ptext9 038B                  __size_of_ISR 005B  
               ?_times2number 0070                     _IOCCFbits 0399                     _IOCCPbits 0397  
                     clrloop0 0397          end_of_initialization 0068                    ??_init_env 00A0  
        __size_of_update_time 0041                     _PORTAbits 000C                     _PORTCbits 000E  
              ??_times2number 0072                     _TRISCbits 008E              _control595_delay 038B  
           __size_of_IIC_Init 000D                  write_once@HL 0079                  write_once@HR 0076  
                write_once@ML 0077                  write_once@MR 0078                    _write_byte 031F  
                  _write_once 0346      receive_decode@read_value 0059           start_initialization 0061  
                 __end_of_ISR 005F               receive_decode@i 0058                     ___latbits 0002  
               __pcstackBANK0 0049                 __pcstackBANK1 00A0               _test_get_number 02B8  
           __size_of_init_env 0072     receive_decode@last_time_h 004E     receive_decode@last_time_m 0050  
        __end_of_times2number 0277                      ?___lwmod 0070       __size_of_receive_decode 014E  
                 ?_write_byte 0070                   ?_write_once 0076               ISR@key_time_cnt 0043  
                    _IIC_Init 037E                      _LATAbits 010C                      _LATBbits 010D  
                   clear_ram0 0396      __end_of_control595_delay 0396       __end_of_test_get_number 02F3  
                    _WPUCbits 020E                   write_byte@i 0075           __size_of_write_byte 0027  
         __size_of_write_once 0018        test_get_number@get_num 0070                 ??_update_time 007D  
                   init_env@i 00A1              __size_of___lwmod 002C       __size_of_update_display 0010  
                    __ptext10 022C                      __ptext11 02B8                      __ptext12 02F3  
       __size_of_times2number 004B                      _init_env 01BA                 __size_of_main 0004  
                    _segmcode 035E                      int$flags 007E                _receive_decode 006C  
         __end_of_update_time 02B8              ?_test_get_number 0070                    _INTCONbits 000B  
                _times2number 022C                      intlevel1 0000              ___lwmod@dividend 0072  
           __CFG_CLKOUTEN$OFF 0000                    _OSCCONbits 0099        __end_of_receive_decode 01BA  
                ??_write_byte 0072                  ??_write_once 0079                 __pstringtext1 035E  
             ___lwmod@divisor 0070               ___lwmod@counter 0075            __end_of_write_byte 0346  
          __end_of_write_once 035E  

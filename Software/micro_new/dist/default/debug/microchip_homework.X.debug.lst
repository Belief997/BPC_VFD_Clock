

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Mar 17 22:24:11 2019

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0090                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  0111                     	;# 
    77  0112                     	;# 
    78  0113                     	;# 
    79  0114                     	;# 
    80  0115                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  0118                     	;# 
    84  0119                     	;# 
    85  011A                     	;# 
    86  011B                     	;# 
    87  011C                     	;# 
    88  011D                     	;# 
    89  011D                     	;# 
    90  011D                     	;# 
    91  011E                     	;# 
    92  011F                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  0191                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0194                     	;# 
   102  0195                     	;# 
   103  0196                     	;# 
   104  0197                     	;# 
   105  0199                     	;# 
   106  0199                     	;# 
   107  0199                     	;# 
   108  019A                     	;# 
   109  019A                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019D                     	;# 
   121  019D                     	;# 
   122  019E                     	;# 
   123  019E                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  019F                     	;# 
   127  019F                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  020E                     	;# 
   133  0210                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0217                     	;# 
   150  028C                     	;# 
   151  028D                     	;# 
   152  028E                     	;# 
   153  0291                     	;# 
   154  0291                     	;# 
   155  0292                     	;# 
   156  0293                     	;# 
   157  0298                     	;# 
   158  0298                     	;# 
   159  0299                     	;# 
   160  029A                     	;# 
   161  030C                     	;# 
   162  030D                     	;# 
   163  030E                     	;# 
   164  0311                     	;# 
   165  0311                     	;# 
   166  0312                     	;# 
   167  0313                     	;# 
   168  038C                     	;# 
   169  038D                     	;# 
   170  038E                     	;# 
   171  0390                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  0394                     	;# 
   176  0395                     	;# 
   177  0396                     	;# 
   178  0397                     	;# 
   179  0398                     	;# 
   180  0399                     	;# 
   181  039D                     	;# 
   182  039E                     	;# 
   183  039F                     	;# 
   184  0511                     	;# 
   185  0513                     	;# 
   186  051A                     	;# 
   187  0811                     	;# 
   188  0812                     	;# 
   189  0813                     	;# 
   190  0814                     	;# 
   191  0815                     	;# 
   192  0816                     	;# 
   193  0817                     	;# 
   194  0818                     	;# 
   195  0819                     	;# 
   196  081A                     	;# 
   197  081B                     	;# 
   198  081C                     	;# 
   199  081D                     	;# 
   200  081E                     	;# 
   201  081F                     	;# 
   202  0820                     	;# 
   203  0821                     	;# 
   204  0821                     	;# 
   205  0822                     	;# 
   206  0823                     	;# 
   207  0823                     	;# 
   208  0824                     	;# 
   209  0825                     	;# 
   210  0825                     	;# 
   211  0826                     	;# 
   212  0827                     	;# 
   213  0827                     	;# 
   214  0828                     	;# 
   215  0829                     	;# 
   216  082A                     	;# 
   217  082B                     	;# 
   218  082C                     	;# 
   219  082D                     	;# 
   220  082E                     	;# 
   221  082F                     	;# 
   222  0831                     	;# 
   223  0832                     	;# 
   224  0833                     	;# 
   225  0834                     	;# 
   226  0835                     	;# 
   227  0836                     	;# 
   228  0837                     	;# 
   229  0838                     	;# 
   230  0839                     	;# 
   231  083A                     	;# 
   232  083B                     	;# 
   233  083C                     	;# 
   234  083D                     	;# 
   235  083E                     	;# 
   236  083F                     	;# 
   237  0840                     	;# 
   238  0841                     	;# 
   239  0841                     	;# 
   240  0842                     	;# 
   241  0843                     	;# 
   242  0843                     	;# 
   243  0844                     	;# 
   244  0845                     	;# 
   245  0845                     	;# 
   246  0846                     	;# 
   247  0847                     	;# 
   248  0847                     	;# 
   249  0848                     	;# 
   250  0849                     	;# 
   251  084A                     	;# 
   252  084B                     	;# 
   253  084C                     	;# 
   254  084D                     	;# 
   255  084E                     	;# 
   256  084F                     	;# 
   257  0851                     	;# 
   258  0852                     	;# 
   259  0853                     	;# 
   260  0854                     	;# 
   261  0855                     	;# 
   262  0856                     	;# 
   263  0857                     	;# 
   264  0858                     	;# 
   265  0859                     	;# 
   266  085A                     	;# 
   267  085B                     	;# 
   268  085C                     	;# 
   269  085D                     	;# 
   270  085E                     	;# 
   271  085F                     	;# 
   272  0860                     	;# 
   273  0861                     	;# 
   274  0861                     	;# 
   275  0862                     	;# 
   276  0863                     	;# 
   277  0863                     	;# 
   278  0864                     	;# 
   279  0865                     	;# 
   280  0865                     	;# 
   281  0866                     	;# 
   282  0867                     	;# 
   283  0867                     	;# 
   284  0868                     	;# 
   285  0869                     	;# 
   286  086A                     	;# 
   287  086B                     	;# 
   288  086C                     	;# 
   289  086D                     	;# 
   290  086E                     	;# 
   291  086F                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  0111                     	;# 
   356  0112                     	;# 
   357  0113                     	;# 
   358  0114                     	;# 
   359  0115                     	;# 
   360  0116                     	;# 
   361  0117                     	;# 
   362  0118                     	;# 
   363  0119                     	;# 
   364  011A                     	;# 
   365  011B                     	;# 
   366  011C                     	;# 
   367  011D                     	;# 
   368  011D                     	;# 
   369  011D                     	;# 
   370  011E                     	;# 
   371  011F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0191                     	;# 
   375  0191                     	;# 
   376  0192                     	;# 
   377  0193                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0194                     	;# 
   381  0195                     	;# 
   382  0196                     	;# 
   383  0197                     	;# 
   384  0199                     	;# 
   385  0199                     	;# 
   386  0199                     	;# 
   387  019A                     	;# 
   388  019A                     	;# 
   389  019A                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019C                     	;# 
   396  019C                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019D                     	;# 
   400  019D                     	;# 
   401  019E                     	;# 
   402  019E                     	;# 
   403  019E                     	;# 
   404  019F                     	;# 
   405  019F                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  019F                     	;# 
   409  020C                     	;# 
   410  020D                     	;# 
   411  020E                     	;# 
   412  0210                     	;# 
   413  0211                     	;# 
   414  0211                     	;# 
   415  0212                     	;# 
   416  0212                     	;# 
   417  0213                     	;# 
   418  0213                     	;# 
   419  0214                     	;# 
   420  0214                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  028C                     	;# 
   430  028D                     	;# 
   431  028E                     	;# 
   432  0291                     	;# 
   433  0291                     	;# 
   434  0292                     	;# 
   435  0293                     	;# 
   436  0298                     	;# 
   437  0298                     	;# 
   438  0299                     	;# 
   439  029A                     	;# 
   440  030C                     	;# 
   441  030D                     	;# 
   442  030E                     	;# 
   443  0311                     	;# 
   444  0311                     	;# 
   445  0312                     	;# 
   446  0313                     	;# 
   447  038C                     	;# 
   448  038D                     	;# 
   449  038E                     	;# 
   450  0390                     	;# 
   451  0391                     	;# 
   452  0392                     	;# 
   453  0393                     	;# 
   454  0394                     	;# 
   455  0395                     	;# 
   456  0396                     	;# 
   457  0397                     	;# 
   458  0398                     	;# 
   459  0399                     	;# 
   460  039D                     	;# 
   461  039E                     	;# 
   462  039F                     	;# 
   463  0511                     	;# 
   464  0513                     	;# 
   465  051A                     	;# 
   466  0811                     	;# 
   467  0812                     	;# 
   468  0813                     	;# 
   469  0814                     	;# 
   470  0815                     	;# 
   471  0816                     	;# 
   472  0817                     	;# 
   473  0818                     	;# 
   474  0819                     	;# 
   475  081A                     	;# 
   476  081B                     	;# 
   477  081C                     	;# 
   478  081D                     	;# 
   479  081E                     	;# 
   480  081F                     	;# 
   481  0820                     	;# 
   482  0821                     	;# 
   483  0821                     	;# 
   484  0822                     	;# 
   485  0823                     	;# 
   486  0823                     	;# 
   487  0824                     	;# 
   488  0825                     	;# 
   489  0825                     	;# 
   490  0826                     	;# 
   491  0827                     	;# 
   492  0827                     	;# 
   493  0828                     	;# 
   494  0829                     	;# 
   495  082A                     	;# 
   496  082B                     	;# 
   497  082C                     	;# 
   498  082D                     	;# 
   499  082E                     	;# 
   500  082F                     	;# 
   501  0831                     	;# 
   502  0832                     	;# 
   503  0833                     	;# 
   504  0834                     	;# 
   505  0835                     	;# 
   506  0836                     	;# 
   507  0837                     	;# 
   508  0838                     	;# 
   509  0839                     	;# 
   510  083A                     	;# 
   511  083B                     	;# 
   512  083C                     	;# 
   513  083D                     	;# 
   514  083E                     	;# 
   515  083F                     	;# 
   516  0840                     	;# 
   517  0841                     	;# 
   518  0841                     	;# 
   519  0842                     	;# 
   520  0843                     	;# 
   521  0843                     	;# 
   522  0844                     	;# 
   523  0845                     	;# 
   524  0845                     	;# 
   525  0846                     	;# 
   526  0847                     	;# 
   527  0847                     	;# 
   528  0848                     	;# 
   529  0849                     	;# 
   530  084A                     	;# 
   531  084B                     	;# 
   532  084C                     	;# 
   533  084D                     	;# 
   534  084E                     	;# 
   535  084F                     	;# 
   536  0851                     	;# 
   537  0852                     	;# 
   538  0853                     	;# 
   539  0854                     	;# 
   540  0855                     	;# 
   541  0856                     	;# 
   542  0857                     	;# 
   543  0858                     	;# 
   544  0859                     	;# 
   545  085A                     	;# 
   546  085B                     	;# 
   547  085C                     	;# 
   548  085D                     	;# 
   549  085E                     	;# 
   550  085F                     	;# 
   551  0860                     	;# 
   552  0861                     	;# 
   553  0861                     	;# 
   554  0862                     	;# 
   555  0863                     	;# 
   556  0863                     	;# 
   557  0864                     	;# 
   558  0865                     	;# 
   559  0865                     	;# 
   560  0866                     	;# 
   561  0867                     	;# 
   562  0867                     	;# 
   563  0868                     	;# 
   564  0869                     	;# 
   565  086A                     	;# 
   566  086B                     	;# 
   567  086C                     	;# 
   568  086D                     	;# 
   569  086E                     	;# 
   570  086F                     	;# 
   571  0FE4                     	;# 
   572  0FE5                     	;# 
   573  0FE6                     	;# 
   574  0FE7                     	;# 
   575  0FE8                     	;# 
   576  0FE9                     	;# 
   577  0FEA                     	;# 
   578  0FEB                     	;# 
   579  0FED                     	;# 
   580  0FEE                     	;# 
   581  0FEF                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  000D                     	;# 
   596  000E                     	;# 
   597  0010                     	;# 
   598  0011                     	;# 
   599  0012                     	;# 
   600  0013                     	;# 
   601  0014                     	;# 
   602  0015                     	;# 
   603  0016                     	;# 
   604  0016                     	;# 
   605  0017                     	;# 
   606  0018                     	;# 
   607  0019                     	;# 
   608  001A                     	;# 
   609  001B                     	;# 
   610  001C                     	;# 
   611  008C                     	;# 
   612  008D                     	;# 
   613  008E                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011C                     	;# 
   646  011D                     	;# 
   647  011D                     	;# 
   648  011D                     	;# 
   649  011E                     	;# 
   650  011F                     	;# 
   651  018C                     	;# 
   652  018D                     	;# 
   653  0191                     	;# 
   654  0191                     	;# 
   655  0192                     	;# 
   656  0193                     	;# 
   657  0193                     	;# 
   658  0193                     	;# 
   659  0194                     	;# 
   660  0195                     	;# 
   661  0196                     	;# 
   662  0197                     	;# 
   663  0199                     	;# 
   664  0199                     	;# 
   665  0199                     	;# 
   666  019A                     	;# 
   667  019A                     	;# 
   668  019A                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019C                     	;# 
   675  019C                     	;# 
   676  019C                     	;# 
   677  019D                     	;# 
   678  019D                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019E                     	;# 
   682  019E                     	;# 
   683  019F                     	;# 
   684  019F                     	;# 
   685  019F                     	;# 
   686  019F                     	;# 
   687  019F                     	;# 
   688  020C                     	;# 
   689  020D                     	;# 
   690  020E                     	;# 
   691  0210                     	;# 
   692  0211                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0212                     	;# 
   696  0213                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0215                     	;# 
   703  0215                     	;# 
   704  0216                     	;# 
   705  0216                     	;# 
   706  0217                     	;# 
   707  0217                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028E                     	;# 
   711  0291                     	;# 
   712  0291                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0298                     	;# 
   716  0298                     	;# 
   717  0299                     	;# 
   718  029A                     	;# 
   719  030C                     	;# 
   720  030D                     	;# 
   721  030E                     	;# 
   722  0311                     	;# 
   723  0311                     	;# 
   724  0312                     	;# 
   725  0313                     	;# 
   726  038C                     	;# 
   727  038D                     	;# 
   728  038E                     	;# 
   729  0390                     	;# 
   730  0391                     	;# 
   731  0392                     	;# 
   732  0393                     	;# 
   733  0394                     	;# 
   734  0395                     	;# 
   735  0396                     	;# 
   736  0397                     	;# 
   737  0398                     	;# 
   738  0399                     	;# 
   739  039D                     	;# 
   740  039E                     	;# 
   741  039F                     	;# 
   742  0511                     	;# 
   743  0513                     	;# 
   744  051A                     	;# 
   745  0811                     	;# 
   746  0812                     	;# 
   747  0813                     	;# 
   748  0814                     	;# 
   749  0815                     	;# 
   750  0816                     	;# 
   751  0817                     	;# 
   752  0818                     	;# 
   753  0819                     	;# 
   754  081A                     	;# 
   755  081B                     	;# 
   756  081C                     	;# 
   757  081D                     	;# 
   758  081E                     	;# 
   759  081F                     	;# 
   760  0820                     	;# 
   761  0821                     	;# 
   762  0821                     	;# 
   763  0822                     	;# 
   764  0823                     	;# 
   765  0823                     	;# 
   766  0824                     	;# 
   767  0825                     	;# 
   768  0825                     	;# 
   769  0826                     	;# 
   770  0827                     	;# 
   771  0827                     	;# 
   772  0828                     	;# 
   773  0829                     	;# 
   774  082A                     	;# 
   775  082B                     	;# 
   776  082C                     	;# 
   777  082D                     	;# 
   778  082E                     	;# 
   779  082F                     	;# 
   780  0831                     	;# 
   781  0832                     	;# 
   782  0833                     	;# 
   783  0834                     	;# 
   784  0835                     	;# 
   785  0836                     	;# 
   786  0837                     	;# 
   787  0838                     	;# 
   788  0839                     	;# 
   789  083A                     	;# 
   790  083B                     	;# 
   791  083C                     	;# 
   792  083D                     	;# 
   793  083E                     	;# 
   794  083F                     	;# 
   795  0840                     	;# 
   796  0841                     	;# 
   797  0841                     	;# 
   798  0842                     	;# 
   799  0843                     	;# 
   800  0843                     	;# 
   801  0844                     	;# 
   802  0845                     	;# 
   803  0845                     	;# 
   804  0846                     	;# 
   805  0847                     	;# 
   806  0847                     	;# 
   807  0848                     	;# 
   808  0849                     	;# 
   809  084A                     	;# 
   810  084B                     	;# 
   811  084C                     	;# 
   812  084D                     	;# 
   813  084E                     	;# 
   814  084F                     	;# 
   815  0851                     	;# 
   816  0852                     	;# 
   817  0853                     	;# 
   818  0854                     	;# 
   819  0855                     	;# 
   820  0856                     	;# 
   821  0857                     	;# 
   822  0858                     	;# 
   823  0859                     	;# 
   824  085A                     	;# 
   825  085B                     	;# 
   826  085C                     	;# 
   827  085D                     	;# 
   828  085E                     	;# 
   829  085F                     	;# 
   830  0860                     	;# 
   831  0861                     	;# 
   832  0861                     	;# 
   833  0862                     	;# 
   834  0863                     	;# 
   835  0863                     	;# 
   836  0864                     	;# 
   837  0865                     	;# 
   838  0865                     	;# 
   839  0866                     	;# 
   840  0867                     	;# 
   841  0867                     	;# 
   842  0868                     	;# 
   843  0869                     	;# 
   844  086A                     	;# 
   845  086B                     	;# 
   846  086C                     	;# 
   847  086D                     	;# 
   848  086E                     	;# 
   849  086F                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0013                     	;# 
   880  0014                     	;# 
   881  0015                     	;# 
   882  0016                     	;# 
   883  0016                     	;# 
   884  0017                     	;# 
   885  0018                     	;# 
   886  0019                     	;# 
   887  001A                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  008C                     	;# 
   891  008D                     	;# 
   892  008E                     	;# 
   893  0090                     	;# 
   894  0091                     	;# 
   895  0092                     	;# 
   896  0093                     	;# 
   897  0094                     	;# 
   898  0095                     	;# 
   899  0096                     	;# 
   900  0097                     	;# 
   901  0098                     	;# 
   902  0099                     	;# 
   903  009A                     	;# 
   904  009B                     	;# 
   905  009B                     	;# 
   906  009C                     	;# 
   907  009D                     	;# 
   908  009E                     	;# 
   909  009F                     	;# 
   910  010C                     	;# 
   911  010D                     	;# 
   912  010E                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011C                     	;# 
   925  011D                     	;# 
   926  011D                     	;# 
   927  011D                     	;# 
   928  011E                     	;# 
   929  011F                     	;# 
   930  018C                     	;# 
   931  018D                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0197                     	;# 
   942  0199                     	;# 
   943  0199                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019A                     	;# 
   947  019A                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019D                     	;# 
   958  019D                     	;# 
   959  019E                     	;# 
   960  019E                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  019F                     	;# 
   967  020C                     	;# 
   968  020D                     	;# 
   969  020E                     	;# 
   970  0210                     	;# 
   971  0211                     	;# 
   972  0211                     	;# 
   973  0212                     	;# 
   974  0212                     	;# 
   975  0213                     	;# 
   976  0213                     	;# 
   977  0214                     	;# 
   978  0214                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0216                     	;# 
   984  0216                     	;# 
   985  0217                     	;# 
   986  0217                     	;# 
   987  028C                     	;# 
   988  028D                     	;# 
   989  028E                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0298                     	;# 
   995  0298                     	;# 
   996  0299                     	;# 
   997  029A                     	;# 
   998  030C                     	;# 
   999  030D                     	;# 
  1000  030E                     	;# 
  1001  0311                     	;# 
  1002  0311                     	;# 
  1003  0312                     	;# 
  1004  0313                     	;# 
  1005  038C                     	;# 
  1006  038D                     	;# 
  1007  038E                     	;# 
  1008  0390                     	;# 
  1009  0391                     	;# 
  1010  0392                     	;# 
  1011  0393                     	;# 
  1012  0394                     	;# 
  1013  0395                     	;# 
  1014  0396                     	;# 
  1015  0397                     	;# 
  1016  0398                     	;# 
  1017  0399                     	;# 
  1018  039D                     	;# 
  1019  039E                     	;# 
  1020  039F                     	;# 
  1021  0511                     	;# 
  1022  0513                     	;# 
  1023  051A                     	;# 
  1024  0811                     	;# 
  1025  0812                     	;# 
  1026  0813                     	;# 
  1027  0814                     	;# 
  1028  0815                     	;# 
  1029  0816                     	;# 
  1030  0817                     	;# 
  1031  0818                     	;# 
  1032  0819                     	;# 
  1033  081A                     	;# 
  1034  081B                     	;# 
  1035  081C                     	;# 
  1036  081D                     	;# 
  1037  081E                     	;# 
  1038  081F                     	;# 
  1039  0820                     	;# 
  1040  0821                     	;# 
  1041  0821                     	;# 
  1042  0822                     	;# 
  1043  0823                     	;# 
  1044  0823                     	;# 
  1045  0824                     	;# 
  1046  0825                     	;# 
  1047  0825                     	;# 
  1048  0826                     	;# 
  1049  0827                     	;# 
  1050  0827                     	;# 
  1051  0828                     	;# 
  1052  0829                     	;# 
  1053  082A                     	;# 
  1054  082B                     	;# 
  1055  082C                     	;# 
  1056  082D                     	;# 
  1057  082E                     	;# 
  1058  082F                     	;# 
  1059  0831                     	;# 
  1060  0832                     	;# 
  1061  0833                     	;# 
  1062  0834                     	;# 
  1063  0835                     	;# 
  1064  0836                     	;# 
  1065  0837                     	;# 
  1066  0838                     	;# 
  1067  0839                     	;# 
  1068  083A                     	;# 
  1069  083B                     	;# 
  1070  083C                     	;# 
  1071  083D                     	;# 
  1072  083E                     	;# 
  1073  083F                     	;# 
  1074  0840                     	;# 
  1075  0841                     	;# 
  1076  0841                     	;# 
  1077  0842                     	;# 
  1078  0843                     	;# 
  1079  0843                     	;# 
  1080  0844                     	;# 
  1081  0845                     	;# 
  1082  0845                     	;# 
  1083  0846                     	;# 
  1084  0847                     	;# 
  1085  0847                     	;# 
  1086  0848                     	;# 
  1087  0849                     	;# 
  1088  084A                     	;# 
  1089  084B                     	;# 
  1090  084C                     	;# 
  1091  084D                     	;# 
  1092  084E                     	;# 
  1093  084F                     	;# 
  1094  0851                     	;# 
  1095  0852                     	;# 
  1096  0853                     	;# 
  1097  0854                     	;# 
  1098  0855                     	;# 
  1099  0856                     	;# 
  1100  0857                     	;# 
  1101  0858                     	;# 
  1102  0859                     	;# 
  1103  085A                     	;# 
  1104  085B                     	;# 
  1105  085C                     	;# 
  1106  085D                     	;# 
  1107  085E                     	;# 
  1108  085F                     	;# 
  1109  0860                     	;# 
  1110  0861                     	;# 
  1111  0861                     	;# 
  1112  0862                     	;# 
  1113  0863                     	;# 
  1114  0863                     	;# 
  1115  0864                     	;# 
  1116  0865                     	;# 
  1117  0865                     	;# 
  1118  0866                     	;# 
  1119  0867                     	;# 
  1120  0867                     	;# 
  1121  0868                     	;# 
  1122  0869                     	;# 
  1123  086A                     	;# 
  1124  086B                     	;# 
  1125  086C                     	;# 
  1126  086D                     	;# 
  1127  086E                     	;# 
  1128  086F                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140                           
  1141                           	psect	idataBANK1
  1142  036C                     __pidataBANK1:	
  1143                           
  1144                           ;initializer for _segmcode
  1145  036C  343F               	retlw	63
  1146  036D  3406               	retlw	6
  1147  036E  345B               	retlw	91
  1148  036F  344F               	retlw	79
  1149  0370  3466               	retlw	102
  1150  0371  346D               	retlw	109
  1151  0372  347D               	retlw	125
  1152  0373  3407               	retlw	7
  1153  0374  347F               	retlw	127
  1154  0375  346F               	retlw	111
  1155  0376  3477               	retlw	119
  1156  0377  347C               	retlw	124
  1157  0378  3439               	retlw	57
  1158  0379  345E               	retlw	94
  1159  037A  3479               	retlw	121
  1160  037B  3471               	retlw	113
  1161  000B                     _INTCONbits	set	11
  1162  000D                     _PORTBbits	set	13
  1163  000E                     _PORTCbits	set	14
  1164  0015                     _TMR0	set	21
  1165  0095                     _OPTION_REGbits	set	149
  1166  0099                     _OSCCONbits	set	153
  1167  008C                     _TRISA	set	140
  1168  008D                     _TRISB	set	141
  1169  008E                     _TRISC	set	142
  1170  008E                     _TRISCbits	set	142
  1171  010C                     _LATA	set	268
  1172  010C                     _LATAbits	set	268
  1173  010D                     _LATB	set	269
  1174  010E                     _LATC	set	270
  1175  020C                     _WPUA	set	524
  1176  020D                     _WPUB	set	525
  1177  020E                     _WPUC	set	526
  1178  020E                     _WPUCbits	set	526
  1179  0392                     _IOCAN	set	914
  1180  0391                     _IOCAP	set	913
  1181  0395                     _IOCBN	set	917
  1182  0394                     _IOCBP	set	916
  1183  0399                     _IOCCFbits	set	921
  1184  0398                     _IOCCN	set	920
  1185  0397                     _IOCCP	set	919
  1186  0397                     _IOCCPbits	set	919
  1187                           
  1188                           ; #config settings
  1189  0000                     
  1190                           	psect	cinit
  1191  004E                     start_initialization:	
  1192  004E                     __initialization:	
  1193                           
  1194                           ; Initialize objects allocated to BANK1
  1195  004E  306C               	movlw	low __pidataBANK1
  1196  004F  0084               	movwf	4
  1197  0050  3083               	movlw	(high __pidataBANK1)| (0+128)
  1198  0051  0085               	movwf	5
  1199  0052  30A0               	movlw	low __pdataBANK1
  1200  0053  0086               	movwf	6
  1201  0054  3000               	movlw	high __pdataBANK1
  1202  0055  0087               	movwf	7
  1203  0056  3010               	movlw	16
  1204  0057  3183  237C  3180   	fcall	init_ram
  1205                           
  1206                           ; Clear objects allocated to BANK0
  1207  005A  3020               	movlw	low __pbssBANK0
  1208  005B  0084               	movwf	4
  1209  005C  3000               	movlw	high __pbssBANK0
  1210  005D  0085               	movwf	5
  1211  005E  303C               	movlw	60
  1212  005F  3183  2382         	fcall	clear_ram0
  1213  0061                     end_of_initialization:	
  1214                           ;End of C runtime variable initialization code
  1215                           
  1216  0061                     __end_of__initialization:	
  1217  0061  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1218  0062  0020               	movlb	0
  1219  0063  3183  2B88         	ljmp	_main	;jump to C main() function
  1220                           
  1221                           	psect	bssBANK0
  1222  0020                     __pbssBANK0:	
  1223  0020                     _g_recv_buf:	
  1224  0020                     	ds	40
  1225  0048                     _g_all_level_times:	
  1226  0048                     	ds	2
  1227  004A                     _g_find_recv_start:	
  1228  004A                     	ds	2
  1229  004C                     _g_high_level_times:	
  1230  004C                     	ds	2
  1231  004E                     _g_recv_count:	
  1232  004E                     	ds	2
  1233  0050                     _g_start_read_data:	
  1234  0050                     	ds	2
  1235  0052                     _g_start_read_switch:	
  1236  0052                     	ds	2
  1237  0054                     _g_time_h:	
  1238  0054                     	ds	2
  1239  0056                     _g_time_m:	
  1240  0056                     	ds	2
  1241  0058                     _g_time_s:	
  1242  0058                     	ds	2
  1243  005A                     _g_time_u:	
  1244  005A                     	ds	2
  1245                           
  1246                           	psect	dataBANK1
  1247  00A0                     __pdataBANK1:	
  1248  00A0                     _segmcode:	
  1249  00A0                     	ds	16
  1250                           
  1251                           	psect	inittext
  1252  037C                     init_ram:	
  1253  037C  00FE               	movwf	126
  1254  037D                     initloop:	
  1255  037D  0012               	moviw fsr0++
  1256  037E  001E               	movwi fsr1++
  1257  037F  0BFE               	decfsz	126,f
  1258  0380  2B7D               	goto	initloop
  1259  0381  3400               	retlw	0
  1260                           
  1261                           	psect	clrtext
  1262  0382                     clear_ram0:	
  1263                           ;	Called with FSR0 containing the base address, and
  1264                           ;	WREG with the size to clear
  1265                           
  1266  0382  0064               	clrwdt	;clear the watchdog before getting into this loop
  1267  0383                     clrloop0:	
  1268  0383  0180               	clrf	0	;clear RAM location pointed to by FSR
  1269  0384  3101               	addfsr 0,1
  1270  0385  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1271  0386  2B83               	goto	clrloop0	;have we reached the end yet?
  1272  0387  3400               	retlw	0	;all done for this memory range, return
  1273                           
  1274                           	psect	cstackCOMMON
  1275  0070                     __pcstackCOMMON:	
  1276  0070                     ?_update_time:	
  1277  0070                     ?_receive_decode:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_init_env:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_update_display:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_ISR:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_main:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_test_value:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_control595_delay:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ??_control595_delay:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_write_char:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_times2number:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?___awmod:	
  1308                           ; 2 bytes @ 0x0
  1309                           
  1310  0070                     times2number@high_level_times:	
  1311                           ; 2 bytes @ 0x0
  1312                           
  1313  0070                     test_value@value:	
  1314                           ; 2 bytes @ 0x0
  1315                           
  1316  0070                     ___awmod@divisor:	
  1317                           ; 2 bytes @ 0x0
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0x0
  1321  0070                     	ds	1
  1322  0071                     control595_delay@times:	
  1323                           
  1324                           ; 2 bytes @ 0x1
  1325  0071                     	ds	1
  1326  0072                     ??_times2number:	
  1327  0072                     ??_test_value:	
  1328                           ; 1 bytes @ 0x2
  1329                           
  1330  0072                     ___awmod@dividend:	
  1331                           ; 1 bytes @ 0x2
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x2
  1335  0072                     	ds	1
  1336  0073                     ??_write_char:	
  1337                           
  1338                           ; 1 bytes @ 0x3
  1339  0073                     	ds	1
  1340  0074                     ??___awmod:	
  1341                           
  1342                           ; 1 bytes @ 0x4
  1343  0074                     	ds	1
  1344  0075                     write_char@dat:	
  1345  0075                     ___awmod@counter:	
  1346                           ; 1 bytes @ 0x5
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x5
  1350  0075                     	ds	1
  1351  0076                     write_char@i:	
  1352  0076                     ___awmod@sign:	
  1353                           ; 1 bytes @ 0x6
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x6
  1357  0076                     	ds	1
  1358  0077                     ??_update_time:	
  1359  0077                     ??_receive_decode:	
  1360                           ; 1 bytes @ 0x7
  1361                           
  1362  0077                     ??_update_display:	
  1363                           ; 1 bytes @ 0x7
  1364                           
  1365                           
  1366                           ; 1 bytes @ 0x7
  1367  0077                     	ds	6
  1368  007D                     ??_ISR:	
  1369                           
  1370                           ; 1 bytes @ 0xD
  1371  007D                     	ds	1
  1372                           
  1373                           	psect	cstackBANK0
  1374  005C                     __pcstackBANK0:	
  1375  005C                     receive_decode@old_time_h:	
  1376                           
  1377                           ; 2 bytes @ 0x0
  1378  005C                     	ds	2
  1379  005E                     receive_decode@old_time_m:	
  1380                           
  1381                           ; 2 bytes @ 0x2
  1382  005E                     	ds	2
  1383  0060                     receive_decode@i:	
  1384                           
  1385                           ; 2 bytes @ 0x4
  1386  0060                     	ds	2
  1387  0062                     receive_decode@read_value:	
  1388                           
  1389                           ; 2 bytes @ 0x6
  1390  0062                     	ds	2
  1391  0064                     ??_init_env:	
  1392                           
  1393                           ; 1 bytes @ 0x8
  1394  0064                     	ds	1
  1395  0065                     init_env@i:	
  1396                           
  1397                           ; 2 bytes @ 0x9
  1398  0065                     	ds	2
  1399  0067                     ??_main:	
  1400                           
  1401                           	psect	maintext
  1402  0388                     __pmaintext:	
  1403                           ; 1 bytes @ 0xB
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 79 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : B1F/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels required when called:    7
  1429 ;; This function calls:
  1430 ;;		_init_env
  1431 ;; This function is called by:
  1432 ;;		Startup code after reset
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _main
  1438  0388                     _main:	
  1439                           
  1440                           ;main.c: 81: init_env();
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1444  0388  3181  21D0  3183   	fcall	_init_env
  1445  038B                     l90:	
  1446                           ;main.c: 84: while(1){
  1447                           
  1448  038B  2B8B               	goto	l90
  1449  038C                     __end_of_main:	
  1450                           ;main.c: 86: }
  1451                           ;main.c: 88: return;
  1452                           
  1453                           
  1454                           	psect	text1
  1455  01D0                     __ptext1:	
  1456 ;; *************** function _init_env *****************
  1457 ;; Defined at:
  1458 ;;		line 93 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  i               2    9[BANK0 ] int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    6
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _init_env
  1488  01D0                     _init_env:	
  1489                           
  1490                           ;main.c: 98: INTCONbits.GIE = 0b1;
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0]
  1494  01D0  178B               	bsf	11,7	;volatile
  1495                           
  1496                           ;main.c: 100: INTCONbits.IOCIE = 0b1;
  1497  01D1  158B               	bsf	11,3	;volatile
  1498                           
  1499                           ;main.c: 104: INTCONbits.TMR0IE = 0b1;
  1500  01D2  168B               	bsf	11,5	;volatile
  1501                           
  1502                           ;main.c: 109: OSCCONbits.SCS = 0b10;
  1503  01D3  0021               	movlb	1	; select bank1
  1504  01D4  0819               	movf	25,w	;volatile
  1505  01D5  39FC               	andlw	-4
  1506  01D6  3802               	iorlw	2
  1507  01D7  0099               	movwf	25	;volatile
  1508                           
  1509                           ;main.c: 110: OSCCONbits.IRCF = 0b1010;
  1510  01D8  0819               	movf	25,w	;volatile
  1511  01D9  3987               	andlw	-121
  1512  01DA  3850               	iorlw	80
  1513  01DB  0099               	movwf	25	;volatile
  1514                           
  1515                           ;main.c: 118: OPTION_REGbits.PSA = 0;
  1516  01DC  1195               	bcf	21,3	;volatile
  1517                           
  1518                           ;main.c: 119: OPTION_REGbits.TMR0CS = 0;
  1519  01DD  1295               	bcf	21,5	;volatile
  1520                           
  1521                           ;main.c: 120: OPTION_REGbits.PS = 4;
  1522  01DE  0815               	movf	21,w	;volatile
  1523  01DF  39F8               	andlw	-8
  1524  01E0  3804               	iorlw	4
  1525  01E1  0095               	movwf	21	;volatile
  1526                           
  1527                           ;main.c: 121: TMR0 = (217 + 14);
  1528  01E2  30E7               	movlw	231
  1529  01E3  0020               	movlb	0	; select bank0
  1530  01E4  0095               	movwf	21	;volatile
  1531                           
  1532                           ;main.c: 129: OPTION_REGbits.nWPUEN = 0;
  1533  01E5  0021               	movlb	1	; select bank1
  1534  01E6  1395               	bcf	21,7	;volatile
  1535                           
  1536                           ;main.c: 131: TRISA = 0;
  1537  01E7  018C               	clrf	12	;volatile
  1538                           
  1539                           ;main.c: 132: LATA = 0;
  1540  01E8  0022               	movlb	2	; select bank2
  1541  01E9  018C               	clrf	12	;volatile
  1542                           
  1543                           ;main.c: 133: WPUA = 0;
  1544  01EA  0024               	movlb	4	; select bank4
  1545  01EB  018C               	clrf	12	;volatile
  1546                           
  1547                           ;main.c: 134: IOCAP = 0;
  1548  01EC  0027               	movlb	7	; select bank7
  1549  01ED  0191               	clrf	17	;volatile
  1550                           
  1551                           ;main.c: 135: IOCAN = 0;
  1552  01EE  0192               	clrf	18	;volatile
  1553                           
  1554                           ;main.c: 137: TRISB = 0;
  1555  01EF  0021               	movlb	1	; select bank1
  1556  01F0  018D               	clrf	13	;volatile
  1557                           
  1558                           ;main.c: 138: LATB = 0;
  1559  01F1  0022               	movlb	2	; select bank2
  1560  01F2  018D               	clrf	13	;volatile
  1561                           
  1562                           ;main.c: 139: WPUB = 0;
  1563  01F3  0024               	movlb	4	; select bank4
  1564  01F4  018D               	clrf	13	;volatile
  1565                           
  1566                           ;main.c: 140: IOCBP = 0;
  1567  01F5  0027               	movlb	7	; select bank7
  1568  01F6  0194               	clrf	20	;volatile
  1569                           
  1570                           ;main.c: 141: IOCBN = 0;
  1571  01F7  0195               	clrf	21	;volatile
  1572                           
  1573                           ;main.c: 143: TRISC = 0;
  1574  01F8  0021               	movlb	1	; select bank1
  1575  01F9  018E               	clrf	14	;volatile
  1576                           
  1577                           ;main.c: 144: LATC = 0;
  1578  01FA  0022               	movlb	2	; select bank2
  1579  01FB  018E               	clrf	14	;volatile
  1580                           
  1581                           ;main.c: 145: WPUC = 0;
  1582  01FC  0024               	movlb	4	; select bank4
  1583  01FD  018E               	clrf	14	;volatile
  1584                           
  1585                           ;main.c: 146: IOCCP = 0;
  1586  01FE  0027               	movlb	7	; select bank7
  1587  01FF  0197               	clrf	23	;volatile
  1588                           
  1589                           ;main.c: 147: IOCCN = 0;
  1590  0200  0198               	clrf	24	;volatile
  1591                           
  1592                           ;main.c: 152: TRISCbits.TRISC7 = 1;
  1593  0201  0021               	movlb	1	; select bank1
  1594  0202  178E               	bsf	14,7	;volatile
  1595                           
  1596                           ;main.c: 153: WPUCbits.WPUC7 = 1;
  1597  0203  0024               	movlb	4	; select bank4
  1598  0204  178E               	bsf	14,7	;volatile
  1599                           
  1600                           ;main.c: 155: TRISCbits.TRISC2 = 1;
  1601  0205  0021               	movlb	1	; select bank1
  1602  0206  150E               	bsf	14,2	;volatile
  1603                           
  1604                           ;main.c: 156: WPUCbits.WPUC2 = 1;
  1605  0207  0024               	movlb	4	; select bank4
  1606  0208  150E               	bsf	14,2	;volatile
  1607                           
  1608                           ;main.c: 157: IOCCPbits.IOCCP2 = 1;
  1609  0209  0027               	movlb	7	; select bank7
  1610  020A  1517               	bsf	23,2	;volatile
  1611                           
  1612                           ;main.c: 162: g_time_h = 0;
  1613  020B  0020               	movlb	0	; select bank0
  1614  020C  01D4               	clrf	_g_time_h
  1615  020D  01D5               	clrf	_g_time_h+1
  1616                           
  1617                           ;main.c: 163: g_time_m = 0;
  1618  020E  01D6               	clrf	_g_time_m
  1619  020F  01D7               	clrf	_g_time_m+1
  1620                           
  1621                           ;main.c: 164: g_time_s = 0;
  1622  0210  01D8               	clrf	_g_time_s
  1623  0211  01D9               	clrf	_g_time_s+1
  1624                           
  1625                           ;main.c: 165: g_time_u = 0;
  1626  0212  01DA               	clrf	_g_time_u
  1627  0213  01DB               	clrf	_g_time_u+1
  1628                           
  1629                           ;main.c: 168: g_start_read_switch = 0;
  1630  0214  01D2               	clrf	_g_start_read_switch
  1631  0215  01D3               	clrf	_g_start_read_switch+1
  1632                           
  1633                           ;main.c: 169: g_start_read_data = 0;
  1634  0216  01D0               	clrf	_g_start_read_data
  1635  0217  01D1               	clrf	_g_start_read_data+1
  1636                           
  1637                           ;main.c: 170: g_find_recv_start = 0;
  1638  0218  01CA               	clrf	_g_find_recv_start
  1639  0219  01CB               	clrf	_g_find_recv_start+1
  1640                           
  1641                           ;main.c: 173: g_high_level_times = 0;
  1642  021A  01CC               	clrf	_g_high_level_times
  1643  021B  01CD               	clrf	_g_high_level_times+1
  1644                           
  1645                           ;main.c: 174: g_all_level_times = 0;
  1646  021C  01C8               	clrf	_g_all_level_times
  1647  021D  01C9               	clrf	_g_all_level_times+1
  1648                           
  1649                           ;main.c: 175: g_recv_count = 0;
  1650  021E  01CE               	clrf	_g_recv_count
  1651  021F  01CF               	clrf	_g_recv_count+1
  1652                           
  1653                           ;main.c: 176: for(int i = 0;i < 20; i++){
  1654  0220  01E5               	clrf	init_env@i
  1655  0221  01E6               	clrf	init_env@i+1
  1656  0222  0866               	movf	init_env@i+1,w
  1657  0223  3A80               	xorlw	128
  1658  0224  00E4               	movwf	??_init_env
  1659  0225  3080               	movlw	128
  1660  0226  0264               	subwf	??_init_env,w
  1661  0227  1D03               	skipz
  1662  0228  2A2B               	goto	u1085
  1663  0229  3014               	movlw	20
  1664  022A  0265               	subwf	init_env@i,w
  1665  022B                     u1085:	
  1666  022B  1803               	btfsc	3,0
  1667  022C  2A45               	goto	l97
  1668  022D                     l1429:	
  1669                           
  1670                           ;main.c: 177: g_recv_buf[i] = 5;
  1671  022D  0020               	movlb	0	; select bank0
  1672  022E  3565               	lslf	init_env@i,w
  1673  022F  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  1674  0230  0086               	movwf	6
  1675  0231  0187               	clrf	7
  1676  0232  3005               	movlw	5
  1677  0233  3FC0               	movwi [0]fsr1
  1678  0234  3000               	movlw	0
  1679  0235  3FC1               	movwi [1]fsr1
  1680  0236  3001               	movlw	1
  1681  0237  07E5               	addwf	init_env@i,f
  1682  0238  3000               	movlw	0
  1683  0239  3DE6               	addwfc	init_env@i+1,f
  1684  023A  0866               	movf	init_env@i+1,w
  1685  023B  3A80               	xorlw	128
  1686  023C  00E4               	movwf	??_init_env
  1687  023D  3080               	movlw	128
  1688  023E  0264               	subwf	??_init_env,w
  1689  023F  1D03               	skipz
  1690  0240  2A43               	goto	u1095
  1691  0241  3014               	movlw	20
  1692  0242  0265               	subwf	init_env@i,w
  1693  0243                     u1095:	
  1694  0243  1C03               	skipc
  1695  0244  2A2D               	goto	l1429
  1696  0245                     l97:	
  1697                           
  1698                           ;main.c: 178: }
  1699                           ;main.c: 183: PORTCbits.RC6 = 1;
  1700  0245  0020               	movlb	0	; select bank0
  1701  0246  170E               	bsf	14,6	;volatile
  1702  0247  0008               	return
  1703  0248                     __end_of_init_env:	
  1704                           
  1705                           	psect	intentry
  1706  0004                     __pintentry:	
  1707 ;; *************** function _ISR *****************
  1708 ;; Defined at:
  1709 ;;		line 42 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    5
  1730 ;; This function calls:
  1731 ;;		_receive_decode
  1732 ;;		_update_time
  1733 ;; This function is called by:
  1734 ;;		Interrupt level 1
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738  0004                     _ISR:	
  1739                           
  1740                           ;incstack = 0
  1741  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1742                           
  1743                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1744  0005  3180               	pagesel	$
  1745  0006  0020               	movlb	0	; select bank0
  1746  0007  087F               	movf	127,w
  1747  0008  00FD               	movwf	??_ISR
  1748                           
  1749                           ;main.c: 44: if(IOCCFbits.IOCCF2 == 1 && g_start_read_data == 0 && g_start_read_switch =
      +                          = 1){
  1750  0009  0027               	movlb	7	; select bank7
  1751  000A  1D19               	btfss	25,2	;volatile
  1752  000B  281F               	goto	i1l79
  1753  000C  0020               	movlb	0	; select bank0
  1754  000D  0850               	movf	_g_start_read_data,w
  1755  000E  0451               	iorwf	_g_start_read_data+1,w
  1756  000F  1D03               	btfss	3,2
  1757  0010  281F               	goto	i1l79
  1758  0011  0352               	decf	_g_start_read_switch,w
  1759  0012  0453               	iorwf	_g_start_read_switch+1,w
  1760  0013  1D03               	btfss	3,2
  1761  0014  281F               	goto	i1l79
  1762                           
  1763                           ;main.c: 45: g_start_read_data = 1;
  1764  0015  3001               	movlw	1
  1765  0016  00D0               	movwf	_g_start_read_data
  1766  0017  3000               	movlw	0
  1767  0018  00D1               	movwf	_g_start_read_data+1
  1768                           
  1769                           ;main.c: 46: g_start_read_switch = 0;
  1770  0019  01D2               	clrf	_g_start_read_switch
  1771  001A  01D3               	clrf	_g_start_read_switch+1
  1772                           
  1773                           ;main.c: 47: INTCONbits.IOCIF = 0;
  1774  001B  100B               	bcf	11,0	;volatile
  1775                           
  1776                           ;main.c: 48: IOCCFbits.IOCCF2 == 0;
  1777  001C  0027               	movlb	7	; select bank7
  1778  001D  0819               	movf	25,w	;volatile
  1779                           
  1780                           ;main.c: 49: return;
  1781  001E  2847               	goto	i1l80
  1782  001F                     i1l79:	
  1783                           ;main.c: 50: }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF2){
  1784                           
  1785  001F  180B               	btfsc	11,0	;volatile
  1786  0020  2824               	goto	i1l84
  1787  0021  0027               	movlb	7	; select bank7
  1788  0022  1D19               	btfss	25,2	;volatile
  1789  0023  2827               	goto	i1l1457
  1790  0024                     i1l84:	
  1791                           
  1792                           ;main.c: 51: INTCONbits.IOCIF = 0;
  1793  0024  100B               	bcf	11,0	;volatile
  1794                           
  1795                           ;main.c: 52: IOCCFbits.IOCCF2 == 0;
  1796  0025  0027               	movlb	7	; select bank7
  1797  0026  0819               	movf	25,w	;volatile
  1798  0027                     i1l1457:	
  1799                           
  1800                           ;main.c: 53: }
  1801                           ;main.c: 56: if(g_start_read_data == 1 && INTCONbits.TMR0IF){
  1802  0027  0020               	movlb	0	; select bank0
  1803  0028  0350               	decf	_g_start_read_data,w
  1804  0029  0451               	iorwf	_g_start_read_data+1,w
  1805  002A  1903               	btfsc	3,2
  1806  002B  1D0B               	btfss	11,2	;volatile
  1807  002C  2838               	goto	i1l85
  1808                           
  1809                           ;main.c: 57: update_time();
  1810  002D  3182  2248  3180   	fcall	_update_time
  1811                           
  1812                           ;main.c: 58: receive_decode();
  1813  0030  3180  2065  3180   	fcall	_receive_decode
  1814                           
  1815                           ;main.c: 59: INTCONbits.TMR0IF = 0;
  1816  0033  110B               	bcf	11,2	;volatile
  1817                           
  1818                           ;main.c: 60: TMR0 = (217 + 14);
  1819  0034  30E7               	movlw	231
  1820  0035  0020               	movlb	0	; select bank0
  1821  0036  0095               	movwf	21	;volatile
  1822                           
  1823                           ;main.c: 61: return;
  1824  0037  2847               	goto	i1l80
  1825  0038                     i1l85:	
  1826                           
  1827                           ;main.c: 62: }
  1828                           ;main.c: 65: if(INTCONbits.TMR0IF){
  1829  0038  1D0B               	btfss	11,2	;volatile
  1830  0039  2847               	goto	i1l80
  1831                           
  1832                           ;main.c: 66: update_time();
  1833  003A  3182  2248  3180   	fcall	_update_time
  1834                           
  1835                           ;main.c: 67: INTCONbits.TMR0IF = 0;
  1836  003D  110B               	bcf	11,2	;volatile
  1837                           
  1838                           ;main.c: 68: TMR0 = (217 + 14);
  1839  003E  30E7               	movlw	231
  1840  003F  0020               	movlb	0	; select bank0
  1841  0040  0095               	movwf	21	;volatile
  1842                           
  1843                           ;main.c: 71: if(PORTCbits.RC7 == 1){
  1844  0041  1F8E               	btfss	14,7	;volatile
  1845  0042  2847               	goto	i1l80
  1846                           
  1847                           ;main.c: 72: g_start_read_switch = 1;
  1848  0043  3001               	movlw	1
  1849  0044  00D2               	movwf	_g_start_read_switch
  1850  0045  3000               	movlw	0
  1851  0046  00D3               	movwf	_g_start_read_switch+1
  1852  0047                     i1l80:	
  1853                           ;main.c: 75: }
  1854                           ;main.c: 76: return;
  1855                           
  1856                           ;main.c: 73: }
  1857                           ;main.c: 74: return;
  1858                           
  1859  0047  087D               	movf	??_ISR,w
  1860  0048  0020               	movlb	0	; select bank0
  1861  0049  00FF               	movwf	127
  1862  004A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1863  004B  0009               	retfie
  1864  004C                     __end_of_ISR:	
  1865                           
  1866                           	psect	text3
  1867  0065                     __ptext3:	
  1868 ;; *************** function _receive_decode *****************
  1869 ;; Defined at:
  1870 ;;		line 62 in file "receive_decode.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  i               2    4[BANK0 ] int 
  1875 ;;  read_value      2    6[BANK0 ] int 
  1876 ;;  old_time_m      2    2[BANK0 ] int 
  1877 ;;  old_time_h      2    0[BANK0 ] int 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;Total ram usage:       14 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		_test_value
  1896 ;;		_times2number
  1897 ;;		_update_time
  1898 ;; This function is called by:
  1899 ;;		_ISR
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _receive_decode
  1905  0065                     _receive_decode:	
  1906                           
  1907                           ;receive_decode.c: 64: if(PORTCbits.RC2 == 1){
  1908                           
  1909                           ;incstack = 0
  1910                           ; Regs used in _receive_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1911  0065  0020               	movlb	0	; select bank0
  1912  0066  1D0E               	btfss	14,2	;volatile
  1913  0067  286C               	goto	i1l156
  1914                           
  1915                           ;receive_decode.c: 65: g_high_level_times++;
  1916  0068  3001               	movlw	1
  1917  0069  07CC               	addwf	_g_high_level_times,f
  1918  006A  3000               	movlw	0
  1919  006B  3DCD               	addwfc	_g_high_level_times+1,f
  1920  006C                     i1l156:	
  1921                           
  1922                           ;receive_decode.c: 66: }
  1923                           ;receive_decode.c: 68: g_all_level_times++;
  1924  006C  3001               	movlw	1
  1925  006D  07C8               	addwf	_g_all_level_times,f
  1926  006E  3000               	movlw	0
  1927  006F  3DC9               	addwfc	_g_all_level_times+1,f
  1928                           
  1929                           ;receive_decode.c: 71: if(g_all_level_times < 100){
  1930  0070  0849               	movf	_g_all_level_times+1,w
  1931  0071  3A80               	xorlw	128
  1932  0072  00F7               	movwf	??_receive_decode
  1933  0073  3080               	movlw	128
  1934  0074  0277               	subwf	??_receive_decode,w
  1935  0075  1D03               	skipz
  1936  0076  2879               	goto	u96_25
  1937  0077  3064               	movlw	100
  1938  0078  0248               	subwf	_g_all_level_times,w
  1939  0079                     u96_25:	
  1940  0079  1C03               	btfss	3,0
  1941  007A  0008               	return
  1942                           
  1943                           ;receive_decode.c: 73: }
  1944                           ;receive_decode.c: 75: int read_value = times2number(g_high_level_times);
  1945                           
  1946                           ;receive_decode.c: 72: return;
  1947  007B  0020               	movlb	0	; select bank0
  1948  007C  084D               	movf	_g_high_level_times+1,w
  1949  007D  00F1               	movwf	times2number@high_level_times+1
  1950  007E  084C               	movf	_g_high_level_times,w
  1951  007F  00F0               	movwf	times2number@high_level_times
  1952  0080  3181  2151  3180   	fcall	_times2number
  1953  0083  0871               	movf	?_times2number+1,w
  1954  0084  0020               	movlb	0	; select bank0
  1955  0085  00E3               	movwf	receive_decode@read_value+1
  1956  0086  0870               	movf	?_times2number,w
  1957  0087  00E2               	movwf	receive_decode@read_value
  1958                           
  1959                           ;receive_decode.c: 76: test_value(read_value);
  1960  0088  0863               	movf	receive_decode@read_value+1,w
  1961  0089  00F1               	movwf	test_value@value+1
  1962  008A  0862               	movf	receive_decode@read_value,w
  1963  008B  00F0               	movwf	test_value@value
  1964  008C  3182  22D8  3180   	fcall	_test_value
  1965                           
  1966                           ;receive_decode.c: 77: g_all_level_times = 0;
  1967  008F  0020               	movlb	0	; select bank0
  1968  0090  01C8               	clrf	_g_all_level_times
  1969  0091  01C9               	clrf	_g_all_level_times+1
  1970                           
  1971                           ;receive_decode.c: 78: g_high_level_times = 0;
  1972  0092  01CC               	clrf	_g_high_level_times
  1973  0093  01CD               	clrf	_g_high_level_times+1
  1974                           
  1975                           ;receive_decode.c: 80: if(read_value == 5){
  1976  0094  3005               	movlw	5
  1977  0095  0662               	xorwf	receive_decode@read_value,w
  1978  0096  0463               	iorwf	receive_decode@read_value+1,w
  1979  0097  1D03               	btfss	3,2
  1980  0098  28A0               	goto	i1l1301
  1981                           
  1982                           ;receive_decode.c: 82: g_find_recv_start = 1;
  1983  0099  3001               	movlw	1
  1984  009A  00CA               	movwf	_g_find_recv_start
  1985  009B  3000               	movlw	0
  1986  009C  00CB               	movwf	_g_find_recv_start+1
  1987                           
  1988                           ;receive_decode.c: 83: g_recv_count = 0;
  1989  009D  01CE               	clrf	_g_recv_count
  1990  009E  01CF               	clrf	_g_recv_count+1
  1991                           
  1992                           ;receive_decode.c: 84: return;
  1993  009F  0008               	return
  1994  00A0                     i1l1301:	
  1995                           ;receive_decode.c: 85: }else if(read_value == 4){
  1996                           
  1997  00A0  3004               	movlw	4
  1998  00A1  0662               	xorwf	receive_decode@read_value,w
  1999  00A2  0463               	iorwf	receive_decode@read_value+1,w
  2000  00A3  1903               	btfsc	3,2
  2001  00A4  0008               	return
  2002                           
  2003                           ;receive_decode.c: 87: }
  2004                           ;receive_decode.c: 89: if(g_find_recv_start == 0 || read_value == 5){
  2005                           
  2006                           ;receive_decode.c: 86: return;
  2007  00A5  084A               	movf	_g_find_recv_start,w
  2008  00A6  044B               	iorwf	_g_find_recv_start+1,w
  2009  00A7  1903               	btfsc	3,2
  2010  00A8  0008               	return
  2011  00A9  3005               	movlw	5
  2012  00AA  0662               	xorwf	receive_decode@read_value,w
  2013  00AB  0463               	iorwf	receive_decode@read_value+1,w
  2014  00AC  1903               	btfsc	3,2
  2015  00AD  0008               	return
  2016                           
  2017                           ;receive_decode.c: 91: }
  2018                           ;receive_decode.c: 93: g_recv_buf[g_recv_count] = read_value;
  2019                           
  2020                           ;receive_decode.c: 90: return;
  2021  00AE  354E               	lslf	_g_recv_count,w
  2022  00AF  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2023  00B0  0086               	movwf	6
  2024  00B1  0187               	clrf	7
  2025  00B2  0862               	movf	receive_decode@read_value,w
  2026  00B3  3FC0               	movwi [0]fsr1
  2027  00B4  0863               	movf	receive_decode@read_value+1,w
  2028  00B5  3FC1               	movwi [1]fsr1
  2029                           
  2030                           ;receive_decode.c: 94: g_recv_count++;
  2031  00B6  3001               	movlw	1
  2032  00B7  07CE               	addwf	_g_recv_count,f
  2033  00B8  3000               	movlw	0
  2034  00B9  3DCF               	addwfc	_g_recv_count+1,f
  2035                           
  2036                           ;receive_decode.c: 95: if(g_recv_count < 6){
  2037  00BA  084F               	movf	_g_recv_count+1,w
  2038  00BB  3A80               	xorlw	128
  2039  00BC  00F7               	movwf	??_receive_decode
  2040  00BD  3080               	movlw	128
  2041  00BE  0277               	subwf	??_receive_decode,w
  2042  00BF  1D03               	skipz
  2043  00C0  28C3               	goto	u101_25
  2044  00C1  3006               	movlw	6
  2045  00C2  024E               	subwf	_g_recv_count,w
  2046  00C3                     u101_25:	
  2047  00C3  1C03               	btfss	3,0
  2048  00C4  0008               	return
  2049                           
  2050                           ;receive_decode.c: 97: }
  2051                           ;receive_decode.c: 99: if(g_recv_buf[0] != 0 && g_recv_buf[1] != 0){
  2052                           
  2053                           ;receive_decode.c: 96: return;
  2054  00C5  0020               	movlb	0	; select bank0
  2055  00C6  0820               	movf	_g_recv_buf,w
  2056  00C7  0421               	iorwf	_g_recv_buf+1,w
  2057  00C8  1903               	btfsc	3,2
  2058  00C9  28D3               	goto	i1l1325
  2059  00CA  0822               	movf	_g_recv_buf+2,w
  2060  00CB  0423               	iorwf	_g_recv_buf+3,w
  2061  00CC  1903               	btfsc	3,2
  2062  00CD  28D3               	goto	i1l1325
  2063                           
  2064                           ;receive_decode.c: 101: g_start_read_data = 0;
  2065  00CE  01D0               	clrf	_g_start_read_data
  2066  00CF  01D1               	clrf	_g_start_read_data+1
  2067                           
  2068                           ;receive_decode.c: 102: g_recv_count = 0;
  2069  00D0  01CE               	clrf	_g_recv_count
  2070  00D1  01CF               	clrf	_g_recv_count+1
  2071                           
  2072                           ;receive_decode.c: 103: return;
  2073  00D2  0008               	return
  2074  00D3                     i1l1325:	
  2075                           
  2076                           ;receive_decode.c: 104: }
  2077                           ;receive_decode.c: 106: int old_time_h = g_time_h;
  2078  00D3  0855               	movf	_g_time_h+1,w
  2079  00D4  00DD               	movwf	receive_decode@old_time_h+1
  2080  00D5  0854               	movf	_g_time_h,w
  2081  00D6  00DC               	movwf	receive_decode@old_time_h
  2082                           
  2083                           ;receive_decode.c: 107: int old_time_m = g_time_m;
  2084  00D7  0857               	movf	_g_time_m+1,w
  2085  00D8  00DF               	movwf	receive_decode@old_time_m+1
  2086  00D9  0856               	movf	_g_time_m,w
  2087  00DA  00DE               	movwf	receive_decode@old_time_m
  2088                           
  2089                           ;receive_decode.c: 108: g_time_h = g_recv_buf[2] * 4 + g_recv_buf[3];
  2090  00DB  3006               	movlw	6
  2091  00DC  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2092  00DD  0086               	movwf	6
  2093  00DE  0187               	clrf	7
  2094  00DF  3004               	movlw	4
  2095  00E0  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2096  00E1  0084               	movwf	4
  2097  00E2  0185               	clrf	5
  2098  00E3  3F00               	moviw [0]fsr0
  2099  00E4  00F7               	movwf	??_receive_decode
  2100  00E5  3F01               	moviw [1]fsr0
  2101  00E6  00F8               	movwf	??_receive_decode+1
  2102  00E7  35F7               	lslf	??_receive_decode,f
  2103  00E8  0DF8               	rlf	??_receive_decode+1,f
  2104  00E9  35F7               	lslf	??_receive_decode,f
  2105  00EA  0DF8               	rlf	??_receive_decode+1,f
  2106  00EB  3F40               	moviw [0]fsr1
  2107  00EC  0777               	addwf	??_receive_decode,w
  2108  00ED  00D4               	movwf	_g_time_h
  2109  00EE  3F41               	moviw [1]fsr1
  2110  00EF  3D78               	addwfc	??_receive_decode+1,w
  2111  00F0  00D5               	movwf	_g_time_h+1
  2112                           
  2113                           ;receive_decode.c: 109: g_time_m = g_recv_buf[4] * 16 + g_recv_buf[5] * 4 + g_recv_buf[6
      +                          ];
  2114  00F1  300C               	movlw	12
  2115  00F2  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2116  00F3  0086               	movwf	6
  2117  00F4  0187               	clrf	7
  2118  00F5  300A               	movlw	10
  2119  00F6  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2120  00F7  0084               	movwf	4
  2121  00F8  0185               	clrf	5
  2122  00F9  3F00               	moviw [0]fsr0
  2123  00FA  00F7               	movwf	??_receive_decode
  2124  00FB  3F01               	moviw [1]fsr0
  2125  00FC  00F8               	movwf	??_receive_decode+1
  2126  00FD  35F7               	lslf	??_receive_decode,f
  2127  00FE  0DF8               	rlf	??_receive_decode+1,f
  2128  00FF  35F7               	lslf	??_receive_decode,f
  2129  0100  0DF8               	rlf	??_receive_decode+1,f
  2130  0101  3008               	movlw	8
  2131  0102  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2132  0103  0084               	movwf	4
  2133  0104  0185               	clrf	5
  2134  0105  3F00               	moviw [0]fsr0
  2135  0106  00F9               	movwf	??_receive_decode+2
  2136  0107  3F01               	moviw [1]fsr0
  2137  0108  00FA               	movwf	??_receive_decode+3
  2138  0109  0EF9               	swapf	??_receive_decode+2,f
  2139  010A  0EFA               	swapf	??_receive_decode+3,f
  2140  010B  30F0               	movlw	240
  2141  010C  05FA               	andwf	??_receive_decode+3,f
  2142  010D  0879               	movf	??_receive_decode+2,w
  2143  010E  390F               	andlw	15
  2144  010F  04FA               	iorwf	??_receive_decode+3,f
  2145  0110  30F0               	movlw	240
  2146  0111  05F9               	andwf	??_receive_decode+2,f
  2147  0112  0877               	movf	??_receive_decode,w
  2148  0113  0779               	addwf	??_receive_decode+2,w
  2149  0114  00FB               	movwf	??_receive_decode+4
  2150  0115  0878               	movf	??_receive_decode+1,w
  2151  0116  3D7A               	addwfc	??_receive_decode+3,w
  2152  0117  00FC               	movwf	??_receive_decode+5
  2153  0118  3F40               	moviw [0]fsr1
  2154  0119  077B               	addwf	??_receive_decode+4,w
  2155  011A  00D6               	movwf	_g_time_m
  2156  011B  3F41               	moviw [1]fsr1
  2157  011C  3D7C               	addwfc	??_receive_decode+5,w
  2158  011D  00D7               	movwf	_g_time_m+1
  2159                           
  2160                           ;receive_decode.c: 111: if(old_time_h != g_time_h || old_time_m != g_time_m){
  2161  011E  0855               	movf	_g_time_h+1,w
  2162  011F  065D               	xorwf	receive_decode@old_time_h+1,w
  2163  0120  1D03               	skipz
  2164  0121  2924               	goto	u104_25
  2165  0122  0854               	movf	_g_time_h,w
  2166  0123  065C               	xorwf	receive_decode@old_time_h,w
  2167  0124                     u104_25:	
  2168  0124  1D03               	skipz
  2169  0125  292E               	goto	i1l1333
  2170  0126  0857               	movf	_g_time_m+1,w
  2171  0127  065F               	xorwf	receive_decode@old_time_m+1,w
  2172  0128  1D03               	skipz
  2173  0129  292C               	goto	u105_25
  2174  012A  0856               	movf	_g_time_m,w
  2175  012B  065E               	xorwf	receive_decode@old_time_m,w
  2176  012C                     u105_25:	
  2177  012C  1903               	skipnz
  2178  012D  2931               	goto	i1l1335
  2179  012E                     i1l1333:	
  2180                           
  2181                           ;receive_decode.c: 112: update_time();
  2182  012E  3182  2248  3180   	fcall	_update_time
  2183  0131                     i1l1335:	
  2184                           
  2185                           ;receive_decode.c: 117: g_start_read_data = 0;
  2186  0131  0020               	movlb	0	; select bank0
  2187  0132  01D0               	clrf	_g_start_read_data
  2188  0133  01D1               	clrf	_g_start_read_data+1
  2189                           
  2190                           ;receive_decode.c: 118: g_recv_count = 0;
  2191  0134  01CE               	clrf	_g_recv_count
  2192  0135  01CF               	clrf	_g_recv_count+1
  2193                           
  2194                           ;receive_decode.c: 119: for(int i = 0;i < 20; i++){
  2195  0136  01E0               	clrf	receive_decode@i
  2196  0137  01E1               	clrf	receive_decode@i+1
  2197  0138                     L1:	
  2198  0138  0861               	movf	receive_decode@i+1,w
  2199  0139  3A80               	xorlw	128
  2200  013A  00F7               	movwf	??_receive_decode
  2201  013B  3080               	movlw	128
  2202  013C  0277               	subwf	??_receive_decode,w
  2203  013D  1D03               	skipz
  2204  013E  2941               	goto	u106_25
  2205  013F  3014               	movlw	20
  2206  0140  0260               	subwf	receive_decode@i,w
  2207  0141                     u106_25:	
  2208  0141  1803               	btfsc	3,0
  2209  0142  0008               	return
  2210                           
  2211                           ;receive_decode.c: 120: g_recv_buf[i] = 5;
  2212  0143  0020               	movlb	0	; select bank0
  2213  0144  3560               	lslf	receive_decode@i,w
  2214  0145  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2215  0146  0086               	movwf	6
  2216  0147  0187               	clrf	7
  2217  0148  3005               	movlw	5
  2218  0149  3FC0               	movwi [0]fsr1
  2219  014A  3000               	movlw	0
  2220  014B  3FC1               	movwi [1]fsr1
  2221  014C  3001               	movlw	1
  2222  014D  07E0               	addwf	receive_decode@i,f
  2223  014E  3000               	movlw	0
  2224  014F  3DE1               	addwfc	receive_decode@i+1,f
  2225  0150  2938               	goto	L1
  2226  0151                     __end_of_receive_decode:	
  2227                           ;receive_decode.c: 121: }
  2228                           ;receive_decode.c: 122: return;
  2229                           
  2230                           
  2231                           	psect	text4
  2232  0248                     __ptext4:	
  2233 ;; *************** function _update_time *****************
  2234 ;; Defined at:
  2235 ;;		line 12 in file "update_time.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    3
  2256 ;; This function calls:
  2257 ;;		___awmod
  2258 ;;		_update_display
  2259 ;; This function is called by:
  2260 ;;		_ISR
  2261 ;;		_receive_decode
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _update_time
  2267  0248                     _update_time:	
  2268                           
  2269                           ;update_time.c: 13: g_time_u++;
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2273  0248  3001               	movlw	1
  2274  0249  0020               	movlb	0	; select bank0
  2275  024A  07DA               	addwf	_g_time_u,f
  2276  024B  3000               	movlw	0
  2277  024C  3DDB               	addwfc	_g_time_u+1,f
  2278                           
  2279                           ;update_time.c: 14: if(g_time_u % 50 == 0){
  2280  024D  3032               	movlw	50
  2281  024E  00F0               	movwf	___awmod@divisor
  2282  024F  3000               	movlw	0
  2283  0250  00F1               	movwf	___awmod@divisor+1
  2284  0251  085B               	movf	_g_time_u+1,w
  2285  0252  00F3               	movwf	___awmod@dividend+1
  2286  0253  085A               	movf	_g_time_u,w
  2287  0254  00F2               	movwf	___awmod@dividend
  2288  0255  3182  2293  3182   	fcall	___awmod
  2289  0258  0870               	movf	?___awmod,w
  2290  0259  0471               	iorwf	?___awmod+1,w
  2291  025A  1D03               	btfss	3,2
  2292  025B  2A67               	goto	i1l1175
  2293                           
  2294                           ;update_time.c: 15: LATAbits.LATA0 = !LATAbits.LATA0;
  2295  025C  1003               	clrc
  2296  025D  0022               	movlb	2	; select bank2
  2297  025E  1C0C               	btfss	12,0	;volatile
  2298  025F  1403               	setc
  2299  0260  1C03               	btfss	3,0
  2300  0261  2A65               	goto	u74_20
  2301  0262  0022               	movlb	2	; select bank2
  2302  0263  140C               	bsf	12,0	;volatile
  2303  0264  2A67               	goto	i1l1175
  2304  0265                     u74_20:	
  2305  0265  0022               	movlb	2	; select bank2
  2306  0266  100C               	bcf	12,0	;volatile
  2307  0267                     i1l1175:	
  2308                           
  2309                           ;update_time.c: 16: }
  2310                           ;update_time.c: 17: if(g_time_u == 100){
  2311  0267  3064               	movlw	100
  2312  0268  0020               	movlb	0	; select bank0
  2313  0269  065A               	xorwf	_g_time_u,w
  2314  026A  045B               	iorwf	_g_time_u+1,w
  2315  026B  1D03               	btfss	3,2
  2316  026C  0008               	return
  2317                           
  2318                           ;update_time.c: 18: g_time_u = 0;
  2319  026D  01DA               	clrf	_g_time_u
  2320  026E  01DB               	clrf	_g_time_u+1
  2321                           
  2322                           ;update_time.c: 19: g_time_s++;
  2323  026F  3001               	movlw	1
  2324  0270  07D8               	addwf	_g_time_s,f
  2325  0271  3000               	movlw	0
  2326  0272  3DD9               	addwfc	_g_time_s+1,f
  2327                           
  2328                           ;update_time.c: 20: if(g_time_s == 60){
  2329  0273  303C               	movlw	60
  2330  0274  0658               	xorwf	_g_time_s,w
  2331  0275  0459               	iorwf	_g_time_s+1,w
  2332  0276  1D03               	btfss	3,2
  2333  0277  0008               	return
  2334                           
  2335                           ;update_time.c: 21: g_time_m++;
  2336  0278  3001               	movlw	1
  2337  0279  07D6               	addwf	_g_time_m,f
  2338  027A  3000               	movlw	0
  2339  027B  3DD7               	addwfc	_g_time_m+1,f
  2340                           
  2341                           ;update_time.c: 22: g_time_s = 0;
  2342  027C  01D8               	clrf	_g_time_s
  2343  027D  01D9               	clrf	_g_time_s+1
  2344                           
  2345                           ;update_time.c: 23: if(g_time_m == 60){
  2346  027E  303C               	movlw	60
  2347  027F  0656               	xorwf	_g_time_m,w
  2348  0280  0457               	iorwf	_g_time_m+1,w
  2349  0281  1D03               	btfss	3,2
  2350  0282  2A90               	goto	i1l1197
  2351                           
  2352                           ;update_time.c: 24: g_time_h++;
  2353  0283  3001               	movlw	1
  2354  0284  07D4               	addwf	_g_time_h,f
  2355  0285  3000               	movlw	0
  2356  0286  3DD5               	addwfc	_g_time_h+1,f
  2357                           
  2358                           ;update_time.c: 25: g_time_m = 0;
  2359  0287  01D6               	clrf	_g_time_m
  2360  0288  01D7               	clrf	_g_time_m+1
  2361                           
  2362                           ;update_time.c: 26: if(g_time_h == 24){
  2363  0289  3018               	movlw	24
  2364  028A  0654               	xorwf	_g_time_h,w
  2365  028B  0455               	iorwf	_g_time_h+1,w
  2366  028C  1D03               	btfss	3,2
  2367  028D  2A90               	goto	i1l1197
  2368                           
  2369                           ;update_time.c: 27: g_time_h = 0;
  2370  028E  01D4               	clrf	_g_time_h
  2371  028F  01D5               	clrf	_g_time_h+1
  2372  0290                     i1l1197:	
  2373                           
  2374                           ;update_time.c: 28: }
  2375                           ;update_time.c: 29: }
  2376                           ;update_time.c: 30: update_display();
  2377  0290  3183  2340         	fcall	_update_display
  2378  0292  0008               	return
  2379  0293                     __end_of_update_time:	
  2380                           ;update_time.c: 31: }
  2381                           ;update_time.c: 32: }
  2382                           ;update_time.c: 33: return;
  2383                           
  2384                           
  2385                           	psect	text5
  2386  0340                     __ptext5:	
  2387 ;; *************** function _update_display *****************
  2388 ;; Defined at:
  2389 ;;		line 37 in file "update_display.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    2
  2410 ;; This function calls:
  2411 ;;		_control595_delay
  2412 ;;		_write_char
  2413 ;; This function is called by:
  2414 ;;		_update_time
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _update_display
  2420  0340                     _update_display:	
  2421                           
  2422                           ;update_display.c: 38: write_char(0xff);
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  2426  0340  30FF               	movlw	255
  2427  0341  3183  2318  3183   	fcall	_write_char
  2428                           
  2429                           ;update_display.c: 39: write_char(0x00);
  2430  0344  3000               	movlw	0
  2431  0345  3183  2318  3183   	fcall	_write_char
  2432                           
  2433                           ;update_display.c: 40: write_char(0xf0);
  2434  0348  30F0               	movlw	240
  2435  0349  3183  2318  3183   	fcall	_write_char
  2436                           
  2437                           ;update_display.c: 41: write_char(0x0f);
  2438  034C  300F               	movlw	15
  2439  034D  3183  2318  3183   	fcall	_write_char
  2440                           
  2441                           ;update_display.c: 52: PORTCbits.RC5 = 1;
  2442  0350  0020               	movlb	0	; select bank0
  2443  0351  168E               	bsf	14,5	;volatile
  2444                           
  2445                           ;update_display.c: 53: control595_delay();
  2446  0352  3183  2357         	fcall	_control595_delay
  2447                           
  2448                           ;update_display.c: 54: PORTCbits.RC5 = 0;
  2449  0354  0020               	movlb	0	; select bank0
  2450  0355  128E               	bcf	14,5	;volatile
  2451  0356  0008               	return
  2452  0357                     __end_of_update_display:	
  2453                           ;update_display.c: 55: return;
  2454                           
  2455                           
  2456                           	psect	text6
  2457  0318                     __ptext6:	
  2458 ;; *************** function _write_char *****************
  2459 ;; Defined at:
  2460 ;;		line 24 in file "update_display.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  dat             1    wreg     unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  dat             1    5[COMMON] unsigned char 
  2465 ;;  i               1    6[COMMON] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;Total ram usage:        4 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    1
  2482 ;; This function calls:
  2483 ;;		_control595_delay
  2484 ;; This function is called by:
  2485 ;;		_update_display
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _write_char
  2491  0318                     _write_char:	
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  2495                           ;write_char@dat stored from wreg
  2496  0318  00F5               	movwf	write_char@dat
  2497                           
  2498                           ;update_display.c: 25: unsigned char i;
  2499                           ;update_display.c: 26: for(i = 0; i < 8; i++){
  2500  0319  01F6               	clrf	write_char@i
  2501  031A                     L2:	
  2502  031A  3008               	movlw	8
  2503  031B  0276               	subwf	write_char@i,w
  2504  031C  1803               	btfsc	3,0
  2505  031D  0008               	return
  2506                           
  2507                           ;update_display.c: 27: PORTBbits.RB3 = (dat & 0x80) >> 7;
  2508  031E  0875               	movf	write_char@dat,w
  2509  031F  00F3               	movwf	??_write_char
  2510  0320  3007               	movlw	7
  2511  0321                     u62_25:	
  2512  0321  36F3               	lsrf	??_write_char,f
  2513  0322  0B89               	decfsz	9,f
  2514  0323  2B21               	goto	u62_25
  2515  0324  0873               	movf	??_write_char,w
  2516  0325  3901               	andlw	1
  2517  0326  00F4               	movwf	??_write_char+1
  2518  0327  0DF4               	rlf	??_write_char+1,f
  2519  0328  0DF4               	rlf	??_write_char+1,f
  2520  0329  0DF4               	rlf	??_write_char+1,f
  2521  032A  0020               	movlb	0	; select bank0
  2522  032B  080D               	movf	13,w	;volatile
  2523  032C  0674               	xorwf	??_write_char+1,w
  2524  032D  39F7               	andlw	-9
  2525  032E  0674               	xorwf	??_write_char+1,w
  2526  032F  008D               	movwf	13	;volatile
  2527                           
  2528                           ;update_display.c: 28: PORTCbits.RC4 = 0;
  2529  0330  120E               	bcf	14,4	;volatile
  2530                           
  2531                           ;update_display.c: 29: control595_delay();
  2532  0331  3183  2357  3183   	fcall	_control595_delay
  2533                           
  2534                           ;update_display.c: 30: PORTCbits.RC4 = 1;
  2535  0334  0020               	movlb	0	; select bank0
  2536  0335  160E               	bsf	14,4	;volatile
  2537                           
  2538                           ;update_display.c: 31: control595_delay();
  2539  0336  3183  2357  3183   	fcall	_control595_delay
  2540                           
  2541                           ;update_display.c: 33: dat <<= 1;
  2542  0339  1003               	clrc
  2543  033A  0DF5               	rlf	write_char@dat,f
  2544  033B  3001               	movlw	1
  2545  033C  00F3               	movwf	??_write_char
  2546  033D  0873               	movf	??_write_char,w
  2547  033E  07F6               	addwf	write_char@i,f
  2548  033F  2B1A               	goto	L2
  2549  0340                     __end_of_write_char:	
  2550                           
  2551                           	psect	text7
  2552  0357                     __ptext7:	
  2553 ;; *************** function _control595_delay *****************
  2554 ;; Defined at:
  2555 ;;		line 16 in file "update_display.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  times           2    1[COMMON] int 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;Total ram usage:        3 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_write_char
  2579 ;;		_update_display
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _control595_delay
  2585  0357                     _control595_delay:	
  2586                           
  2587                           ;update_display.c: 17: int times = 10;
  2588                           
  2589                           ;incstack = 0
  2590                           ; Regs used in _control595_delay: [wreg]
  2591  0357  300A               	movlw	10
  2592  0358  00F1               	movwf	control595_delay@times
  2593  0359  3000               	movlw	0
  2594  035A  00F2               	movwf	control595_delay@times+1
  2595  035B                     i1l238:	
  2596                           ;update_display.c: 18: while(times > 0){
  2597                           
  2598  035B  0872               	movf	control595_delay@times+1,w
  2599  035C  3A80               	xorlw	128
  2600  035D  00F0               	movwf	??_control595_delay
  2601  035E  3080               	movlw	128
  2602  035F  0270               	subwf	??_control595_delay,w
  2603  0360  1D03               	skipz
  2604  0361  2B64               	goto	u60_25
  2605  0362  3001               	movlw	1
  2606  0363  0271               	subwf	control595_delay@times,w
  2607  0364                     u60_25:	
  2608  0364  1C03               	btfss	3,0
  2609  0365  0008               	return
  2610                           
  2611                           ;update_display.c: 19: __nop();
  2612  0366  0000               	nop
  2613                           
  2614                           ;update_display.c: 20: times--;
  2615  0367  30FF               	movlw	255
  2616  0368  07F1               	addwf	control595_delay@times,f
  2617  0369  30FF               	movlw	255
  2618  036A  3DF2               	addwfc	control595_delay@times+1,f
  2619  036B  2B5B               	goto	i1l238
  2620  036C                     __end_of_control595_delay:	
  2621                           
  2622                           	psect	text8
  2623  0293                     __ptext8:	
  2624 ;; *************** function ___awmod *****************
  2625 ;; Defined at:
  2626 ;;		line 6 in file "E:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  divisor         2    0[COMMON] int 
  2629 ;;  dividend        2    2[COMMON] int 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  sign            1    6[COMMON] unsigned char 
  2632 ;;  counter         1    5[COMMON] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    0[COMMON] int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;Total ram usage:        7 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_update_time
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function ___awmod
  2657  0293                     ___awmod:	
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2661  0293  01F6               	clrf	___awmod@sign
  2662  0294  1FF3               	btfss	___awmod@dividend+1,7
  2663  0295  2A9D               	goto	i1l1139
  2664  0296  09F2               	comf	___awmod@dividend,f
  2665  0297  09F3               	comf	___awmod@dividend+1,f
  2666  0298  0AF2               	incf	___awmod@dividend,f
  2667  0299  1903               	skipnz
  2668  029A  0AF3               	incf	___awmod@dividend+1,f
  2669  029B  01F6               	clrf	___awmod@sign
  2670  029C  0AF6               	incf	___awmod@sign,f
  2671  029D                     i1l1139:	
  2672  029D  1FF1               	btfss	___awmod@divisor+1,7
  2673  029E  2AA4               	goto	i1l1143
  2674  029F  09F0               	comf	___awmod@divisor,f
  2675  02A0  09F1               	comf	___awmod@divisor+1,f
  2676  02A1  0AF0               	incf	___awmod@divisor,f
  2677  02A2  1903               	skipnz
  2678  02A3  0AF1               	incf	___awmod@divisor+1,f
  2679  02A4                     i1l1143:	
  2680  02A4  0870               	movf	___awmod@divisor,w
  2681  02A5  0471               	iorwf	___awmod@divisor+1,w
  2682  02A6  1903               	btfsc	3,2
  2683  02A7  2ACB               	goto	i1l1161
  2684  02A8  01F5               	clrf	___awmod@counter
  2685  02A9  0AF5               	incf	___awmod@counter,f
  2686  02AA                     i1l1151:	
  2687  02AA  1BF1               	btfsc	___awmod@divisor+1,7
  2688  02AB  2AB6               	goto	i1l1153
  2689  02AC  3001               	movlw	1
  2690  02AD                     u67_25:	
  2691  02AD  35F0               	lslf	___awmod@divisor,f
  2692  02AE  0DF1               	rlf	___awmod@divisor+1,f
  2693  02AF  0B89               	decfsz	9,f
  2694  02B0  2AAD               	goto	u67_25
  2695  02B1  3001               	movlw	1
  2696  02B2  00F4               	movwf	??___awmod
  2697  02B3  0874               	movf	??___awmod,w
  2698  02B4  07F5               	addwf	___awmod@counter,f
  2699  02B5  2AAA               	goto	i1l1151
  2700  02B6                     i1l1153:	
  2701  02B6  0871               	movf	___awmod@divisor+1,w
  2702  02B7  0273               	subwf	___awmod@dividend+1,w
  2703  02B8  1D03               	skipz
  2704  02B9  2ABC               	goto	u69_25
  2705  02BA  0870               	movf	___awmod@divisor,w
  2706  02BB  0272               	subwf	___awmod@dividend,w
  2707  02BC                     u69_25:	
  2708  02BC  1C03               	skipc
  2709  02BD  2AC2               	goto	i1l1157
  2710  02BE  0870               	movf	___awmod@divisor,w
  2711  02BF  02F2               	subwf	___awmod@dividend,f
  2712  02C0  0871               	movf	___awmod@divisor+1,w
  2713  02C1  3BF3               	subwfb	___awmod@dividend+1,f
  2714  02C2                     i1l1157:	
  2715  02C2  3001               	movlw	1
  2716  02C3                     u70_25:	
  2717  02C3  36F1               	lsrf	___awmod@divisor+1,f
  2718  02C4  0CF0               	rrf	___awmod@divisor,f
  2719  02C5  0B89               	decfsz	9,f
  2720  02C6  2AC3               	goto	u70_25
  2721  02C7  3001               	movlw	1
  2722  02C8  02F5               	subwf	___awmod@counter,f
  2723  02C9  1D03               	btfss	3,2
  2724  02CA  2AB6               	goto	i1l1153
  2725  02CB                     i1l1161:	
  2726  02CB  0876               	movf	___awmod@sign,w
  2727  02CC  1903               	btfsc	3,2
  2728  02CD  2AD3               	goto	i1l1165
  2729  02CE  09F2               	comf	___awmod@dividend,f
  2730  02CF  09F3               	comf	___awmod@dividend+1,f
  2731  02D0  0AF2               	incf	___awmod@dividend,f
  2732  02D1  1903               	skipnz
  2733  02D2  0AF3               	incf	___awmod@dividend+1,f
  2734  02D3                     i1l1165:	
  2735  02D3  0873               	movf	___awmod@dividend+1,w
  2736  02D4  00F1               	movwf	?___awmod+1
  2737  02D5  0872               	movf	___awmod@dividend,w
  2738  02D6  00F0               	movwf	?___awmod
  2739  02D7  0008               	return
  2740  02D8                     __end_of___awmod:	
  2741                           
  2742                           	psect	text9
  2743  0151                     __ptext9:	
  2744 ;; *************** function _times2number *****************
  2745 ;; Defined at:
  2746 ;;		line 12 in file "receive_decode.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  high_level_t    2    0[COMMON] int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  2    0[COMMON] int 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;Total ram usage:        3 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_receive_decode
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _times2number
  2775  0151                     _times2number:	
  2776                           
  2777                           ;receive_decode.c: 13: if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _times2number: [wreg+status,2]
  2781  0151  0871               	movf	times2number@high_level_times+1,w
  2782  0152  3A80               	xorlw	128
  2783  0153  00F2               	movwf	??_times2number
  2784  0154  3080               	movlw	128
  2785  0155  0272               	subwf	??_times2number,w
  2786  0156  1D03               	skipz
  2787  0157  295A               	goto	u80_25
  2788  0158  3005               	movlw	5
  2789  0159  0270               	subwf	times2number@high_level_times,w
  2790  015A                     u80_25:	
  2791  015A  1C03               	skipc
  2792  015B  296A               	goto	i1l1211
  2793  015C  0871               	movf	times2number@high_level_times+1,w
  2794  015D  3A80               	xorlw	128
  2795  015E  00F2               	movwf	??_times2number
  2796  015F  3080               	movlw	128
  2797  0160  0272               	subwf	??_times2number,w
  2798  0161  1D03               	skipz
  2799  0162  2965               	goto	u81_25
  2800  0163  300F               	movlw	15
  2801  0164  0270               	subwf	times2number@high_level_times,w
  2802  0165                     u81_25:	
  2803  0165  1803               	skipnc
  2804  0166  296A               	goto	i1l1211
  2805                           
  2806                           ;receive_decode.c: 14: return 0;
  2807  0167  01F0               	clrf	?_times2number
  2808  0168  01F1               	clrf	?_times2number+1
  2809                           
  2810                           ;receive_decode.c: 15: }else if(high_level_times >= 20 - 5 && high_level_times < 20 + 5)
      +                          {
  2811  0169  0008               	return
  2812  016A                     i1l1211:	
  2813  016A  0871               	movf	times2number@high_level_times+1,w
  2814  016B  3A80               	xorlw	128
  2815  016C  00F2               	movwf	??_times2number
  2816  016D  3080               	movlw	128
  2817  016E  0272               	subwf	??_times2number,w
  2818  016F  1D03               	skipz
  2819  0170  2973               	goto	u82_25
  2820  0171  300F               	movlw	15
  2821  0172  0270               	subwf	times2number@high_level_times,w
  2822  0173                     u82_25:	
  2823  0173  1C03               	skipc
  2824  0174  2985               	goto	i1l1221
  2825  0175  0871               	movf	times2number@high_level_times+1,w
  2826  0176  3A80               	xorlw	128
  2827  0177  00F2               	movwf	??_times2number
  2828  0178  3080               	movlw	128
  2829  0179  0272               	subwf	??_times2number,w
  2830  017A  1D03               	skipz
  2831  017B  297E               	goto	u83_25
  2832  017C  3019               	movlw	25
  2833  017D  0270               	subwf	times2number@high_level_times,w
  2834  017E                     u83_25:	
  2835  017E  1803               	skipnc
  2836  017F  2985               	goto	i1l1221
  2837                           
  2838                           ;receive_decode.c: 16: return 1;
  2839  0180  3001               	movlw	1
  2840  0181  00F0               	movwf	?_times2number
  2841  0182  3000               	movlw	0
  2842  0183  00F1               	movwf	?_times2number+1
  2843                           
  2844                           ;receive_decode.c: 17: }else if(high_level_times >= 30 - 5 && high_level_times < 30 + 5)
      +                          {
  2845  0184  0008               	return
  2846  0185                     i1l1221:	
  2847  0185  0871               	movf	times2number@high_level_times+1,w
  2848  0186  3A80               	xorlw	128
  2849  0187  00F2               	movwf	??_times2number
  2850  0188  3080               	movlw	128
  2851  0189  0272               	subwf	??_times2number,w
  2852  018A  1D03               	skipz
  2853  018B  298E               	goto	u84_25
  2854  018C  3019               	movlw	25
  2855  018D  0270               	subwf	times2number@high_level_times,w
  2856  018E                     u84_25:	
  2857  018E  1C03               	skipc
  2858  018F  29A0               	goto	i1l1231
  2859  0190  0871               	movf	times2number@high_level_times+1,w
  2860  0191  3A80               	xorlw	128
  2861  0192  00F2               	movwf	??_times2number
  2862  0193  3080               	movlw	128
  2863  0194  0272               	subwf	??_times2number,w
  2864  0195  1D03               	skipz
  2865  0196  2999               	goto	u85_25
  2866  0197  3023               	movlw	35
  2867  0198  0270               	subwf	times2number@high_level_times,w
  2868  0199                     u85_25:	
  2869  0199  1803               	skipnc
  2870  019A  29A0               	goto	i1l1231
  2871                           
  2872                           ;receive_decode.c: 18: return 2;
  2873  019B  3002               	movlw	2
  2874  019C  00F0               	movwf	?_times2number
  2875  019D  3000               	movlw	0
  2876  019E  00F1               	movwf	?_times2number+1
  2877                           
  2878                           ;receive_decode.c: 19: }else if(high_level_times >= 40 - 5 && high_level_times < 40 + 5)
      +                          {
  2879  019F  0008               	return
  2880  01A0                     i1l1231:	
  2881  01A0  0871               	movf	times2number@high_level_times+1,w
  2882  01A1  3A80               	xorlw	128
  2883  01A2  00F2               	movwf	??_times2number
  2884  01A3  3080               	movlw	128
  2885  01A4  0272               	subwf	??_times2number,w
  2886  01A5  1D03               	skipz
  2887  01A6  29A9               	goto	u86_25
  2888  01A7  3023               	movlw	35
  2889  01A8  0270               	subwf	times2number@high_level_times,w
  2890  01A9                     u86_25:	
  2891  01A9  1C03               	skipc
  2892  01AA  29BB               	goto	i1l1241
  2893  01AB  0871               	movf	times2number@high_level_times+1,w
  2894  01AC  3A80               	xorlw	128
  2895  01AD  00F2               	movwf	??_times2number
  2896  01AE  3080               	movlw	128
  2897  01AF  0272               	subwf	??_times2number,w
  2898  01B0  1D03               	skipz
  2899  01B1  29B4               	goto	u87_25
  2900  01B2  302D               	movlw	45
  2901  01B3  0270               	subwf	times2number@high_level_times,w
  2902  01B4                     u87_25:	
  2903  01B4  1803               	skipnc
  2904  01B5  29BB               	goto	i1l1241
  2905                           
  2906                           ;receive_decode.c: 20: return 3;
  2907  01B6  3003               	movlw	3
  2908  01B7  00F0               	movwf	?_times2number
  2909  01B8  3000               	movlw	0
  2910  01B9  00F1               	movwf	?_times2number+1
  2911                           
  2912                           ;receive_decode.c: 21: }else if(high_level_times >= 40 + 5){
  2913  01BA  0008               	return
  2914  01BB                     i1l1241:	
  2915  01BB  0871               	movf	times2number@high_level_times+1,w
  2916  01BC  3A80               	xorlw	128
  2917  01BD  00F2               	movwf	??_times2number
  2918  01BE  3080               	movlw	128
  2919  01BF  0272               	subwf	??_times2number,w
  2920  01C0  1D03               	skipz
  2921  01C1  29C4               	goto	u88_25
  2922  01C2  302D               	movlw	45
  2923  01C3  0270               	subwf	times2number@high_level_times,w
  2924  01C4                     u88_25:	
  2925  01C4  1C03               	skipc
  2926  01C5  29CB               	goto	i1l1249
  2927                           
  2928                           ;receive_decode.c: 22: return 4;
  2929  01C6  3004               	movlw	4
  2930  01C7  00F0               	movwf	?_times2number
  2931  01C8  3000               	movlw	0
  2932  01C9  00F1               	movwf	?_times2number+1
  2933                           
  2934                           ;receive_decode.c: 23: }else{
  2935  01CA  0008               	return
  2936  01CB                     i1l1249:	
  2937                           
  2938                           ;receive_decode.c: 24: return 5;
  2939  01CB  3005               	movlw	5
  2940  01CC  00F0               	movwf	?_times2number
  2941  01CD  3000               	movlw	0
  2942  01CE  00F1               	movwf	?_times2number+1
  2943  01CF  0008               	return
  2944  01D0                     __end_of_times2number:	
  2945                           
  2946                           	psect	text10
  2947  02D8                     __ptext10:	
  2948 ;; *************** function _test_value *****************
  2949 ;; Defined at:
  2950 ;;		line 28 in file "receive_decode.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  value           2    0[COMMON] int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_receive_decode
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _test_value
  2979  02D8                     _test_value:	
  2980                           
  2981                           ;receive_decode.c: 29: if(value == 0){
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _test_value: [wreg+status,2+status,0]
  2985  02D8  0870               	movf	test_value@value,w
  2986  02D9  0471               	iorwf	test_value@value+1,w
  2987  02DA  1D03               	btfss	3,2
  2988  02DB  2AE2               	goto	i1l1257
  2989                           
  2990                           ;receive_decode.c: 30: LATAbits.LATA2 = 1;
  2991  02DC  0022               	movlb	2	; select bank2
  2992  02DD  150C               	bsf	12,2	;volatile
  2993                           
  2994                           ;receive_decode.c: 31: LATAbits.LATA3 = 0;
  2995  02DE  118C               	bcf	12,3	;volatile
  2996                           
  2997                           ;receive_decode.c: 32: LATAbits.LATA4 = 0;
  2998  02DF  120C               	bcf	12,4	;volatile
  2999                           
  3000                           ;receive_decode.c: 33: LATAbits.LATA5 = 0;
  3001  02E0  128C               	bcf	12,5	;volatile
  3002                           
  3003                           ;receive_decode.c: 34: }else if(value == 1){
  3004  02E1  0008               	return
  3005  02E2                     i1l1257:	
  3006  02E2  0370               	decf	test_value@value,w
  3007  02E3  0471               	iorwf	test_value@value+1,w
  3008  02E4  1D03               	btfss	3,2
  3009  02E5  2AEC               	goto	i1l1261
  3010                           
  3011                           ;receive_decode.c: 35: LATAbits.LATA2 = 0;
  3012  02E6  0022               	movlb	2	; select bank2
  3013  02E7  110C               	bcf	12,2	;volatile
  3014                           
  3015                           ;receive_decode.c: 36: LATAbits.LATA3 = 1;
  3016  02E8  158C               	bsf	12,3	;volatile
  3017                           
  3018                           ;receive_decode.c: 37: LATAbits.LATA4 = 0;
  3019  02E9  120C               	bcf	12,4	;volatile
  3020                           
  3021                           ;receive_decode.c: 38: LATAbits.LATA5 = 0;
  3022  02EA  128C               	bcf	12,5	;volatile
  3023                           
  3024                           ;receive_decode.c: 39: }else if(value == 2){
  3025  02EB  0008               	return
  3026  02EC                     i1l1261:	
  3027  02EC  3002               	movlw	2
  3028  02ED  0670               	xorwf	test_value@value,w
  3029  02EE  0471               	iorwf	test_value@value+1,w
  3030  02EF  1D03               	btfss	3,2
  3031  02F0  2AF7               	goto	i1l1265
  3032                           
  3033                           ;receive_decode.c: 40: LATAbits.LATA2 = 0;
  3034  02F1  0022               	movlb	2	; select bank2
  3035  02F2  110C               	bcf	12,2	;volatile
  3036                           
  3037                           ;receive_decode.c: 41: LATAbits.LATA3 = 0;
  3038  02F3  118C               	bcf	12,3	;volatile
  3039                           
  3040                           ;receive_decode.c: 42: LATAbits.LATA4 = 1;
  3041  02F4  160C               	bsf	12,4	;volatile
  3042                           
  3043                           ;receive_decode.c: 43: LATAbits.LATA5 = 0;
  3044  02F5  128C               	bcf	12,5	;volatile
  3045                           
  3046                           ;receive_decode.c: 44: }else if(value == 3){
  3047  02F6  0008               	return
  3048  02F7                     i1l1265:	
  3049  02F7  3003               	movlw	3
  3050  02F8  0670               	xorwf	test_value@value,w
  3051  02F9  0471               	iorwf	test_value@value+1,w
  3052  02FA  1D03               	btfss	3,2
  3053  02FB  2B02               	goto	i1l1269
  3054                           
  3055                           ;receive_decode.c: 45: LATAbits.LATA2 = 0;
  3056  02FC  0022               	movlb	2	; select bank2
  3057  02FD  110C               	bcf	12,2	;volatile
  3058                           
  3059                           ;receive_decode.c: 46: LATAbits.LATA3 = 0;
  3060  02FE  118C               	bcf	12,3	;volatile
  3061                           
  3062                           ;receive_decode.c: 47: LATAbits.LATA4 = 0;
  3063  02FF  120C               	bcf	12,4	;volatile
  3064                           
  3065                           ;receive_decode.c: 48: LATAbits.LATA5 = 1;
  3066  0300  168C               	bsf	12,5	;volatile
  3067                           
  3068                           ;receive_decode.c: 49: }else if(value == 4){
  3069  0301  0008               	return
  3070  0302                     i1l1269:	
  3071  0302  3004               	movlw	4
  3072  0303  0670               	xorwf	test_value@value,w
  3073  0304  0471               	iorwf	test_value@value+1,w
  3074  0305  1D03               	btfss	3,2
  3075  0306  2B0D               	goto	i1l1273
  3076                           
  3077                           ;receive_decode.c: 50: LATAbits.LATA2 = 1;
  3078  0307  0022               	movlb	2	; select bank2
  3079  0308  150C               	bsf	12,2	;volatile
  3080                           
  3081                           ;receive_decode.c: 51: LATAbits.LATA3 = 1;
  3082  0309  158C               	bsf	12,3	;volatile
  3083                           
  3084                           ;receive_decode.c: 52: LATAbits.LATA4 = 1;
  3085  030A  160C               	bsf	12,4	;volatile
  3086                           
  3087                           ;receive_decode.c: 53: LATAbits.LATA5 = 1;
  3088  030B  168C               	bsf	12,5	;volatile
  3089                           
  3090                           ;receive_decode.c: 54: }else if(value == 5){
  3091  030C  0008               	return
  3092  030D                     i1l1273:	
  3093  030D  3005               	movlw	5
  3094  030E  0670               	xorwf	test_value@value,w
  3095  030F  0471               	iorwf	test_value@value+1,w
  3096  0310  1D03               	btfss	3,2
  3097  0311  0008               	return
  3098                           
  3099                           ;receive_decode.c: 55: LATAbits.LATA2 = 0;
  3100  0312  0022               	movlb	2	; select bank2
  3101  0313  110C               	bcf	12,2	;volatile
  3102                           
  3103                           ;receive_decode.c: 56: LATAbits.LATA3 = 0;
  3104  0314  118C               	bcf	12,3	;volatile
  3105                           
  3106                           ;receive_decode.c: 57: LATAbits.LATA4 = 0;
  3107  0315  120C               	bcf	12,4	;volatile
  3108                           
  3109                           ;receive_decode.c: 58: LATAbits.LATA5 = 0;
  3110  0316  128C               	bcf	12,5	;volatile
  3111  0317  0008               	return
  3112  0318                     __end_of_test_value:	
  3113  007E                     btemp	set	126	;btemp
  3114  007E                     int$flags	set	126
  3115  007E                     wtemp	set	126
  3116  007E                     wtemp0	set	126
  3117  0080                     wtemp1	set	128
  3118  0082                     wtemp2	set	130
  3119  0084                     wtemp3	set	132
  3120  0086                     wtemp4	set	134
  3121  0088                     wtemp5	set	136
  3122  007F                     wtemp6	set	127
  3123  007E                     ttemp	set	126
  3124  007E                     ttemp0	set	126
  3125  0081                     ttemp1	set	129
  3126  0084                     ttemp2	set	132
  3127  0087                     ttemp3	set	135
  3128  007F                     ttemp4	set	127
  3129  007E                     ltemp	set	126
  3130  007E                     ltemp0	set	126
  3131  0082                     ltemp1	set	130
  3132  0086                     ltemp2	set	134
  3133  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      71
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_receive_decode
    _update_time->___awmod
    _update_display->_write_char
    _write_char->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0    1765
                                             13 COMMON     1     1      0
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _receive_decode                                      14    14      0    1224
                                              7 COMMON     6     6      0
                                              0 BANK0      8     8      0
                         _test_value
                       _times2number
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                          0     0      0     541
                            ___awmod
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       0     0      0     117
                   _control595_delay
                         _write_char
 ---------------------------------------------------------------------------------
 (5) _write_char                                           4     4      0      93
                                              3 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (6) _control595_delay                                     3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _times2number                                         3     1      2     262
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (4) _test_value                                           2     0      2     196
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env

 _ISR (ROOT)
   _receive_decode
     _test_value
     _times2number
     _update_time
       ___awmod
       _update_display
         _control595_delay
         _write_char
           _control595_delay
   _update_time
     ___awmod
     _update_display
       _control595_delay
       _write_char
         _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Mar 17 22:24:11 2019

             ?_receive_decode 0070                   _update_time 0248             _g_find_recv_start 004A  
                 __CFG_CP$OFF 0000                            l90 038B                            l97 0245  
              _update_display 0340                   __CFG_LVP$ON 0000             ?_control595_delay 0070  
                __CFG_CPD$OFF 0000                           _ISR 0004                  ___awmod@sign 0076  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000                 write_char@dat 0075  
                        ?_ISR 0070                          l1429 022D                          u1085 022B  
                        _LATA 010C                          _LATB 010D                          u1095 0243  
                        _LATC 010E                          i1l80 0047                          i1l84 0024  
                        i1l85 0038                          i1l79 001F                          _TMR0 0015  
                        _WPUA 020C                          _WPUB 020D                          _WPUC 020E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _main 0388  
                        fsr0h 0005                          fsr1h 0007                          fsr0l 0004  
                        indf0 0000                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000                          ltemp 007E                          start 004C  
                        ttemp 007E                          wtemp 007E                 __CFG_MCLRE$ON 0000  
                       ??_ISR 007D        __end_of_update_display 0357                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___awmod 02D8  
                       _IOCAN 0392                         _IOCBN 0395                         _IOCAP 0391  
                       _IOCCN 0398                         _IOCBP 0394                         _IOCCP 0397  
                       i1l156 006C                         i1l238 035B                         u60_25 0364  
                       u70_25 02C3                         u62_25 0321                         u80_25 015A  
                       _TRISA 008C                         _TRISB 008D                         u81_25 0165  
                       _TRISC 008E                         u74_20 0265                         u82_25 0173  
                       u83_25 017E                         u67_25 02AD                         u84_25 018E  
                       u85_25 0199                         u69_25 02BC                         u86_25 01A9  
                       u87_25 01B4                         u88_25 01C4                         u96_25 0079  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __initialization 004E  
                __end_of_main 038C               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 0067                        u101_25 00C3                        i1l1211 016A  
                      i1l1221 0185                        i1l1301 00A0                        i1l1231 01A0  
                      i1l1151 02AA                        i1l1143 02A4                        i1l1241 01BB  
                      i1l1153 02B6                        i1l1161 02CB                        i1l1139 029D  
                      i1l1261 02EC                        i1l1165 02D3                        i1l1157 02C2  
                      i1l1333 012E                        i1l1325 00D3                        i1l1175 0267  
                      i1l1335 0131                        i1l1273 030D                        i1l1265 02F7  
                      i1l1257 02E2                        i1l1249 01CB                        i1l1269 0302  
                      i1l1197 0290                        u104_25 0124                        i1l1457 0027  
                      u105_25 012C                        u106_25 0141                __CFG_PWRTE$OFF 0000  
              __CFG_STVREN$ON 0000                     ??___awmod 0074              __end_of_init_env 0248  
             ___awmod@divisor 0070               ___awmod@counter 0075  times2number@high_level_times 0070  
     __end_of__initialization 0061              ??_receive_decode 0077                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                  __pidataBANK1 036C  
              _OPTION_REGbits 0095                    __pbssBANK0 0020     __size_of_control595_delay 0015  
             __CFG_VCAPEN$OFF 0000                    __pmaintext 0388                    _g_recv_buf 0020  
                  __pintentry 0004                  _g_recv_count 004E            _g_high_level_times 004C  
         _g_start_read_switch 0052                     ?_init_env 0070              ??_update_display 0077  
                     ___awmod 0293                       __ptext1 01D0                       __ptext3 0065  
                     __ptext4 0248                       __ptext5 0340                       __ptext6 0318  
                     __ptext7 0357                       __ptext8 0293                       __ptext9 0151  
                __size_of_ISR 0048              ___awmod@dividend 0072                 ?_times2number 0070  
                   _IOCCFbits 0399                     _IOCCPbits 0397                       clrloop0 0383  
        end_of_initialization 0061                       init_ram 037C                    ??_init_env 0064  
                     initloop 037D          __size_of_update_time 004B                     _PORTBbits 000D  
                   _PORTCbits 000E                    _test_value 02D8                ??_times2number 0072  
                   _TRISCbits 008E              _control595_delay 0357                    _write_char 0318  
    receive_decode@read_value 0062               test_value@value 0070           start_initialization 004E  
    receive_decode@old_time_h 005C      receive_decode@old_time_m 005E                   __end_of_ISR 004C  
             receive_decode@i 0060                   __pdataBANK1 00A0                   ?_test_value 0070  
                   ___latbits 0002                 __pcstackBANK0 005C             __size_of_init_env 0078  
        __end_of_times2number 01D0                      ?___awmod 0070       __size_of_receive_decode 00EC  
                 ?_write_char 0070                      _LATAbits 010C                     clear_ram0 0382  
         __size_of_test_value 0040      __end_of_control595_delay 036C                   write_char@i 0076  
                    _WPUCbits 020E           __size_of_write_char 0028                 ??_update_time 0077  
                   init_env@i 0065              __size_of___awmod 0045       __size_of_update_display 0017  
                    __ptext10 02D8                      _g_time_h 0054                      _g_time_m 0056  
                    _g_time_s 0058                      _g_time_u 005A             _g_start_read_data 0050  
       __size_of_times2number 007F                      _init_env 01D0                 __size_of_main 0004  
                    _segmcode 00A0                      int$flags 007E                _receive_decode 0065  
         __end_of_update_time 0293                  ??_test_value 0072                    _INTCONbits 000B  
                _times2number 0151                      intlevel1 0000             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099             _g_all_level_times 0048            __end_of_test_value 0318  
      __end_of_receive_decode 0151                  ??_write_char 0073            __end_of_write_char 0340  

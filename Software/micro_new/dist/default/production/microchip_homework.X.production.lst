

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 25 19:44:52 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.00
    24                           ; Generated 27/05/2018 GMT
    25                           ; 
    26                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1786 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011C                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  020E                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028E                     	;# 
   186  0291                     	;# 
   187  0291                     	;# 
   188  0292                     	;# 
   189  0293                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  030C                     	;# 
   195  030D                     	;# 
   196  030E                     	;# 
   197  0311                     	;# 
   198  0311                     	;# 
   199  0312                     	;# 
   200  0313                     	;# 
   201  038C                     	;# 
   202  038D                     	;# 
   203  038E                     	;# 
   204  0390                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  0397                     	;# 
   212  0398                     	;# 
   213  0399                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0511                     	;# 
   218  0513                     	;# 
   219  051A                     	;# 
   220  0811                     	;# 
   221  0812                     	;# 
   222  0813                     	;# 
   223  0814                     	;# 
   224  0815                     	;# 
   225  0816                     	;# 
   226  0817                     	;# 
   227  0818                     	;# 
   228  0819                     	;# 
   229  081A                     	;# 
   230  081B                     	;# 
   231  081C                     	;# 
   232  081D                     	;# 
   233  081E                     	;# 
   234  081F                     	;# 
   235  0820                     	;# 
   236  0821                     	;# 
   237  0821                     	;# 
   238  0822                     	;# 
   239  0823                     	;# 
   240  0823                     	;# 
   241  0824                     	;# 
   242  0825                     	;# 
   243  0825                     	;# 
   244  0826                     	;# 
   245  0827                     	;# 
   246  0827                     	;# 
   247  0828                     	;# 
   248  0829                     	;# 
   249  082A                     	;# 
   250  082B                     	;# 
   251  082C                     	;# 
   252  082D                     	;# 
   253  082E                     	;# 
   254  082F                     	;# 
   255  0831                     	;# 
   256  0832                     	;# 
   257  0833                     	;# 
   258  0834                     	;# 
   259  0835                     	;# 
   260  0836                     	;# 
   261  0837                     	;# 
   262  0838                     	;# 
   263  0839                     	;# 
   264  083A                     	;# 
   265  083B                     	;# 
   266  083C                     	;# 
   267  083D                     	;# 
   268  083E                     	;# 
   269  083F                     	;# 
   270  0840                     	;# 
   271  0841                     	;# 
   272  0841                     	;# 
   273  0842                     	;# 
   274  0843                     	;# 
   275  0843                     	;# 
   276  0844                     	;# 
   277  0845                     	;# 
   278  0845                     	;# 
   279  0846                     	;# 
   280  0847                     	;# 
   281  0847                     	;# 
   282  0848                     	;# 
   283  0849                     	;# 
   284  084A                     	;# 
   285  084B                     	;# 
   286  084C                     	;# 
   287  084D                     	;# 
   288  084E                     	;# 
   289  084F                     	;# 
   290  0851                     	;# 
   291  0852                     	;# 
   292  0853                     	;# 
   293  0854                     	;# 
   294  0855                     	;# 
   295  0856                     	;# 
   296  0857                     	;# 
   297  0858                     	;# 
   298  0859                     	;# 
   299  085A                     	;# 
   300  085B                     	;# 
   301  085C                     	;# 
   302  085D                     	;# 
   303  085E                     	;# 
   304  085F                     	;# 
   305  0860                     	;# 
   306  0861                     	;# 
   307  0861                     	;# 
   308  0862                     	;# 
   309  0863                     	;# 
   310  0863                     	;# 
   311  0864                     	;# 
   312  0865                     	;# 
   313  0865                     	;# 
   314  0866                     	;# 
   315  0867                     	;# 
   316  0867                     	;# 
   317  0868                     	;# 
   318  0869                     	;# 
   319  086A                     	;# 
   320  086B                     	;# 
   321  086C                     	;# 
   322  086D                     	;# 
   323  086E                     	;# 
   324  086F                     	;# 
   325  0FE4                     	;# 
   326  0FE5                     	;# 
   327  0FE6                     	;# 
   328  0FE7                     	;# 
   329  0FE8                     	;# 
   330  0FE9                     	;# 
   331  0FEA                     	;# 
   332  0FEB                     	;# 
   333  0FED                     	;# 
   334  0FEE                     	;# 
   335  0FEF                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  0010                     	;# 
   352  0011                     	;# 
   353  0012                     	;# 
   354  0013                     	;# 
   355  0014                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0016                     	;# 
   359  0017                     	;# 
   360  0018                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011C                     	;# 
   400  011D                     	;# 
   401  011D                     	;# 
   402  011D                     	;# 
   403  011E                     	;# 
   404  011F                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0191                     	;# 
   408  0191                     	;# 
   409  0192                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0193                     	;# 
   413  0194                     	;# 
   414  0195                     	;# 
   415  0196                     	;# 
   416  0197                     	;# 
   417  0199                     	;# 
   418  0199                     	;# 
   419  0199                     	;# 
   420  019A                     	;# 
   421  019A                     	;# 
   422  019A                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019C                     	;# 
   429  019C                     	;# 
   430  019C                     	;# 
   431  019D                     	;# 
   432  019D                     	;# 
   433  019D                     	;# 
   434  019E                     	;# 
   435  019E                     	;# 
   436  019E                     	;# 
   437  019F                     	;# 
   438  019F                     	;# 
   439  019F                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020D                     	;# 
   444  020E                     	;# 
   445  0210                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0216                     	;# 
   459  0216                     	;# 
   460  0217                     	;# 
   461  0217                     	;# 
   462  028C                     	;# 
   463  028D                     	;# 
   464  028E                     	;# 
   465  0291                     	;# 
   466  0291                     	;# 
   467  0292                     	;# 
   468  0293                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  030C                     	;# 
   474  030D                     	;# 
   475  030E                     	;# 
   476  0311                     	;# 
   477  0311                     	;# 
   478  0312                     	;# 
   479  0313                     	;# 
   480  038C                     	;# 
   481  038D                     	;# 
   482  038E                     	;# 
   483  0390                     	;# 
   484  0391                     	;# 
   485  0392                     	;# 
   486  0393                     	;# 
   487  0394                     	;# 
   488  0395                     	;# 
   489  0396                     	;# 
   490  0397                     	;# 
   491  0398                     	;# 
   492  0399                     	;# 
   493  039D                     	;# 
   494  039E                     	;# 
   495  039F                     	;# 
   496  0511                     	;# 
   497  0513                     	;# 
   498  051A                     	;# 
   499  0811                     	;# 
   500  0812                     	;# 
   501  0813                     	;# 
   502  0814                     	;# 
   503  0815                     	;# 
   504  0816                     	;# 
   505  0817                     	;# 
   506  0818                     	;# 
   507  0819                     	;# 
   508  081A                     	;# 
   509  081B                     	;# 
   510  081C                     	;# 
   511  081D                     	;# 
   512  081E                     	;# 
   513  081F                     	;# 
   514  0820                     	;# 
   515  0821                     	;# 
   516  0821                     	;# 
   517  0822                     	;# 
   518  0823                     	;# 
   519  0823                     	;# 
   520  0824                     	;# 
   521  0825                     	;# 
   522  0825                     	;# 
   523  0826                     	;# 
   524  0827                     	;# 
   525  0827                     	;# 
   526  0828                     	;# 
   527  0829                     	;# 
   528  082A                     	;# 
   529  082B                     	;# 
   530  082C                     	;# 
   531  082D                     	;# 
   532  082E                     	;# 
   533  082F                     	;# 
   534  0831                     	;# 
   535  0832                     	;# 
   536  0833                     	;# 
   537  0834                     	;# 
   538  0835                     	;# 
   539  0836                     	;# 
   540  0837                     	;# 
   541  0838                     	;# 
   542  0839                     	;# 
   543  083A                     	;# 
   544  083B                     	;# 
   545  083C                     	;# 
   546  083D                     	;# 
   547  083E                     	;# 
   548  083F                     	;# 
   549  0840                     	;# 
   550  0841                     	;# 
   551  0841                     	;# 
   552  0842                     	;# 
   553  0843                     	;# 
   554  0843                     	;# 
   555  0844                     	;# 
   556  0845                     	;# 
   557  0845                     	;# 
   558  0846                     	;# 
   559  0847                     	;# 
   560  0847                     	;# 
   561  0848                     	;# 
   562  0849                     	;# 
   563  084A                     	;# 
   564  084B                     	;# 
   565  084C                     	;# 
   566  084D                     	;# 
   567  084E                     	;# 
   568  084F                     	;# 
   569  0851                     	;# 
   570  0852                     	;# 
   571  0853                     	;# 
   572  0854                     	;# 
   573  0855                     	;# 
   574  0856                     	;# 
   575  0857                     	;# 
   576  0858                     	;# 
   577  0859                     	;# 
   578  085A                     	;# 
   579  085B                     	;# 
   580  085C                     	;# 
   581  085D                     	;# 
   582  085E                     	;# 
   583  085F                     	;# 
   584  0860                     	;# 
   585  0861                     	;# 
   586  0861                     	;# 
   587  0862                     	;# 
   588  0863                     	;# 
   589  0863                     	;# 
   590  0864                     	;# 
   591  0865                     	;# 
   592  0865                     	;# 
   593  0866                     	;# 
   594  0867                     	;# 
   595  0867                     	;# 
   596  0868                     	;# 
   597  0869                     	;# 
   598  086A                     	;# 
   599  086B                     	;# 
   600  086C                     	;# 
   601  086D                     	;# 
   602  086E                     	;# 
   603  086F                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000D                     	;# 
   629  000E                     	;# 
   630  0010                     	;# 
   631  0011                     	;# 
   632  0012                     	;# 
   633  0013                     	;# 
   634  0014                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  0019                     	;# 
   641  001A                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  008C                     	;# 
   645  008D                     	;# 
   646  008E                     	;# 
   647  0090                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  009F                     	;# 
   664  010C                     	;# 
   665  010D                     	;# 
   666  010E                     	;# 
   667  0111                     	;# 
   668  0112                     	;# 
   669  0113                     	;# 
   670  0114                     	;# 
   671  0115                     	;# 
   672  0116                     	;# 
   673  0117                     	;# 
   674  0118                     	;# 
   675  0119                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011C                     	;# 
   679  011D                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011E                     	;# 
   683  011F                     	;# 
   684  018C                     	;# 
   685  018D                     	;# 
   686  0191                     	;# 
   687  0191                     	;# 
   688  0192                     	;# 
   689  0193                     	;# 
   690  0193                     	;# 
   691  0193                     	;# 
   692  0194                     	;# 
   693  0195                     	;# 
   694  0196                     	;# 
   695  0197                     	;# 
   696  0199                     	;# 
   697  0199                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019A                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019C                     	;# 
   708  019C                     	;# 
   709  019C                     	;# 
   710  019D                     	;# 
   711  019D                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019E                     	;# 
   715  019E                     	;# 
   716  019F                     	;# 
   717  019F                     	;# 
   718  019F                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  020C                     	;# 
   722  020D                     	;# 
   723  020E                     	;# 
   724  0210                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  028C                     	;# 
   742  028D                     	;# 
   743  028E                     	;# 
   744  0291                     	;# 
   745  0291                     	;# 
   746  0292                     	;# 
   747  0293                     	;# 
   748  0298                     	;# 
   749  0298                     	;# 
   750  0299                     	;# 
   751  029A                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  0311                     	;# 
   756  0311                     	;# 
   757  0312                     	;# 
   758  0313                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0394                     	;# 
   767  0395                     	;# 
   768  0396                     	;# 
   769  0397                     	;# 
   770  0398                     	;# 
   771  0399                     	;# 
   772  039D                     	;# 
   773  039E                     	;# 
   774  039F                     	;# 
   775  0511                     	;# 
   776  0513                     	;# 
   777  051A                     	;# 
   778  0811                     	;# 
   779  0812                     	;# 
   780  0813                     	;# 
   781  0814                     	;# 
   782  0815                     	;# 
   783  0816                     	;# 
   784  0817                     	;# 
   785  0818                     	;# 
   786  0819                     	;# 
   787  081A                     	;# 
   788  081B                     	;# 
   789  081C                     	;# 
   790  081D                     	;# 
   791  081E                     	;# 
   792  081F                     	;# 
   793  0820                     	;# 
   794  0821                     	;# 
   795  0821                     	;# 
   796  0822                     	;# 
   797  0823                     	;# 
   798  0823                     	;# 
   799  0824                     	;# 
   800  0825                     	;# 
   801  0825                     	;# 
   802  0826                     	;# 
   803  0827                     	;# 
   804  0827                     	;# 
   805  0828                     	;# 
   806  0829                     	;# 
   807  082A                     	;# 
   808  082B                     	;# 
   809  082C                     	;# 
   810  082D                     	;# 
   811  082E                     	;# 
   812  082F                     	;# 
   813  0831                     	;# 
   814  0832                     	;# 
   815  0833                     	;# 
   816  0834                     	;# 
   817  0835                     	;# 
   818  0836                     	;# 
   819  0837                     	;# 
   820  0838                     	;# 
   821  0839                     	;# 
   822  083A                     	;# 
   823  083B                     	;# 
   824  083C                     	;# 
   825  083D                     	;# 
   826  083E                     	;# 
   827  083F                     	;# 
   828  0840                     	;# 
   829  0841                     	;# 
   830  0841                     	;# 
   831  0842                     	;# 
   832  0843                     	;# 
   833  0843                     	;# 
   834  0844                     	;# 
   835  0845                     	;# 
   836  0845                     	;# 
   837  0846                     	;# 
   838  0847                     	;# 
   839  0847                     	;# 
   840  0848                     	;# 
   841  0849                     	;# 
   842  084A                     	;# 
   843  084B                     	;# 
   844  084C                     	;# 
   845  084D                     	;# 
   846  084E                     	;# 
   847  084F                     	;# 
   848  0851                     	;# 
   849  0852                     	;# 
   850  0853                     	;# 
   851  0854                     	;# 
   852  0855                     	;# 
   853  0856                     	;# 
   854  0857                     	;# 
   855  0858                     	;# 
   856  0859                     	;# 
   857  085A                     	;# 
   858  085B                     	;# 
   859  085C                     	;# 
   860  085D                     	;# 
   861  085E                     	;# 
   862  085F                     	;# 
   863  0860                     	;# 
   864  0861                     	;# 
   865  0861                     	;# 
   866  0862                     	;# 
   867  0863                     	;# 
   868  0863                     	;# 
   869  0864                     	;# 
   870  0865                     	;# 
   871  0865                     	;# 
   872  0866                     	;# 
   873  0867                     	;# 
   874  0867                     	;# 
   875  0868                     	;# 
   876  0869                     	;# 
   877  086A                     	;# 
   878  086B                     	;# 
   879  086C                     	;# 
   880  086D                     	;# 
   881  086E                     	;# 
   882  086F                     	;# 
   883  0FE4                     	;# 
   884  0FE5                     	;# 
   885  0FE6                     	;# 
   886  0FE7                     	;# 
   887  0FE8                     	;# 
   888  0FE9                     	;# 
   889  0FEA                     	;# 
   890  0FEB                     	;# 
   891  0FED                     	;# 
   892  0FEE                     	;# 
   893  0FEF                     	;# 
   894  0000                     	;# 
   895  0001                     	;# 
   896  0002                     	;# 
   897  0003                     	;# 
   898  0004                     	;# 
   899  0005                     	;# 
   900  0006                     	;# 
   901  0007                     	;# 
   902  0008                     	;# 
   903  0009                     	;# 
   904  000A                     	;# 
   905  000B                     	;# 
   906  000C                     	;# 
   907  000D                     	;# 
   908  000E                     	;# 
   909  0010                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0013                     	;# 
   913  0014                     	;# 
   914  0015                     	;# 
   915  0016                     	;# 
   916  0016                     	;# 
   917  0017                     	;# 
   918  0018                     	;# 
   919  0019                     	;# 
   920  001A                     	;# 
   921  001B                     	;# 
   922  001C                     	;# 
   923  008C                     	;# 
   924  008D                     	;# 
   925  008E                     	;# 
   926  0090                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0093                     	;# 
   930  0094                     	;# 
   931  0095                     	;# 
   932  0096                     	;# 
   933  0097                     	;# 
   934  0098                     	;# 
   935  0099                     	;# 
   936  009A                     	;# 
   937  009B                     	;# 
   938  009B                     	;# 
   939  009C                     	;# 
   940  009D                     	;# 
   941  009E                     	;# 
   942  009F                     	;# 
   943  010C                     	;# 
   944  010D                     	;# 
   945  010E                     	;# 
   946  0111                     	;# 
   947  0112                     	;# 
   948  0113                     	;# 
   949  0114                     	;# 
   950  0115                     	;# 
   951  0116                     	;# 
   952  0117                     	;# 
   953  0118                     	;# 
   954  0119                     	;# 
   955  011A                     	;# 
   956  011B                     	;# 
   957  011C                     	;# 
   958  011D                     	;# 
   959  011D                     	;# 
   960  011D                     	;# 
   961  011E                     	;# 
   962  011F                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  0191                     	;# 
   966  0191                     	;# 
   967  0192                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  0199                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019A                     	;# 
   980  019A                     	;# 
   981  019B                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019C                     	;# 
   987  019C                     	;# 
   988  019C                     	;# 
   989  019D                     	;# 
   990  019D                     	;# 
   991  019D                     	;# 
   992  019E                     	;# 
   993  019E                     	;# 
   994  019E                     	;# 
   995  019F                     	;# 
   996  019F                     	;# 
   997  019F                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  020C                     	;# 
  1001  020D                     	;# 
  1002  020E                     	;# 
  1003  0210                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  0212                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0213                     	;# 
  1010  0214                     	;# 
  1011  0214                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0216                     	;# 
  1017  0216                     	;# 
  1018  0217                     	;# 
  1019  0217                     	;# 
  1020  028C                     	;# 
  1021  028D                     	;# 
  1022  028E                     	;# 
  1023  0291                     	;# 
  1024  0291                     	;# 
  1025  0292                     	;# 
  1026  0293                     	;# 
  1027  0298                     	;# 
  1028  0298                     	;# 
  1029  0299                     	;# 
  1030  029A                     	;# 
  1031  030C                     	;# 
  1032  030D                     	;# 
  1033  030E                     	;# 
  1034  0311                     	;# 
  1035  0311                     	;# 
  1036  0312                     	;# 
  1037  0313                     	;# 
  1038  038C                     	;# 
  1039  038D                     	;# 
  1040  038E                     	;# 
  1041  0390                     	;# 
  1042  0391                     	;# 
  1043  0392                     	;# 
  1044  0393                     	;# 
  1045  0394                     	;# 
  1046  0395                     	;# 
  1047  0396                     	;# 
  1048  0397                     	;# 
  1049  0398                     	;# 
  1050  0399                     	;# 
  1051  039D                     	;# 
  1052  039E                     	;# 
  1053  039F                     	;# 
  1054  0511                     	;# 
  1055  0513                     	;# 
  1056  051A                     	;# 
  1057  0811                     	;# 
  1058  0812                     	;# 
  1059  0813                     	;# 
  1060  0814                     	;# 
  1061  0815                     	;# 
  1062  0816                     	;# 
  1063  0817                     	;# 
  1064  0818                     	;# 
  1065  0819                     	;# 
  1066  081A                     	;# 
  1067  081B                     	;# 
  1068  081C                     	;# 
  1069  081D                     	;# 
  1070  081E                     	;# 
  1071  081F                     	;# 
  1072  0820                     	;# 
  1073  0821                     	;# 
  1074  0821                     	;# 
  1075  0822                     	;# 
  1076  0823                     	;# 
  1077  0823                     	;# 
  1078  0824                     	;# 
  1079  0825                     	;# 
  1080  0825                     	;# 
  1081  0826                     	;# 
  1082  0827                     	;# 
  1083  0827                     	;# 
  1084  0828                     	;# 
  1085  0829                     	;# 
  1086  082A                     	;# 
  1087  082B                     	;# 
  1088  082C                     	;# 
  1089  082D                     	;# 
  1090  082E                     	;# 
  1091  082F                     	;# 
  1092  0831                     	;# 
  1093  0832                     	;# 
  1094  0833                     	;# 
  1095  0834                     	;# 
  1096  0835                     	;# 
  1097  0836                     	;# 
  1098  0837                     	;# 
  1099  0838                     	;# 
  1100  0839                     	;# 
  1101  083A                     	;# 
  1102  083B                     	;# 
  1103  083C                     	;# 
  1104  083D                     	;# 
  1105  083E                     	;# 
  1106  083F                     	;# 
  1107  0840                     	;# 
  1108  0841                     	;# 
  1109  0841                     	;# 
  1110  0842                     	;# 
  1111  0843                     	;# 
  1112  0843                     	;# 
  1113  0844                     	;# 
  1114  0845                     	;# 
  1115  0845                     	;# 
  1116  0846                     	;# 
  1117  0847                     	;# 
  1118  0847                     	;# 
  1119  0848                     	;# 
  1120  0849                     	;# 
  1121  084A                     	;# 
  1122  084B                     	;# 
  1123  084C                     	;# 
  1124  084D                     	;# 
  1125  084E                     	;# 
  1126  084F                     	;# 
  1127  0851                     	;# 
  1128  0852                     	;# 
  1129  0853                     	;# 
  1130  0854                     	;# 
  1131  0855                     	;# 
  1132  0856                     	;# 
  1133  0857                     	;# 
  1134  0858                     	;# 
  1135  0859                     	;# 
  1136  085A                     	;# 
  1137  085B                     	;# 
  1138  085C                     	;# 
  1139  085D                     	;# 
  1140  085E                     	;# 
  1141  085F                     	;# 
  1142  0860                     	;# 
  1143  0861                     	;# 
  1144  0861                     	;# 
  1145  0862                     	;# 
  1146  0863                     	;# 
  1147  0863                     	;# 
  1148  0864                     	;# 
  1149  0865                     	;# 
  1150  0865                     	;# 
  1151  0866                     	;# 
  1152  0867                     	;# 
  1153  0867                     	;# 
  1154  0868                     	;# 
  1155  0869                     	;# 
  1156  086A                     	;# 
  1157  086B                     	;# 
  1158  086C                     	;# 
  1159  086D                     	;# 
  1160  086E                     	;# 
  1161  086F                     	;# 
  1162  0FE4                     	;# 
  1163  0FE5                     	;# 
  1164  0FE6                     	;# 
  1165  0FE7                     	;# 
  1166  0FE8                     	;# 
  1167  0FE9                     	;# 
  1168  0FEA                     	;# 
  1169  0FEB                     	;# 
  1170  0FED                     	;# 
  1171  0FEE                     	;# 
  1172  0FEF                     	;# 
  1173  0000                     	;# 
  1174  0001                     	;# 
  1175  0002                     	;# 
  1176  0003                     	;# 
  1177  0004                     	;# 
  1178  0005                     	;# 
  1179  0006                     	;# 
  1180  0007                     	;# 
  1181  0008                     	;# 
  1182  0009                     	;# 
  1183  000A                     	;# 
  1184  000B                     	;# 
  1185  000C                     	;# 
  1186  000D                     	;# 
  1187  000E                     	;# 
  1188  0010                     	;# 
  1189  0011                     	;# 
  1190  0012                     	;# 
  1191  0013                     	;# 
  1192  0014                     	;# 
  1193  0015                     	;# 
  1194  0016                     	;# 
  1195  0016                     	;# 
  1196  0017                     	;# 
  1197  0018                     	;# 
  1198  0019                     	;# 
  1199  001A                     	;# 
  1200  001B                     	;# 
  1201  001C                     	;# 
  1202  008C                     	;# 
  1203  008D                     	;# 
  1204  008E                     	;# 
  1205  0090                     	;# 
  1206  0091                     	;# 
  1207  0092                     	;# 
  1208  0093                     	;# 
  1209  0094                     	;# 
  1210  0095                     	;# 
  1211  0096                     	;# 
  1212  0097                     	;# 
  1213  0098                     	;# 
  1214  0099                     	;# 
  1215  009A                     	;# 
  1216  009B                     	;# 
  1217  009B                     	;# 
  1218  009C                     	;# 
  1219  009D                     	;# 
  1220  009E                     	;# 
  1221  009F                     	;# 
  1222  010C                     	;# 
  1223  010D                     	;# 
  1224  010E                     	;# 
  1225  0111                     	;# 
  1226  0112                     	;# 
  1227  0113                     	;# 
  1228  0114                     	;# 
  1229  0115                     	;# 
  1230  0116                     	;# 
  1231  0117                     	;# 
  1232  0118                     	;# 
  1233  0119                     	;# 
  1234  011A                     	;# 
  1235  011B                     	;# 
  1236  011C                     	;# 
  1237  011D                     	;# 
  1238  011D                     	;# 
  1239  011D                     	;# 
  1240  011E                     	;# 
  1241  011F                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0194                     	;# 
  1251  0195                     	;# 
  1252  0196                     	;# 
  1253  0197                     	;# 
  1254  0199                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  019A                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019D                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019E                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019F                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  020C                     	;# 
  1280  020D                     	;# 
  1281  020E                     	;# 
  1282  0210                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  028C                     	;# 
  1300  028D                     	;# 
  1301  028E                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0298                     	;# 
  1307  0298                     	;# 
  1308  0299                     	;# 
  1309  029A                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  0311                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  038C                     	;# 
  1318  038D                     	;# 
  1319  038E                     	;# 
  1320  0390                     	;# 
  1321  0391                     	;# 
  1322  0392                     	;# 
  1323  0393                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  0397                     	;# 
  1328  0398                     	;# 
  1329  0399                     	;# 
  1330  039D                     	;# 
  1331  039E                     	;# 
  1332  039F                     	;# 
  1333  0511                     	;# 
  1334  0513                     	;# 
  1335  051A                     	;# 
  1336  0811                     	;# 
  1337  0812                     	;# 
  1338  0813                     	;# 
  1339  0814                     	;# 
  1340  0815                     	;# 
  1341  0816                     	;# 
  1342  0817                     	;# 
  1343  0818                     	;# 
  1344  0819                     	;# 
  1345  081A                     	;# 
  1346  081B                     	;# 
  1347  081C                     	;# 
  1348  081D                     	;# 
  1349  081E                     	;# 
  1350  081F                     	;# 
  1351  0820                     	;# 
  1352  0821                     	;# 
  1353  0821                     	;# 
  1354  0822                     	;# 
  1355  0823                     	;# 
  1356  0823                     	;# 
  1357  0824                     	;# 
  1358  0825                     	;# 
  1359  0825                     	;# 
  1360  0826                     	;# 
  1361  0827                     	;# 
  1362  0827                     	;# 
  1363  0828                     	;# 
  1364  0829                     	;# 
  1365  082A                     	;# 
  1366  082B                     	;# 
  1367  082C                     	;# 
  1368  082D                     	;# 
  1369  082E                     	;# 
  1370  082F                     	;# 
  1371  0831                     	;# 
  1372  0832                     	;# 
  1373  0833                     	;# 
  1374  0834                     	;# 
  1375  0835                     	;# 
  1376  0836                     	;# 
  1377  0837                     	;# 
  1378  0838                     	;# 
  1379  0839                     	;# 
  1380  083A                     	;# 
  1381  083B                     	;# 
  1382  083C                     	;# 
  1383  083D                     	;# 
  1384  083E                     	;# 
  1385  083F                     	;# 
  1386  0840                     	;# 
  1387  0841                     	;# 
  1388  0841                     	;# 
  1389  0842                     	;# 
  1390  0843                     	;# 
  1391  0843                     	;# 
  1392  0844                     	;# 
  1393  0845                     	;# 
  1394  0845                     	;# 
  1395  0846                     	;# 
  1396  0847                     	;# 
  1397  0847                     	;# 
  1398  0848                     	;# 
  1399  0849                     	;# 
  1400  084A                     	;# 
  1401  084B                     	;# 
  1402  084C                     	;# 
  1403  084D                     	;# 
  1404  084E                     	;# 
  1405  084F                     	;# 
  1406  0851                     	;# 
  1407  0852                     	;# 
  1408  0853                     	;# 
  1409  0854                     	;# 
  1410  0855                     	;# 
  1411  0856                     	;# 
  1412  0857                     	;# 
  1413  0858                     	;# 
  1414  0859                     	;# 
  1415  085A                     	;# 
  1416  085B                     	;# 
  1417  085C                     	;# 
  1418  085D                     	;# 
  1419  085E                     	;# 
  1420  085F                     	;# 
  1421  0860                     	;# 
  1422  0861                     	;# 
  1423  0861                     	;# 
  1424  0862                     	;# 
  1425  0863                     	;# 
  1426  0863                     	;# 
  1427  0864                     	;# 
  1428  0865                     	;# 
  1429  0865                     	;# 
  1430  0866                     	;# 
  1431  0867                     	;# 
  1432  0867                     	;# 
  1433  0868                     	;# 
  1434  0869                     	;# 
  1435  086A                     	;# 
  1436  086B                     	;# 
  1437  086C                     	;# 
  1438  086D                     	;# 
  1439  086E                     	;# 
  1440  086F                     	;# 
  1441  0FE4                     	;# 
  1442  0FE5                     	;# 
  1443  0FE6                     	;# 
  1444  0FE7                     	;# 
  1445  0FE8                     	;# 
  1446  0FE9                     	;# 
  1447  0FEA                     	;# 
  1448  0FEB                     	;# 
  1449  0FED                     	;# 
  1450  0FEE                     	;# 
  1451  0FEF                     	;# 
  1452                           
  1453                           	psect	idataBANK1
  1454  02C4                     __pidataBANK1:	
  1455                           
  1456                           ;initializer for _segmcode
  1457  02C4  343F               	retlw	63
  1458  02C5  3406               	retlw	6
  1459  02C6  345B               	retlw	91
  1460  02C7  344F               	retlw	79
  1461  02C8  3466               	retlw	102
  1462  02C9  346D               	retlw	109
  1463  02CA  347D               	retlw	125
  1464  02CB  3407               	retlw	7
  1465  02CC  347F               	retlw	127
  1466  02CD  346F               	retlw	111
  1467  02CE  3477               	retlw	119
  1468  02CF  347C               	retlw	124
  1469  02D0  3439               	retlw	57
  1470  02D1  345E               	retlw	94
  1471  02D2  3479               	retlw	121
  1472  02D3  3471               	retlw	113
  1473  000E                     _PORTCbits	set	14
  1474  000D                     _PORTBbits	set	13
  1475  0015                     _TMR0	set	21
  1476  000B                     _INTCONbits	set	11
  1477  008E                     _TRISCbits	set	142
  1478  008E                     _TRISC	set	142
  1479  008D                     _TRISB	set	141
  1480  008C                     _TRISA	set	140
  1481  0095                     _OPTION_REGbits	set	149
  1482  0099                     _OSCCONbits	set	153
  1483  010E                     _LATC	set	270
  1484  010D                     _LATB	set	269
  1485  010C                     _LATA	set	268
  1486  020E                     _WPUCbits	set	526
  1487  020E                     _WPUC	set	526
  1488  020D                     _WPUB	set	525
  1489  020C                     _WPUA	set	524
  1490  0399                     _IOCCFbits	set	921
  1491  0397                     _IOCCPbits	set	919
  1492  0398                     _IOCCN	set	920
  1493  0397                     _IOCCP	set	919
  1494  0395                     _IOCBN	set	917
  1495  0394                     _IOCBP	set	916
  1496  0392                     _IOCAN	set	914
  1497  0391                     _IOCAP	set	913
  1498                           
  1499                           ; #config settings
  1500  0000                     
  1501                           	psect	cinit
  1502  0049                     start_initialization:	
  1503  0049                     __initialization:	
  1504                           
  1505                           ; Initialize objects allocated to BANK1
  1506  0049  30C4               	movlw	low __pidataBANK1
  1507  004A  0084               	movwf	4
  1508  004B  3082               	movlw	(high __pidataBANK1)| (0+128)
  1509  004C  0085               	movwf	5
  1510  004D  30A0               	movlw	low __pdataBANK1
  1511  004E  0086               	movwf	6
  1512  004F  3000               	movlw	high __pdataBANK1
  1513  0050  0087               	movwf	7
  1514  0051  3010               	movlw	16
  1515  0052  3182  22D4  3180   	fcall	init_ram
  1516                           
  1517                           ; Clear objects allocated to BANK0
  1518  0055  3020               	movlw	low __pbssBANK0
  1519  0056  0084               	movwf	4
  1520  0057  3000               	movlw	high __pbssBANK0
  1521  0058  0085               	movwf	5
  1522  0059  303C               	movlw	60
  1523  005A  3182  22DA         	fcall	clear_ram0
  1524  005C                     end_of_initialization:	
  1525                           ;End of C runtime variable initialization code
  1526                           
  1527  005C                     __end_of__initialization:	
  1528  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1529  005D  0020               	movlb	0
  1530  005E  3182  2AE0         	ljmp	_main	;jump to C main() function
  1531                           
  1532                           	psect	bssBANK0
  1533  0020                     __pbssBANK0:	
  1534  0020                     _g_recv_buf:	
  1535  0020                     	ds	40
  1536  0048                     _g_recv_count:	
  1537  0048                     	ds	2
  1538  004A                     _g_all_level_times:	
  1539  004A                     	ds	2
  1540  004C                     _g_high_level_times:	
  1541  004C                     	ds	2
  1542  004E                     _g_find_recv_start:	
  1543  004E                     	ds	2
  1544  0050                     _g_start_read_data:	
  1545  0050                     	ds	2
  1546  0052                     _g_start_read_switch:	
  1547  0052                     	ds	2
  1548  0054                     _g_time_u:	
  1549  0054                     	ds	2
  1550  0056                     _g_time_s:	
  1551  0056                     	ds	2
  1552  0058                     _g_time_m:	
  1553  0058                     	ds	2
  1554  005A                     _g_time_h:	
  1555  005A                     	ds	2
  1556                           
  1557                           	psect	dataBANK1
  1558  00A0                     __pdataBANK1:	
  1559  00A0                     _segmcode:	
  1560  00A0                     	ds	16
  1561                           
  1562                           	psect	inittext
  1563  02D4                     init_ram:	
  1564  02D4  00FE               	movwf	126
  1565  02D5                     initloop:	
  1566  02D5  0012               	moviw fsr0++
  1567  02D6  001E               	movwi fsr1++
  1568  02D7  0BFE               	decfsz	126,f
  1569  02D8  2AD5               	goto	initloop
  1570  02D9  3400               	retlw	0
  1571                           
  1572                           	psect	clrtext
  1573  02DA                     clear_ram0:	
  1574                           ;	Called with FSR0 containing the base address, and
  1575                           ;	WREG with the size to clear
  1576                           
  1577  02DA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1578  02DB                     clrloop0:	
  1579  02DB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1580  02DC  3101               	addfsr 0,1
  1581  02DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1582  02DE  2ADB               	goto	clrloop0	;have we reached the end yet?
  1583  02DF  3400               	retlw	0	;all done for this memory range, return
  1584                           
  1585                           	psect	cstackCOMMON
  1586  0070                     __pcstackCOMMON:	
  1587  0070                     ?_update_time:	
  1588  0070                     ?_receive_decode:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ?_update_display:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ?_init_env:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0070                     ?_ISR:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?_main:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ?_control595_delay:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ??_control595_delay:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ?_write_char:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ?_times2number:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     times2number@high_level_times:	
  1616                           ; 2 bytes @ 0x0
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0x0
  1620  0070                     	ds	1
  1621  0071                     control595_delay@times:	
  1622                           
  1623                           ; 2 bytes @ 0x1
  1624  0071                     	ds	1
  1625  0072                     ??_times2number:	
  1626                           
  1627                           ; 1 bytes @ 0x2
  1628  0072                     	ds	1
  1629  0073                     ??_write_char:	
  1630                           
  1631                           ; 1 bytes @ 0x3
  1632  0073                     	ds	2
  1633  0075                     write_char@dat:	
  1634                           
  1635                           ; 1 bytes @ 0x5
  1636  0075                     	ds	1
  1637  0076                     write_char@i:	
  1638                           
  1639                           ; 1 bytes @ 0x6
  1640  0076                     	ds	1
  1641  0077                     ??_update_time:	
  1642  0077                     ??_receive_decode:	
  1643                           ; 1 bytes @ 0x7
  1644                           
  1645  0077                     ??_update_display:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x7
  1650  0077                     	ds	6
  1651  007D                     ??_ISR:	
  1652                           
  1653                           	psect	cstackBANK0
  1654  005C                     __pcstackBANK0:	
  1655                           ; 1 bytes @ 0xD
  1656                           
  1657  005C                     receive_decode@old_time_h:	
  1658                           
  1659                           ; 2 bytes @ 0x0
  1660  005C                     	ds	2
  1661  005E                     receive_decode@old_time_m:	
  1662                           
  1663                           ; 2 bytes @ 0x2
  1664  005E                     	ds	2
  1665  0060                     receive_decode@i:	
  1666                           
  1667                           ; 2 bytes @ 0x4
  1668  0060                     	ds	2
  1669  0062                     receive_decode@read_value:	
  1670                           
  1671                           ; 2 bytes @ 0x6
  1672  0062                     	ds	2
  1673  0064                     ??_init_env:	
  1674                           
  1675                           ; 1 bytes @ 0x8
  1676  0064                     	ds	1
  1677  0065                     init_env@i:	
  1678                           
  1679                           ; 2 bytes @ 0x9
  1680  0065                     	ds	2
  1681  0067                     ??_main:	
  1682                           
  1683                           	psect	maintext
  1684  02E0                     __pmaintext:	
  1685                           ; 1 bytes @ 0xB
  1686 ;;
  1687 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1688 ;;
  1689 ;; *************** function _main *****************
  1690 ;; Defined at:
  1691 ;;		line 195 in file "main.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : B1F/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels required when called:    6
  1711 ;; This function calls:
  1712 ;;		_init_env
  1713 ;; This function is called by:
  1714 ;;		Startup code after reset
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _main
  1720  02E0                     _main:	
  1721                           
  1722                           ;main.c: 197:     init_env();
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1726  02E0  3181  21C4  3182   	fcall	_init_env
  1727  02E3                     l99:	
  1728                           ;main.c: 200:     while(1);
  1729                           
  1730  02E3  2AE3               	goto	l99
  1731  02E4                     __end_of_main:	
  1732                           ;main.c: 202:     return;
  1733                           
  1734                           
  1735                           	psect	text1
  1736  01C4                     __ptext1:	
  1737 ;; *************** function _init_env *****************
  1738 ;; Defined at:
  1739 ;;		line 37 in file "main.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  i               2    9[BANK0 ] int 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;Total ram usage:        3 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    5
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _init_env
  1769  01C4                     _init_env:	
  1770                           
  1771                           ;main.c: 42:     LATA = 0;
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0]
  1775  01C4  178B               	bsf	11,7	;volatile
  1776                           
  1777                           ;main.c: 44:     IOCAP = 0;
  1778  01C5  158B               	bsf	11,3	;volatile
  1779                           
  1780                           ;main.c: 48:     LATB = 0;
  1781  01C6  168B               	bsf	11,5	;volatile
  1782                           
  1783                           ;main.c: 53:     TRISC = 0;
  1784  01C7  0021               	movlb	1	; select bank1
  1785  01C8  0819               	movf	25,w	;volatile
  1786  01C9  39FC               	andlw	-4
  1787  01CA  3802               	iorlw	2
  1788  01CB  0099               	movwf	25	;volatile
  1789                           
  1790                           ;main.c: 54:     LATC = 0;
  1791  01CC  0819               	movf	25,w	;volatile
  1792  01CD  3987               	andlw	-121
  1793  01CE  3850               	iorlw	80
  1794  01CF  0099               	movwf	25	;volatile
  1795                           
  1796                           ;main.c: 62:     TRISCbits.TRISC5 = 1;
  1797  01D0  1195               	bcf	21,3	;volatile
  1798                           
  1799                           ;main.c: 63:     WPUCbits.WPUC5 = 1;
  1800  01D1  1295               	bcf	21,5	;volatile
  1801                           
  1802                           ;main.c: 64: 
  1803  01D2  0815               	movf	21,w	;volatile
  1804  01D3  39F8               	andlw	-8
  1805  01D4  3804               	iorlw	4
  1806  01D5  0095               	movwf	21	;volatile
  1807                           
  1808                           ;main.c: 65:     TRISCbits.TRISC1 = 1;
  1809  01D6  30E7               	movlw	231
  1810  01D7  0020               	movlb	0	; select bank0
  1811  01D8  0095               	movwf	21	;volatile
  1812                           
  1813                           ;main.c: 73:     g_time_m = 0;
  1814  01D9  0021               	movlb	1	; select bank1
  1815  01DA  1395               	bcf	21,7	;volatile
  1816                           
  1817                           ;main.c: 75:     g_time_u = 0;
  1818  01DB  018C               	clrf	12	;volatile
  1819                           
  1820                           ;main.c: 76: 
  1821  01DC  0022               	movlb	2	; select bank2
  1822  01DD  018C               	clrf	12	;volatile
  1823                           
  1824                           ;main.c: 77: 
  1825  01DE  0024               	movlb	4	; select bank4
  1826  01DF  018C               	clrf	12	;volatile
  1827                           
  1828                           ;main.c: 78:     g_start_read_switch = 0;
  1829  01E0  0027               	movlb	7	; select bank7
  1830  01E1  0191               	clrf	17	;volatile
  1831                           
  1832                           ;main.c: 79:     g_start_read_data = 0;
  1833  01E2  0192               	clrf	18	;volatile
  1834                           
  1835                           ;main.c: 81: 
  1836  01E3  0021               	movlb	1	; select bank1
  1837  01E4  018D               	clrf	13	;volatile
  1838                           
  1839                           ;main.c: 82: 
  1840  01E5  0022               	movlb	2	; select bank2
  1841  01E6  018D               	clrf	13	;volatile
  1842                           
  1843                           ;main.c: 83:     g_high_level_times = 0;
  1844  01E7  0024               	movlb	4	; select bank4
  1845  01E8  018D               	clrf	13	;volatile
  1846                           
  1847                           ;main.c: 84:     g_all_level_times = 0;
  1848  01E9  0027               	movlb	7	; select bank7
  1849  01EA  0194               	clrf	20	;volatile
  1850                           
  1851                           ;main.c: 85:     g_recv_count = 0;
  1852  01EB  0195               	clrf	21	;volatile
  1853                           
  1854                           ;main.c: 87:         g_recv_buf[i] = 5;
  1855  01EC  0021               	movlb	1	; select bank1
  1856  01ED  018E               	clrf	14	;volatile
  1857                           
  1858                           ;main.c: 88:     }
  1859  01EE  0022               	movlb	2	; select bank2
  1860  01EF  018E               	clrf	14	;volatile
  1861                           
  1862                           ;main.c: 89: 
  1863  01F0  0024               	movlb	4	; select bank4
  1864  01F1  018E               	clrf	14	;volatile
  1865                           
  1866                           ;main.c: 90: 
  1867  01F2  0027               	movlb	7	; select bank7
  1868  01F3  0197               	clrf	23	;volatile
  1869                           
  1870                           ;main.c: 91: 
  1871  01F4  0198               	clrf	24	;volatile
  1872                           
  1873                           ;main.c: 96:     PORTCbits.RC2 = 0;
  1874  01F5  0021               	movlb	1	; select bank1
  1875  01F6  168E               	bsf	14,5	;volatile
  1876                           
  1877                           ;main.c: 97: 
  1878  01F7  0024               	movlb	4	; select bank4
  1879  01F8  168E               	bsf	14,5	;volatile
  1880                           
  1881                           ;main.c: 99:     TRISCbits.TRISC0 = 1;
  1882  01F9  0021               	movlb	1	; select bank1
  1883  01FA  148E               	bsf	14,1	;volatile
  1884                           
  1885                           ;main.c: 100:     WPUCbits.WPUC0 = 1;
  1886  01FB  0024               	movlb	4	; select bank4
  1887  01FC  148E               	bsf	14,1	;volatile
  1888  01FD  0027               	movlb	7	; select bank7
  1889  01FE  1497               	bsf	23,1	;volatile
  1890  01FF  0020               	movlb	0	; select bank0
  1891  0200  01DA               	clrf	_g_time_h
  1892  0201  01DB               	clrf	_g_time_h+1
  1893  0202  01D8               	clrf	_g_time_m
  1894  0203  01D9               	clrf	_g_time_m+1
  1895  0204  01D6               	clrf	_g_time_s
  1896  0205  01D7               	clrf	_g_time_s+1
  1897  0206  01D4               	clrf	_g_time_u
  1898  0207  01D5               	clrf	_g_time_u+1
  1899  0208  01D2               	clrf	_g_start_read_switch
  1900  0209  01D3               	clrf	_g_start_read_switch+1
  1901  020A  01D0               	clrf	_g_start_read_data
  1902  020B  01D1               	clrf	_g_start_read_data+1
  1903  020C  01CE               	clrf	_g_find_recv_start
  1904  020D  01CF               	clrf	_g_find_recv_start+1
  1905  020E  01CC               	clrf	_g_high_level_times
  1906  020F  01CD               	clrf	_g_high_level_times+1
  1907  0210  01CA               	clrf	_g_all_level_times
  1908  0211  01CB               	clrf	_g_all_level_times+1
  1909  0212  01C8               	clrf	_g_recv_count
  1910  0213  01C9               	clrf	_g_recv_count+1
  1911  0214  01E5               	clrf	init_env@i
  1912  0215  01E6               	clrf	init_env@i+1
  1913  0216  0866               	movf	init_env@i+1,w
  1914  0217  3A80               	xorlw	128
  1915  0218  00E4               	movwf	??_init_env
  1916  0219  3080               	movlw	128
  1917  021A  0264               	subwf	??_init_env,w
  1918  021B  1D03               	skipz
  1919  021C  2A1F               	goto	u555
  1920  021D  3014               	movlw	20
  1921  021E  0265               	subwf	init_env@i,w
  1922  021F                     u555:	
  1923  021F  1803               	btfsc	3,0
  1924  0220  2A39               	goto	l80
  1925  0221                     l1239:	
  1926  0221  0020               	movlb	0	; select bank0
  1927  0222  3565               	lslf	init_env@i,w
  1928  0223  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  1929  0224  0086               	movwf	6
  1930  0225  0187               	clrf	7
  1931  0226  3005               	movlw	5
  1932  0227  3FC0               	movwi [0]fsr1
  1933  0228  3000               	movlw	0
  1934  0229  3FC1               	movwi [1]fsr1
  1935  022A  3001               	movlw	1
  1936  022B  07E5               	addwf	init_env@i,f
  1937  022C  3000               	movlw	0
  1938  022D  3DE6               	addwfc	init_env@i+1,f
  1939  022E  0866               	movf	init_env@i+1,w
  1940  022F  3A80               	xorlw	128
  1941  0230  00E4               	movwf	??_init_env
  1942  0231  3080               	movlw	128
  1943  0232  0264               	subwf	??_init_env,w
  1944  0233  1D03               	skipz
  1945  0234  2A37               	goto	u565
  1946  0235  3014               	movlw	20
  1947  0236  0265               	subwf	init_env@i,w
  1948  0237                     u565:	
  1949  0237  1C03               	skipc
  1950  0238  2A21               	goto	l1239
  1951  0239                     l80:	
  1952  0239  0020               	movlb	0	; select bank0
  1953  023A  158D               	bsf	13,3	;volatile
  1954  023B  110E               	bcf	14,2	;volatile
  1955  023C  0021               	movlb	1	; select bank1
  1956  023D  140E               	bsf	14,0	;volatile
  1957  023E  0024               	movlb	4	; select bank4
  1958  023F  140E               	bsf	14,0	;volatile
  1959  0240  0008               	return
  1960  0241                     __end_of_init_env:	
  1961                           
  1962                           	psect	intentry
  1963  0004                     __pintentry:	
  1964 ;; *************** function _ISR *****************
  1965 ;; Defined at:
  1966 ;;		line 158 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    4
  1987 ;; This function calls:
  1988 ;;		_receive_decode
  1989 ;;		_update_time
  1990 ;; This function is called by:
  1991 ;;		Interrupt level 1
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995  0004                     _ISR:	
  1996                           
  1997                           ;incstack = 0
  1998  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1999                           
  2000                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2001  0005  3180               	pagesel	$
  2002                           
  2003                           ;main.c: 160:     if(IOCCFbits.IOCCF1 == 1 && g_start_read_data == 0 && g_start_read_swi
      +                          tch == 1){
  2004  0006  0027               	movlb	7	; select bank7
  2005  0007  1C99               	btfss	25,1	;volatile
  2006  0008  281D               	goto	i1l86
  2007  0009  0020               	movlb	0	; select bank0
  2008  000A  0850               	movf	_g_start_read_data,w
  2009  000B  0451               	iorwf	_g_start_read_data+1,w
  2010  000C  1D03               	btfss	3,2
  2011  000D  281D               	goto	i1l86
  2012  000E  0352               	decf	_g_start_read_switch,w
  2013  000F  0453               	iorwf	_g_start_read_switch+1,w
  2014  0010  1D03               	btfss	3,2
  2015  0011  281D               	goto	i1l86
  2016                           
  2017                           ;main.c: 161:         g_start_read_data = 1;
  2018  0012  3001               	movlw	1
  2019  0013  00D0               	movwf	_g_start_read_data
  2020  0014  3000               	movlw	0
  2021  0015  00D1               	movwf	_g_start_read_data+1
  2022                           
  2023                           ;main.c: 162:         g_start_read_switch = 0;
  2024  0016  01D2               	clrf	_g_start_read_switch
  2025  0017  01D3               	clrf	_g_start_read_switch+1
  2026                           
  2027                           ;main.c: 163:         PORTCbits.RC2 = 1;
  2028  0018  150E               	bsf	14,2	;volatile
  2029                           
  2030                           ;main.c: 164:         INTCONbits.IOCIF = 0;
  2031  0019  100B               	bcf	11,0	;volatile
  2032                           
  2033                           ;main.c: 165:         IOCCFbits.IOCCF1 = 0;
  2034  001A  0027               	movlb	7	; select bank7
  2035  001B  1099               	bcf	25,1	;volatile
  2036                           
  2037                           ;main.c: 166:         return;
  2038  001C  2845               	goto	i1l87
  2039  001D                     i1l86:	
  2040                           ;main.c: 167:     }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1){
  2041                           
  2042  001D  180B               	btfsc	11,0	;volatile
  2043  001E  2822               	goto	i1l91
  2044  001F  0027               	movlb	7	; select bank7
  2045  0020  1C99               	btfss	25,1	;volatile
  2046  0021  2825               	goto	i1l1369
  2047  0022                     i1l91:	
  2048                           
  2049                           ;main.c: 168:         INTCONbits.IOCIF = 0;
  2050  0022  100B               	bcf	11,0	;volatile
  2051                           
  2052                           ;main.c: 169:         IOCCFbits.IOCCF1 = 0;
  2053  0023  0027               	movlb	7	; select bank7
  2054  0024  1099               	bcf	25,1	;volatile
  2055  0025                     i1l1369:	
  2056                           ;main.c: 170:     }
  2057                           
  2058                           
  2059                           ;main.c: 173:     if(g_start_read_data == 1 && INTCONbits.TMR0IF){
  2060  0025  0020               	movlb	0	; select bank0
  2061  0026  0350               	decf	_g_start_read_data,w
  2062  0027  0451               	iorwf	_g_start_read_data+1,w
  2063  0028  1903               	btfsc	3,2
  2064  0029  1D0B               	btfss	11,2	;volatile
  2065  002A  2836               	goto	i1l92
  2066                           
  2067                           ;main.c: 174:         update_time();
  2068  002B  3182  2241  3180   	fcall	_update_time
  2069                           
  2070                           ;main.c: 175:         receive_decode();
  2071  002E  3180  2060  3180   	fcall	_receive_decode
  2072                           
  2073                           ;main.c: 176:         INTCONbits.TMR0IF = 0;
  2074  0031  110B               	bcf	11,2	;volatile
  2075                           
  2076                           ;main.c: 177:         TMR0 = (217 + 14);
  2077  0032  30E7               	movlw	231
  2078  0033  0020               	movlb	0	; select bank0
  2079  0034  0095               	movwf	21	;volatile
  2080                           
  2081                           ;main.c: 178:         return;
  2082  0035  2845               	goto	i1l87
  2083  0036                     i1l92:	
  2084                           ;main.c: 179:     }
  2085                           
  2086                           
  2087                           ;main.c: 182:     if(INTCONbits.TMR0IF){
  2088  0036  1D0B               	btfss	11,2	;volatile
  2089  0037  2845               	goto	i1l87
  2090                           
  2091                           ;main.c: 183:         update_time();
  2092  0038  3182  2241  3180   	fcall	_update_time
  2093                           
  2094                           ;main.c: 184:         INTCONbits.TMR0IF = 0;
  2095  003B  110B               	bcf	11,2	;volatile
  2096                           
  2097                           ;main.c: 185:         TMR0 = (217 + 14);
  2098  003C  30E7               	movlw	231
  2099  003D  0020               	movlb	0	; select bank0
  2100  003E  0095               	movwf	21	;volatile
  2101                           
  2102                           ;main.c: 187:         if(PORTCbits.RC5 == 1){
  2103  003F  1E8E               	btfss	14,5	;volatile
  2104  0040  2845               	goto	i1l87
  2105                           
  2106                           ;main.c: 188:             g_start_read_switch = 1;
  2107  0041  3001               	movlw	1
  2108  0042  00D2               	movwf	_g_start_read_switch
  2109  0043  3000               	movlw	0
  2110  0044  00D3               	movwf	_g_start_read_switch+1
  2111  0045                     i1l87:	
  2112                           ;main.c: 192:     return;
  2113                           
  2114                           ;main.c: 191:     }
  2115                           
  2116                           ;main.c: 190:         return;
  2117                           
  2118                           ;main.c: 189:         }
  2119                           
  2120  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2121  0046  0009               	retfie
  2122  0047                     __end_of_ISR:	
  2123                           
  2124                           	psect	text3
  2125  0241                     __ptext3:	
  2126 ;; *************** function _update_time *****************
  2127 ;; Defined at:
  2128 ;;		line 12 in file "update_time.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    3
  2149 ;; This function calls:
  2150 ;;		_update_display
  2151 ;; This function is called by:
  2152 ;;		_ISR
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _update_time
  2158  0241                     _update_time:	
  2159                           
  2160                           ;update_time.c: 13:     g_time_u++;
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2164  0241  3001               	movlw	1
  2165  0242  0020               	movlb	0	; select bank0
  2166  0243  07D4               	addwf	_g_time_u,f
  2167  0244  3000               	movlw	0
  2168  0245  3DD5               	addwfc	_g_time_u+1,f
  2169                           
  2170                           ;update_time.c: 14:     if(g_time_u == 100){
  2171  0246  3064               	movlw	100
  2172  0247  0654               	xorwf	_g_time_u,w
  2173  0248  0455               	iorwf	_g_time_u+1,w
  2174  0249  1D03               	btfss	3,2
  2175  024A  0008               	return
  2176                           
  2177                           ;update_time.c: 15:         g_time_u = 0;
  2178  024B  01D4               	clrf	_g_time_u
  2179  024C  01D5               	clrf	_g_time_u+1
  2180                           
  2181                           ;update_time.c: 16:         g_time_s++;
  2182  024D  3001               	movlw	1
  2183  024E  07D6               	addwf	_g_time_s,f
  2184  024F  3000               	movlw	0
  2185  0250  3DD7               	addwfc	_g_time_s+1,f
  2186                           
  2187                           ;update_time.c: 17:         if(g_time_s == 60){
  2188  0251  303C               	movlw	60
  2189  0252  0656               	xorwf	_g_time_s,w
  2190  0253  0457               	iorwf	_g_time_s+1,w
  2191  0254  1D03               	btfss	3,2
  2192  0255  0008               	return
  2193                           
  2194                           ;update_time.c: 18:             g_time_m++;
  2195  0256  3001               	movlw	1
  2196  0257  07D8               	addwf	_g_time_m,f
  2197  0258  3000               	movlw	0
  2198  0259  3DD9               	addwfc	_g_time_m+1,f
  2199                           
  2200                           ;update_time.c: 19:             g_time_s = 0;
  2201  025A  01D6               	clrf	_g_time_s
  2202  025B  01D7               	clrf	_g_time_s+1
  2203                           
  2204                           ;update_time.c: 20:             if(g_time_m == 60){
  2205  025C  303C               	movlw	60
  2206  025D  0658               	xorwf	_g_time_m,w
  2207  025E  0459               	iorwf	_g_time_m+1,w
  2208  025F  1D03               	btfss	3,2
  2209  0260  2A6E               	goto	i1l1269
  2210                           
  2211                           ;update_time.c: 21:                 g_time_h++;
  2212  0261  3001               	movlw	1
  2213  0262  07DA               	addwf	_g_time_h,f
  2214  0263  3000               	movlw	0
  2215  0264  3DDB               	addwfc	_g_time_h+1,f
  2216                           
  2217                           ;update_time.c: 22:                 g_time_m = 0;
  2218  0265  01D8               	clrf	_g_time_m
  2219  0266  01D9               	clrf	_g_time_m+1
  2220                           
  2221                           ;update_time.c: 23:                 if(g_time_h == 24){
  2222  0267  3018               	movlw	24
  2223  0268  065A               	xorwf	_g_time_h,w
  2224  0269  045B               	iorwf	_g_time_h+1,w
  2225  026A  1D03               	btfss	3,2
  2226  026B  2A6E               	goto	i1l1269
  2227                           
  2228                           ;update_time.c: 24:                     g_time_h = 0;
  2229  026C  01DA               	clrf	_g_time_h
  2230  026D  01DB               	clrf	_g_time_h+1
  2231  026E                     i1l1269:	
  2232                           ;update_time.c: 26:             }
  2233                           
  2234                           ;update_time.c: 25:                 }
  2235                           
  2236                           
  2237                           ;update_time.c: 27:             update_display();
  2238  026E  3182  2298         	fcall	_update_display
  2239                           
  2240                           ;update_time.c: 29:     }
  2241                           
  2242                           ;update_time.c: 28:         }
  2243  0270  0008               	return
  2244  0271                     __end_of_update_time:	
  2245                           ;update_time.c: 30:     return;
  2246                           
  2247                           
  2248                           	psect	text4
  2249  0060                     __ptext4:	
  2250 ;; *************** function _receive_decode *****************
  2251 ;; Defined at:
  2252 ;;		line 27 in file "receive_decode.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  i               2    4[BANK0 ] int 
  2257 ;;  read_value      2    6[BANK0 ] int 
  2258 ;;  old_time_m      2    2[BANK0 ] int 
  2259 ;;  old_time_h      2    0[BANK0 ] int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;Total ram usage:       14 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		_times2number
  2278 ;;		_update_display
  2279 ;; This function is called by:
  2280 ;;		_ISR
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _receive_decode
  2286  0060                     _receive_decode:	
  2287                           
  2288                           ;receive_decode.c: 29:     if(PORTCbits.RC1 == 1){
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _receive_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2292  0060  0020               	movlb	0	; select bank0
  2293  0061  1C8E               	btfss	14,1	;volatile
  2294  0062  2867               	goto	i1l144
  2295                           
  2296                           ;receive_decode.c: 30:         g_high_level_times++;
  2297  0063  3001               	movlw	1
  2298  0064  07CC               	addwf	_g_high_level_times,f
  2299  0065  3000               	movlw	0
  2300  0066  3DCD               	addwfc	_g_high_level_times+1,f
  2301  0067                     i1l144:	
  2302                           ;receive_decode.c: 31:     }
  2303                           
  2304                           
  2305                           ;receive_decode.c: 33:     g_all_level_times++;
  2306  0067  3001               	movlw	1
  2307  0068  07CA               	addwf	_g_all_level_times,f
  2308  0069  3000               	movlw	0
  2309  006A  3DCB               	addwfc	_g_all_level_times+1,f
  2310                           
  2311                           ;receive_decode.c: 36:     if(g_all_level_times < 100){
  2312  006B  084B               	movf	_g_all_level_times+1,w
  2313  006C  3A80               	xorlw	128
  2314  006D  00F7               	movwf	??_receive_decode
  2315  006E  3080               	movlw	128
  2316  006F  0277               	subwf	??_receive_decode,w
  2317  0070  1D03               	skipz
  2318  0071  2874               	goto	u62_25
  2319  0072  3064               	movlw	100
  2320  0073  024A               	subwf	_g_all_level_times,w
  2321  0074                     u62_25:	
  2322  0074  1C03               	btfss	3,0
  2323  0075  0008               	return
  2324                           
  2325                           ;receive_decode.c: 40:     int read_value = times2number(g_high_level_times);
  2326                           
  2327                           ;receive_decode.c: 38:     }
  2328                           
  2329                           ;receive_decode.c: 37:         return;
  2330  0076  0020               	movlb	0	; select bank0
  2331  0077  084D               	movf	_g_high_level_times+1,w
  2332  0078  00F1               	movwf	times2number@high_level_times+1
  2333  0079  084C               	movf	_g_high_level_times,w
  2334  007A  00F0               	movwf	times2number@high_level_times
  2335  007B  3181  2145  3180   	fcall	_times2number
  2336  007E  0871               	movf	?_times2number+1,w
  2337  007F  0020               	movlb	0	; select bank0
  2338  0080  00E3               	movwf	receive_decode@read_value+1
  2339  0081  0870               	movf	?_times2number,w
  2340  0082  00E2               	movwf	receive_decode@read_value
  2341                           
  2342                           ;receive_decode.c: 41:     g_all_level_times = 0;
  2343  0083  01CA               	clrf	_g_all_level_times
  2344  0084  01CB               	clrf	_g_all_level_times+1
  2345                           
  2346                           ;receive_decode.c: 42:     g_high_level_times = 0;
  2347  0085  01CC               	clrf	_g_high_level_times
  2348  0086  01CD               	clrf	_g_high_level_times+1
  2349                           
  2350                           ;receive_decode.c: 44:     if(read_value == 5){
  2351  0087  3005               	movlw	5
  2352  0088  0662               	xorwf	receive_decode@read_value,w
  2353  0089  0463               	iorwf	receive_decode@read_value+1,w
  2354  008A  1D03               	btfss	3,2
  2355  008B  2893               	goto	i1l1295
  2356                           
  2357                           ;receive_decode.c: 46:         g_find_recv_start = 1;
  2358  008C  3001               	movlw	1
  2359  008D  00CE               	movwf	_g_find_recv_start
  2360  008E  3000               	movlw	0
  2361  008F  00CF               	movwf	_g_find_recv_start+1
  2362                           
  2363                           ;receive_decode.c: 47:         g_recv_count = 0;
  2364  0090  01C8               	clrf	_g_recv_count
  2365  0091  01C9               	clrf	_g_recv_count+1
  2366                           
  2367                           ;receive_decode.c: 48:         return;
  2368  0092  0008               	return
  2369  0093                     i1l1295:	
  2370                           ;receive_decode.c: 49:     }else if(read_value == 4){
  2371                           
  2372  0093  3004               	movlw	4
  2373  0094  0662               	xorwf	receive_decode@read_value,w
  2374  0095  0463               	iorwf	receive_decode@read_value+1,w
  2375  0096  1903               	btfsc	3,2
  2376  0097  0008               	return
  2377                           
  2378                           ;receive_decode.c: 53:     if(g_find_recv_start == 0 || read_value == 5){
  2379                           
  2380                           ;receive_decode.c: 51:     }
  2381                           
  2382                           ;receive_decode.c: 50:         return;
  2383  0098  084E               	movf	_g_find_recv_start,w
  2384  0099  044F               	iorwf	_g_find_recv_start+1,w
  2385  009A  1903               	btfsc	3,2
  2386  009B  0008               	return
  2387  009C  3005               	movlw	5
  2388  009D  0662               	xorwf	receive_decode@read_value,w
  2389  009E  0463               	iorwf	receive_decode@read_value+1,w
  2390  009F  1903               	btfsc	3,2
  2391  00A0  0008               	return
  2392                           
  2393                           ;receive_decode.c: 57:     g_recv_buf[g_recv_count] = read_value;
  2394                           
  2395                           ;receive_decode.c: 55:     }
  2396                           
  2397                           ;receive_decode.c: 54:         return;
  2398  00A1  3548               	lslf	_g_recv_count,w
  2399  00A2  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2400  00A3  0086               	movwf	6
  2401  00A4  0187               	clrf	7
  2402  00A5  0862               	movf	receive_decode@read_value,w
  2403  00A6  3FC0               	movwi [0]fsr1
  2404  00A7  0863               	movf	receive_decode@read_value+1,w
  2405  00A8  3FC1               	movwi [1]fsr1
  2406                           
  2407                           ;receive_decode.c: 58:     g_recv_count++;
  2408  00A9  3001               	movlw	1
  2409  00AA  07C8               	addwf	_g_recv_count,f
  2410  00AB  3000               	movlw	0
  2411  00AC  3DC9               	addwfc	_g_recv_count+1,f
  2412                           
  2413                           ;receive_decode.c: 59:     if(g_recv_count < 6){
  2414  00AD  0849               	movf	_g_recv_count+1,w
  2415  00AE  3A80               	xorlw	128
  2416  00AF  00F7               	movwf	??_receive_decode
  2417  00B0  3080               	movlw	128
  2418  00B1  0277               	subwf	??_receive_decode,w
  2419  00B2  1D03               	skipz
  2420  00B3  28B6               	goto	u67_25
  2421  00B4  3006               	movlw	6
  2422  00B5  0248               	subwf	_g_recv_count,w
  2423  00B6                     u67_25:	
  2424  00B6  1C03               	btfss	3,0
  2425  00B7  0008               	return
  2426                           
  2427                           ;receive_decode.c: 63:     if(g_recv_buf[0] != 0 && g_recv_buf[1] != 0){
  2428                           
  2429                           ;receive_decode.c: 61:     }
  2430                           
  2431                           ;receive_decode.c: 60:         return;
  2432  00B8  0020               	movlb	0	; select bank0
  2433  00B9  0820               	movf	_g_recv_buf,w
  2434  00BA  0421               	iorwf	_g_recv_buf+1,w
  2435  00BB  1903               	btfsc	3,2
  2436  00BC  28C6               	goto	i1l1319
  2437  00BD  0822               	movf	_g_recv_buf+2,w
  2438  00BE  0423               	iorwf	_g_recv_buf+3,w
  2439  00BF  1903               	btfsc	3,2
  2440  00C0  28C6               	goto	i1l1319
  2441                           
  2442                           ;receive_decode.c: 65:         g_start_read_data = 0;
  2443  00C1  01D0               	clrf	_g_start_read_data
  2444  00C2  01D1               	clrf	_g_start_read_data+1
  2445                           
  2446                           ;receive_decode.c: 66:         g_recv_count = 0;
  2447  00C3  01C8               	clrf	_g_recv_count
  2448  00C4  01C9               	clrf	_g_recv_count+1
  2449                           
  2450                           ;receive_decode.c: 67:         return;
  2451  00C5  0008               	return
  2452  00C6                     i1l1319:	
  2453                           ;receive_decode.c: 68:     }
  2454                           
  2455                           
  2456                           ;receive_decode.c: 70:     int old_time_h = g_time_h;
  2457  00C6  085B               	movf	_g_time_h+1,w
  2458  00C7  00DD               	movwf	receive_decode@old_time_h+1
  2459  00C8  085A               	movf	_g_time_h,w
  2460  00C9  00DC               	movwf	receive_decode@old_time_h
  2461                           
  2462                           ;receive_decode.c: 71:     int old_time_m = g_time_m;
  2463  00CA  0859               	movf	_g_time_m+1,w
  2464  00CB  00DF               	movwf	receive_decode@old_time_m+1
  2465  00CC  0858               	movf	_g_time_m,w
  2466  00CD  00DE               	movwf	receive_decode@old_time_m
  2467                           
  2468                           ;receive_decode.c: 72:     g_time_h = g_recv_buf[2] * 4 + g_recv_buf[3];
  2469  00CE  3006               	movlw	6
  2470  00CF  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2471  00D0  0086               	movwf	6
  2472  00D1  0187               	clrf	7
  2473  00D2  3004               	movlw	4
  2474  00D3  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2475  00D4  0084               	movwf	4
  2476  00D5  0185               	clrf	5
  2477  00D6  3F00               	moviw [0]fsr0
  2478  00D7  00F7               	movwf	??_receive_decode
  2479  00D8  3F01               	moviw [1]fsr0
  2480  00D9  00F8               	movwf	??_receive_decode+1
  2481  00DA  35F7               	lslf	??_receive_decode,f
  2482  00DB  0DF8               	rlf	??_receive_decode+1,f
  2483  00DC  35F7               	lslf	??_receive_decode,f
  2484  00DD  0DF8               	rlf	??_receive_decode+1,f
  2485  00DE  3F40               	moviw [0]fsr1
  2486  00DF  0777               	addwf	??_receive_decode,w
  2487  00E0  00DA               	movwf	_g_time_h
  2488  00E1  3F41               	moviw [1]fsr1
  2489  00E2  3D78               	addwfc	??_receive_decode+1,w
  2490  00E3  00DB               	movwf	_g_time_h+1
  2491                           
  2492                           ;receive_decode.c: 73:     g_time_m = g_recv_buf[4] * 16 + g_recv_buf[5] * 4 + g_recv_bu
      +                          f[6];
  2493  00E4  300C               	movlw	12
  2494  00E5  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2495  00E6  0086               	movwf	6
  2496  00E7  0187               	clrf	7
  2497  00E8  300A               	movlw	10
  2498  00E9  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2499  00EA  0084               	movwf	4
  2500  00EB  0185               	clrf	5
  2501  00EC  3F00               	moviw [0]fsr0
  2502  00ED  00F7               	movwf	??_receive_decode
  2503  00EE  3F01               	moviw [1]fsr0
  2504  00EF  00F8               	movwf	??_receive_decode+1
  2505  00F0  35F7               	lslf	??_receive_decode,f
  2506  00F1  0DF8               	rlf	??_receive_decode+1,f
  2507  00F2  35F7               	lslf	??_receive_decode,f
  2508  00F3  0DF8               	rlf	??_receive_decode+1,f
  2509  00F4  3008               	movlw	8
  2510  00F5  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2511  00F6  0084               	movwf	4
  2512  00F7  0185               	clrf	5
  2513  00F8  3F00               	moviw [0]fsr0
  2514  00F9  00F9               	movwf	??_receive_decode+2
  2515  00FA  3F01               	moviw [1]fsr0
  2516  00FB  00FA               	movwf	??_receive_decode+3
  2517  00FC  0EF9               	swapf	??_receive_decode+2,f
  2518  00FD  0EFA               	swapf	??_receive_decode+3,f
  2519  00FE  30F0               	movlw	240
  2520  00FF  05FA               	andwf	??_receive_decode+3,f
  2521  0100  0879               	movf	??_receive_decode+2,w
  2522  0101  390F               	andlw	15
  2523  0102  04FA               	iorwf	??_receive_decode+3,f
  2524  0103  30F0               	movlw	240
  2525  0104  05F9               	andwf	??_receive_decode+2,f
  2526  0105  0877               	movf	??_receive_decode,w
  2527  0106  0779               	addwf	??_receive_decode+2,w
  2528  0107  00FB               	movwf	??_receive_decode+4
  2529  0108  0878               	movf	??_receive_decode+1,w
  2530  0109  3D7A               	addwfc	??_receive_decode+3,w
  2531  010A  00FC               	movwf	??_receive_decode+5
  2532  010B  3F40               	moviw [0]fsr1
  2533  010C  077B               	addwf	??_receive_decode+4,w
  2534  010D  00D8               	movwf	_g_time_m
  2535  010E  3F41               	moviw [1]fsr1
  2536  010F  3D7C               	addwfc	??_receive_decode+5,w
  2537  0110  00D9               	movwf	_g_time_m+1
  2538                           
  2539                           ;receive_decode.c: 75:     if(old_time_h != g_time_h || old_time_m != g_time_m){
  2540  0111  085B               	movf	_g_time_h+1,w
  2541  0112  065D               	xorwf	receive_decode@old_time_h+1,w
  2542  0113  1D03               	skipz
  2543  0114  2917               	goto	u70_25
  2544  0115  085A               	movf	_g_time_h,w
  2545  0116  065C               	xorwf	receive_decode@old_time_h,w
  2546  0117                     u70_25:	
  2547  0117  1D03               	skipz
  2548  0118  2921               	goto	i1l1327
  2549  0119  0859               	movf	_g_time_m+1,w
  2550  011A  065F               	xorwf	receive_decode@old_time_m+1,w
  2551  011B  1D03               	skipz
  2552  011C  291F               	goto	u71_25
  2553  011D  0858               	movf	_g_time_m,w
  2554  011E  065E               	xorwf	receive_decode@old_time_m,w
  2555  011F                     u71_25:	
  2556  011F  1903               	skipnz
  2557  0120  2924               	goto	i1l1329
  2558  0121                     i1l1327:	
  2559                           
  2560                           ;receive_decode.c: 76:         update_display();
  2561  0121  3182  2298  3180   	fcall	_update_display
  2562  0124                     i1l1329:	
  2563                           ;receive_decode.c: 77:     }
  2564                           
  2565                           
  2566                           ;receive_decode.c: 81:     PORTCbits.RC2 = 0;
  2567  0124  0020               	movlb	0	; select bank0
  2568  0125  110E               	bcf	14,2	;volatile
  2569                           
  2570                           ;receive_decode.c: 82:     g_start_read_data = 0;
  2571  0126  01D0               	clrf	_g_start_read_data
  2572  0127  01D1               	clrf	_g_start_read_data+1
  2573                           
  2574                           ;receive_decode.c: 83:     g_recv_count = 0;
  2575  0128  01C8               	clrf	_g_recv_count
  2576  0129  01C9               	clrf	_g_recv_count+1
  2577                           
  2578                           ;receive_decode.c: 84:     for(int i = 0;i < 20; i++){
  2579  012A  01E0               	clrf	receive_decode@i
  2580  012B  01E1               	clrf	receive_decode@i+1
  2581  012C                     L1:	
  2582  012C  0861               	movf	receive_decode@i+1,w
  2583  012D  3A80               	xorlw	128
  2584  012E  00F7               	movwf	??_receive_decode
  2585  012F  3080               	movlw	128
  2586  0130  0277               	subwf	??_receive_decode,w
  2587  0131  1D03               	skipz
  2588  0132  2935               	goto	u72_25
  2589  0133  3014               	movlw	20
  2590  0134  0260               	subwf	receive_decode@i,w
  2591  0135                     u72_25:	
  2592  0135  1803               	btfsc	3,0
  2593  0136  0008               	return
  2594                           
  2595                           ;receive_decode.c: 85:         g_recv_buf[i] = 5;
  2596  0137  0020               	movlb	0	; select bank0
  2597  0138  3560               	lslf	receive_decode@i,w
  2598  0139  3E20               	addlw	(low (_g_recv_buf| 0))& (0+255)
  2599  013A  0086               	movwf	6
  2600  013B  0187               	clrf	7
  2601  013C  3005               	movlw	5
  2602  013D  3FC0               	movwi [0]fsr1
  2603  013E  3000               	movlw	0
  2604  013F  3FC1               	movwi [1]fsr1
  2605                           
  2606                           ;receive_decode.c: 86:     }
  2607  0140  3001               	movlw	1
  2608  0141  07E0               	addwf	receive_decode@i,f
  2609  0142  3000               	movlw	0
  2610  0143  3DE1               	addwfc	receive_decode@i+1,f
  2611  0144  292C               	goto	L1
  2612  0145                     __end_of_receive_decode:	
  2613                           ;receive_decode.c: 87:     return;
  2614                           
  2615                           
  2616                           	psect	text5
  2617  0298                     __ptext5:	
  2618 ;; *************** function _update_display *****************
  2619 ;; Defined at:
  2620 ;;		line 36 in file "update_display.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    2
  2641 ;; This function calls:
  2642 ;;		_control595_delay
  2643 ;;		_write_char
  2644 ;; This function is called by:
  2645 ;;		_receive_decode
  2646 ;;		_update_time
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _update_display
  2652  0298                     _update_display:	
  2653                           
  2654                           ;update_display.c: 37:     write_char(0xff);
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  2658  0298  30FF               	movlw	255
  2659  0299  3182  2271  3182   	fcall	_write_char
  2660                           
  2661                           ;update_display.c: 38:     write_char(0x00);
  2662  029C  3000               	movlw	0
  2663  029D  3182  2271  3182   	fcall	_write_char
  2664                           
  2665                           ;update_display.c: 39:     write_char(0xf0);
  2666  02A0  30F0               	movlw	240
  2667  02A1  3182  2271  3182   	fcall	_write_char
  2668                           
  2669                           ;update_display.c: 40:     write_char(0x0f);
  2670  02A4  300F               	movlw	15
  2671  02A5  3182  2271  3182   	fcall	_write_char
  2672                           
  2673                           ;update_display.c: 51:  PORTBbits.RB1 = 1;
  2674  02A8  0020               	movlb	0	; select bank0
  2675  02A9  148D               	bsf	13,1	;volatile
  2676                           
  2677                           ;update_display.c: 52:  control595_delay();
  2678  02AA  3182  22AF         	fcall	_control595_delay
  2679                           
  2680                           ;update_display.c: 53:     PORTBbits.RB1 = 0;
  2681  02AC  0020               	movlb	0	; select bank0
  2682  02AD  108D               	bcf	13,1	;volatile
  2683  02AE  0008               	return
  2684  02AF                     __end_of_update_display:	
  2685                           ;update_display.c: 54:     return;
  2686                           
  2687                           
  2688                           	psect	text6
  2689  0271                     __ptext6:	
  2690 ;; *************** function _write_char *****************
  2691 ;; Defined at:
  2692 ;;		line 23 in file "update_display.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  dat             1    wreg     unsigned char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  dat             1    5[COMMON] unsigned char 
  2697 ;;  i               1    6[COMMON] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;Total ram usage:        4 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		_control595_delay
  2716 ;; This function is called by:
  2717 ;;		_update_display
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _write_char
  2723  0271                     _write_char:	
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  2727                           ;write_char@dat stored from wreg
  2728  0271  00F5               	movwf	write_char@dat
  2729                           
  2730                           ;update_display.c: 24:     unsigned char i;;update_display.c: 25:     for(i = 0; i < 8; 
      +                          i++){
  2731  0272  01F6               	clrf	write_char@i
  2732  0273                     L2:	
  2733  0273  3008               	movlw	8
  2734  0274  0276               	subwf	write_char@i,w
  2735  0275  1803               	btfsc	3,0
  2736  0276  0008               	return
  2737                           
  2738                           ;update_display.c: 26:   PORTBbits.RB5 = (dat & 0x80) >> 7;
  2739  0277  0875               	movf	write_char@dat,w
  2740  0278  00F3               	movwf	??_write_char
  2741  0279  3007               	movlw	7
  2742  027A                     u44_25:	
  2743  027A  36F3               	lsrf	??_write_char,f
  2744  027B  0B89               	decfsz	9,f
  2745  027C  2A7A               	goto	u44_25
  2746  027D  0873               	movf	??_write_char,w
  2747  027E  3901               	andlw	1
  2748  027F  00F4               	movwf	??_write_char+1
  2749  0280  0EF4               	swapf	??_write_char+1,f
  2750  0281  0DF4               	rlf	??_write_char+1,f
  2751  0282  0020               	movlb	0	; select bank0
  2752  0283  080D               	movf	13,w	;volatile
  2753  0284  0674               	xorwf	??_write_char+1,w
  2754  0285  39DF               	andlw	-33
  2755  0286  0674               	xorwf	??_write_char+1,w
  2756  0287  008D               	movwf	13	;volatile
  2757                           
  2758                           ;update_display.c: 27:         PORTBbits.RB0 = 0;
  2759  0288  100D               	bcf	13,0	;volatile
  2760                           
  2761                           ;update_display.c: 28:   control595_delay();
  2762  0289  3182  22AF  3182   	fcall	_control595_delay
  2763                           
  2764                           ;update_display.c: 29:         PORTBbits.RB0 = 1;
  2765  028C  0020               	movlb	0	; select bank0
  2766  028D  140D               	bsf	13,0	;volatile
  2767                           
  2768                           ;update_display.c: 30:   control595_delay();
  2769  028E  3182  22AF  3182   	fcall	_control595_delay
  2770                           
  2771                           ;update_display.c: 32:         dat <<= 1;
  2772  0291  1003               	clrc
  2773  0292  0DF5               	rlf	write_char@dat,f
  2774                           
  2775                           ;update_display.c: 33:     }
  2776  0293  3001               	movlw	1
  2777  0294  00F3               	movwf	??_write_char
  2778  0295  0873               	movf	??_write_char,w
  2779  0296  07F6               	addwf	write_char@i,f
  2780  0297  2A73               	goto	L2
  2781  0298                     __end_of_write_char:	
  2782                           
  2783                           	psect	text7
  2784  02AF                     __ptext7:	
  2785 ;; *************** function _control595_delay *****************
  2786 ;; Defined at:
  2787 ;;		line 15 in file "update_display.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  times           2    1[COMMON] int 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_write_char
  2811 ;;		_update_display
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _control595_delay
  2817  02AF                     _control595_delay:	
  2818                           
  2819                           ;update_display.c: 16:    int times = 10;
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in _control595_delay: [wreg]
  2823  02AF  300A               	movlw	10
  2824  02B0  00F1               	movwf	control595_delay@times
  2825  02B1  3000               	movlw	0
  2826  02B2  00F2               	movwf	control595_delay@times+1
  2827  02B3                     i1l221:	
  2828                           ;update_display.c: 20:    }
  2829                           
  2830                           ;update_display.c: 17:    while(times > 0){
  2831                           
  2832                           
  2833                           ;update_display.c: 17:    while(times > 0){
  2834  02B3  0872               	movf	control595_delay@times+1,w
  2835  02B4  3A80               	xorlw	128
  2836  02B5  00F0               	movwf	??_control595_delay
  2837  02B6  3080               	movlw	128
  2838  02B7  0270               	subwf	??_control595_delay,w
  2839  02B8  1D03               	skipz
  2840  02B9  2ABC               	goto	u42_25
  2841  02BA  3001               	movlw	1
  2842  02BB  0271               	subwf	control595_delay@times,w
  2843  02BC                     u42_25:	
  2844  02BC  1C03               	btfss	3,0
  2845  02BD  0008               	return
  2846                           
  2847                           ;update_display.c: 18:     __nop();
  2848  02BE  0000               	nop
  2849                           
  2850                           ;update_display.c: 19:        times--;
  2851  02BF  30FF               	movlw	255
  2852  02C0  07F1               	addwf	control595_delay@times,f
  2853  02C1  30FF               	movlw	255
  2854  02C2  3DF2               	addwfc	control595_delay@times+1,f
  2855  02C3  2AB3               	goto	i1l221
  2856  02C4                     __end_of_control595_delay:	
  2857                           
  2858                           	psect	text8
  2859  0145                     __ptext8:	
  2860 ;; *************** function _times2number *****************
  2861 ;; Defined at:
  2862 ;;		line 12 in file "receive_decode.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  high_level_t    2    0[COMMON] int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  2    0[COMMON] int 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;Total ram usage:        3 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_receive_decode
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function _times2number
  2891  0145                     _times2number:	
  2892                           
  2893                           ;receive_decode.c: 13:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _times2number: [wreg+status,2]
  2897  0145  0871               	movf	times2number@high_level_times+1,w
  2898  0146  3A80               	xorlw	128
  2899  0147  00F2               	movwf	??_times2number
  2900  0148  3080               	movlw	128
  2901  0149  0272               	subwf	??_times2number,w
  2902  014A  1D03               	skipz
  2903  014B  294E               	goto	u46_25
  2904  014C  3005               	movlw	5
  2905  014D  0270               	subwf	times2number@high_level_times,w
  2906  014E                     u46_25:	
  2907  014E  1C03               	skipc
  2908  014F  295E               	goto	i1l1111
  2909  0150  0871               	movf	times2number@high_level_times+1,w
  2910  0151  3A80               	xorlw	128
  2911  0152  00F2               	movwf	??_times2number
  2912  0153  3080               	movlw	128
  2913  0154  0272               	subwf	??_times2number,w
  2914  0155  1D03               	skipz
  2915  0156  2959               	goto	u47_25
  2916  0157  300F               	movlw	15
  2917  0158  0270               	subwf	times2number@high_level_times,w
  2918  0159                     u47_25:	
  2919  0159  1803               	skipnc
  2920  015A  295E               	goto	i1l1111
  2921                           
  2922                           ;receive_decode.c: 14:         return 0;
  2923  015B  01F0               	clrf	?_times2number
  2924  015C  01F1               	clrf	?_times2number+1
  2925                           
  2926                           ;receive_decode.c: 15:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  2927  015D  0008               	return
  2928  015E                     i1l1111:	
  2929  015E  0871               	movf	times2number@high_level_times+1,w
  2930  015F  3A80               	xorlw	128
  2931  0160  00F2               	movwf	??_times2number
  2932  0161  3080               	movlw	128
  2933  0162  0272               	subwf	??_times2number,w
  2934  0163  1D03               	skipz
  2935  0164  2967               	goto	u48_25
  2936  0165  300F               	movlw	15
  2937  0166  0270               	subwf	times2number@high_level_times,w
  2938  0167                     u48_25:	
  2939  0167  1C03               	skipc
  2940  0168  2979               	goto	i1l1121
  2941  0169  0871               	movf	times2number@high_level_times+1,w
  2942  016A  3A80               	xorlw	128
  2943  016B  00F2               	movwf	??_times2number
  2944  016C  3080               	movlw	128
  2945  016D  0272               	subwf	??_times2number,w
  2946  016E  1D03               	skipz
  2947  016F  2972               	goto	u49_25
  2948  0170  3019               	movlw	25
  2949  0171  0270               	subwf	times2number@high_level_times,w
  2950  0172                     u49_25:	
  2951  0172  1803               	skipnc
  2952  0173  2979               	goto	i1l1121
  2953                           
  2954                           ;receive_decode.c: 16:         return 1;
  2955  0174  3001               	movlw	1
  2956  0175  00F0               	movwf	?_times2number
  2957  0176  3000               	movlw	0
  2958  0177  00F1               	movwf	?_times2number+1
  2959                           
  2960                           ;receive_decode.c: 17:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  2961  0178  0008               	return
  2962  0179                     i1l1121:	
  2963  0179  0871               	movf	times2number@high_level_times+1,w
  2964  017A  3A80               	xorlw	128
  2965  017B  00F2               	movwf	??_times2number
  2966  017C  3080               	movlw	128
  2967  017D  0272               	subwf	??_times2number,w
  2968  017E  1D03               	skipz
  2969  017F  2982               	goto	u50_25
  2970  0180  3019               	movlw	25
  2971  0181  0270               	subwf	times2number@high_level_times,w
  2972  0182                     u50_25:	
  2973  0182  1C03               	skipc
  2974  0183  2994               	goto	i1l1131
  2975  0184  0871               	movf	times2number@high_level_times+1,w
  2976  0185  3A80               	xorlw	128
  2977  0186  00F2               	movwf	??_times2number
  2978  0187  3080               	movlw	128
  2979  0188  0272               	subwf	??_times2number,w
  2980  0189  1D03               	skipz
  2981  018A  298D               	goto	u51_25
  2982  018B  3023               	movlw	35
  2983  018C  0270               	subwf	times2number@high_level_times,w
  2984  018D                     u51_25:	
  2985  018D  1803               	skipnc
  2986  018E  2994               	goto	i1l1131
  2987                           
  2988                           ;receive_decode.c: 18:         return 2;
  2989  018F  3002               	movlw	2
  2990  0190  00F0               	movwf	?_times2number
  2991  0191  3000               	movlw	0
  2992  0192  00F1               	movwf	?_times2number+1
  2993                           
  2994                           ;receive_decode.c: 19:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  2995  0193  0008               	return
  2996  0194                     i1l1131:	
  2997  0194  0871               	movf	times2number@high_level_times+1,w
  2998  0195  3A80               	xorlw	128
  2999  0196  00F2               	movwf	??_times2number
  3000  0197  3080               	movlw	128
  3001  0198  0272               	subwf	??_times2number,w
  3002  0199  1D03               	skipz
  3003  019A  299D               	goto	u52_25
  3004  019B  3023               	movlw	35
  3005  019C  0270               	subwf	times2number@high_level_times,w
  3006  019D                     u52_25:	
  3007  019D  1C03               	skipc
  3008  019E  29AF               	goto	i1l1141
  3009  019F  0871               	movf	times2number@high_level_times+1,w
  3010  01A0  3A80               	xorlw	128
  3011  01A1  00F2               	movwf	??_times2number
  3012  01A2  3080               	movlw	128
  3013  01A3  0272               	subwf	??_times2number,w
  3014  01A4  1D03               	skipz
  3015  01A5  29A8               	goto	u53_25
  3016  01A6  302D               	movlw	45
  3017  01A7  0270               	subwf	times2number@high_level_times,w
  3018  01A8                     u53_25:	
  3019  01A8  1803               	skipnc
  3020  01A9  29AF               	goto	i1l1141
  3021                           
  3022                           ;receive_decode.c: 20:         return 3;
  3023  01AA  3003               	movlw	3
  3024  01AB  00F0               	movwf	?_times2number
  3025  01AC  3000               	movlw	0
  3026  01AD  00F1               	movwf	?_times2number+1
  3027                           
  3028                           ;receive_decode.c: 21:     }else if(high_level_times >= 40 + 5){
  3029  01AE  0008               	return
  3030  01AF                     i1l1141:	
  3031  01AF  0871               	movf	times2number@high_level_times+1,w
  3032  01B0  3A80               	xorlw	128
  3033  01B1  00F2               	movwf	??_times2number
  3034  01B2  3080               	movlw	128
  3035  01B3  0272               	subwf	??_times2number,w
  3036  01B4  1D03               	skipz
  3037  01B5  29B8               	goto	u54_25
  3038  01B6  302D               	movlw	45
  3039  01B7  0270               	subwf	times2number@high_level_times,w
  3040  01B8                     u54_25:	
  3041  01B8  1C03               	skipc
  3042  01B9  29BF               	goto	i1l1149
  3043                           
  3044                           ;receive_decode.c: 22:         return 4;
  3045  01BA  3004               	movlw	4
  3046  01BB  00F0               	movwf	?_times2number
  3047  01BC  3000               	movlw	0
  3048  01BD  00F1               	movwf	?_times2number+1
  3049                           
  3050                           ;receive_decode.c: 23:     }else{
  3051  01BE  0008               	return
  3052  01BF                     i1l1149:	
  3053                           
  3054                           ;receive_decode.c: 24:         return 5;
  3055  01BF  3005               	movlw	5
  3056  01C0  00F0               	movwf	?_times2number
  3057  01C1  3000               	movlw	0
  3058  01C2  00F1               	movwf	?_times2number+1
  3059                           
  3060                           ;receive_decode.c: 25:     }
  3061  01C3  0008               	return
  3062  01C4                     __end_of_times2number:	
  3063  007E                     btemp	set	126	;btemp
  3064  007E                     int$flags	set	126
  3065  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     11      71
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_receive_decode
    _update_display->_write_char
    _write_char->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0     711
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                          0     0      0     117
                     _update_display
 ---------------------------------------------------------------------------------
 (3) _receive_decode                                      14    14      0     594
                                              7 COMMON     6     6      0
                                              0 BANK0      8     8      0
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       0     0      0     117
                   _control595_delay
                         _write_char
 ---------------------------------------------------------------------------------
 (5) _write_char                                           4     4      0      93
                                              3 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (6) _control595_delay                                     3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _times2number                                         3     1      2     274
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env

 _ISR (ROOT)
   _receive_decode
     _times2number
     _update_display
       _control595_delay
       _write_char
         _control595_delay
   _update_time
     _update_display
       _control595_delay
       _write_char
         _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      64      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      64      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 25 19:44:52 2019

             ?_receive_decode 0070                   _update_time 0241             _g_find_recv_start 004E  
                 __CFG_CP$OFF 0000                            l80 0239                            l99 02E3  
              _update_display 0298                   __CFG_LVP$ON 0000             ?_control595_delay 0070  
                __CFG_CPD$OFF 0000                           _ISR 0004                           u555 021F  
                         u565 0237                  __CFG_BORV$LO 0000            ??_control595_delay 0070  
                         wreg 0009                  __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000  
               write_char@dat 0075                          ?_ISR 0070                          l1239 0221  
                        _LATA 010C                          _LATB 010D                          _LATC 010E  
                        i1l91 0022                          i1l92 0036                          i1l86 001D  
                        i1l87 0045                          _TMR0 0015                          _WPUA 020C  
                        _WPUB 020D                          _WPUC 020E                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _main 02E0                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 0047                 __CFG_MCLRE$ON 0000                         ??_ISR 007D  
      __end_of_update_display 02AF                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l221 02B3                         i1l144 0067  
                       u50_25 0182                         u42_25 02BC                         u51_25 018D  
                       u52_25 019D                         u44_25 027A                         u53_25 01A8  
                       u54_25 01B8                         u46_25 014E                         u70_25 0117  
                       u62_25 0074                         u47_25 0159                         u71_25 011F  
                       u48_25 0167                         u72_25 0135                         _TRISA 008C  
                       _TRISB 008D                         u49_25 0172                         _TRISC 008E  
                       u67_25 00B6                         status 0003                         wtemp0 007E  
             __initialization 0049                  __end_of_main 02E4               ?_update_display 0070  
              __CFG_LPBOR$OFF 0000                        ??_main 0067                        i1l1111 015E  
                      i1l1121 0179                        i1l1131 0194                        i1l1141 01AF  
                      i1l1149 01BF                        i1l1327 0121                        i1l1319 00C6  
                      i1l1329 0124                        i1l1269 026E                        i1l1295 0093  
                      i1l1369 0025                __CFG_PWRTE$OFF 0000                __CFG_STVREN$ON 0000  
            __end_of_init_env 0241  times2number@high_level_times 0070       __end_of__initialization 005C  
            ??_receive_decode 0077                __pcstackCOMMON 0070                  ?_update_time 0070  
       control595_delay@times 0071                  __pidataBANK1 02C4                _OPTION_REGbits 0095  
                  __pbssBANK0 0020     __size_of_control595_delay 0015               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 02E0                    _g_recv_buf 0020                    __pintentry 0004  
                _g_recv_count 0048            _g_high_level_times 004C           _g_start_read_switch 0052  
                   ?_init_env 0070              ??_update_display 0077                       __ptext1 01C4  
                     __ptext3 0241                       __ptext4 0060                       __ptext5 0298  
                     __ptext6 0271                       __ptext7 02AF                       __ptext8 0145  
                __size_of_ISR 0043                 ?_times2number 0070                     _IOCCFbits 0399  
                   _IOCCPbits 0397                       clrloop0 02DB          end_of_initialization 005C  
                     init_ram 02D4                    ??_init_env 0064                       initloop 02D5  
        __size_of_update_time 0030                     _PORTBbits 000D                     _PORTCbits 000E  
              ??_times2number 0072                     _TRISCbits 008E              _control595_delay 02AF  
                  _write_char 0271      receive_decode@read_value 0062           start_initialization 0049  
    receive_decode@old_time_h 005C      receive_decode@old_time_m 005E                   __end_of_ISR 0047  
             receive_decode@i 0060                   __pdataBANK1 00A0                     ___latbits 0002  
               __pcstackBANK0 005C             __size_of_init_env 007D          __end_of_times2number 01C4  
     __size_of_receive_decode 00E5                   ?_write_char 0070                     clear_ram0 02DA  
    __end_of_control595_delay 02C4                   write_char@i 0076                      _WPUCbits 020E  
         __size_of_write_char 0027                 ??_update_time 0077                     init_env@i 0065  
     __size_of_update_display 0017                      _g_time_h 005A                      _g_time_m 0058  
                    _g_time_s 0056                      _g_time_u 0054             _g_start_read_data 0050  
       __size_of_times2number 007F                      _init_env 01C4                 __size_of_main 0004  
                    _segmcode 00A0                      int$flags 007E                _receive_decode 0060  
         __end_of_update_time 0271                    _INTCONbits 000B                  _times2number 0145  
                    intlevel1 0000             __CFG_CLKOUTEN$OFF 0000                    _OSCCONbits 0099  
           _g_all_level_times 004A        __end_of_receive_decode 0145                  ??_write_char 0073  
          __end_of_write_char 0298  

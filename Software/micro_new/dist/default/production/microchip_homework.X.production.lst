

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Mar 26 00:05:08 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.00
    23                           ; Generated 27/05/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1786 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011C                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  011F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020D                     	;# 
   164  020E                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  030C                     	;# 
   194  030D                     	;# 
   195  030E                     	;# 
   196  0311                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  038C                     	;# 
   201  038D                     	;# 
   202  038E                     	;# 
   203  0390                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  0397                     	;# 
   211  0398                     	;# 
   212  0399                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0511                     	;# 
   217  0513                     	;# 
   218  051A                     	;# 
   219  0811                     	;# 
   220  0812                     	;# 
   221  0813                     	;# 
   222  0814                     	;# 
   223  0815                     	;# 
   224  0816                     	;# 
   225  0817                     	;# 
   226  0818                     	;# 
   227  0819                     	;# 
   228  081A                     	;# 
   229  081B                     	;# 
   230  081C                     	;# 
   231  081D                     	;# 
   232  081E                     	;# 
   233  081F                     	;# 
   234  0820                     	;# 
   235  0821                     	;# 
   236  0821                     	;# 
   237  0822                     	;# 
   238  0823                     	;# 
   239  0823                     	;# 
   240  0824                     	;# 
   241  0825                     	;# 
   242  0825                     	;# 
   243  0826                     	;# 
   244  0827                     	;# 
   245  0827                     	;# 
   246  0828                     	;# 
   247  0829                     	;# 
   248  082A                     	;# 
   249  082B                     	;# 
   250  082C                     	;# 
   251  082D                     	;# 
   252  082E                     	;# 
   253  082F                     	;# 
   254  0831                     	;# 
   255  0832                     	;# 
   256  0833                     	;# 
   257  0834                     	;# 
   258  0835                     	;# 
   259  0836                     	;# 
   260  0837                     	;# 
   261  0838                     	;# 
   262  0839                     	;# 
   263  083A                     	;# 
   264  083B                     	;# 
   265  083C                     	;# 
   266  083D                     	;# 
   267  083E                     	;# 
   268  083F                     	;# 
   269  0840                     	;# 
   270  0841                     	;# 
   271  0841                     	;# 
   272  0842                     	;# 
   273  0843                     	;# 
   274  0843                     	;# 
   275  0844                     	;# 
   276  0845                     	;# 
   277  0845                     	;# 
   278  0846                     	;# 
   279  0847                     	;# 
   280  0847                     	;# 
   281  0848                     	;# 
   282  0849                     	;# 
   283  084A                     	;# 
   284  084B                     	;# 
   285  084C                     	;# 
   286  084D                     	;# 
   287  084E                     	;# 
   288  084F                     	;# 
   289  0851                     	;# 
   290  0852                     	;# 
   291  0853                     	;# 
   292  0854                     	;# 
   293  0855                     	;# 
   294  0856                     	;# 
   295  0857                     	;# 
   296  0858                     	;# 
   297  0859                     	;# 
   298  085A                     	;# 
   299  085B                     	;# 
   300  085C                     	;# 
   301  085D                     	;# 
   302  085E                     	;# 
   303  085F                     	;# 
   304  0860                     	;# 
   305  0861                     	;# 
   306  0861                     	;# 
   307  0862                     	;# 
   308  0863                     	;# 
   309  0863                     	;# 
   310  0864                     	;# 
   311  0865                     	;# 
   312  0865                     	;# 
   313  0866                     	;# 
   314  0867                     	;# 
   315  0867                     	;# 
   316  0868                     	;# 
   317  0869                     	;# 
   318  086A                     	;# 
   319  086B                     	;# 
   320  086C                     	;# 
   321  086D                     	;# 
   322  086E                     	;# 
   323  086F                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  0010                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0013                     	;# 
   354  0014                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  0111                     	;# 
   388  0112                     	;# 
   389  0113                     	;# 
   390  0114                     	;# 
   391  0115                     	;# 
   392  0116                     	;# 
   393  0117                     	;# 
   394  0118                     	;# 
   395  0119                     	;# 
   396  011A                     	;# 
   397  011B                     	;# 
   398  011C                     	;# 
   399  011D                     	;# 
   400  011D                     	;# 
   401  011D                     	;# 
   402  011E                     	;# 
   403  011F                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0191                     	;# 
   407  0191                     	;# 
   408  0192                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0194                     	;# 
   413  0195                     	;# 
   414  0196                     	;# 
   415  0197                     	;# 
   416  0199                     	;# 
   417  0199                     	;# 
   418  0199                     	;# 
   419  019A                     	;# 
   420  019A                     	;# 
   421  019A                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019C                     	;# 
   428  019C                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019D                     	;# 
   432  019D                     	;# 
   433  019E                     	;# 
   434  019E                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  019F                     	;# 
   438  019F                     	;# 
   439  019F                     	;# 
   440  019F                     	;# 
   441  020C                     	;# 
   442  020D                     	;# 
   443  020E                     	;# 
   444  0210                     	;# 
   445  0211                     	;# 
   446  0211                     	;# 
   447  0212                     	;# 
   448  0212                     	;# 
   449  0213                     	;# 
   450  0213                     	;# 
   451  0214                     	;# 
   452  0214                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0216                     	;# 
   458  0216                     	;# 
   459  0217                     	;# 
   460  0217                     	;# 
   461  028C                     	;# 
   462  028D                     	;# 
   463  028E                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  030C                     	;# 
   473  030D                     	;# 
   474  030E                     	;# 
   475  0311                     	;# 
   476  0311                     	;# 
   477  0312                     	;# 
   478  0313                     	;# 
   479  038C                     	;# 
   480  038D                     	;# 
   481  038E                     	;# 
   482  0390                     	;# 
   483  0391                     	;# 
   484  0392                     	;# 
   485  0393                     	;# 
   486  0394                     	;# 
   487  0395                     	;# 
   488  0396                     	;# 
   489  0397                     	;# 
   490  0398                     	;# 
   491  0399                     	;# 
   492  039D                     	;# 
   493  039E                     	;# 
   494  039F                     	;# 
   495  0511                     	;# 
   496  0513                     	;# 
   497  051A                     	;# 
   498  0811                     	;# 
   499  0812                     	;# 
   500  0813                     	;# 
   501  0814                     	;# 
   502  0815                     	;# 
   503  0816                     	;# 
   504  0817                     	;# 
   505  0818                     	;# 
   506  0819                     	;# 
   507  081A                     	;# 
   508  081B                     	;# 
   509  081C                     	;# 
   510  081D                     	;# 
   511  081E                     	;# 
   512  081F                     	;# 
   513  0820                     	;# 
   514  0821                     	;# 
   515  0821                     	;# 
   516  0822                     	;# 
   517  0823                     	;# 
   518  0823                     	;# 
   519  0824                     	;# 
   520  0825                     	;# 
   521  0825                     	;# 
   522  0826                     	;# 
   523  0827                     	;# 
   524  0827                     	;# 
   525  0828                     	;# 
   526  0829                     	;# 
   527  082A                     	;# 
   528  082B                     	;# 
   529  082C                     	;# 
   530  082D                     	;# 
   531  082E                     	;# 
   532  082F                     	;# 
   533  0831                     	;# 
   534  0832                     	;# 
   535  0833                     	;# 
   536  0834                     	;# 
   537  0835                     	;# 
   538  0836                     	;# 
   539  0837                     	;# 
   540  0838                     	;# 
   541  0839                     	;# 
   542  083A                     	;# 
   543  083B                     	;# 
   544  083C                     	;# 
   545  083D                     	;# 
   546  083E                     	;# 
   547  083F                     	;# 
   548  0840                     	;# 
   549  0841                     	;# 
   550  0841                     	;# 
   551  0842                     	;# 
   552  0843                     	;# 
   553  0843                     	;# 
   554  0844                     	;# 
   555  0845                     	;# 
   556  0845                     	;# 
   557  0846                     	;# 
   558  0847                     	;# 
   559  0847                     	;# 
   560  0848                     	;# 
   561  0849                     	;# 
   562  084A                     	;# 
   563  084B                     	;# 
   564  084C                     	;# 
   565  084D                     	;# 
   566  084E                     	;# 
   567  084F                     	;# 
   568  0851                     	;# 
   569  0852                     	;# 
   570  0853                     	;# 
   571  0854                     	;# 
   572  0855                     	;# 
   573  0856                     	;# 
   574  0857                     	;# 
   575  0858                     	;# 
   576  0859                     	;# 
   577  085A                     	;# 
   578  085B                     	;# 
   579  085C                     	;# 
   580  085D                     	;# 
   581  085E                     	;# 
   582  085F                     	;# 
   583  0860                     	;# 
   584  0861                     	;# 
   585  0861                     	;# 
   586  0862                     	;# 
   587  0863                     	;# 
   588  0863                     	;# 
   589  0864                     	;# 
   590  0865                     	;# 
   591  0865                     	;# 
   592  0866                     	;# 
   593  0867                     	;# 
   594  0867                     	;# 
   595  0868                     	;# 
   596  0869                     	;# 
   597  086A                     	;# 
   598  086B                     	;# 
   599  086C                     	;# 
   600  086D                     	;# 
   601  086E                     	;# 
   602  086F                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  0090                     	;# 
   647  0091                     	;# 
   648  0092                     	;# 
   649  0093                     	;# 
   650  0094                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0097                     	;# 
   654  0098                     	;# 
   655  0099                     	;# 
   656  009A                     	;# 
   657  009B                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  009F                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  0111                     	;# 
   667  0112                     	;# 
   668  0113                     	;# 
   669  0114                     	;# 
   670  0115                     	;# 
   671  0116                     	;# 
   672  0117                     	;# 
   673  0118                     	;# 
   674  0119                     	;# 
   675  011A                     	;# 
   676  011B                     	;# 
   677  011C                     	;# 
   678  011D                     	;# 
   679  011D                     	;# 
   680  011D                     	;# 
   681  011E                     	;# 
   682  011F                     	;# 
   683  018C                     	;# 
   684  018D                     	;# 
   685  0191                     	;# 
   686  0191                     	;# 
   687  0192                     	;# 
   688  0193                     	;# 
   689  0193                     	;# 
   690  0193                     	;# 
   691  0194                     	;# 
   692  0195                     	;# 
   693  0196                     	;# 
   694  0197                     	;# 
   695  0199                     	;# 
   696  0199                     	;# 
   697  0199                     	;# 
   698  019A                     	;# 
   699  019A                     	;# 
   700  019A                     	;# 
   701  019B                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019C                     	;# 
   709  019D                     	;# 
   710  019D                     	;# 
   711  019D                     	;# 
   712  019E                     	;# 
   713  019E                     	;# 
   714  019E                     	;# 
   715  019F                     	;# 
   716  019F                     	;# 
   717  019F                     	;# 
   718  019F                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  020E                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  028C                     	;# 
   741  028D                     	;# 
   742  028E                     	;# 
   743  0291                     	;# 
   744  0291                     	;# 
   745  0292                     	;# 
   746  0293                     	;# 
   747  0298                     	;# 
   748  0298                     	;# 
   749  0299                     	;# 
   750  029A                     	;# 
   751  030C                     	;# 
   752  030D                     	;# 
   753  030E                     	;# 
   754  0311                     	;# 
   755  0311                     	;# 
   756  0312                     	;# 
   757  0313                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0394                     	;# 
   766  0395                     	;# 
   767  0396                     	;# 
   768  0397                     	;# 
   769  0398                     	;# 
   770  0399                     	;# 
   771  039D                     	;# 
   772  039E                     	;# 
   773  039F                     	;# 
   774  0511                     	;# 
   775  0513                     	;# 
   776  051A                     	;# 
   777  0811                     	;# 
   778  0812                     	;# 
   779  0813                     	;# 
   780  0814                     	;# 
   781  0815                     	;# 
   782  0816                     	;# 
   783  0817                     	;# 
   784  0818                     	;# 
   785  0819                     	;# 
   786  081A                     	;# 
   787  081B                     	;# 
   788  081C                     	;# 
   789  081D                     	;# 
   790  081E                     	;# 
   791  081F                     	;# 
   792  0820                     	;# 
   793  0821                     	;# 
   794  0821                     	;# 
   795  0822                     	;# 
   796  0823                     	;# 
   797  0823                     	;# 
   798  0824                     	;# 
   799  0825                     	;# 
   800  0825                     	;# 
   801  0826                     	;# 
   802  0827                     	;# 
   803  0827                     	;# 
   804  0828                     	;# 
   805  0829                     	;# 
   806  082A                     	;# 
   807  082B                     	;# 
   808  082C                     	;# 
   809  082D                     	;# 
   810  082E                     	;# 
   811  082F                     	;# 
   812  0831                     	;# 
   813  0832                     	;# 
   814  0833                     	;# 
   815  0834                     	;# 
   816  0835                     	;# 
   817  0836                     	;# 
   818  0837                     	;# 
   819  0838                     	;# 
   820  0839                     	;# 
   821  083A                     	;# 
   822  083B                     	;# 
   823  083C                     	;# 
   824  083D                     	;# 
   825  083E                     	;# 
   826  083F                     	;# 
   827  0840                     	;# 
   828  0841                     	;# 
   829  0841                     	;# 
   830  0842                     	;# 
   831  0843                     	;# 
   832  0843                     	;# 
   833  0844                     	;# 
   834  0845                     	;# 
   835  0845                     	;# 
   836  0846                     	;# 
   837  0847                     	;# 
   838  0847                     	;# 
   839  0848                     	;# 
   840  0849                     	;# 
   841  084A                     	;# 
   842  084B                     	;# 
   843  084C                     	;# 
   844  084D                     	;# 
   845  084E                     	;# 
   846  084F                     	;# 
   847  0851                     	;# 
   848  0852                     	;# 
   849  0853                     	;# 
   850  0854                     	;# 
   851  0855                     	;# 
   852  0856                     	;# 
   853  0857                     	;# 
   854  0858                     	;# 
   855  0859                     	;# 
   856  085A                     	;# 
   857  085B                     	;# 
   858  085C                     	;# 
   859  085D                     	;# 
   860  085E                     	;# 
   861  085F                     	;# 
   862  0860                     	;# 
   863  0861                     	;# 
   864  0861                     	;# 
   865  0862                     	;# 
   866  0863                     	;# 
   867  0863                     	;# 
   868  0864                     	;# 
   869  0865                     	;# 
   870  0865                     	;# 
   871  0866                     	;# 
   872  0867                     	;# 
   873  0867                     	;# 
   874  0868                     	;# 
   875  0869                     	;# 
   876  086A                     	;# 
   877  086B                     	;# 
   878  086C                     	;# 
   879  086D                     	;# 
   880  086E                     	;# 
   881  086F                     	;# 
   882  0FE4                     	;# 
   883  0FE5                     	;# 
   884  0FE6                     	;# 
   885  0FE7                     	;# 
   886  0FE8                     	;# 
   887  0FE9                     	;# 
   888  0FEA                     	;# 
   889  0FEB                     	;# 
   890  0FED                     	;# 
   891  0FEE                     	;# 
   892  0FEF                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0008                     	;# 
   902  0009                     	;# 
   903  000A                     	;# 
   904  000B                     	;# 
   905  000C                     	;# 
   906  000D                     	;# 
   907  000E                     	;# 
   908  0010                     	;# 
   909  0011                     	;# 
   910  0012                     	;# 
   911  0013                     	;# 
   912  0014                     	;# 
   913  0015                     	;# 
   914  0016                     	;# 
   915  0016                     	;# 
   916  0017                     	;# 
   917  0018                     	;# 
   918  0019                     	;# 
   919  001A                     	;# 
   920  001B                     	;# 
   921  001C                     	;# 
   922  008C                     	;# 
   923  008D                     	;# 
   924  008E                     	;# 
   925  0090                     	;# 
   926  0091                     	;# 
   927  0092                     	;# 
   928  0093                     	;# 
   929  0094                     	;# 
   930  0095                     	;# 
   931  0096                     	;# 
   932  0097                     	;# 
   933  0098                     	;# 
   934  0099                     	;# 
   935  009A                     	;# 
   936  009B                     	;# 
   937  009B                     	;# 
   938  009C                     	;# 
   939  009D                     	;# 
   940  009E                     	;# 
   941  009F                     	;# 
   942  010C                     	;# 
   943  010D                     	;# 
   944  010E                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011C                     	;# 
   957  011D                     	;# 
   958  011D                     	;# 
   959  011D                     	;# 
   960  011E                     	;# 
   961  011F                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  0191                     	;# 
   965  0191                     	;# 
   966  0192                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0197                     	;# 
   974  0199                     	;# 
   975  0199                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019A                     	;# 
   979  019A                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019C                     	;# 
   986  019C                     	;# 
   987  019C                     	;# 
   988  019D                     	;# 
   989  019D                     	;# 
   990  019D                     	;# 
   991  019E                     	;# 
   992  019E                     	;# 
   993  019E                     	;# 
   994  019F                     	;# 
   995  019F                     	;# 
   996  019F                     	;# 
   997  019F                     	;# 
   998  019F                     	;# 
   999  020C                     	;# 
  1000  020D                     	;# 
  1001  020E                     	;# 
  1002  0210                     	;# 
  1003  0211                     	;# 
  1004  0211                     	;# 
  1005  0212                     	;# 
  1006  0212                     	;# 
  1007  0213                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0214                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  028C                     	;# 
  1020  028D                     	;# 
  1021  028E                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0298                     	;# 
  1027  0298                     	;# 
  1028  0299                     	;# 
  1029  029A                     	;# 
  1030  030C                     	;# 
  1031  030D                     	;# 
  1032  030E                     	;# 
  1033  0311                     	;# 
  1034  0311                     	;# 
  1035  0312                     	;# 
  1036  0313                     	;# 
  1037  038C                     	;# 
  1038  038D                     	;# 
  1039  038E                     	;# 
  1040  0390                     	;# 
  1041  0391                     	;# 
  1042  0392                     	;# 
  1043  0393                     	;# 
  1044  0394                     	;# 
  1045  0395                     	;# 
  1046  0396                     	;# 
  1047  0397                     	;# 
  1048  0398                     	;# 
  1049  0399                     	;# 
  1050  039D                     	;# 
  1051  039E                     	;# 
  1052  039F                     	;# 
  1053  0511                     	;# 
  1054  0513                     	;# 
  1055  051A                     	;# 
  1056  0811                     	;# 
  1057  0812                     	;# 
  1058  0813                     	;# 
  1059  0814                     	;# 
  1060  0815                     	;# 
  1061  0816                     	;# 
  1062  0817                     	;# 
  1063  0818                     	;# 
  1064  0819                     	;# 
  1065  081A                     	;# 
  1066  081B                     	;# 
  1067  081C                     	;# 
  1068  081D                     	;# 
  1069  081E                     	;# 
  1070  081F                     	;# 
  1071  0820                     	;# 
  1072  0821                     	;# 
  1073  0821                     	;# 
  1074  0822                     	;# 
  1075  0823                     	;# 
  1076  0823                     	;# 
  1077  0824                     	;# 
  1078  0825                     	;# 
  1079  0825                     	;# 
  1080  0826                     	;# 
  1081  0827                     	;# 
  1082  0827                     	;# 
  1083  0828                     	;# 
  1084  0829                     	;# 
  1085  082A                     	;# 
  1086  082B                     	;# 
  1087  082C                     	;# 
  1088  082D                     	;# 
  1089  082E                     	;# 
  1090  082F                     	;# 
  1091  0831                     	;# 
  1092  0832                     	;# 
  1093  0833                     	;# 
  1094  0834                     	;# 
  1095  0835                     	;# 
  1096  0836                     	;# 
  1097  0837                     	;# 
  1098  0838                     	;# 
  1099  0839                     	;# 
  1100  083A                     	;# 
  1101  083B                     	;# 
  1102  083C                     	;# 
  1103  083D                     	;# 
  1104  083E                     	;# 
  1105  083F                     	;# 
  1106  0840                     	;# 
  1107  0841                     	;# 
  1108  0841                     	;# 
  1109  0842                     	;# 
  1110  0843                     	;# 
  1111  0843                     	;# 
  1112  0844                     	;# 
  1113  0845                     	;# 
  1114  0845                     	;# 
  1115  0846                     	;# 
  1116  0847                     	;# 
  1117  0847                     	;# 
  1118  0848                     	;# 
  1119  0849                     	;# 
  1120  084A                     	;# 
  1121  084B                     	;# 
  1122  084C                     	;# 
  1123  084D                     	;# 
  1124  084E                     	;# 
  1125  084F                     	;# 
  1126  0851                     	;# 
  1127  0852                     	;# 
  1128  0853                     	;# 
  1129  0854                     	;# 
  1130  0855                     	;# 
  1131  0856                     	;# 
  1132  0857                     	;# 
  1133  0858                     	;# 
  1134  0859                     	;# 
  1135  085A                     	;# 
  1136  085B                     	;# 
  1137  085C                     	;# 
  1138  085D                     	;# 
  1139  085E                     	;# 
  1140  085F                     	;# 
  1141  0860                     	;# 
  1142  0861                     	;# 
  1143  0861                     	;# 
  1144  0862                     	;# 
  1145  0863                     	;# 
  1146  0863                     	;# 
  1147  0864                     	;# 
  1148  0865                     	;# 
  1149  0865                     	;# 
  1150  0866                     	;# 
  1151  0867                     	;# 
  1152  0867                     	;# 
  1153  0868                     	;# 
  1154  0869                     	;# 
  1155  086A                     	;# 
  1156  086B                     	;# 
  1157  086C                     	;# 
  1158  086D                     	;# 
  1159  086E                     	;# 
  1160  086F                     	;# 
  1161  0FE4                     	;# 
  1162  0FE5                     	;# 
  1163  0FE6                     	;# 
  1164  0FE7                     	;# 
  1165  0FE8                     	;# 
  1166  0FE9                     	;# 
  1167  0FEA                     	;# 
  1168  0FEB                     	;# 
  1169  0FED                     	;# 
  1170  0FEE                     	;# 
  1171  0FEF                     	;# 
  1172  0000                     	;# 
  1173  0001                     	;# 
  1174  0002                     	;# 
  1175  0003                     	;# 
  1176  0004                     	;# 
  1177  0005                     	;# 
  1178  0006                     	;# 
  1179  0007                     	;# 
  1180  0008                     	;# 
  1181  0009                     	;# 
  1182  000A                     	;# 
  1183  000B                     	;# 
  1184  000C                     	;# 
  1185  000D                     	;# 
  1186  000E                     	;# 
  1187  0010                     	;# 
  1188  0011                     	;# 
  1189  0012                     	;# 
  1190  0013                     	;# 
  1191  0014                     	;# 
  1192  0015                     	;# 
  1193  0016                     	;# 
  1194  0016                     	;# 
  1195  0017                     	;# 
  1196  0018                     	;# 
  1197  0019                     	;# 
  1198  001A                     	;# 
  1199  001B                     	;# 
  1200  001C                     	;# 
  1201  008C                     	;# 
  1202  008D                     	;# 
  1203  008E                     	;# 
  1204  0090                     	;# 
  1205  0091                     	;# 
  1206  0092                     	;# 
  1207  0093                     	;# 
  1208  0094                     	;# 
  1209  0095                     	;# 
  1210  0096                     	;# 
  1211  0097                     	;# 
  1212  0098                     	;# 
  1213  0099                     	;# 
  1214  009A                     	;# 
  1215  009B                     	;# 
  1216  009B                     	;# 
  1217  009C                     	;# 
  1218  009D                     	;# 
  1219  009E                     	;# 
  1220  009F                     	;# 
  1221  010C                     	;# 
  1222  010D                     	;# 
  1223  010E                     	;# 
  1224  0111                     	;# 
  1225  0112                     	;# 
  1226  0113                     	;# 
  1227  0114                     	;# 
  1228  0115                     	;# 
  1229  0116                     	;# 
  1230  0117                     	;# 
  1231  0118                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011B                     	;# 
  1235  011C                     	;# 
  1236  011D                     	;# 
  1237  011D                     	;# 
  1238  011D                     	;# 
  1239  011E                     	;# 
  1240  011F                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0194                     	;# 
  1250  0195                     	;# 
  1251  0196                     	;# 
  1252  0197                     	;# 
  1253  0199                     	;# 
  1254  0199                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019A                     	;# 
  1258  019A                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019C                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019D                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019E                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  019F                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  020E                     	;# 
  1281  0210                     	;# 
  1282  0211                     	;# 
  1283  0211                     	;# 
  1284  0212                     	;# 
  1285  0212                     	;# 
  1286  0213                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0216                     	;# 
  1295  0216                     	;# 
  1296  0217                     	;# 
  1297  0217                     	;# 
  1298  028C                     	;# 
  1299  028D                     	;# 
  1300  028E                     	;# 
  1301  0291                     	;# 
  1302  0291                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0298                     	;# 
  1306  0298                     	;# 
  1307  0299                     	;# 
  1308  029A                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  0311                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  038C                     	;# 
  1317  038D                     	;# 
  1318  038E                     	;# 
  1319  0390                     	;# 
  1320  0391                     	;# 
  1321  0392                     	;# 
  1322  0393                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  0397                     	;# 
  1327  0398                     	;# 
  1328  0399                     	;# 
  1329  039D                     	;# 
  1330  039E                     	;# 
  1331  039F                     	;# 
  1332  0511                     	;# 
  1333  0513                     	;# 
  1334  051A                     	;# 
  1335  0811                     	;# 
  1336  0812                     	;# 
  1337  0813                     	;# 
  1338  0814                     	;# 
  1339  0815                     	;# 
  1340  0816                     	;# 
  1341  0817                     	;# 
  1342  0818                     	;# 
  1343  0819                     	;# 
  1344  081A                     	;# 
  1345  081B                     	;# 
  1346  081C                     	;# 
  1347  081D                     	;# 
  1348  081E                     	;# 
  1349  081F                     	;# 
  1350  0820                     	;# 
  1351  0821                     	;# 
  1352  0821                     	;# 
  1353  0822                     	;# 
  1354  0823                     	;# 
  1355  0823                     	;# 
  1356  0824                     	;# 
  1357  0825                     	;# 
  1358  0825                     	;# 
  1359  0826                     	;# 
  1360  0827                     	;# 
  1361  0827                     	;# 
  1362  0828                     	;# 
  1363  0829                     	;# 
  1364  082A                     	;# 
  1365  082B                     	;# 
  1366  082C                     	;# 
  1367  082D                     	;# 
  1368  082E                     	;# 
  1369  082F                     	;# 
  1370  0831                     	;# 
  1371  0832                     	;# 
  1372  0833                     	;# 
  1373  0834                     	;# 
  1374  0835                     	;# 
  1375  0836                     	;# 
  1376  0837                     	;# 
  1377  0838                     	;# 
  1378  0839                     	;# 
  1379  083A                     	;# 
  1380  083B                     	;# 
  1381  083C                     	;# 
  1382  083D                     	;# 
  1383  083E                     	;# 
  1384  083F                     	;# 
  1385  0840                     	;# 
  1386  0841                     	;# 
  1387  0841                     	;# 
  1388  0842                     	;# 
  1389  0843                     	;# 
  1390  0843                     	;# 
  1391  0844                     	;# 
  1392  0845                     	;# 
  1393  0845                     	;# 
  1394  0846                     	;# 
  1395  0847                     	;# 
  1396  0847                     	;# 
  1397  0848                     	;# 
  1398  0849                     	;# 
  1399  084A                     	;# 
  1400  084B                     	;# 
  1401  084C                     	;# 
  1402  084D                     	;# 
  1403  084E                     	;# 
  1404  084F                     	;# 
  1405  0851                     	;# 
  1406  0852                     	;# 
  1407  0853                     	;# 
  1408  0854                     	;# 
  1409  0855                     	;# 
  1410  0856                     	;# 
  1411  0857                     	;# 
  1412  0858                     	;# 
  1413  0859                     	;# 
  1414  085A                     	;# 
  1415  085B                     	;# 
  1416  085C                     	;# 
  1417  085D                     	;# 
  1418  085E                     	;# 
  1419  085F                     	;# 
  1420  0860                     	;# 
  1421  0861                     	;# 
  1422  0861                     	;# 
  1423  0862                     	;# 
  1424  0863                     	;# 
  1425  0863                     	;# 
  1426  0864                     	;# 
  1427  0865                     	;# 
  1428  0865                     	;# 
  1429  0866                     	;# 
  1430  0867                     	;# 
  1431  0867                     	;# 
  1432  0868                     	;# 
  1433  0869                     	;# 
  1434  086A                     	;# 
  1435  086B                     	;# 
  1436  086C                     	;# 
  1437  086D                     	;# 
  1438  086E                     	;# 
  1439  086F                     	;# 
  1440  0FE4                     	;# 
  1441  0FE5                     	;# 
  1442  0FE6                     	;# 
  1443  0FE7                     	;# 
  1444  0FE8                     	;# 
  1445  0FE9                     	;# 
  1446  0FEA                     	;# 
  1447  0FEB                     	;# 
  1448  0FED                     	;# 
  1449  0FEE                     	;# 
  1450  0FEF                     	;# 
  1451                           
  1452                           	psect	stringtext1
  1453  02E9                     __pstringtext1:	
  1454  02E9                     _segmcode:	
  1455  02E9  343F               	retlw	63
  1456  02EA  3406               	retlw	6
  1457  02EB  345B               	retlw	91
  1458  02EC  344F               	retlw	79
  1459  02ED  3466               	retlw	102
  1460  02EE  346D               	retlw	109
  1461  02EF  347D               	retlw	125
  1462  02F0  3407               	retlw	7
  1463  02F1  347F               	retlw	127
  1464  02F2  346F               	retlw	111
  1465  02F3  3477               	retlw	119
  1466  02F4  347C               	retlw	124
  1467  02F5  3439               	retlw	57
  1468  02F6  345E               	retlw	94
  1469  02F7  3479               	retlw	121
  1470  02F8  3471               	retlw	113
  1471  02F9                     __end_of_segmcode:	
  1472  000E                     _PORTCbits	set	14
  1473  000D                     _PORTBbits	set	13
  1474  0015                     _TMR0	set	21
  1475  000B                     _INTCONbits	set	11
  1476  008E                     _TRISCbits	set	142
  1477  008E                     _TRISC	set	142
  1478  008D                     _TRISB	set	141
  1479  008C                     _TRISA	set	140
  1480  0095                     _OPTION_REGbits	set	149
  1481  0099                     _OSCCONbits	set	153
  1482  010E                     _LATC	set	270
  1483  010D                     _LATB	set	269
  1484  010C                     _LATA	set	268
  1485  020E                     _WPUCbits	set	526
  1486  020E                     _WPUC	set	526
  1487  020D                     _WPUB	set	525
  1488  020C                     _WPUA	set	524
  1489  0399                     _IOCCFbits	set	921
  1490  0397                     _IOCCPbits	set	919
  1491  0398                     _IOCCN	set	920
  1492  0397                     _IOCCP	set	919
  1493  0395                     _IOCBN	set	917
  1494  0394                     _IOCBP	set	916
  1495  0392                     _IOCAN	set	914
  1496  0391                     _IOCAP	set	913
  1497                           
  1498                           ; #config settings
  1499  0000                     
  1500                           	psect	cinit
  1501  0041                     start_initialization:	
  1502  0041                     __initialization:	
  1503                           
  1504                           ; Clear objects allocated to BANK0
  1505  0041  3020               	movlw	low __pbssBANK0
  1506  0042  0084               	movwf	4
  1507  0043  3000               	movlw	high __pbssBANK0
  1508  0044  0085               	movwf	5
  1509  0045  303A               	movlw	58
  1510  0046  3183  2304         	fcall	clear_ram0
  1511  0048                     end_of_initialization:	
  1512                           ;End of C runtime variable initialization code
  1513                           
  1514  0048                     __end_of__initialization:	
  1515  0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1516  0049  0020               	movlb	0
  1517  004A  3183  2B0A         	ljmp	_main	;jump to C main() function
  1518                           
  1519                           	psect	bssBANK0
  1520  0020                     __pbssBANK0:	
  1521  0020                     _g_data:	
  1522  0020                     	ds	57
  1523  0059                     _ENUM:	
  1524  0059                     	ds	1
  1525                           
  1526                           	psect	clrtext
  1527  0304                     clear_ram0:	
  1528                           ;	Called with FSR0 containing the base address, and
  1529                           ;	WREG with the size to clear
  1530                           
  1531  0304  0064               	clrwdt	;clear the watchdog before getting into this loop
  1532  0305                     clrloop0:	
  1533  0305  0180               	clrf	0	;clear RAM location pointed to by FSR
  1534  0306  3101               	addfsr 0,1
  1535  0307  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1536  0308  2B05               	goto	clrloop0	;have we reached the end yet?
  1537  0309  3400               	retlw	0	;all done for this memory range, return
  1538                           
  1539                           	psect	cstackCOMMON
  1540  0070                     __pcstackCOMMON:	
  1541  0070                     ?_update_time:	
  1542  0070                     ?_receive_decode:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_update_display:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_init_env:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_ISR:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_main:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_control595_delay:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ??_control595_delay:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_write_byte:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_write_once:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_times2number:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     times2number@high_level_times:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575                           
  1576                           ; 2 bytes @ 0x0
  1577  0070                     	ds	1
  1578  0071                     control595_delay@times:	
  1579                           
  1580                           ; 1 bytes @ 0x1
  1581  0071                     	ds	1
  1582  0072                     ??_times2number:	
  1583  0072                     ??_write_byte:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0x2
  1588  0072                     	ds	2
  1589  0074                     write_byte@data:	
  1590                           
  1591                           ; 1 bytes @ 0x4
  1592  0074                     	ds	1
  1593  0075                     write_byte@i:	
  1594                           
  1595                           ; 1 bytes @ 0x5
  1596  0075                     	ds	1
  1597  0076                     ??_update_time:	
  1598  0076                     ??_receive_decode:	
  1599                           ; 1 bytes @ 0x6
  1600                           
  1601  0076                     ??_update_display:	
  1602                           ; 1 bytes @ 0x6
  1603                           
  1604  0076                     ??_write_once:	
  1605                           ; 1 bytes @ 0x6
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x6
  1609  0076                     	ds	8
  1610  007E                     ??_ISR:	
  1611                           
  1612                           	psect	cstackBANK0
  1613  005A                     __pcstackBANK0:	
  1614                           ; 1 bytes @ 0xE
  1615                           
  1616  005A                     receive_decode@old_time_h:	
  1617                           
  1618                           ; 2 bytes @ 0x0
  1619  005A                     	ds	2
  1620  005C                     receive_decode@old_time_m:	
  1621                           
  1622                           ; 2 bytes @ 0x2
  1623  005C                     	ds	2
  1624  005E                     receive_decode@i:	
  1625                           
  1626                           ; 2 bytes @ 0x4
  1627  005E                     	ds	2
  1628  0060                     receive_decode@read_value:	
  1629                           
  1630                           ; 2 bytes @ 0x6
  1631  0060                     	ds	2
  1632  0062                     ??_init_env:	
  1633                           
  1634                           ; 1 bytes @ 0x8
  1635  0062                     	ds	1
  1636  0063                     init_env@i:	
  1637                           
  1638                           ; 2 bytes @ 0x9
  1639  0063                     	ds	2
  1640  0065                     ??_main:	
  1641                           
  1642                           	psect	maintext
  1643  030A                     __pmaintext:	
  1644                           ; 1 bytes @ 0xB
  1645 ;;
  1646 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1647 ;;
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 199 in file "main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : B1F/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels required when called:    7
  1670 ;; This function calls:
  1671 ;;		_init_env
  1672 ;; This function is called by:
  1673 ;;		Startup code after reset
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _main
  1679  030A                     _main:	
  1680                           
  1681                           ;main.c: 201:     init_env();
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1685  030A  3182  2201  3183   	fcall	_init_env
  1686  030D                     l81:	
  1687                           ;main.c: 204:     while(1);
  1688                           
  1689  030D  2B0D               	goto	l81
  1690  030E                     __end_of_main:	
  1691                           ;main.c: 206:     return;
  1692                           
  1693                           
  1694                           	psect	text1
  1695  0201                     __ptext1:	
  1696 ;; *************** function _init_env *****************
  1697 ;; Defined at:
  1698 ;;		line 37 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  i               2    9[BANK0 ] int 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    6
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _init_env
  1728  0201                     _init_env:	
  1729                           
  1730                           ;main.c: 42:     TRISA = 0;
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0]
  1734  0201  178B               	bsf	11,7	;volatile
  1735                           
  1736                           ;main.c: 44:     WPUA = 0;
  1737  0202  158B               	bsf	11,3	;volatile
  1738                           
  1739                           ;main.c: 48:     TRISB = 0;
  1740  0203  168B               	bsf	11,5	;volatile
  1741                           
  1742                           ;main.c: 54:     TRISC = 0;
  1743  0204  0021               	movlb	1	; select bank1
  1744  0205  0819               	movf	25,w	;volatile
  1745  0206  39FC               	andlw	-4
  1746  0207  3802               	iorlw	2
  1747  0208  0099               	movwf	25	;volatile
  1748                           
  1749                           ;main.c: 55:     LATC = 0;
  1750  0209  0819               	movf	25,w	;volatile
  1751  020A  3987               	andlw	-121
  1752  020B  3850               	iorlw	80
  1753  020C  0099               	movwf	25	;volatile
  1754                           
  1755                           ;main.c: 63:     TRISCbits.TRISC5 = 1;
  1756  020D  1195               	bcf	21,3	;volatile
  1757                           
  1758                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  1759  020E  1295               	bcf	21,5	;volatile
  1760                           
  1761                           ;main.c: 65: 
  1762  020F  0815               	movf	21,w	;volatile
  1763  0210  39F8               	andlw	-8
  1764  0211  3804               	iorlw	4
  1765  0212  0095               	movwf	21	;volatile
  1766                           
  1767                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  1768  0213  30E7               	movlw	231
  1769  0214  0020               	movlb	0	; select bank0
  1770  0215  0095               	movwf	21	;volatile
  1771                           
  1772                           ;main.c: 74:     g_data.g_time_m = 0;
  1773  0216  0021               	movlb	1	; select bank1
  1774  0217  1395               	bcf	21,7	;volatile
  1775                           
  1776                           ;main.c: 76:     g_data.g_time_10ms = 0;
  1777  0218  018C               	clrf	12	;volatile
  1778                           
  1779                           ;main.c: 77: 
  1780  0219  0022               	movlb	2	; select bank2
  1781  021A  018C               	clrf	12	;volatile
  1782                           
  1783                           ;main.c: 78: 
  1784  021B  0024               	movlb	4	; select bank4
  1785  021C  018C               	clrf	12	;volatile
  1786                           
  1787                           ;main.c: 79:     g_data.g_start_read_switch = FALSE;
  1788  021D  0027               	movlb	7	; select bank7
  1789  021E  0191               	clrf	17	;volatile
  1790                           
  1791                           ;main.c: 80:     g_data.g_start_read_data = FALSE;
  1792  021F  0192               	clrf	18	;volatile
  1793                           
  1794                           ;main.c: 82: 
  1795  0220  0021               	movlb	1	; select bank1
  1796  0221  018D               	clrf	13	;volatile
  1797                           
  1798                           ;main.c: 83: 
  1799  0222  0022               	movlb	2	; select bank2
  1800  0223  018D               	clrf	13	;volatile
  1801                           
  1802                           ;main.c: 84:     g_data.g_high_level_times = 0;
  1803  0224  0024               	movlb	4	; select bank4
  1804  0225  018D               	clrf	13	;volatile
  1805                           
  1806                           ;main.c: 85:     g_data.g_all_level_times = 0;
  1807  0226  0027               	movlb	7	; select bank7
  1808  0227  0194               	clrf	20	;volatile
  1809                           
  1810                           ;main.c: 86:     g_data.g_recv_count = 0;
  1811  0228  0195               	clrf	21	;volatile
  1812                           
  1813                           ;main.c: 88:         g_data.g_recv_buf[i] = 5;
  1814  0229  0021               	movlb	1	; select bank1
  1815  022A  018E               	clrf	14	;volatile
  1816                           
  1817                           ;main.c: 89:     }
  1818  022B  0022               	movlb	2	; select bank2
  1819  022C  018E               	clrf	14	;volatile
  1820                           
  1821                           ;main.c: 90: 
  1822  022D  0024               	movlb	4	; select bank4
  1823  022E  018E               	clrf	14	;volatile
  1824                           
  1825                           ;main.c: 91: 
  1826  022F  0027               	movlb	7	; select bank7
  1827  0230  0197               	clrf	23	;volatile
  1828                           
  1829                           ;main.c: 92: 
  1830  0231  0198               	clrf	24	;volatile
  1831                           
  1832                           ;main.c: 97:     PORTCbits.RC2 = BPC_PWR_ON;
  1833  0232  0021               	movlb	1	; select bank1
  1834  0233  168E               	bsf	14,5	;volatile
  1835                           
  1836                           ;main.c: 98: 
  1837  0234  0024               	movlb	4	; select bank4
  1838  0235  168E               	bsf	14,5	;volatile
  1839                           
  1840                           ;main.c: 100:     TRISCbits.TRISC0 = 1;
  1841  0236  0021               	movlb	1	; select bank1
  1842  0237  148E               	bsf	14,1	;volatile
  1843                           
  1844                           ;main.c: 101:     WPUCbits.WPUC0 = 1;
  1845  0238  0024               	movlb	4	; select bank4
  1846  0239  148E               	bsf	14,1	;volatile
  1847  023A  0027               	movlb	7	; select bank7
  1848  023B  1497               	bsf	23,1	;volatile
  1849  023C  0020               	movlb	0	; select bank0
  1850  023D  01A3               	clrf	_g_data+3
  1851  023E  01A4               	clrf	_g_data+4
  1852  023F  01A5               	clrf	_g_data+5
  1853  0240  01A6               	clrf	_g_data+6
  1854  0241  01A7               	clrf	_g_data+7
  1855  0242  01A8               	clrf	_g_data+8
  1856  0243  01A9               	clrf	_g_data+9
  1857  0244  01AA               	clrf	_g_data+10
  1858  0245  01A0               	clrf	_g_data
  1859  0246  01A1               	clrf	_g_data+1
  1860  0247  01A2               	clrf	_g_data+2
  1861  0248  01AB               	clrf	_g_data+11
  1862  0249  01AC               	clrf	_g_data+12
  1863  024A  01AD               	clrf	_g_data+13
  1864  024B  01AE               	clrf	_g_data+14
  1865  024C  01AF               	clrf	_g_data+15
  1866  024D  01B0               	clrf	_g_data+16
  1867  024E  01E3               	clrf	init_env@i
  1868  024F  01E4               	clrf	init_env@i+1
  1869  0250  0864               	movf	init_env@i+1,w
  1870  0251  3A80               	xorlw	128
  1871  0252  00E2               	movwf	??_init_env
  1872  0253  3080               	movlw	128
  1873  0254  0262               	subwf	??_init_env,w
  1874  0255  1D03               	skipz
  1875  0256  2A59               	goto	u555
  1876  0257  3014               	movlw	20
  1877  0258  0263               	subwf	init_env@i,w
  1878  0259                     u555:	
  1879  0259  1803               	btfsc	3,0
  1880  025A  2A73               	goto	l62
  1881  025B                     l1174:	
  1882  025B  0020               	movlb	0	; select bank0
  1883  025C  3563               	lslf	init_env@i,w
  1884  025D  3E31               	addlw	(low ((_g_data| 0+17)))& (0+255)
  1885  025E  0086               	movwf	6
  1886  025F  0187               	clrf	7
  1887  0260  3005               	movlw	5
  1888  0261  3FC0               	movwi [0]fsr1
  1889  0262  3000               	movlw	0
  1890  0263  3FC1               	movwi [1]fsr1
  1891  0264  3001               	movlw	1
  1892  0265  07E3               	addwf	init_env@i,f
  1893  0266  3000               	movlw	0
  1894  0267  3DE4               	addwfc	init_env@i+1,f
  1895  0268  0864               	movf	init_env@i+1,w
  1896  0269  3A80               	xorlw	128
  1897  026A  00E2               	movwf	??_init_env
  1898  026B  3080               	movlw	128
  1899  026C  0262               	subwf	??_init_env,w
  1900  026D  1D03               	skipz
  1901  026E  2A71               	goto	u565
  1902  026F  3014               	movlw	20
  1903  0270  0263               	subwf	init_env@i,w
  1904  0271                     u565:	
  1905  0271  1C03               	skipc
  1906  0272  2A5B               	goto	l1174
  1907  0273                     l62:	
  1908  0273  0020               	movlb	0	; select bank0
  1909  0274  158D               	bsf	13,3	;volatile
  1910  0275  110E               	bcf	14,2	;volatile
  1911  0276  0021               	movlb	1	; select bank1
  1912  0277  140E               	bsf	14,0	;volatile
  1913  0278  0024               	movlb	4	; select bank4
  1914  0279  140E               	bsf	14,0	;volatile
  1915  027A  0008               	return
  1916  027B                     __end_of_init_env:	
  1917                           
  1918                           	psect	intentry
  1919  0004                     __pintentry:	
  1920 ;; *************** function _ISR *****************
  1921 ;; Defined at:
  1922 ;;		line 159 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    5
  1943 ;; This function calls:
  1944 ;;		_receive_decode
  1945 ;;		_update_time
  1946 ;; This function is called by:
  1947 ;;		Interrupt level 1
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951  0004                     _ISR:	
  1952                           
  1953                           ;incstack = 0
  1954  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1955                           
  1956                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1957  0005  3180               	pagesel	$
  1958                           
  1959                           ;main.c: 161:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && g_
      +                          data.g_start_read_switch == TRUE){
  1960  0006  0027               	movlb	7	; select bank7
  1961  0007  1C99               	btfss	25,1	;volatile
  1962  0008  2818               	goto	i1l68
  1963  0009  0020               	movlb	0	; select bank0
  1964  000A  0821               	movf	_g_data+1,w
  1965  000B  1D03               	btfss	3,2
  1966  000C  2818               	goto	i1l68
  1967  000D  0320               	decf	_g_data,w
  1968  000E  1D03               	btfss	3,2
  1969  000F  2818               	goto	i1l68
  1970                           
  1971                           ;main.c: 163: ;main.c: 165:         g_data.g_start_read_data = TRUE;
  1972  0010  01A1               	clrf	_g_data+1
  1973  0011  0AA1               	incf	_g_data+1,f
  1974                           
  1975                           ;main.c: 166:         g_data.g_start_read_switch = FALSE;
  1976  0012  01A0               	clrf	_g_data
  1977                           
  1978                           ;main.c: 167:         PORTCbits.RC2 = BPC_PWR_ON;
  1979  0013  110E               	bcf	14,2	;volatile
  1980                           
  1981                           ;main.c: 168:         INTCONbits.IOCIF = FALSE;
  1982  0014  100B               	bcf	11,0	;volatile
  1983                           
  1984                           ;main.c: 169:         IOCCFbits.IOCCF1 = FALSE;
  1985  0015  0027               	movlb	7	; select bank7
  1986  0016  1099               	bcf	25,1	;volatile
  1987                           
  1988                           ;main.c: 170:         return;
  1989  0017  283D               	goto	i1l69
  1990  0018                     i1l68:	
  1991                           ;main.c: 171:     }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1){
  1992                           
  1993  0018  180B               	btfsc	11,0	;volatile
  1994  0019  281D               	goto	i1l73
  1995  001A  0027               	movlb	7	; select bank7
  1996  001B  1C99               	btfss	25,1	;volatile
  1997  001C  2820               	goto	i1l1308
  1998  001D                     i1l73:	
  1999                           
  2000                           ;main.c: 172:         INTCONbits.IOCIF = FALSE;
  2001  001D  100B               	bcf	11,0	;volatile
  2002                           
  2003                           ;main.c: 173:         IOCCFbits.IOCCF1 = FALSE;
  2004  001E  0027               	movlb	7	; select bank7
  2005  001F  1099               	bcf	25,1	;volatile
  2006  0020                     i1l1308:	
  2007                           ;main.c: 174:     }
  2008                           
  2009                           
  2010                           ;main.c: 177:     if(g_data.g_start_read_data == TRUE && INTCONbits.TMR0IF){
  2011  0020  0020               	movlb	0	; select bank0
  2012  0021  0321               	decf	_g_data+1,w
  2013  0022  1903               	btfsc	3,2
  2014  0023  1D0B               	btfss	11,2	;volatile
  2015  0024  2830               	goto	i1l74
  2016                           
  2017                           ;main.c: 178:         update_time();
  2018  0025  3182  227B  3180   	fcall	_update_time
  2019                           
  2020                           ;main.c: 179:         receive_decode();
  2021  0028  3180  204C  3180   	fcall	_receive_decode
  2022                           
  2023                           ;main.c: 180:         INTCONbits.TMR0IF = 0;
  2024  002B  110B               	bcf	11,2	;volatile
  2025                           
  2026                           ;main.c: 181:         TMR0 = (217 + 14);
  2027  002C  30E7               	movlw	231
  2028  002D  0020               	movlb	0	; select bank0
  2029  002E  0095               	movwf	21	;volatile
  2030                           
  2031                           ;main.c: 182:         return;
  2032  002F  283D               	goto	i1l69
  2033  0030                     i1l74:	
  2034                           ;main.c: 183:     }
  2035                           
  2036                           
  2037                           ;main.c: 186:     if(INTCONbits.TMR0IF){
  2038  0030  1D0B               	btfss	11,2	;volatile
  2039  0031  283D               	goto	i1l69
  2040                           
  2041                           ;main.c: 187:         update_time();
  2042  0032  3182  227B  3180   	fcall	_update_time
  2043                           
  2044                           ;main.c: 188:         INTCONbits.TMR0IF = 0;
  2045  0035  110B               	bcf	11,2	;volatile
  2046                           
  2047                           ;main.c: 189:         TMR0 = (217 + 14);
  2048  0036  30E7               	movlw	231
  2049  0037  0020               	movlb	0	; select bank0
  2050  0038  0095               	movwf	21	;volatile
  2051                           
  2052                           ;main.c: 191:         if(PORTCbits.RC5 == 1){
  2053  0039  1E8E               	btfss	14,5	;volatile
  2054  003A  283D               	goto	i1l69
  2055                           
  2056                           ;main.c: 192:             g_data.g_start_read_switch = TRUE;
  2057  003B  01A0               	clrf	_g_data
  2058  003C  0AA0               	incf	_g_data,f
  2059  003D                     i1l69:	
  2060                           ;main.c: 196:     return;
  2061                           
  2062                           ;main.c: 195:     }
  2063                           
  2064                           ;main.c: 194:         return;
  2065                           
  2066                           ;main.c: 193:         }
  2067                           
  2068  003D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2069  003E  0009               	retfie
  2070  003F                     __end_of_ISR:	
  2071                           
  2072                           	psect	text3
  2073  027B                     __ptext3:	
  2074 ;; *************** function _update_time *****************
  2075 ;; Defined at:
  2076 ;;		line 14 in file "update_time.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    4
  2097 ;; This function calls:
  2098 ;;		_update_display
  2099 ;; This function is called by:
  2100 ;;		_ISR
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _update_time
  2106  027B                     _update_time:	
  2107                           
  2108                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2112  027B  3001               	movlw	1
  2113  027C  0020               	banksel	_g_data
  2114  027D  07A9               	addwf	(_g_data& (0+127)+9),f
  2115  027E  3000               	movlw	0
  2116  027F  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f
  2117                           
  2118                           ;update_time.c: 16:     if(g_data.g_time_10ms == 100){
  2119  0280  3064               	movlw	100
  2120  0281  0629               	xorwf	(_g_data& (0+127)+9),w
  2121  0282  042A               	iorwf	((_g_data+1)& (0+127)+9),w
  2122  0283  1D03               	btfss	3,2
  2123  0284  0008               	return
  2124                           
  2125                           ;update_time.c: 17:         g_data.g_time_10ms = 0;
  2126  0285  01A9               	clrf	(_g_data& (0+127)+9)
  2127  0286  01AA               	clrf	((_g_data+1)& (0+127)+9)
  2128                           
  2129                           ;update_time.c: 18:         g_data.g_time_s++;
  2130  0287  3001               	movlw	1
  2131  0288  07A7               	addwf	(_g_data& (0+127)+7),f
  2132  0289  3000               	movlw	0
  2133  028A  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f
  2134                           
  2135                           ;update_time.c: 20:         if(g_data.g_time_s == 60){
  2136  028B  303C               	movlw	60
  2137  028C  0627               	xorwf	(_g_data& (0+127)+7),w
  2138  028D  0428               	iorwf	((_g_data+1)& (0+127)+7),w
  2139  028E  1D03               	btfss	3,2
  2140  028F  0008               	return
  2141                           
  2142                           ;update_time.c: 21:             g_data.g_time_m++;
  2143  0290  3001               	movlw	1
  2144  0291  07A5               	addwf	(_g_data& (0+127)+5),f
  2145  0292  3000               	movlw	0
  2146  0293  3DA6               	addwfc	((_g_data+1)& (0+127)+5),f
  2147                           
  2148                           ;update_time.c: 22:             g_data.g_time_s = 0;
  2149  0294  01A7               	clrf	(_g_data& (0+127)+7)
  2150  0295  01A8               	clrf	((_g_data+1)& (0+127)+7)
  2151                           
  2152                           ;update_time.c: 23:             if(g_data.g_time_m == 60){
  2153  0296  303C               	movlw	60
  2154  0297  0625               	xorwf	(_g_data& (0+127)+5),w
  2155  0298  0426               	iorwf	((_g_data+1)& (0+127)+5),w
  2156  0299  1D03               	btfss	3,2
  2157  029A  2AA8               	goto	i1l1204
  2158                           
  2159                           ;update_time.c: 24:                 g_data.g_time_h++;
  2160  029B  3001               	movlw	1
  2161  029C  07A3               	addwf	(_g_data& (0+127)+3),f
  2162  029D  3000               	movlw	0
  2163  029E  3DA4               	addwfc	((_g_data+1)& (0+127)+3),f
  2164                           
  2165                           ;update_time.c: 25:                 g_data.g_time_m = 0;
  2166  029F  01A5               	clrf	(_g_data& (0+127)+5)
  2167  02A0  01A6               	clrf	((_g_data+1)& (0+127)+5)
  2168                           
  2169                           ;update_time.c: 26:                 if(g_data.g_time_h == 24){
  2170  02A1  3018               	movlw	24
  2171  02A2  0623               	xorwf	(_g_data& (0+127)+3),w
  2172  02A3  0424               	iorwf	((_g_data+1)& (0+127)+3),w
  2173  02A4  1D03               	btfss	3,2
  2174  02A5  2AA8               	goto	i1l1204
  2175                           
  2176                           ;update_time.c: 27:                     g_data.g_time_h = 0;
  2177  02A6  01A3               	clrf	(_g_data& (0+127)+3)
  2178  02A7  01A4               	clrf	((_g_data+1)& (0+127)+3)
  2179  02A8                     i1l1204:	
  2180                           ;update_time.c: 29:             }
  2181                           
  2182                           ;update_time.c: 28:                 }
  2183                           
  2184                           
  2185                           ;update_time.c: 31:             update_display();
  2186  02A8  3183  230E         	fcall	_update_display
  2187                           
  2188                           ;update_time.c: 34:     }
  2189                           
  2190                           ;update_time.c: 32:         }
  2191  02AA  0008               	return
  2192  02AB                     __end_of_update_time:	
  2193                           ;update_time.c: 35:     return;
  2194                           
  2195                           
  2196                           	psect	text4
  2197  004C                     __ptext4:	
  2198 ;; *************** function _receive_decode *****************
  2199 ;; Defined at:
  2200 ;;		line 29 in file "receive_decode.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  i               2    4[BANK0 ] int 
  2205 ;;  read_value      2    6[BANK0 ] int 
  2206 ;;  old_time_m      2    2[BANK0 ] int 
  2207 ;;  old_time_h      2    0[BANK0 ] int 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2221 ;;Total ram usage:       16 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    4
  2224 ;; This function calls:
  2225 ;;		_times2number
  2226 ;;		_update_display
  2227 ;; This function is called by:
  2228 ;;		_ISR
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _receive_decode
  2234  004C                     _receive_decode:	
  2235                           
  2236                           ;receive_decode.c: 31:     if(PORTCbits.RC1 == 1){
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _receive_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2240  004C  0020               	movlb	0	; select bank0
  2241  004D  1C8E               	btfss	14,1	;volatile
  2242  004E  2854               	goto	i1l108
  2243                           
  2244                           ;receive_decode.c: 32:         g_data.g_high_level_times++;
  2245  004F  3001               	movlw	1
  2246  0050  0020               	banksel	_g_data
  2247  0051  07AB               	addwf	(_g_data& (0+127)+11),f
  2248  0052  3000               	movlw	0
  2249  0053  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f
  2250  0054                     i1l108:	
  2251                           ;receive_decode.c: 33:     }
  2252                           
  2253                           
  2254                           ;receive_decode.c: 35:     g_data.g_all_level_times++;
  2255  0054  3001               	movlw	1
  2256  0055  0020               	banksel	_g_data
  2257  0056  07AD               	addwf	(_g_data& (0+127)+13),f
  2258  0057  3000               	movlw	0
  2259  0058  3DAE               	addwfc	((_g_data+1)& (0+127)+13),f
  2260                           
  2261                           ;receive_decode.c: 38:     if(g_data.g_all_level_times < 100){
  2262  0059  082E               	movf	((_g_data+1)& (0+127)+13),w
  2263  005A  3A80               	xorlw	128
  2264  005B  00F6               	movwf	??_receive_decode
  2265  005C  3080               	movlw	128
  2266  005D  0276               	subwf	??_receive_decode,w
  2267  005E  1D03               	skipz
  2268  005F  2863               	goto	u62_25
  2269  0060  3064               	movlw	100
  2270  0061  0020               	banksel	_g_data
  2271  0062  022D               	subwf	(_g_data& (0+127)+13),w
  2272  0063                     u62_25:	
  2273  0063  1C03               	btfss	3,0
  2274  0064  0008               	return
  2275                           
  2276                           ;receive_decode.c: 42:     int read_value = times2number(g_data.g_high_level_times);
  2277                           
  2278                           ;receive_decode.c: 40:     }
  2279                           
  2280                           ;receive_decode.c: 39:         return;
  2281  0065  0020               	banksel	_g_data
  2282  0066  082C               	movf	((_g_data+1)& (0+127)+11),w
  2283  0067  00F1               	movwf	times2number@high_level_times+1
  2284  0068  0020               	banksel	_g_data
  2285  0069  082B               	movf	(_g_data& (0+127)+11),w
  2286  006A  00F0               	movwf	times2number@high_level_times
  2287  006B  3181  2182  3180   	fcall	_times2number
  2288  006E  0871               	movf	?_times2number+1,w
  2289  006F  0020               	movlb	0	; select bank0
  2290  0070  00E1               	movwf	receive_decode@read_value+1
  2291  0071  0870               	movf	?_times2number,w
  2292  0072  00E0               	movwf	receive_decode@read_value
  2293                           
  2294                           ;receive_decode.c: 43:     g_data.g_all_level_times = 0;
  2295  0073  0020               	banksel	_g_data
  2296  0074  01AD               	clrf	(_g_data& (0+127)+13)
  2297  0075  01AE               	clrf	((_g_data+1)& (0+127)+13)
  2298                           
  2299                           ;receive_decode.c: 44:     g_data.g_high_level_times = 0;
  2300  0076  01AB               	clrf	(_g_data& (0+127)+11)
  2301  0077  01AC               	clrf	((_g_data+1)& (0+127)+11)
  2302                           
  2303                           ;receive_decode.c: 46:     if(read_value == 5){
  2304  0078  3005               	movlw	5
  2305  0079  0020               	movlb	0	; select bank0
  2306  007A  0660               	xorwf	receive_decode@read_value,w
  2307  007B  0461               	iorwf	receive_decode@read_value+1,w
  2308  007C  1D03               	btfss	3,2
  2309  007D  2884               	goto	i1l1230
  2310                           
  2311                           ;receive_decode.c: 48:         g_data.g_find_recv_start = TRUE;
  2312  007E  3001               	movlw	1
  2313  007F  0020               	banksel	_g_data
  2314  0080  00A2               	movwf	(_g_data& (0+127)+2)
  2315                           
  2316                           ;receive_decode.c: 49:         g_data.g_recv_count = 0;
  2317  0081  01AF               	clrf	(_g_data& (0+127)+15)
  2318  0082  01B0               	clrf	((_g_data+1)& (0+127)+15)
  2319                           
  2320                           ;receive_decode.c: 50:         return;
  2321  0083  0008               	return
  2322  0084                     i1l1230:	
  2323                           ;receive_decode.c: 51:     }else if(read_value == 4){
  2324                           
  2325  0084  3004               	movlw	4
  2326  0085  0020               	movlb	0	; select bank0
  2327  0086  0660               	xorwf	receive_decode@read_value,w
  2328  0087  0461               	iorwf	receive_decode@read_value+1,w
  2329  0088  1903               	btfsc	3,2
  2330  0089  0008               	return
  2331                           
  2332                           ;receive_decode.c: 55:     if(g_data.g_find_recv_start == FALSE || read_value == 5){
  2333                           
  2334                           ;receive_decode.c: 53:     }
  2335                           
  2336                           ;receive_decode.c: 52:         return;
  2337  008A  0020               	banksel	_g_data
  2338  008B  0822               	movf	(_g_data& (0+127)+2),w
  2339  008C  1903               	btfsc	3,2
  2340  008D  0008               	return
  2341  008E  3005               	movlw	5
  2342  008F  0020               	movlb	0	; select bank0
  2343  0090  0660               	xorwf	receive_decode@read_value,w
  2344  0091  0461               	iorwf	receive_decode@read_value+1,w
  2345  0092  1903               	btfsc	3,2
  2346  0093  0008               	return
  2347                           
  2348                           ;receive_decode.c: 59:     g_data.g_recv_buf[g_data.g_recv_count] = read_value;
  2349                           
  2350                           ;receive_decode.c: 57:     }
  2351                           
  2352                           ;receive_decode.c: 56:         return;
  2353  0094  3020               	movlw	low _g_data
  2354  0095  0086               	movwf	6
  2355  0096  3000               	movlw	high _g_data
  2356  0097  0087               	movwf	7
  2357  0098  314F               	addfsr 1,15
  2358  0099  3F40               	moviw [0]fsr1
  2359  009A  00F6               	movwf	??_receive_decode
  2360  009B  3F41               	moviw [1]fsr1
  2361  009C  00F7               	movwf	??_receive_decode+1
  2362  009D  35F6               	lslf	??_receive_decode,f
  2363  009E  0DF7               	rlf	??_receive_decode+1,f
  2364  009F  3031               	movlw	low (_g_data+17)
  2365  00A0  00F8               	movwf	??_receive_decode+2
  2366  00A1  3000               	movlw	high (_g_data+17)
  2367  00A2  00F9               	movwf	??_receive_decode+3
  2368  00A3  0876               	movf	??_receive_decode,w
  2369  00A4  0778               	addwf	??_receive_decode+2,w
  2370  00A5  0086               	movwf	6
  2371  00A6  0877               	movf	??_receive_decode+1,w
  2372  00A7  3D79               	addwfc	??_receive_decode+3,w
  2373  00A8  0087               	movwf	7
  2374  00A9  0860               	movf	receive_decode@read_value,w
  2375  00AA  3FC0               	movwi [0]fsr1
  2376  00AB  0861               	movf	receive_decode@read_value+1,w
  2377  00AC  3FC1               	movwi [1]fsr1
  2378                           
  2379                           ;receive_decode.c: 60:     g_data.g_recv_count++;
  2380  00AD  3001               	movlw	1
  2381  00AE  0020               	banksel	_g_data
  2382  00AF  07AF               	addwf	(_g_data& (0+127)+15),f
  2383  00B0  3000               	movlw	0
  2384  00B1  3DB0               	addwfc	((_g_data+1)& (0+127)+15),f
  2385                           
  2386                           ;receive_decode.c: 61:     if(g_data.g_recv_count < 6){
  2387  00B2  0830               	movf	((_g_data+1)& (0+127)+15),w
  2388  00B3  3A80               	xorlw	128
  2389  00B4  00F6               	movwf	??_receive_decode
  2390  00B5  3080               	movlw	128
  2391  00B6  0276               	subwf	??_receive_decode,w
  2392  00B7  1D03               	skipz
  2393  00B8  28BC               	goto	u67_25
  2394  00B9  3006               	movlw	6
  2395  00BA  0020               	banksel	_g_data
  2396  00BB  022F               	subwf	(_g_data& (0+127)+15),w
  2397  00BC                     u67_25:	
  2398  00BC  1C03               	btfss	3,0
  2399  00BD  0008               	return
  2400                           
  2401                           ;receive_decode.c: 65:     if(g_data.g_recv_buf[0] != 0 && g_data.g_recv_buf[1] != 0){
  2402                           
  2403                           ;receive_decode.c: 63:     }
  2404                           
  2405                           ;receive_decode.c: 62:         return;
  2406  00BE  0020               	banksel	_g_data
  2407  00BF  0831               	movf	(_g_data& (0+127)+17),w
  2408  00C0  0432               	iorwf	((_g_data+1)& (0+127)+17),w
  2409  00C1  1903               	btfsc	3,2
  2410  00C2  28CE               	goto	i1l1256
  2411  00C3  0833               	movf	(_g_data& (0+127)+19),w
  2412  00C4  0434               	iorwf	((_g_data+1)& (0+127)+19),w
  2413  00C5  1903               	btfsc	3,2
  2414  00C6  28CE               	goto	i1l1256
  2415                           
  2416                           ;receive_decode.c: 66:         g_data.g_find_recv_start = FALSE;
  2417  00C7  3000               	movlw	0
  2418  00C8  00A2               	movwf	(_g_data& (0+127)+2)
  2419                           
  2420                           ;receive_decode.c: 67:         g_data.g_start_read_data = 0;
  2421  00C9  3000               	movlw	0
  2422  00CA  00A1               	movwf	(_g_data& (0+127)+1)
  2423                           
  2424                           ;receive_decode.c: 68:         g_data.g_recv_count = 0;
  2425  00CB  01AF               	clrf	(_g_data& (0+127)+15)
  2426  00CC  01B0               	clrf	((_g_data+1)& (0+127)+15)
  2427                           
  2428                           ;receive_decode.c: 69:         return;
  2429  00CD  0008               	return
  2430  00CE                     i1l1256:	
  2431                           ;receive_decode.c: 70:     }
  2432                           
  2433                           
  2434                           ;receive_decode.c: 72:     int old_time_h = g_data.g_time_h;
  2435  00CE  0824               	movf	((_g_data+1)& (0+127)+3),w
  2436  00CF  0020               	movlb	0	; select bank0
  2437  00D0  00DB               	movwf	receive_decode@old_time_h+1
  2438  00D1  0020               	banksel	_g_data
  2439  00D2  0823               	movf	(_g_data& (0+127)+3),w
  2440  00D3  0020               	movlb	0	; select bank0
  2441  00D4  00DA               	movwf	receive_decode@old_time_h
  2442                           
  2443                           ;receive_decode.c: 73:     int old_time_m = g_data.g_time_m;
  2444  00D5  0020               	banksel	_g_data
  2445  00D6  0826               	movf	((_g_data+1)& (0+127)+5),w
  2446  00D7  0020               	movlb	0	; select bank0
  2447  00D8  00DD               	movwf	receive_decode@old_time_m+1
  2448  00D9  0020               	banksel	_g_data
  2449  00DA  0825               	movf	(_g_data& (0+127)+5),w
  2450  00DB  0020               	movlb	0	; select bank0
  2451  00DC  00DC               	movwf	receive_decode@old_time_m
  2452                           
  2453                           ;receive_decode.c: 74:     g_data.g_time_h = g_data.g_recv_buf[2] * 4 + g_data.g_recv_bu
      +                          f[3];
  2454  00DD  3020               	movlw	low _g_data
  2455  00DE  0086               	movwf	6
  2456  00DF  3000               	movlw	high _g_data
  2457  00E0  0087               	movwf	7
  2458  00E1  3157               	addfsr 1,23
  2459  00E2  3020               	movlw	low _g_data
  2460  00E3  0084               	movwf	4
  2461  00E4  3000               	movlw	high _g_data
  2462  00E5  0085               	movwf	5
  2463  00E6  3115               	addfsr 0,21
  2464  00E7  3F00               	moviw [0]fsr0
  2465  00E8  00F6               	movwf	??_receive_decode
  2466  00E9  3F01               	moviw [1]fsr0
  2467  00EA  00F7               	movwf	??_receive_decode+1
  2468  00EB  35F6               	lslf	??_receive_decode,f
  2469  00EC  0DF7               	rlf	??_receive_decode+1,f
  2470  00ED  35F6               	lslf	??_receive_decode,f
  2471  00EE  0DF7               	rlf	??_receive_decode+1,f
  2472  00EF  3F40               	moviw [0]fsr1
  2473  00F0  0776               	addwf	??_receive_decode,w
  2474  00F1  00F8               	movwf	??_receive_decode+2
  2475  00F2  3F41               	moviw [1]fsr1
  2476  00F3  3D77               	addwfc	??_receive_decode+1,w
  2477  00F4  00F9               	movwf	??_receive_decode+3
  2478  00F5  0878               	movf	??_receive_decode+2,w
  2479  00F6  0020               	banksel	_g_data
  2480  00F7  00A3               	movwf	(_g_data& (0+127)+3)
  2481  00F8  0879               	movf	??_receive_decode+3,w
  2482  00F9  0020               	banksel	_g_data
  2483  00FA  00A4               	movwf	((_g_data+1)& (0+127)+3)
  2484                           
  2485                           ;receive_decode.c: 75:     g_data.g_time_m = g_data.g_recv_buf[4] * 16 + g_data.g_recv_b
      +                          uf[5] * 4 + g_data.g_recv_buf[6];
  2486  00FB  3020               	movlw	low _g_data
  2487  00FC  0086               	movwf	6
  2488  00FD  3000               	movlw	high _g_data
  2489  00FE  0087               	movwf	7
  2490  00FF  315D               	addfsr 1,29
  2491  0100  3020               	movlw	low _g_data
  2492  0101  0084               	movwf	4
  2493  0102  3000               	movlw	high _g_data
  2494  0103  0085               	movwf	5
  2495  0104  311B               	addfsr 0,27
  2496  0105  3F00               	moviw [0]fsr0
  2497  0106  00F6               	movwf	??_receive_decode
  2498  0107  3F01               	moviw [1]fsr0
  2499  0108  00F7               	movwf	??_receive_decode+1
  2500  0109  35F6               	lslf	??_receive_decode,f
  2501  010A  0DF7               	rlf	??_receive_decode+1,f
  2502  010B  35F6               	lslf	??_receive_decode,f
  2503  010C  0DF7               	rlf	??_receive_decode+1,f
  2504  010D  3020               	movlw	low _g_data
  2505  010E  0084               	movwf	4
  2506  010F  3000               	movlw	high _g_data
  2507  0110  0085               	movwf	5
  2508  0111  3119               	addfsr 0,25
  2509  0112  3F00               	moviw [0]fsr0
  2510  0113  00F8               	movwf	??_receive_decode+2
  2511  0114  3F01               	moviw [1]fsr0
  2512  0115  00F9               	movwf	??_receive_decode+3
  2513  0116  0EF8               	swapf	??_receive_decode+2,f
  2514  0117  0EF9               	swapf	??_receive_decode+3,f
  2515  0118  30F0               	movlw	240
  2516  0119  05F9               	andwf	??_receive_decode+3,f
  2517  011A  0878               	movf	??_receive_decode+2,w
  2518  011B  390F               	andlw	15
  2519  011C  04F9               	iorwf	??_receive_decode+3,f
  2520  011D  30F0               	movlw	240
  2521  011E  05F8               	andwf	??_receive_decode+2,f
  2522  011F  0876               	movf	??_receive_decode,w
  2523  0120  0778               	addwf	??_receive_decode+2,w
  2524  0121  00FA               	movwf	??_receive_decode+4
  2525  0122  0877               	movf	??_receive_decode+1,w
  2526  0123  3D79               	addwfc	??_receive_decode+3,w
  2527  0124  00FB               	movwf	??_receive_decode+5
  2528  0125  3F40               	moviw [0]fsr1
  2529  0126  077A               	addwf	??_receive_decode+4,w
  2530  0127  00FC               	movwf	??_receive_decode+6
  2531  0128  3F41               	moviw [1]fsr1
  2532  0129  3D7B               	addwfc	??_receive_decode+5,w
  2533  012A  00FD               	movwf	??_receive_decode+7
  2534  012B  087C               	movf	??_receive_decode+6,w
  2535  012C  0020               	banksel	_g_data
  2536  012D  00A5               	movwf	(_g_data& (0+127)+5)
  2537  012E  087D               	movf	??_receive_decode+7,w
  2538  012F  0020               	banksel	_g_data
  2539  0130  00A6               	movwf	((_g_data+1)& (0+127)+5)
  2540                           
  2541                           ;receive_decode.c: 77:     if(old_time_h != g_data.g_time_h || old_time_m != g_data.g_ti
      +                          me_m){
  2542  0131  0020               	movlb	0	; select bank0
  2543  0132  085B               	movf	receive_decode@old_time_h+1,w
  2544  0133  0020               	banksel	_g_data
  2545  0134  0624               	xorwf	((_g_data+1)& (0+127)+3),w
  2546  0135  1D03               	skipz
  2547  0136  293B               	goto	u70_25
  2548  0137  0020               	movlb	0	; select bank0
  2549  0138  085A               	movf	receive_decode@old_time_h,w
  2550  0139  0020               	banksel	_g_data
  2551  013A  0623               	xorwf	(_g_data& (0+127)+3),w
  2552  013B                     u70_25:	
  2553  013B  1D03               	skipz
  2554  013C  2949               	goto	i1l1264
  2555  013D  0020               	movlb	0	; select bank0
  2556  013E  085D               	movf	receive_decode@old_time_m+1,w
  2557  013F  0020               	banksel	_g_data
  2558  0140  0626               	xorwf	((_g_data+1)& (0+127)+5),w
  2559  0141  1D03               	skipz
  2560  0142  2947               	goto	u71_25
  2561  0143  0020               	movlb	0	; select bank0
  2562  0144  085C               	movf	receive_decode@old_time_m,w
  2563  0145  0020               	banksel	_g_data
  2564  0146  0625               	xorwf	(_g_data& (0+127)+5),w
  2565  0147                     u71_25:	
  2566  0147  1903               	skipnz
  2567  0148  294C               	goto	i1l1266
  2568  0149                     i1l1264:	
  2569                           
  2570                           ;receive_decode.c: 78:         update_display();
  2571  0149  3183  230E  3180   	fcall	_update_display
  2572  014C                     i1l1266:	
  2573                           ;receive_decode.c: 79:     }
  2574                           
  2575                           
  2576                           ;receive_decode.c: 82:     g_data.g_find_recv_start = FALSE;
  2577  014C  3000               	movlw	0
  2578  014D  0020               	banksel	_g_data
  2579  014E  00A2               	movwf	(_g_data& (0+127)+2)
  2580                           
  2581                           ;receive_decode.c: 83:     PORTCbits.RC2 = BPC_PWR_OFF;
  2582  014F  0020               	movlb	0	; select bank0
  2583  0150  150E               	bsf	14,2	;volatile
  2584                           
  2585                           ;receive_decode.c: 84:     g_data.g_start_read_data = 0;
  2586  0151  3000               	movlw	0
  2587  0152  0020               	banksel	_g_data
  2588  0153  00A1               	movwf	(_g_data& (0+127)+1)
  2589                           
  2590                           ;receive_decode.c: 85:     g_data.g_recv_count = 0;
  2591  0154  01AF               	clrf	(_g_data& (0+127)+15)
  2592  0155  01B0               	clrf	((_g_data+1)& (0+127)+15)
  2593                           
  2594                           ;receive_decode.c: 86:     for(int i = 0;i < 20; i++){
  2595  0156  0020               	movlb	0	; select bank0
  2596  0157  01DE               	clrf	receive_decode@i
  2597  0158  01DF               	clrf	receive_decode@i+1
  2598  0159                     L1:	
  2599  0159  085F               	movf	receive_decode@i+1,w
  2600  015A  3A80               	xorlw	128
  2601  015B  00F6               	movwf	??_receive_decode
  2602  015C  3080               	movlw	128
  2603  015D  0276               	subwf	??_receive_decode,w
  2604  015E  1D03               	skipz
  2605  015F  2962               	goto	u72_25
  2606  0160  3014               	movlw	20
  2607  0161  025E               	subwf	receive_decode@i,w
  2608  0162                     u72_25:	
  2609  0162  1803               	btfsc	3,0
  2610  0163  0008               	return
  2611                           
  2612                           ;receive_decode.c: 87:         g_data.g_recv_buf[i] = 5;
  2613  0164  3005               	movlw	5
  2614  0165  00F6               	movwf	??_receive_decode
  2615  0166  3000               	movlw	0
  2616  0167  00F7               	movwf	??_receive_decode+1
  2617  0168  0020               	movlb	0	; select bank0
  2618  0169  085F               	movf	receive_decode@i+1,w
  2619  016A  00F9               	movwf	??_receive_decode+3
  2620  016B  085E               	movf	receive_decode@i,w
  2621  016C  00F8               	movwf	??_receive_decode+2
  2622  016D  35F8               	lslf	??_receive_decode+2,f
  2623  016E  0DF9               	rlf	??_receive_decode+3,f
  2624  016F  3031               	movlw	low (_g_data+17)
  2625  0170  00FA               	movwf	??_receive_decode+4
  2626  0171  3000               	movlw	high (_g_data+17)
  2627  0172  00FB               	movwf	??_receive_decode+5
  2628  0173  0878               	movf	??_receive_decode+2,w
  2629  0174  077A               	addwf	??_receive_decode+4,w
  2630  0175  0086               	movwf	6
  2631  0176  0879               	movf	??_receive_decode+3,w
  2632  0177  3D7B               	addwfc	??_receive_decode+5,w
  2633  0178  0087               	movwf	7
  2634  0179  0876               	movf	??_receive_decode,w
  2635  017A  3FC0               	movwi [0]fsr1
  2636  017B  0877               	movf	??_receive_decode+1,w
  2637  017C  3FC1               	movwi [1]fsr1
  2638                           
  2639                           ;receive_decode.c: 88:     }
  2640  017D  3001               	movlw	1
  2641  017E  07DE               	addwf	receive_decode@i,f
  2642  017F  3000               	movlw	0
  2643  0180  3DDF               	addwfc	receive_decode@i+1,f
  2644  0181  2959               	goto	L1
  2645  0182                     __end_of_receive_decode:	
  2646                           ;receive_decode.c: 89:     return;
  2647                           
  2648                           
  2649                           	psect	text5
  2650  030E                     __ptext5:	
  2651 ;; *************** function _update_display *****************
  2652 ;; Defined at:
  2653 ;;		line 62 in file "update_display.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    3
  2674 ;; This function calls:
  2675 ;;		_write_once
  2676 ;; This function is called by:
  2677 ;;		_receive_decode
  2678 ;;		_update_time
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _update_display
  2684  030E                     _update_display:	
  2685                           
  2686                           ;update_display.c: 74:     write_once();
  2687                           
  2688                           ;incstack = 0
  2689                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  2690  030E  3182  22D2         	fcall	_write_once
  2691  0310  0008               	return
  2692  0311                     __end_of_update_display:	
  2693                           ;update_display.c: 75:     return;
  2694                           
  2695                           
  2696                           	psect	text6
  2697  02D2                     __ptext6:	
  2698 ;; *************** function _write_once *****************
  2699 ;; Defined at:
  2700 ;;		line 50 in file "update_display.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		_control595_delay
  2723 ;;		_write_byte
  2724 ;; This function is called by:
  2725 ;;		_update_display
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _write_once
  2731  02D2                     _write_once:	
  2732                           
  2733                           ;update_display.c: 52:     write_byte(0xff);
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  2737  02D2  30FF               	movlw	255
  2738  02D3  3182  22AB  3182   	fcall	_write_byte
  2739                           
  2740                           ;update_display.c: 53:     write_byte(0x00);
  2741  02D6  3000               	movlw	0
  2742  02D7  3182  22AB  3182   	fcall	_write_byte
  2743                           
  2744                           ;update_display.c: 54:     write_byte(0xf0);
  2745  02DA  30F0               	movlw	240
  2746  02DB  3182  22AB  3182   	fcall	_write_byte
  2747                           
  2748                           ;update_display.c: 55:     write_byte(0x0f);
  2749  02DE  300F               	movlw	15
  2750  02DF  3182  22AB  3182   	fcall	_write_byte
  2751                           
  2752                           ;update_display.c: 57:     PORTBbits.RB1 = PIN_HIGH;
  2753  02E2  0020               	movlb	0	; select bank0
  2754  02E3  148D               	bsf	13,1	;volatile
  2755                           
  2756                           ;update_display.c: 58:  control595_delay();
  2757  02E4  3182  22F9         	fcall	_control595_delay
  2758                           
  2759                           ;update_display.c: 59:     PORTBbits.RB1 = PIN_LOW;
  2760  02E6  0020               	movlb	0	; select bank0
  2761  02E7  108D               	bcf	13,1	;volatile
  2762  02E8  0008               	return
  2763  02E9                     __end_of_write_once:	
  2764                           
  2765                           	psect	text7
  2766  02AB                     __ptext7:	
  2767 ;; *************** function _write_byte *****************
  2768 ;; Defined at:
  2769 ;;		line 37 in file "update_display.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  data            1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  data            1    4[COMMON] unsigned char 
  2774 ;;  i               1    5[COMMON] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    1
  2791 ;; This function calls:
  2792 ;;		_control595_delay
  2793 ;; This function is called by:
  2794 ;;		_write_once
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _write_byte
  2800  02AB                     _write_byte:	
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  2804                           ;write_byte@data stored from wreg
  2805  02AB  00F4               	movwf	write_byte@data
  2806                           
  2807                           ;update_display.c: 38:     u8 i;;update_display.c: 39:     for(i = 0; i < 8; i++){
  2808  02AC  01F5               	clrf	write_byte@i
  2809  02AD                     L2:	
  2810  02AD  3008               	movlw	8
  2811  02AE  0275               	subwf	write_byte@i,w
  2812  02AF  1803               	btfsc	3,0
  2813  02B0  0008               	return
  2814                           
  2815                           ;update_display.c: 40:   PORTBbits.RB5 = (data & 0x80) >> 7;
  2816  02B1  0874               	movf	write_byte@data,w
  2817  02B2  00F2               	movwf	??_write_byte
  2818  02B3  3007               	movlw	7
  2819  02B4                     u44_25:	
  2820  02B4  36F2               	lsrf	??_write_byte,f
  2821  02B5  0B89               	decfsz	9,f
  2822  02B6  2AB4               	goto	u44_25
  2823  02B7  0872               	movf	??_write_byte,w
  2824  02B8  3901               	andlw	1
  2825  02B9  00F3               	movwf	??_write_byte+1
  2826  02BA  0EF3               	swapf	??_write_byte+1,f
  2827  02BB  0DF3               	rlf	??_write_byte+1,f
  2828  02BC  0020               	movlb	0	; select bank0
  2829  02BD  080D               	movf	13,w	;volatile
  2830  02BE  0673               	xorwf	??_write_byte+1,w
  2831  02BF  39DF               	andlw	-33
  2832  02C0  0673               	xorwf	??_write_byte+1,w
  2833  02C1  008D               	movwf	13	;volatile
  2834                           
  2835                           ;update_display.c: 41:         PORTBbits.RB0 = PIN_LOW;
  2836  02C2  100D               	bcf	13,0	;volatile
  2837                           
  2838                           ;update_display.c: 42:   control595_delay();
  2839  02C3  3182  22F9  3182   	fcall	_control595_delay
  2840                           
  2841                           ;update_display.c: 43:         PORTBbits.RB0 = PIN_HIGH;
  2842  02C6  0020               	movlb	0	; select bank0
  2843  02C7  140D               	bsf	13,0	;volatile
  2844                           
  2845                           ;update_display.c: 44:   control595_delay();
  2846  02C8  3182  22F9  3182   	fcall	_control595_delay
  2847                           
  2848                           ;update_display.c: 46:         data <<= 1;
  2849  02CB  1003               	clrc
  2850  02CC  0DF4               	rlf	write_byte@data,f
  2851                           
  2852                           ;update_display.c: 47:     }
  2853  02CD  3001               	movlw	1
  2854  02CE  00F2               	movwf	??_write_byte
  2855  02CF  0872               	movf	??_write_byte,w
  2856  02D0  07F5               	addwf	write_byte@i,f
  2857  02D1  2AAD               	goto	L2
  2858  02D2                     __end_of_write_byte:	
  2859                           
  2860                           	psect	text8
  2861  02F9                     __ptext8:	
  2862 ;; *************** function _control595_delay *****************
  2863 ;; Defined at:
  2864 ;;		line 19 in file "update_display.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  times           1    1[COMMON] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_write_byte
  2888 ;;		_write_once
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _control595_delay
  2894  02F9                     _control595_delay:	
  2895                           
  2896                           ;update_display.c: 20:    u8 times = 10;
  2897                           
  2898                           ;incstack = 0
  2899                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  2900  02F9  300A               	movlw	10
  2901  02FA  00F0               	movwf	??_control595_delay
  2902  02FB  0870               	movf	??_control595_delay,w
  2903  02FC  00F1               	movwf	control595_delay@times
  2904  02FD                     i1l147:	
  2905                           ;update_display.c: 24:    }
  2906                           
  2907                           ;update_display.c: 21:    while(times > 0){
  2908                           
  2909                           
  2910                           ;update_display.c: 21:    while(times > 0){
  2911  02FD  0871               	movf	control595_delay@times,w
  2912  02FE  1903               	btfsc	3,2
  2913  02FF  0008               	return
  2914                           
  2915                           ;update_display.c: 22:     __nop();
  2916  0300  0000               	nop
  2917                           
  2918                           ;update_display.c: 23:        times--;
  2919  0301  3001               	movlw	1
  2920  0302  02F1               	subwf	control595_delay@times,f
  2921  0303  2AFD               	goto	i1l147
  2922  0304                     __end_of_control595_delay:	
  2923                           
  2924                           	psect	text9
  2925  0182                     __ptext9:	
  2926 ;; *************** function _times2number *****************
  2927 ;; Defined at:
  2928 ;;		line 14 in file "receive_decode.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  high_level_t    2    0[COMMON] int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2    0[COMMON] int 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;Total ram usage:        3 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_receive_decode
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _times2number
  2957  0182                     _times2number:	
  2958                           
  2959                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _times2number: [wreg+status,2]
  2963  0182  0871               	movf	times2number@high_level_times+1,w
  2964  0183  3A80               	xorlw	128
  2965  0184  00F2               	movwf	??_times2number
  2966  0185  3080               	movlw	128
  2967  0186  0272               	subwf	??_times2number,w
  2968  0187  1D03               	skipz
  2969  0188  298B               	goto	u46_25
  2970  0189  3005               	movlw	5
  2971  018A  0270               	subwf	times2number@high_level_times,w
  2972  018B                     u46_25:	
  2973  018B  1C03               	skipc
  2974  018C  299B               	goto	i1l1050
  2975  018D  0871               	movf	times2number@high_level_times+1,w
  2976  018E  3A80               	xorlw	128
  2977  018F  00F2               	movwf	??_times2number
  2978  0190  3080               	movlw	128
  2979  0191  0272               	subwf	??_times2number,w
  2980  0192  1D03               	skipz
  2981  0193  2996               	goto	u47_25
  2982  0194  300F               	movlw	15
  2983  0195  0270               	subwf	times2number@high_level_times,w
  2984  0196                     u47_25:	
  2985  0196  1803               	skipnc
  2986  0197  299B               	goto	i1l1050
  2987                           
  2988                           ;receive_decode.c: 16:         return 0;
  2989  0198  01F0               	clrf	?_times2number
  2990  0199  01F1               	clrf	?_times2number+1
  2991                           
  2992                           ;receive_decode.c: 17:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  2993  019A  0008               	return
  2994  019B                     i1l1050:	
  2995  019B  0871               	movf	times2number@high_level_times+1,w
  2996  019C  3A80               	xorlw	128
  2997  019D  00F2               	movwf	??_times2number
  2998  019E  3080               	movlw	128
  2999  019F  0272               	subwf	??_times2number,w
  3000  01A0  1D03               	skipz
  3001  01A1  29A4               	goto	u48_25
  3002  01A2  300F               	movlw	15
  3003  01A3  0270               	subwf	times2number@high_level_times,w
  3004  01A4                     u48_25:	
  3005  01A4  1C03               	skipc
  3006  01A5  29B6               	goto	i1l1060
  3007  01A6  0871               	movf	times2number@high_level_times+1,w
  3008  01A7  3A80               	xorlw	128
  3009  01A8  00F2               	movwf	??_times2number
  3010  01A9  3080               	movlw	128
  3011  01AA  0272               	subwf	??_times2number,w
  3012  01AB  1D03               	skipz
  3013  01AC  29AF               	goto	u49_25
  3014  01AD  3019               	movlw	25
  3015  01AE  0270               	subwf	times2number@high_level_times,w
  3016  01AF                     u49_25:	
  3017  01AF  1803               	skipnc
  3018  01B0  29B6               	goto	i1l1060
  3019                           
  3020                           ;receive_decode.c: 18:         return 1;
  3021  01B1  3001               	movlw	1
  3022  01B2  00F0               	movwf	?_times2number
  3023  01B3  3000               	movlw	0
  3024  01B4  00F1               	movwf	?_times2number+1
  3025                           
  3026                           ;receive_decode.c: 19:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  3027  01B5  0008               	return
  3028  01B6                     i1l1060:	
  3029  01B6  0871               	movf	times2number@high_level_times+1,w
  3030  01B7  3A80               	xorlw	128
  3031  01B8  00F2               	movwf	??_times2number
  3032  01B9  3080               	movlw	128
  3033  01BA  0272               	subwf	??_times2number,w
  3034  01BB  1D03               	skipz
  3035  01BC  29BF               	goto	u50_25
  3036  01BD  3019               	movlw	25
  3037  01BE  0270               	subwf	times2number@high_level_times,w
  3038  01BF                     u50_25:	
  3039  01BF  1C03               	skipc
  3040  01C0  29D1               	goto	i1l1070
  3041  01C1  0871               	movf	times2number@high_level_times+1,w
  3042  01C2  3A80               	xorlw	128
  3043  01C3  00F2               	movwf	??_times2number
  3044  01C4  3080               	movlw	128
  3045  01C5  0272               	subwf	??_times2number,w
  3046  01C6  1D03               	skipz
  3047  01C7  29CA               	goto	u51_25
  3048  01C8  3023               	movlw	35
  3049  01C9  0270               	subwf	times2number@high_level_times,w
  3050  01CA                     u51_25:	
  3051  01CA  1803               	skipnc
  3052  01CB  29D1               	goto	i1l1070
  3053                           
  3054                           ;receive_decode.c: 20:         return 2;
  3055  01CC  3002               	movlw	2
  3056  01CD  00F0               	movwf	?_times2number
  3057  01CE  3000               	movlw	0
  3058  01CF  00F1               	movwf	?_times2number+1
  3059                           
  3060                           ;receive_decode.c: 21:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  3061  01D0  0008               	return
  3062  01D1                     i1l1070:	
  3063  01D1  0871               	movf	times2number@high_level_times+1,w
  3064  01D2  3A80               	xorlw	128
  3065  01D3  00F2               	movwf	??_times2number
  3066  01D4  3080               	movlw	128
  3067  01D5  0272               	subwf	??_times2number,w
  3068  01D6  1D03               	skipz
  3069  01D7  29DA               	goto	u52_25
  3070  01D8  3023               	movlw	35
  3071  01D9  0270               	subwf	times2number@high_level_times,w
  3072  01DA                     u52_25:	
  3073  01DA  1C03               	skipc
  3074  01DB  29EC               	goto	i1l1080
  3075  01DC  0871               	movf	times2number@high_level_times+1,w
  3076  01DD  3A80               	xorlw	128
  3077  01DE  00F2               	movwf	??_times2number
  3078  01DF  3080               	movlw	128
  3079  01E0  0272               	subwf	??_times2number,w
  3080  01E1  1D03               	skipz
  3081  01E2  29E5               	goto	u53_25
  3082  01E3  302D               	movlw	45
  3083  01E4  0270               	subwf	times2number@high_level_times,w
  3084  01E5                     u53_25:	
  3085  01E5  1803               	skipnc
  3086  01E6  29EC               	goto	i1l1080
  3087                           
  3088                           ;receive_decode.c: 22:         return 3;
  3089  01E7  3003               	movlw	3
  3090  01E8  00F0               	movwf	?_times2number
  3091  01E9  3000               	movlw	0
  3092  01EA  00F1               	movwf	?_times2number+1
  3093                           
  3094                           ;receive_decode.c: 23:     }else if(high_level_times >= 40 + 5){
  3095  01EB  0008               	return
  3096  01EC                     i1l1080:	
  3097  01EC  0871               	movf	times2number@high_level_times+1,w
  3098  01ED  3A80               	xorlw	128
  3099  01EE  00F2               	movwf	??_times2number
  3100  01EF  3080               	movlw	128
  3101  01F0  0272               	subwf	??_times2number,w
  3102  01F1  1D03               	skipz
  3103  01F2  29F5               	goto	u54_25
  3104  01F3  302D               	movlw	45
  3105  01F4  0270               	subwf	times2number@high_level_times,w
  3106  01F5                     u54_25:	
  3107  01F5  1C03               	skipc
  3108  01F6  29FC               	goto	i1l1088
  3109                           
  3110                           ;receive_decode.c: 24:         return 4;
  3111  01F7  3004               	movlw	4
  3112  01F8  00F0               	movwf	?_times2number
  3113  01F9  3000               	movlw	0
  3114  01FA  00F1               	movwf	?_times2number+1
  3115                           
  3116                           ;receive_decode.c: 25:     }else{
  3117  01FB  0008               	return
  3118  01FC                     i1l1088:	
  3119                           
  3120                           ;receive_decode.c: 26:         return 5;
  3121  01FC  3005               	movlw	5
  3122  01FD  00F0               	movwf	?_times2number
  3123  01FE  3000               	movlw	0
  3124  01FF  00F1               	movwf	?_times2number+1
  3125                           
  3126                           ;receive_decode.c: 27:     }
  3127  0200  0008               	return
  3128  0201                     __end_of_times2number:	
  3129  007E                     btemp	set	126	;btemp
  3130  007E                     int$flags	set	126
  3131  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_receive_decode
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0     711
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                          0     0      0     117
                     _update_display
 ---------------------------------------------------------------------------------
 (3) _receive_decode                                      16    16      0     594
                                              6 COMMON     8     8      0
                                              0 BANK0      8     8      0
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       0     0      0     117
                         _write_once
 ---------------------------------------------------------------------------------
 (5) _write_once                                           0     0      0     117
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (6) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (7) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _times2number                                         3     1      2     274
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env

 _ISR (ROOT)
   _receive_decode
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      53      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Mar 26 00:05:08 2019

             ?_receive_decode 0070                   _update_time 027B                   __CFG_CP$OFF 0000  
                          l62 0273                            l81 030D                _update_display 030E  
                 __CFG_LVP$ON 0000             ?_control595_delay 0070                  __CFG_CPD$OFF 0000  
                         _ISR 0004                           u555 0259                           u565 0271  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000                          ?_ISR 0070  
                        l1174 025B                          _LATA 010C                          _LATB 010D  
                        _LATC 010E                          _ENUM 0059                          i1l73 001D  
                        i1l74 0030                          i1l68 0018                          i1l69 003D  
                        _TMR0 0015                          _WPUA 020C                          _WPUB 020D  
                        _WPUC 020E                  __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000  
                        _main 030A                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 003F  
               __CFG_MCLRE$ON 0000                         ??_ISR 007E        __end_of_update_display 0311  
               __CFG_PLLEN$ON 0000                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _IOCAN 0392                         _IOCAP 0391                         _IOCBN 0395  
                       _IOCBP 0394                         _IOCCN 0398                         _IOCCP 0397  
                       i1l108 0054                         i1l147 02FD                         u50_25 01BF  
                       u51_25 01CA                         u52_25 01DA                         u44_25 02B4  
                       u53_25 01E5                         u54_25 01F5                         u46_25 018B  
                       u70_25 013B                         u62_25 0063                         u47_25 0196  
                       u71_25 0147                         u48_25 01A4                         u72_25 0162  
                       _TRISA 008C                         _TRISB 008D                         u49_25 01AF  
                       _TRISC 008E                         u67_25 00BC                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0041  
                __end_of_main 030E               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 0065                        i1l1050 019B                        i1l1060 01B6  
                      i1l1204 02A8                        i1l1070 01D1                        i1l1230 0084  
                      i1l1080 01EC                        i1l1308 0020                        i1l1088 01FC  
                      i1l1264 0149                        i1l1256 00CE                        i1l1266 014C  
              __CFG_PWRTE$OFF 0000                        _g_data 0020                __CFG_STVREN$ON 0000  
            __end_of_init_env 027B              __end_of_segmcode 02F9  times2number@high_level_times 0070  
     __end_of__initialization 0048              ??_receive_decode 0076                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                _OPTION_REGbits 0095  
                  __pbssBANK0 0020     __size_of_control595_delay 000B               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 030A                    __pintentry 0004                     ?_init_env 0070  
            ??_update_display 0076                       __ptext1 0201                       __ptext3 027B  
                     __ptext4 004C                       __ptext5 030E                       __ptext6 02D2  
                     __ptext7 02AB                       __ptext8 02F9                       __ptext9 0182  
                __size_of_ISR 003B                 ?_times2number 0070                     _IOCCFbits 0399  
                   _IOCCPbits 0397                       clrloop0 0305          end_of_initialization 0048  
                  ??_init_env 0062          __size_of_update_time 0030                     _PORTBbits 000D  
                   _PORTCbits 000E                ??_times2number 0072                     _TRISCbits 008E  
            _control595_delay 02F9                    _write_byte 02AB                    _write_once 02D2  
    receive_decode@read_value 0060           start_initialization 0041      receive_decode@old_time_h 005A  
    receive_decode@old_time_m 005C                   __end_of_ISR 003F               receive_decode@i 005E  
                   ___latbits 0002                 __pcstackBANK0 005A             __size_of_init_env 007A  
        __end_of_times2number 0201       __size_of_receive_decode 0136                   ?_write_byte 0070  
                 ?_write_once 0070                     clear_ram0 0304      __end_of_control595_delay 0304  
                    _WPUCbits 020E                   write_byte@i 0075           __size_of_write_byte 0027  
         __size_of_write_once 0017                 ??_update_time 0076                     init_env@i 0063  
     __size_of_update_display 0003         __size_of_times2number 007F                      _init_env 0201  
               __size_of_main 0004                      _segmcode 02E9                      int$flags 007E  
              _receive_decode 004C           __end_of_update_time 02AB                    _INTCONbits 000B  
                _times2number 0182                      intlevel1 0000             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099        __end_of_receive_decode 0182                  ??_write_byte 0072  
                ??_write_once 0076                 __pstringtext1 02E9            __end_of_write_byte 02D2  
          __end_of_write_once 02E9  

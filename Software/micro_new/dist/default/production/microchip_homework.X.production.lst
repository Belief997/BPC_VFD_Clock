

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 25 23:30:46 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.00
    27                           ; Generated 27/05/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1786 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  038C                     	;# 
   205  038D                     	;# 
   206  038E                     	;# 
   207  0390                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0511                     	;# 
   221  0513                     	;# 
   222  051A                     	;# 
   223  0811                     	;# 
   224  0812                     	;# 
   225  0813                     	;# 
   226  0814                     	;# 
   227  0815                     	;# 
   228  0816                     	;# 
   229  0817                     	;# 
   230  0818                     	;# 
   231  0819                     	;# 
   232  081A                     	;# 
   233  081B                     	;# 
   234  081C                     	;# 
   235  081D                     	;# 
   236  081E                     	;# 
   237  081F                     	;# 
   238  0820                     	;# 
   239  0821                     	;# 
   240  0821                     	;# 
   241  0822                     	;# 
   242  0823                     	;# 
   243  0823                     	;# 
   244  0824                     	;# 
   245  0825                     	;# 
   246  0825                     	;# 
   247  0826                     	;# 
   248  0827                     	;# 
   249  0827                     	;# 
   250  0828                     	;# 
   251  0829                     	;# 
   252  082A                     	;# 
   253  082B                     	;# 
   254  082C                     	;# 
   255  082D                     	;# 
   256  082E                     	;# 
   257  082F                     	;# 
   258  0831                     	;# 
   259  0832                     	;# 
   260  0833                     	;# 
   261  0834                     	;# 
   262  0835                     	;# 
   263  0836                     	;# 
   264  0837                     	;# 
   265  0838                     	;# 
   266  0839                     	;# 
   267  083A                     	;# 
   268  083B                     	;# 
   269  083C                     	;# 
   270  083D                     	;# 
   271  083E                     	;# 
   272  083F                     	;# 
   273  0840                     	;# 
   274  0841                     	;# 
   275  0841                     	;# 
   276  0842                     	;# 
   277  0843                     	;# 
   278  0843                     	;# 
   279  0844                     	;# 
   280  0845                     	;# 
   281  0845                     	;# 
   282  0846                     	;# 
   283  0847                     	;# 
   284  0847                     	;# 
   285  0848                     	;# 
   286  0849                     	;# 
   287  084A                     	;# 
   288  084B                     	;# 
   289  084C                     	;# 
   290  084D                     	;# 
   291  084E                     	;# 
   292  084F                     	;# 
   293  0851                     	;# 
   294  0852                     	;# 
   295  0853                     	;# 
   296  0854                     	;# 
   297  0855                     	;# 
   298  0856                     	;# 
   299  0857                     	;# 
   300  0858                     	;# 
   301  0859                     	;# 
   302  085A                     	;# 
   303  085B                     	;# 
   304  085C                     	;# 
   305  085D                     	;# 
   306  085E                     	;# 
   307  085F                     	;# 
   308  0860                     	;# 
   309  0861                     	;# 
   310  0861                     	;# 
   311  0862                     	;# 
   312  0863                     	;# 
   313  0863                     	;# 
   314  0864                     	;# 
   315  0865                     	;# 
   316  0865                     	;# 
   317  0866                     	;# 
   318  0867                     	;# 
   319  0867                     	;# 
   320  0868                     	;# 
   321  0869                     	;# 
   322  086A                     	;# 
   323  086B                     	;# 
   324  086C                     	;# 
   325  086D                     	;# 
   326  086E                     	;# 
   327  086F                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011C                     	;# 
   403  011D                     	;# 
   404  011D                     	;# 
   405  011D                     	;# 
   406  011E                     	;# 
   407  011F                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  028C                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  0291                     	;# 
   469  0291                     	;# 
   470  0292                     	;# 
   471  0293                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  030C                     	;# 
   477  030D                     	;# 
   478  030E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  0390                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  0397                     	;# 
   494  0398                     	;# 
   495  0399                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0511                     	;# 
   500  0513                     	;# 
   501  051A                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  0815                     	;# 
   507  0816                     	;# 
   508  0817                     	;# 
   509  0818                     	;# 
   510  0819                     	;# 
   511  081A                     	;# 
   512  081B                     	;# 
   513  081C                     	;# 
   514  081D                     	;# 
   515  081E                     	;# 
   516  081F                     	;# 
   517  0820                     	;# 
   518  0821                     	;# 
   519  0821                     	;# 
   520  0822                     	;# 
   521  0823                     	;# 
   522  0823                     	;# 
   523  0824                     	;# 
   524  0825                     	;# 
   525  0825                     	;# 
   526  0826                     	;# 
   527  0827                     	;# 
   528  0827                     	;# 
   529  0828                     	;# 
   530  0829                     	;# 
   531  082A                     	;# 
   532  082B                     	;# 
   533  082C                     	;# 
   534  082D                     	;# 
   535  082E                     	;# 
   536  082F                     	;# 
   537  0831                     	;# 
   538  0832                     	;# 
   539  0833                     	;# 
   540  0834                     	;# 
   541  0835                     	;# 
   542  0836                     	;# 
   543  0837                     	;# 
   544  0838                     	;# 
   545  0839                     	;# 
   546  083A                     	;# 
   547  083B                     	;# 
   548  083C                     	;# 
   549  083D                     	;# 
   550  083E                     	;# 
   551  083F                     	;# 
   552  0840                     	;# 
   553  0841                     	;# 
   554  0841                     	;# 
   555  0842                     	;# 
   556  0843                     	;# 
   557  0843                     	;# 
   558  0844                     	;# 
   559  0845                     	;# 
   560  0845                     	;# 
   561  0846                     	;# 
   562  0847                     	;# 
   563  0847                     	;# 
   564  0848                     	;# 
   565  0849                     	;# 
   566  084A                     	;# 
   567  084B                     	;# 
   568  084C                     	;# 
   569  084D                     	;# 
   570  084E                     	;# 
   571  084F                     	;# 
   572  0851                     	;# 
   573  0852                     	;# 
   574  0853                     	;# 
   575  0854                     	;# 
   576  0855                     	;# 
   577  0856                     	;# 
   578  0857                     	;# 
   579  0858                     	;# 
   580  0859                     	;# 
   581  085A                     	;# 
   582  085B                     	;# 
   583  085C                     	;# 
   584  085D                     	;# 
   585  085E                     	;# 
   586  085F                     	;# 
   587  0860                     	;# 
   588  0861                     	;# 
   589  0861                     	;# 
   590  0862                     	;# 
   591  0863                     	;# 
   592  0863                     	;# 
   593  0864                     	;# 
   594  0865                     	;# 
   595  0865                     	;# 
   596  0866                     	;# 
   597  0867                     	;# 
   598  0867                     	;# 
   599  0868                     	;# 
   600  0869                     	;# 
   601  086A                     	;# 
   602  086B                     	;# 
   603  086C                     	;# 
   604  086D                     	;# 
   605  086E                     	;# 
   606  086F                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0016                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  0090                     	;# 
   651  0091                     	;# 
   652  0092                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0115                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0118                     	;# 
   678  0119                     	;# 
   679  011A                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0199                     	;# 
   700  0199                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019A                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019D                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019E                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  019F                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  030C                     	;# 
   756  030D                     	;# 
   757  030E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  0393                     	;# 
   769  0394                     	;# 
   770  0395                     	;# 
   771  0396                     	;# 
   772  0397                     	;# 
   773  0398                     	;# 
   774  0399                     	;# 
   775  039D                     	;# 
   776  039E                     	;# 
   777  039F                     	;# 
   778  0511                     	;# 
   779  0513                     	;# 
   780  051A                     	;# 
   781  0811                     	;# 
   782  0812                     	;# 
   783  0813                     	;# 
   784  0814                     	;# 
   785  0815                     	;# 
   786  0816                     	;# 
   787  0817                     	;# 
   788  0818                     	;# 
   789  0819                     	;# 
   790  081A                     	;# 
   791  081B                     	;# 
   792  081C                     	;# 
   793  081D                     	;# 
   794  081E                     	;# 
   795  081F                     	;# 
   796  0820                     	;# 
   797  0821                     	;# 
   798  0821                     	;# 
   799  0822                     	;# 
   800  0823                     	;# 
   801  0823                     	;# 
   802  0824                     	;# 
   803  0825                     	;# 
   804  0825                     	;# 
   805  0826                     	;# 
   806  0827                     	;# 
   807  0827                     	;# 
   808  0828                     	;# 
   809  0829                     	;# 
   810  082A                     	;# 
   811  082B                     	;# 
   812  082C                     	;# 
   813  082D                     	;# 
   814  082E                     	;# 
   815  082F                     	;# 
   816  0831                     	;# 
   817  0832                     	;# 
   818  0833                     	;# 
   819  0834                     	;# 
   820  0835                     	;# 
   821  0836                     	;# 
   822  0837                     	;# 
   823  0838                     	;# 
   824  0839                     	;# 
   825  083A                     	;# 
   826  083B                     	;# 
   827  083C                     	;# 
   828  083D                     	;# 
   829  083E                     	;# 
   830  083F                     	;# 
   831  0840                     	;# 
   832  0841                     	;# 
   833  0841                     	;# 
   834  0842                     	;# 
   835  0843                     	;# 
   836  0843                     	;# 
   837  0844                     	;# 
   838  0845                     	;# 
   839  0845                     	;# 
   840  0846                     	;# 
   841  0847                     	;# 
   842  0847                     	;# 
   843  0848                     	;# 
   844  0849                     	;# 
   845  084A                     	;# 
   846  084B                     	;# 
   847  084C                     	;# 
   848  084D                     	;# 
   849  084E                     	;# 
   850  084F                     	;# 
   851  0851                     	;# 
   852  0852                     	;# 
   853  0853                     	;# 
   854  0854                     	;# 
   855  0855                     	;# 
   856  0856                     	;# 
   857  0857                     	;# 
   858  0858                     	;# 
   859  0859                     	;# 
   860  085A                     	;# 
   861  085B                     	;# 
   862  085C                     	;# 
   863  085D                     	;# 
   864  085E                     	;# 
   865  085F                     	;# 
   866  0860                     	;# 
   867  0861                     	;# 
   868  0861                     	;# 
   869  0862                     	;# 
   870  0863                     	;# 
   871  0863                     	;# 
   872  0864                     	;# 
   873  0865                     	;# 
   874  0865                     	;# 
   875  0866                     	;# 
   876  0867                     	;# 
   877  0867                     	;# 
   878  0868                     	;# 
   879  0869                     	;# 
   880  086A                     	;# 
   881  086B                     	;# 
   882  086C                     	;# 
   883  086D                     	;# 
   884  086E                     	;# 
   885  086F                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  000E                     	;# 
   912  0010                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0013                     	;# 
   916  0014                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  008E                     	;# 
   929  0090                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0093                     	;# 
   933  0094                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  010E                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011C                     	;# 
   961  011D                     	;# 
   962  011D                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  011F                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0197                     	;# 
   978  0199                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019C                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019D                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019E                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  020C                     	;# 
  1004  020D                     	;# 
  1005  020E                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0298                     	;# 
  1031  0298                     	;# 
  1032  0299                     	;# 
  1033  029A                     	;# 
  1034  030C                     	;# 
  1035  030D                     	;# 
  1036  030E                     	;# 
  1037  0311                     	;# 
  1038  0311                     	;# 
  1039  0312                     	;# 
  1040  0313                     	;# 
  1041  038C                     	;# 
  1042  038D                     	;# 
  1043  038E                     	;# 
  1044  0390                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0397                     	;# 
  1052  0398                     	;# 
  1053  0399                     	;# 
  1054  039D                     	;# 
  1055  039E                     	;# 
  1056  039F                     	;# 
  1057  0511                     	;# 
  1058  0513                     	;# 
  1059  051A                     	;# 
  1060  0811                     	;# 
  1061  0812                     	;# 
  1062  0813                     	;# 
  1063  0814                     	;# 
  1064  0815                     	;# 
  1065  0816                     	;# 
  1066  0817                     	;# 
  1067  0818                     	;# 
  1068  0819                     	;# 
  1069  081A                     	;# 
  1070  081B                     	;# 
  1071  081C                     	;# 
  1072  081D                     	;# 
  1073  081E                     	;# 
  1074  081F                     	;# 
  1075  0820                     	;# 
  1076  0821                     	;# 
  1077  0821                     	;# 
  1078  0822                     	;# 
  1079  0823                     	;# 
  1080  0823                     	;# 
  1081  0824                     	;# 
  1082  0825                     	;# 
  1083  0825                     	;# 
  1084  0826                     	;# 
  1085  0827                     	;# 
  1086  0827                     	;# 
  1087  0828                     	;# 
  1088  0829                     	;# 
  1089  082A                     	;# 
  1090  082B                     	;# 
  1091  082C                     	;# 
  1092  082D                     	;# 
  1093  082E                     	;# 
  1094  082F                     	;# 
  1095  0831                     	;# 
  1096  0832                     	;# 
  1097  0833                     	;# 
  1098  0834                     	;# 
  1099  0835                     	;# 
  1100  0836                     	;# 
  1101  0837                     	;# 
  1102  0838                     	;# 
  1103  0839                     	;# 
  1104  083A                     	;# 
  1105  083B                     	;# 
  1106  083C                     	;# 
  1107  083D                     	;# 
  1108  083E                     	;# 
  1109  083F                     	;# 
  1110  0840                     	;# 
  1111  0841                     	;# 
  1112  0841                     	;# 
  1113  0842                     	;# 
  1114  0843                     	;# 
  1115  0843                     	;# 
  1116  0844                     	;# 
  1117  0845                     	;# 
  1118  0845                     	;# 
  1119  0846                     	;# 
  1120  0847                     	;# 
  1121  0847                     	;# 
  1122  0848                     	;# 
  1123  0849                     	;# 
  1124  084A                     	;# 
  1125  084B                     	;# 
  1126  084C                     	;# 
  1127  084D                     	;# 
  1128  084E                     	;# 
  1129  084F                     	;# 
  1130  0851                     	;# 
  1131  0852                     	;# 
  1132  0853                     	;# 
  1133  0854                     	;# 
  1134  0855                     	;# 
  1135  0856                     	;# 
  1136  0857                     	;# 
  1137  0858                     	;# 
  1138  0859                     	;# 
  1139  085A                     	;# 
  1140  085B                     	;# 
  1141  085C                     	;# 
  1142  085D                     	;# 
  1143  085E                     	;# 
  1144  085F                     	;# 
  1145  0860                     	;# 
  1146  0861                     	;# 
  1147  0861                     	;# 
  1148  0862                     	;# 
  1149  0863                     	;# 
  1150  0863                     	;# 
  1151  0864                     	;# 
  1152  0865                     	;# 
  1153  0865                     	;# 
  1154  0866                     	;# 
  1155  0867                     	;# 
  1156  0867                     	;# 
  1157  0868                     	;# 
  1158  0869                     	;# 
  1159  086A                     	;# 
  1160  086B                     	;# 
  1161  086C                     	;# 
  1162  086D                     	;# 
  1163  086E                     	;# 
  1164  086F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  0010                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  009F                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  011A                     	;# 
  1238  011B                     	;# 
  1239  011C                     	;# 
  1240  011D                     	;# 
  1241  011D                     	;# 
  1242  011D                     	;# 
  1243  011E                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  0210                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  028C                     	;# 
  1303  028D                     	;# 
  1304  028E                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  030C                     	;# 
  1314  030D                     	;# 
  1315  030E                     	;# 
  1316  0311                     	;# 
  1317  0311                     	;# 
  1318  0312                     	;# 
  1319  0313                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0390                     	;# 
  1324  0391                     	;# 
  1325  0392                     	;# 
  1326  0393                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0397                     	;# 
  1331  0398                     	;# 
  1332  0399                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0511                     	;# 
  1337  0513                     	;# 
  1338  051A                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  0815                     	;# 
  1344  0816                     	;# 
  1345  0817                     	;# 
  1346  0818                     	;# 
  1347  0819                     	;# 
  1348  081A                     	;# 
  1349  081B                     	;# 
  1350  081C                     	;# 
  1351  081D                     	;# 
  1352  081E                     	;# 
  1353  081F                     	;# 
  1354  0820                     	;# 
  1355  0821                     	;# 
  1356  0821                     	;# 
  1357  0822                     	;# 
  1358  0823                     	;# 
  1359  0823                     	;# 
  1360  0824                     	;# 
  1361  0825                     	;# 
  1362  0825                     	;# 
  1363  0826                     	;# 
  1364  0827                     	;# 
  1365  0827                     	;# 
  1366  0828                     	;# 
  1367  0829                     	;# 
  1368  082A                     	;# 
  1369  082B                     	;# 
  1370  082C                     	;# 
  1371  082D                     	;# 
  1372  082E                     	;# 
  1373  082F                     	;# 
  1374  0831                     	;# 
  1375  0832                     	;# 
  1376  0833                     	;# 
  1377  0834                     	;# 
  1378  0835                     	;# 
  1379  0836                     	;# 
  1380  0837                     	;# 
  1381  0838                     	;# 
  1382  0839                     	;# 
  1383  083A                     	;# 
  1384  083B                     	;# 
  1385  083C                     	;# 
  1386  083D                     	;# 
  1387  083E                     	;# 
  1388  083F                     	;# 
  1389  0840                     	;# 
  1390  0841                     	;# 
  1391  0841                     	;# 
  1392  0842                     	;# 
  1393  0843                     	;# 
  1394  0843                     	;# 
  1395  0844                     	;# 
  1396  0845                     	;# 
  1397  0845                     	;# 
  1398  0846                     	;# 
  1399  0847                     	;# 
  1400  0847                     	;# 
  1401  0848                     	;# 
  1402  0849                     	;# 
  1403  084A                     	;# 
  1404  084B                     	;# 
  1405  084C                     	;# 
  1406  084D                     	;# 
  1407  084E                     	;# 
  1408  084F                     	;# 
  1409  0851                     	;# 
  1410  0852                     	;# 
  1411  0853                     	;# 
  1412  0854                     	;# 
  1413  0855                     	;# 
  1414  0856                     	;# 
  1415  0857                     	;# 
  1416  0858                     	;# 
  1417  0859                     	;# 
  1418  085A                     	;# 
  1419  085B                     	;# 
  1420  085C                     	;# 
  1421  085D                     	;# 
  1422  085E                     	;# 
  1423  085F                     	;# 
  1424  0860                     	;# 
  1425  0861                     	;# 
  1426  0861                     	;# 
  1427  0862                     	;# 
  1428  0863                     	;# 
  1429  0863                     	;# 
  1430  0864                     	;# 
  1431  0865                     	;# 
  1432  0865                     	;# 
  1433  0866                     	;# 
  1434  0867                     	;# 
  1435  0867                     	;# 
  1436  0868                     	;# 
  1437  0869                     	;# 
  1438  086A                     	;# 
  1439  086B                     	;# 
  1440  086C                     	;# 
  1441  086D                     	;# 
  1442  086E                     	;# 
  1443  086F                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455                           
  1456                           	psect	idataBANK0
  1457  02E8                     __pidataBANK0:	
  1458                           
  1459                           ;initializer for _segmcode
  1460  02E8  343F               	retlw	63
  1461  02E9  3406               	retlw	6
  1462  02EA  345B               	retlw	91
  1463  02EB  344F               	retlw	79
  1464  02EC  3466               	retlw	102
  1465  02ED  346D               	retlw	109
  1466  02EE  347D               	retlw	125
  1467  02EF  3407               	retlw	7
  1468  02F0  347F               	retlw	127
  1469  02F1  346F               	retlw	111
  1470  02F2  3477               	retlw	119
  1471  02F3  347C               	retlw	124
  1472  02F4  3439               	retlw	57
  1473  02F5  345E               	retlw	94
  1474  02F6  3479               	retlw	121
  1475  02F7  3471               	retlw	113
  1476  000E                     _PORTCbits	set	14
  1477  000D                     _PORTBbits	set	13
  1478  0015                     _TMR0	set	21
  1479  000B                     _INTCONbits	set	11
  1480  008E                     _TRISCbits	set	142
  1481  008E                     _TRISC	set	142
  1482  008D                     _TRISB	set	141
  1483  008C                     _TRISA	set	140
  1484  0095                     _OPTION_REGbits	set	149
  1485  0099                     _OSCCONbits	set	153
  1486  010E                     _LATC	set	270
  1487  010D                     _LATB	set	269
  1488  010C                     _LATA	set	268
  1489  020E                     _WPUCbits	set	526
  1490  020E                     _WPUC	set	526
  1491  020D                     _WPUB	set	525
  1492  020C                     _WPUA	set	524
  1493  0399                     _IOCCFbits	set	921
  1494  0397                     _IOCCPbits	set	919
  1495  0398                     _IOCCN	set	920
  1496  0397                     _IOCCP	set	919
  1497  0395                     _IOCBN	set	917
  1498  0394                     _IOCBP	set	916
  1499  0392                     _IOCAN	set	914
  1500  0391                     _IOCAP	set	913
  1501                           
  1502                           ; #config settings
  1503  0000                     
  1504                           	psect	cinit
  1505  0043                     start_initialization:	
  1506  0043                     __initialization:	
  1507                           
  1508                           ; Initialize objects allocated to BANK0
  1509  0043  30E8               	movlw	low __pidataBANK0
  1510  0044  0084               	movwf	4
  1511  0045  3082               	movlw	(high __pidataBANK0)| (0+128)
  1512  0046  0085               	movwf	5
  1513  0047  3034               	movlw	low __pdataBANK0
  1514  0048  0086               	movwf	6
  1515  0049  3000               	movlw	high __pdataBANK0
  1516  004A  0087               	movwf	7
  1517  004B  3010               	movlw	16
  1518  004C  3182  22F8  3180   	fcall	init_ram
  1519                           
  1520                           ; Clear objects allocated to COMMON
  1521  004F  01FD               	clrf	__pbssCOMMON& (0+127)
  1522                           
  1523                           ; Clear objects allocated to BANK0
  1524  0050  3020               	movlw	low __pbssBANK0
  1525  0051  0084               	movwf	4
  1526  0052  3000               	movlw	high __pbssBANK0
  1527  0053  0085               	movwf	5
  1528  0054  3014               	movlw	20
  1529  0055  3182  22FE  3180   	fcall	clear_ram0
  1530                           
  1531                           ; Clear objects allocated to BANK1
  1532  0058  30A0               	movlw	low __pbssBANK1
  1533  0059  0084               	movwf	4
  1534  005A  3000               	movlw	high __pbssBANK1
  1535  005B  0085               	movwf	5
  1536  005C  3039               	movlw	57
  1537  005D  3182  22FE  3180   	fcall	clear_ram0
  1538                           
  1539                           ; Clear objects allocated to BANK2
  1540  0060  3020               	movlw	low __pbssBANK2
  1541  0061  0084               	movwf	4
  1542  0062  3001               	movlw	high __pbssBANK2
  1543  0063  0085               	movwf	5
  1544  0064  3028               	movlw	40
  1545  0065  3182  22FE         	fcall	clear_ram0
  1546  0067                     end_of_initialization:	
  1547                           ;End of C runtime variable initialization code
  1548                           
  1549  0067                     __end_of__initialization:	
  1550  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1551  0068  0020               	movlb	0
  1552  0069  3183  2B04         	ljmp	_main	;jump to C main() function
  1553                           
  1554                           	psect	bssCOMMON
  1555  007D                     __pbssCOMMON:	
  1556  007D                     _ENUM:	
  1557  007D                     	ds	1
  1558                           
  1559                           	psect	bssBANK0
  1560  0020                     __pbssBANK0:	
  1561  0020                     _g_recv_count:	
  1562  0020                     	ds	2
  1563  0022                     _g_all_level_times:	
  1564  0022                     	ds	2
  1565  0024                     _g_high_level_times:	
  1566  0024                     	ds	2
  1567  0026                     _g_find_recv_start:	
  1568  0026                     	ds	2
  1569  0028                     _g_start_read_data:	
  1570  0028                     	ds	2
  1571  002A                     _g_start_read_switch:	
  1572  002A                     	ds	2
  1573  002C                     _g_time_u:	
  1574  002C                     	ds	2
  1575  002E                     _g_time_s:	
  1576  002E                     	ds	2
  1577  0030                     _g_time_m:	
  1578  0030                     	ds	2
  1579  0032                     _g_time_h:	
  1580  0032                     	ds	2
  1581                           
  1582                           	psect	dataBANK0
  1583  0034                     __pdataBANK0:	
  1584  0034                     _segmcode:	
  1585  0034                     	ds	16
  1586                           
  1587                           	psect	bssBANK1
  1588  00A0                     __pbssBANK1:	
  1589  00A0                     _g_data:	
  1590  00A0                     	ds	57
  1591                           
  1592                           	psect	bssBANK2
  1593  0120                     __pbssBANK2:	
  1594  0120                     _g_recv_buf:	
  1595  0120                     	ds	40
  1596                           
  1597                           	psect	inittext
  1598  02F8                     init_ram:	
  1599  02F8  00FE               	movwf	126
  1600  02F9                     initloop:	
  1601  02F9  0012               	moviw fsr0++
  1602  02FA  001E               	movwi fsr1++
  1603  02FB  0BFE               	decfsz	126,f
  1604  02FC  2AF9               	goto	initloop
  1605  02FD  3400               	retlw	0
  1606                           
  1607                           	psect	clrtext
  1608  02FE                     clear_ram0:	
  1609                           ;	Called with FSR0 containing the base address, and
  1610                           ;	WREG with the size to clear
  1611                           
  1612  02FE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1613  02FF                     clrloop0:	
  1614  02FF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1615  0300  3101               	addfsr 0,1
  1616  0301  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1617  0302  2AFF               	goto	clrloop0	;have we reached the end yet?
  1618  0303  3400               	retlw	0	;all done for this memory range, return
  1619                           
  1620                           	psect	cstackCOMMON
  1621  0070                     __pcstackCOMMON:	
  1622  0070                     ?_update_time:	
  1623  0070                     ?_receive_decode:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?_update_display:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_init_env:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?_ISR:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_main:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?_control595_delay:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ??_control595_delay:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_write_char:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_times2number:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     times2number@high_level_times:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0x0
  1655  0070                     	ds	1
  1656  0071                     control595_delay@times:	
  1657                           
  1658                           ; 2 bytes @ 0x1
  1659  0071                     	ds	1
  1660  0072                     ??_times2number:	
  1661                           
  1662                           ; 1 bytes @ 0x2
  1663  0072                     	ds	1
  1664  0073                     ??_write_char:	
  1665                           
  1666                           ; 1 bytes @ 0x3
  1667  0073                     	ds	2
  1668  0075                     write_char@dat:	
  1669                           
  1670                           ; 1 bytes @ 0x5
  1671  0075                     	ds	1
  1672  0076                     write_char@i:	
  1673                           
  1674                           ; 1 bytes @ 0x6
  1675  0076                     	ds	1
  1676  0077                     ??_update_time:	
  1677  0077                     ??_receive_decode:	
  1678                           ; 1 bytes @ 0x7
  1679                           
  1680  0077                     ??_update_display:	
  1681                           ; 1 bytes @ 0x7
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x7
  1685  0077                     	ds	6
  1686  007D                     ??_ISR:	
  1687                           
  1688                           	psect	cstackBANK0
  1689  0044                     __pcstackBANK0:	
  1690                           ; 1 bytes @ 0xD
  1691                           
  1692  0044                     receive_decode@old_time_h:	
  1693                           
  1694                           ; 2 bytes @ 0x0
  1695  0044                     	ds	2
  1696  0046                     receive_decode@old_time_m:	
  1697                           
  1698                           ; 2 bytes @ 0x2
  1699  0046                     	ds	2
  1700  0048                     receive_decode@i:	
  1701                           
  1702                           ; 2 bytes @ 0x4
  1703  0048                     	ds	2
  1704  004A                     receive_decode@read_value:	
  1705                           
  1706                           ; 2 bytes @ 0x6
  1707  004A                     	ds	2
  1708  004C                     ??_init_env:	
  1709                           
  1710                           ; 1 bytes @ 0x8
  1711  004C                     	ds	1
  1712  004D                     init_env@i:	
  1713                           
  1714                           ; 2 bytes @ 0x9
  1715  004D                     	ds	2
  1716  004F                     ??_main:	
  1717                           
  1718                           	psect	maintext
  1719  0304                     __pmaintext:	
  1720                           ; 1 bytes @ 0xB
  1721 ;;
  1722 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1723 ;;
  1724 ;; *************** function _main *****************
  1725 ;; Defined at:
  1726 ;;		line 198 in file "main.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : B1F/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels required when called:    6
  1746 ;; This function calls:
  1747 ;;		_init_env
  1748 ;; This function is called by:
  1749 ;;		Startup code after reset
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _main
  1755  0304                     _main:	
  1756                           
  1757                           ;main.c: 200:     init_env();
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1761  0304  3181  21EA  3183   	fcall	_init_env
  1762  0307                     l81:	
  1763                           ;main.c: 203:     while(1);
  1764                           
  1765  0307  2B07               	goto	l81
  1766  0308                     __end_of_main:	
  1767                           ;main.c: 205:     return;
  1768                           
  1769                           
  1770                           	psect	text1
  1771  01EA                     __ptext1:	
  1772 ;; *************** function _init_env *****************
  1773 ;; Defined at:
  1774 ;;		line 36 in file "main.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  i               2    9[BANK0 ] int 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;Total ram usage:        3 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    5
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _init_env
  1804  01EA                     _init_env:	
  1805                           
  1806                           ;main.c: 41:     TRISA = 0;
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0]
  1810  01EA  178B               	bsf	11,7	;volatile
  1811                           
  1812                           ;main.c: 43:     WPUA = 0;
  1813  01EB  158B               	bsf	11,3	;volatile
  1814                           
  1815                           ;main.c: 47:     TRISB = 0;
  1816  01EC  168B               	bsf	11,5	;volatile
  1817                           
  1818                           ;main.c: 53:     TRISC = 0;
  1819  01ED  0021               	movlb	1	; select bank1
  1820  01EE  0819               	movf	25,w	;volatile
  1821  01EF  39FC               	andlw	-4
  1822  01F0  3802               	iorlw	2
  1823  01F1  0099               	movwf	25	;volatile
  1824                           
  1825                           ;main.c: 54:     LATC = 0;
  1826  01F2  0819               	movf	25,w	;volatile
  1827  01F3  3987               	andlw	-121
  1828  01F4  3850               	iorlw	80
  1829  01F5  0099               	movwf	25	;volatile
  1830                           
  1831                           ;main.c: 62:     TRISCbits.TRISC5 = 1;
  1832  01F6  1195               	bcf	21,3	;volatile
  1833                           
  1834                           ;main.c: 63:     WPUCbits.WPUC5 = 1;
  1835  01F7  1295               	bcf	21,5	;volatile
  1836                           
  1837                           ;main.c: 64: 
  1838  01F8  0815               	movf	21,w	;volatile
  1839  01F9  39F8               	andlw	-8
  1840  01FA  3804               	iorlw	4
  1841  01FB  0095               	movwf	21	;volatile
  1842                           
  1843                           ;main.c: 65:     TRISCbits.TRISC1 = 1;
  1844  01FC  30E7               	movlw	231
  1845  01FD  0020               	movlb	0	; select bank0
  1846  01FE  0095               	movwf	21	;volatile
  1847                           
  1848                           ;main.c: 73:     g_data.g_time_m = 0;
  1849  01FF  0021               	movlb	1	; select bank1
  1850  0200  1395               	bcf	21,7	;volatile
  1851                           
  1852                           ;main.c: 75:     g_data.g_time_10ms = 0;
  1853  0201  018C               	clrf	12	;volatile
  1854                           
  1855                           ;main.c: 76: 
  1856  0202  0022               	movlb	2	; select bank2
  1857  0203  018C               	clrf	12	;volatile
  1858                           
  1859                           ;main.c: 77: 
  1860  0204  0024               	movlb	4	; select bank4
  1861  0205  018C               	clrf	12	;volatile
  1862                           
  1863                           ;main.c: 78:     g_data.g_start_read_switch = FALSE;
  1864  0206  0027               	movlb	7	; select bank7
  1865  0207  0191               	clrf	17	;volatile
  1866                           
  1867                           ;main.c: 79:     g_data.g_start_read_data = FALSE;
  1868  0208  0192               	clrf	18	;volatile
  1869                           
  1870                           ;main.c: 81: 
  1871  0209  0021               	movlb	1	; select bank1
  1872  020A  018D               	clrf	13	;volatile
  1873                           
  1874                           ;main.c: 82: 
  1875  020B  0022               	movlb	2	; select bank2
  1876  020C  018D               	clrf	13	;volatile
  1877                           
  1878                           ;main.c: 83:     g_data.g_high_level_times = 0;
  1879  020D  0024               	movlb	4	; select bank4
  1880  020E  018D               	clrf	13	;volatile
  1881                           
  1882                           ;main.c: 84:     g_data.g_all_level_times = 0;
  1883  020F  0027               	movlb	7	; select bank7
  1884  0210  0194               	clrf	20	;volatile
  1885                           
  1886                           ;main.c: 85:     g_data.g_recv_count = 0;
  1887  0211  0195               	clrf	21	;volatile
  1888                           
  1889                           ;main.c: 87:         g_data.g_recv_buf[i] = 5;
  1890  0212  0021               	movlb	1	; select bank1
  1891  0213  018E               	clrf	14	;volatile
  1892                           
  1893                           ;main.c: 88:     }
  1894  0214  0022               	movlb	2	; select bank2
  1895  0215  018E               	clrf	14	;volatile
  1896                           
  1897                           ;main.c: 89: 
  1898  0216  0024               	movlb	4	; select bank4
  1899  0217  018E               	clrf	14	;volatile
  1900                           
  1901                           ;main.c: 90: 
  1902  0218  0027               	movlb	7	; select bank7
  1903  0219  0197               	clrf	23	;volatile
  1904                           
  1905                           ;main.c: 91: 
  1906  021A  0198               	clrf	24	;volatile
  1907                           
  1908                           ;main.c: 96:     PORTCbits.RC2 = BPC_PWR_ON;
  1909  021B  0021               	movlb	1	; select bank1
  1910  021C  168E               	bsf	14,5	;volatile
  1911                           
  1912                           ;main.c: 97: 
  1913  021D  0024               	movlb	4	; select bank4
  1914  021E  168E               	bsf	14,5	;volatile
  1915                           
  1916                           ;main.c: 99:     TRISCbits.TRISC0 = 1;
  1917  021F  0021               	movlb	1	; select bank1
  1918  0220  148E               	bsf	14,1	;volatile
  1919                           
  1920                           ;main.c: 100:     WPUCbits.WPUC0 = 1;
  1921  0221  0024               	movlb	4	; select bank4
  1922  0222  148E               	bsf	14,1	;volatile
  1923  0223  0027               	movlb	7	; select bank7
  1924  0224  1497               	bsf	23,1	;volatile
  1925  0225  0021               	movlb	1	; select bank1
  1926  0226  01A3               	clrf	(_g_data^(0+128)+3)
  1927  0227  01A4               	clrf	((_g_data+1)^(0+128)+3)
  1928  0228  01A5               	clrf	(_g_data^(0+128)+5)
  1929  0229  01A6               	clrf	((_g_data+1)^(0+128)+5)
  1930  022A  01A7               	clrf	(_g_data^(0+128)+7)
  1931  022B  01A8               	clrf	((_g_data+1)^(0+128)+7)
  1932  022C  01A9               	clrf	(_g_data^(0+128)+9)
  1933  022D  01AA               	clrf	((_g_data+1)^(0+128)+9)
  1934  022E  01A0               	clrf	_g_data^(0+128)
  1935  022F  01A1               	clrf	(_g_data^(0+128)+1)
  1936  0230  01A2               	clrf	(_g_data^(0+128)+2)
  1937  0231  01AB               	clrf	(_g_data^(0+128)+11)
  1938  0232  01AC               	clrf	((_g_data+1)^(0+128)+11)
  1939  0233  01AD               	clrf	(_g_data^(0+128)+13)
  1940  0234  01AE               	clrf	((_g_data+1)^(0+128)+13)
  1941  0235  01AF               	clrf	(_g_data^(0+128)+15)
  1942  0236  01B0               	clrf	((_g_data+1)^(0+128)+15)
  1943  0237  0020               	movlb	0	; select bank0
  1944  0238  01CD               	clrf	init_env@i
  1945  0239  01CE               	clrf	init_env@i+1
  1946  023A  084E               	movf	init_env@i+1,w
  1947  023B  3A80               	xorlw	128
  1948  023C  00CC               	movwf	??_init_env
  1949  023D  3080               	movlw	128
  1950  023E  024C               	subwf	??_init_env,w
  1951  023F  1D03               	skipz
  1952  0240  2A43               	goto	u555
  1953  0241  3014               	movlw	20
  1954  0242  024D               	subwf	init_env@i,w
  1955  0243                     u555:	
  1956  0243  1803               	btfsc	3,0
  1957  0244  2A5D               	goto	l62
  1958  0245                     l1185:	
  1959  0245  0020               	movlb	0	; select bank0
  1960  0246  354D               	lslf	init_env@i,w
  1961  0247  3EB1               	addlw	(low ((_g_data| 0+17)))& (0+255)
  1962  0248  0086               	movwf	6
  1963  0249  0187               	clrf	7
  1964  024A  3005               	movlw	5
  1965  024B  3FC0               	movwi [0]fsr1
  1966  024C  3000               	movlw	0
  1967  024D  3FC1               	movwi [1]fsr1
  1968  024E  3001               	movlw	1
  1969  024F  07CD               	addwf	init_env@i,f
  1970  0250  3000               	movlw	0
  1971  0251  3DCE               	addwfc	init_env@i+1,f
  1972  0252  084E               	movf	init_env@i+1,w
  1973  0253  3A80               	xorlw	128
  1974  0254  00CC               	movwf	??_init_env
  1975  0255  3080               	movlw	128
  1976  0256  024C               	subwf	??_init_env,w
  1977  0257  1D03               	skipz
  1978  0258  2A5B               	goto	u565
  1979  0259  3014               	movlw	20
  1980  025A  024D               	subwf	init_env@i,w
  1981  025B                     u565:	
  1982  025B  1C03               	skipc
  1983  025C  2A45               	goto	l1185
  1984  025D                     l62:	
  1985  025D  0020               	movlb	0	; select bank0
  1986  025E  158D               	bsf	13,3	;volatile
  1987  025F  110E               	bcf	14,2	;volatile
  1988  0260  0021               	movlb	1	; select bank1
  1989  0261  140E               	bsf	14,0	;volatile
  1990  0262  0024               	movlb	4	; select bank4
  1991  0263  140E               	bsf	14,0	;volatile
  1992  0264  0008               	return
  1993  0265                     __end_of_init_env:	
  1994                           
  1995                           	psect	intentry
  1996  0004                     __pintentry:	
  1997 ;; *************** function _ISR *****************
  1998 ;; Defined at:
  1999 ;;		line 158 in file "main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    4
  2020 ;; This function calls:
  2021 ;;		_receive_decode
  2022 ;;		_update_time
  2023 ;; This function is called by:
  2024 ;;		Interrupt level 1
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028  0004                     _ISR:	
  2029                           
  2030                           ;incstack = 0
  2031  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2032                           
  2033                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2034  0005  3180               	pagesel	$
  2035                           
  2036                           ;main.c: 160:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && g_
      +                          data.g_start_read_switch == TRUE){
  2037  0006  0027               	movlb	7	; select bank7
  2038  0007  1C99               	btfss	25,1	;volatile
  2039  0008  2819               	goto	i1l68
  2040  0009  0021               	movlb	1	; select bank1
  2041  000A  0821               	movf	(_g_data^(0+128)+1),w
  2042  000B  1D03               	btfss	3,2
  2043  000C  2819               	goto	i1l68
  2044  000D  0320               	decf	_g_data^(0+128),w
  2045  000E  1D03               	btfss	3,2
  2046  000F  2819               	goto	i1l68
  2047                           
  2048                           ;main.c: 162: ;main.c: 164:         g_data.g_start_read_data = TRUE;
  2049  0010  01A1               	clrf	(_g_data^(0+128)+1)
  2050  0011  0AA1               	incf	(_g_data^(0+128)+1),f
  2051                           
  2052                           ;main.c: 165:         g_data.g_start_read_switch = FALSE;
  2053  0012  01A0               	clrf	_g_data^(0+128)
  2054                           
  2055                           ;main.c: 166:         PORTCbits.RC2 = BPC_PWR_ON;
  2056  0013  0020               	movlb	0	; select bank0
  2057  0014  110E               	bcf	14,2	;volatile
  2058                           
  2059                           ;main.c: 167:         INTCONbits.IOCIF = FALSE;
  2060  0015  100B               	bcf	11,0	;volatile
  2061                           
  2062                           ;main.c: 168:         IOCCFbits.IOCCF1 = FALSE;
  2063  0016  0027               	movlb	7	; select bank7
  2064  0017  1099               	bcf	25,1	;volatile
  2065                           
  2066                           ;main.c: 169:         return;
  2067  0018  283F               	goto	i1l69
  2068  0019                     i1l68:	
  2069                           ;main.c: 170:     }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1){
  2070                           
  2071  0019  180B               	btfsc	11,0	;volatile
  2072  001A  281E               	goto	i1l73
  2073  001B  0027               	movlb	7	; select bank7
  2074  001C  1C99               	btfss	25,1	;volatile
  2075  001D  2821               	goto	i1l1317
  2076  001E                     i1l73:	
  2077                           
  2078                           ;main.c: 171:         INTCONbits.IOCIF = FALSE;
  2079  001E  100B               	bcf	11,0	;volatile
  2080                           
  2081                           ;main.c: 172:         IOCCFbits.IOCCF1 = FALSE;
  2082  001F  0027               	movlb	7	; select bank7
  2083  0020  1099               	bcf	25,1	;volatile
  2084  0021                     i1l1317:	
  2085                           ;main.c: 173:     }
  2086                           
  2087                           
  2088                           ;main.c: 176:     if(g_data.g_start_read_data == TRUE && INTCONbits.TMR0IF){
  2089  0021  0021               	movlb	1	; select bank1
  2090  0022  0321               	decf	(_g_data^(0+128)+1),w
  2091  0023  1903               	btfsc	3,2
  2092  0024  1D0B               	btfss	11,2	;volatile
  2093  0025  2831               	goto	i1l74
  2094                           
  2095                           ;main.c: 177:         update_time();
  2096  0026  3182  2265  3180   	fcall	_update_time
  2097                           
  2098                           ;main.c: 178:         receive_decode();
  2099  0029  3180  206B  3180   	fcall	_receive_decode
  2100                           
  2101                           ;main.c: 179:         INTCONbits.TMR0IF = 0;
  2102  002C  110B               	bcf	11,2	;volatile
  2103                           
  2104                           ;main.c: 180:         TMR0 = (217 + 14);
  2105  002D  30E7               	movlw	231
  2106  002E  0020               	movlb	0	; select bank0
  2107  002F  0095               	movwf	21	;volatile
  2108                           
  2109                           ;main.c: 181:         return;
  2110  0030  283F               	goto	i1l69
  2111  0031                     i1l74:	
  2112                           ;main.c: 182:     }
  2113                           
  2114                           
  2115                           ;main.c: 185:     if(INTCONbits.TMR0IF){
  2116  0031  1D0B               	btfss	11,2	;volatile
  2117  0032  283F               	goto	i1l69
  2118                           
  2119                           ;main.c: 186:         update_time();
  2120  0033  3182  2265  3180   	fcall	_update_time
  2121                           
  2122                           ;main.c: 187:         INTCONbits.TMR0IF = 0;
  2123  0036  110B               	bcf	11,2	;volatile
  2124                           
  2125                           ;main.c: 188:         TMR0 = (217 + 14);
  2126  0037  30E7               	movlw	231
  2127  0038  0020               	movlb	0	; select bank0
  2128  0039  0095               	movwf	21	;volatile
  2129                           
  2130                           ;main.c: 190:         if(PORTCbits.RC5 == 1){
  2131  003A  1E8E               	btfss	14,5	;volatile
  2132  003B  283F               	goto	i1l69
  2133                           
  2134                           ;main.c: 191:             g_data.g_start_read_switch = TRUE;
  2135  003C  0021               	movlb	1	; select bank1
  2136  003D  01A0               	clrf	_g_data^(0+128)
  2137  003E  0AA0               	incf	_g_data^(0+128),f
  2138  003F                     i1l69:	
  2139                           ;main.c: 195:     return;
  2140                           
  2141                           ;main.c: 194:     }
  2142                           
  2143                           ;main.c: 193:         return;
  2144                           
  2145                           ;main.c: 192:         }
  2146                           
  2147  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2148  0040  0009               	retfie
  2149  0041                     __end_of_ISR:	
  2150                           
  2151                           	psect	text3
  2152  0265                     __ptext3:	
  2153 ;; *************** function _update_time *****************
  2154 ;; Defined at:
  2155 ;;		line 14 in file "update_time.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    3
  2176 ;; This function calls:
  2177 ;;		_update_display
  2178 ;; This function is called by:
  2179 ;;		_ISR
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _update_time
  2185  0265                     _update_time:	
  2186                           
  2187                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2191  0265  3001               	movlw	1
  2192  0266  0021               	movlb	1	; select bank1
  2193  0267  07A9               	addwf	(_g_data^(0+128)+9),f
  2194  0268  3000               	movlw	0
  2195  0269  3DAA               	addwfc	((_g_data+1)^(0+128)+9),f
  2196                           
  2197                           ;update_time.c: 16:     if(g_data.g_time_10ms == 100){
  2198  026A  3064               	movlw	100
  2199  026B  0629               	xorwf	(_g_data^(0+128)+9),w
  2200  026C  042A               	iorwf	((_g_data+1)^(0+128)+9),w
  2201  026D  1D03               	btfss	3,2
  2202  026E  0008               	return
  2203                           
  2204                           ;update_time.c: 17:         g_data.g_time_10ms = 0;
  2205  026F  01A9               	clrf	(_g_data^(0+128)+9)
  2206  0270  01AA               	clrf	((_g_data+1)^(0+128)+9)
  2207                           
  2208                           ;update_time.c: 18:         g_data.g_time_s++;
  2209  0271  3001               	movlw	1
  2210  0272  07A7               	addwf	(_g_data^(0+128)+7),f
  2211  0273  3000               	movlw	0
  2212  0274  3DA8               	addwfc	((_g_data+1)^(0+128)+7),f
  2213                           
  2214                           ;update_time.c: 19:         if(g_data.g_time_s == 60){
  2215  0275  303C               	movlw	60
  2216  0276  0627               	xorwf	(_g_data^(0+128)+7),w
  2217  0277  0428               	iorwf	((_g_data+1)^(0+128)+7),w
  2218  0278  1D03               	btfss	3,2
  2219  0279  0008               	return
  2220                           
  2221                           ;update_time.c: 20:             g_data.g_time_m++;
  2222  027A  3001               	movlw	1
  2223  027B  07A5               	addwf	(_g_data^(0+128)+5),f
  2224  027C  3000               	movlw	0
  2225  027D  3DA6               	addwfc	((_g_data+1)^(0+128)+5),f
  2226                           
  2227                           ;update_time.c: 21:             g_data.g_time_s = 0;
  2228  027E  01A7               	clrf	(_g_data^(0+128)+7)
  2229  027F  01A8               	clrf	((_g_data+1)^(0+128)+7)
  2230                           
  2231                           ;update_time.c: 22:             if(g_data.g_time_m == 60){
  2232  0280  303C               	movlw	60
  2233  0281  0625               	xorwf	(_g_data^(0+128)+5),w
  2234  0282  0426               	iorwf	((_g_data+1)^(0+128)+5),w
  2235  0283  1D03               	btfss	3,2
  2236  0284  2A92               	goto	i1l1215
  2237                           
  2238                           ;update_time.c: 23:                 g_data.g_time_h++;
  2239  0285  3001               	movlw	1
  2240  0286  07A3               	addwf	(_g_data^(0+128)+3),f
  2241  0287  3000               	movlw	0
  2242  0288  3DA4               	addwfc	((_g_data+1)^(0+128)+3),f
  2243                           
  2244                           ;update_time.c: 24:                 g_data.g_time_m = 0;
  2245  0289  01A5               	clrf	(_g_data^(0+128)+5)
  2246  028A  01A6               	clrf	((_g_data+1)^(0+128)+5)
  2247                           
  2248                           ;update_time.c: 25:                 if(g_data.g_time_h == 24){
  2249  028B  3018               	movlw	24
  2250  028C  0623               	xorwf	(_g_data^(0+128)+3),w
  2251  028D  0424               	iorwf	((_g_data+1)^(0+128)+3),w
  2252  028E  1D03               	btfss	3,2
  2253  028F  2A92               	goto	i1l1215
  2254                           
  2255                           ;update_time.c: 26:                     g_data.g_time_h = 0;
  2256  0290  01A3               	clrf	(_g_data^(0+128)+3)
  2257  0291  01A4               	clrf	((_g_data+1)^(0+128)+3)
  2258  0292                     i1l1215:	
  2259                           ;update_time.c: 28:             }
  2260                           
  2261                           ;update_time.c: 27:                 }
  2262                           
  2263                           
  2264                           ;update_time.c: 29:             update_display();
  2265  0292  3182  22BC         	fcall	_update_display
  2266                           
  2267                           ;update_time.c: 31:     }
  2268                           
  2269                           ;update_time.c: 30:         }
  2270  0294  0008               	return
  2271  0295                     __end_of_update_time:	
  2272                           ;update_time.c: 32:     return;
  2273                           
  2274                           
  2275                           	psect	text4
  2276  006B                     __ptext4:	
  2277 ;; *************** function _receive_decode *****************
  2278 ;; Defined at:
  2279 ;;		line 29 in file "receive_decode.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  i               2    4[BANK0 ] int 
  2284 ;;  read_value      2    6[BANK0 ] int 
  2285 ;;  old_time_m      2    2[BANK0 ] int 
  2286 ;;  old_time_h      2    0[BANK0 ] int 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;Total ram usage:       14 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_times2number
  2305 ;;		_update_display
  2306 ;; This function is called by:
  2307 ;;		_ISR
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _receive_decode
  2313  006B                     _receive_decode:	
  2314                           
  2315                           ;receive_decode.c: 31:     if(PORTCbits.RC1 == 1){
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _receive_decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2319  006B  0020               	movlb	0	; select bank0
  2320  006C  1C8E               	btfss	14,1	;volatile
  2321  006D  2873               	goto	i1l108
  2322                           
  2323                           ;receive_decode.c: 32:         g_data.g_high_level_times++;
  2324  006E  3001               	movlw	1
  2325  006F  0021               	movlb	1	; select bank1
  2326  0070  07AB               	addwf	(_g_data^(0+128)+11),f
  2327  0071  3000               	movlw	0
  2328  0072  3DAC               	addwfc	((_g_data+1)^(0+128)+11),f
  2329  0073                     i1l108:	
  2330                           ;receive_decode.c: 33:     }
  2331                           
  2332                           
  2333                           ;receive_decode.c: 35:     g_data.g_all_level_times++;
  2334  0073  3001               	movlw	1
  2335  0074  0021               	movlb	1	; select bank1
  2336  0075  07AD               	addwf	(_g_data^(0+128)+13),f
  2337  0076  3000               	movlw	0
  2338  0077  3DAE               	addwfc	((_g_data+1)^(0+128)+13),f
  2339                           
  2340                           ;receive_decode.c: 38:     if(g_data.g_all_level_times < 100){
  2341  0078  082E               	movf	((_g_data+1)^(0+128)+13),w
  2342  0079  3A80               	xorlw	128
  2343  007A  00F7               	movwf	??_receive_decode
  2344  007B  3080               	movlw	128
  2345  007C  0277               	subwf	??_receive_decode,w
  2346  007D  1D03               	skipz
  2347  007E  2881               	goto	u62_25
  2348  007F  3064               	movlw	100
  2349  0080  022D               	subwf	(_g_data^(0+128)+13),w
  2350  0081                     u62_25:	
  2351  0081  1C03               	btfss	3,0
  2352  0082  0008               	return
  2353                           
  2354                           ;receive_decode.c: 42:     int read_value = times2number(g_data.g_high_level_times);
  2355                           
  2356                           ;receive_decode.c: 40:     }
  2357                           
  2358                           ;receive_decode.c: 39:         return;
  2359  0083  0021               	movlb	1	; select bank1
  2360  0084  082C               	movf	((_g_data+1)^(0+128)+11),w
  2361  0085  00F1               	movwf	times2number@high_level_times+1
  2362  0086  082B               	movf	(_g_data^(0+128)+11),w
  2363  0087  00F0               	movwf	times2number@high_level_times
  2364  0088  3181  216B  3180   	fcall	_times2number
  2365  008B  0871               	movf	?_times2number+1,w
  2366  008C  0020               	movlb	0	; select bank0
  2367  008D  00CB               	movwf	receive_decode@read_value+1
  2368  008E  0870               	movf	?_times2number,w
  2369  008F  00CA               	movwf	receive_decode@read_value
  2370                           
  2371                           ;receive_decode.c: 43:     g_data.g_all_level_times = 0;
  2372  0090  0021               	movlb	1	; select bank1
  2373  0091  01AD               	clrf	(_g_data^(0+128)+13)
  2374  0092  01AE               	clrf	((_g_data+1)^(0+128)+13)
  2375                           
  2376                           ;receive_decode.c: 44:     g_data.g_high_level_times = 0;
  2377  0093  01AB               	clrf	(_g_data^(0+128)+11)
  2378  0094  01AC               	clrf	((_g_data+1)^(0+128)+11)
  2379                           
  2380                           ;receive_decode.c: 46:     if(read_value == 5){
  2381  0095  3005               	movlw	5
  2382  0096  0020               	movlb	0	; select bank0
  2383  0097  064A               	xorwf	receive_decode@read_value,w
  2384  0098  044B               	iorwf	receive_decode@read_value+1,w
  2385  0099  1D03               	btfss	3,2
  2386  009A  28A1               	goto	i1l1241
  2387                           
  2388                           ;receive_decode.c: 48:         g_data.g_find_recv_start = TRUE;
  2389  009B  0021               	movlb	1	; select bank1
  2390  009C  01A2               	clrf	(_g_data^(0+128)+2)
  2391  009D  0AA2               	incf	(_g_data^(0+128)+2),f
  2392                           
  2393                           ;receive_decode.c: 49:         g_data.g_recv_count = 0;
  2394  009E  01AF               	clrf	(_g_data^(0+128)+15)
  2395  009F  01B0               	clrf	((_g_data+1)^(0+128)+15)
  2396                           
  2397                           ;receive_decode.c: 50:         return;
  2398  00A0  0008               	return
  2399  00A1                     i1l1241:	
  2400                           ;receive_decode.c: 51:     }else if(read_value == 4){
  2401                           
  2402  00A1  3004               	movlw	4
  2403  00A2  0020               	movlb	0	; select bank0
  2404  00A3  064A               	xorwf	receive_decode@read_value,w
  2405  00A4  044B               	iorwf	receive_decode@read_value+1,w
  2406  00A5  1903               	btfsc	3,2
  2407  00A6  0008               	return
  2408                           
  2409                           ;receive_decode.c: 55:     if(g_data.g_find_recv_start == FALSE || read_value == 5){
  2410                           
  2411                           ;receive_decode.c: 53:     }
  2412                           
  2413                           ;receive_decode.c: 52:         return;
  2414  00A7  0021               	movlb	1	; select bank1
  2415  00A8  0822               	movf	(_g_data^(0+128)+2),w
  2416  00A9  1903               	btfsc	3,2
  2417  00AA  0008               	return
  2418  00AB  3005               	movlw	5
  2419  00AC  0020               	movlb	0	; select bank0
  2420  00AD  064A               	xorwf	receive_decode@read_value,w
  2421  00AE  044B               	iorwf	receive_decode@read_value+1,w
  2422  00AF  1903               	btfsc	3,2
  2423  00B0  0008               	return
  2424                           
  2425                           ;receive_decode.c: 59:     g_data.g_recv_buf[g_data.g_recv_count] = read_value;
  2426                           
  2427                           ;receive_decode.c: 57:     }
  2428                           
  2429                           ;receive_decode.c: 56:         return;
  2430  00B1  0021               	movlb	1	; select bank1
  2431  00B2  352F               	lslf	(_g_data^(0+128)+15),w
  2432  00B3  3EB1               	addlw	(low ((_g_data| 0+17)))& (0+255)
  2433  00B4  0086               	movwf	6
  2434  00B5  0187               	clrf	7
  2435  00B6  0020               	movlb	0	; select bank0
  2436  00B7  084A               	movf	receive_decode@read_value,w
  2437  00B8  3FC0               	movwi [0]fsr1
  2438  00B9  084B               	movf	receive_decode@read_value+1,w
  2439  00BA  3FC1               	movwi [1]fsr1
  2440                           
  2441                           ;receive_decode.c: 60:     g_data.g_recv_count++;
  2442  00BB  3001               	movlw	1
  2443  00BC  0021               	movlb	1	; select bank1
  2444  00BD  07AF               	addwf	(_g_data^(0+128)+15),f
  2445  00BE  3000               	movlw	0
  2446  00BF  3DB0               	addwfc	((_g_data+1)^(0+128)+15),f
  2447                           
  2448                           ;receive_decode.c: 61:     if(g_data.g_recv_count < 6){
  2449  00C0  0830               	movf	((_g_data+1)^(0+128)+15),w
  2450  00C1  3A80               	xorlw	128
  2451  00C2  00F7               	movwf	??_receive_decode
  2452  00C3  3080               	movlw	128
  2453  00C4  0277               	subwf	??_receive_decode,w
  2454  00C5  1D03               	skipz
  2455  00C6  28C9               	goto	u67_25
  2456  00C7  3006               	movlw	6
  2457  00C8  022F               	subwf	(_g_data^(0+128)+15),w
  2458  00C9                     u67_25:	
  2459  00C9  1C03               	btfss	3,0
  2460  00CA  0008               	return
  2461                           
  2462                           ;receive_decode.c: 65:     if(g_data.g_recv_buf[0] != 0 && g_data.g_recv_buf[1] != 0){
  2463                           
  2464                           ;receive_decode.c: 63:     }
  2465                           
  2466                           ;receive_decode.c: 62:         return;
  2467  00CB  0021               	movlb	1	; select bank1
  2468  00CC  0831               	movf	(_g_data^(0+128)+17),w
  2469  00CD  0432               	iorwf	((_g_data+1)^(0+128)+17),w
  2470  00CE  1903               	btfsc	3,2
  2471  00CF  28D9               	goto	i1l1265
  2472  00D0  0833               	movf	(_g_data^(0+128)+19),w
  2473  00D1  0434               	iorwf	((_g_data+1)^(0+128)+19),w
  2474  00D2  1903               	btfsc	3,2
  2475  00D3  28D9               	goto	i1l1265
  2476                           
  2477                           ;receive_decode.c: 66:         g_data.g_find_recv_start = FALSE;
  2478  00D4  01A2               	clrf	(_g_data^(0+128)+2)
  2479                           
  2480                           ;receive_decode.c: 67:         g_data.g_start_read_data = 0;
  2481  00D5  01A1               	clrf	(_g_data^(0+128)+1)
  2482                           
  2483                           ;receive_decode.c: 68:         g_data.g_recv_count = 0;
  2484  00D6  01AF               	clrf	(_g_data^(0+128)+15)
  2485  00D7  01B0               	clrf	((_g_data+1)^(0+128)+15)
  2486                           
  2487                           ;receive_decode.c: 69:         return;
  2488  00D8  0008               	return
  2489  00D9                     i1l1265:	
  2490                           ;receive_decode.c: 70:     }
  2491                           
  2492                           
  2493                           ;receive_decode.c: 72:     int old_time_h = g_data.g_time_h;
  2494  00D9  0824               	movf	((_g_data+1)^(0+128)+3),w
  2495  00DA  0020               	movlb	0	; select bank0
  2496  00DB  00C5               	movwf	receive_decode@old_time_h+1
  2497  00DC  0021               	movlb	1	; select bank1
  2498  00DD  0823               	movf	(_g_data^(0+128)+3),w
  2499  00DE  0020               	movlb	0	; select bank0
  2500  00DF  00C4               	movwf	receive_decode@old_time_h
  2501                           
  2502                           ;receive_decode.c: 73:     int old_time_m = g_data.g_time_m;
  2503  00E0  0021               	movlb	1	; select bank1
  2504  00E1  0826               	movf	((_g_data+1)^(0+128)+5),w
  2505  00E2  0020               	movlb	0	; select bank0
  2506  00E3  00C7               	movwf	receive_decode@old_time_m+1
  2507  00E4  0021               	movlb	1	; select bank1
  2508  00E5  0825               	movf	(_g_data^(0+128)+5),w
  2509  00E6  0020               	movlb	0	; select bank0
  2510  00E7  00C6               	movwf	receive_decode@old_time_m
  2511                           
  2512                           ;receive_decode.c: 74:     g_data.g_time_h = g_data.g_recv_buf[2] * 4 + g_data.g_recv_bu
      +                          f[3];
  2513  00E8  3017               	movlw	23
  2514  00E9  3EA0               	addlw	(low (_g_data| 0))& (0+255)
  2515  00EA  0086               	movwf	6
  2516  00EB  0187               	clrf	7
  2517  00EC  3015               	movlw	21
  2518  00ED  3EA0               	addlw	(low (_g_data| 0))& (0+255)
  2519  00EE  0084               	movwf	4
  2520  00EF  0185               	clrf	5
  2521  00F0  3F00               	moviw [0]fsr0
  2522  00F1  00F7               	movwf	??_receive_decode
  2523  00F2  3F01               	moviw [1]fsr0
  2524  00F3  00F8               	movwf	??_receive_decode+1
  2525  00F4  35F7               	lslf	??_receive_decode,f
  2526  00F5  0DF8               	rlf	??_receive_decode+1,f
  2527  00F6  35F7               	lslf	??_receive_decode,f
  2528  00F7  0DF8               	rlf	??_receive_decode+1,f
  2529  00F8  3F40               	moviw [0]fsr1
  2530  00F9  0777               	addwf	??_receive_decode,w
  2531  00FA  0021               	movlb	1	; select bank1
  2532  00FB  00A3               	movwf	(_g_data^(0+128)+3)
  2533  00FC  3F41               	moviw [1]fsr1
  2534  00FD  3D78               	addwfc	??_receive_decode+1,w
  2535  00FE  00A4               	movwf	(_g_data^(0+128)+4)
  2536                           
  2537                           ;receive_decode.c: 75:     g_data.g_time_m = g_data.g_recv_buf[4] * 16 + g_data.g_recv_b
      +                          uf[5] * 4 + g_data.g_recv_buf[6];
  2538  00FF  301D               	movlw	29
  2539  0100  3EA0               	addlw	(low (_g_data| 0))& (0+255)
  2540  0101  0086               	movwf	6
  2541  0102  0187               	clrf	7
  2542  0103  301B               	movlw	27
  2543  0104  3EA0               	addlw	(low (_g_data| 0))& (0+255)
  2544  0105  0084               	movwf	4
  2545  0106  0185               	clrf	5
  2546  0107  3F00               	moviw [0]fsr0
  2547  0108  00F7               	movwf	??_receive_decode
  2548  0109  3F01               	moviw [1]fsr0
  2549  010A  00F8               	movwf	??_receive_decode+1
  2550  010B  35F7               	lslf	??_receive_decode,f
  2551  010C  0DF8               	rlf	??_receive_decode+1,f
  2552  010D  35F7               	lslf	??_receive_decode,f
  2553  010E  0DF8               	rlf	??_receive_decode+1,f
  2554  010F  3019               	movlw	25
  2555  0110  3EA0               	addlw	(low (_g_data| 0))& (0+255)
  2556  0111  0084               	movwf	4
  2557  0112  0185               	clrf	5
  2558  0113  3F00               	moviw [0]fsr0
  2559  0114  00F9               	movwf	??_receive_decode+2
  2560  0115  3F01               	moviw [1]fsr0
  2561  0116  00FA               	movwf	??_receive_decode+3
  2562  0117  0EF9               	swapf	??_receive_decode+2,f
  2563  0118  0EFA               	swapf	??_receive_decode+3,f
  2564  0119  30F0               	movlw	240
  2565  011A  05FA               	andwf	??_receive_decode+3,f
  2566  011B  0879               	movf	??_receive_decode+2,w
  2567  011C  390F               	andlw	15
  2568  011D  04FA               	iorwf	??_receive_decode+3,f
  2569  011E  30F0               	movlw	240
  2570  011F  05F9               	andwf	??_receive_decode+2,f
  2571  0120  0877               	movf	??_receive_decode,w
  2572  0121  0779               	addwf	??_receive_decode+2,w
  2573  0122  00FB               	movwf	??_receive_decode+4
  2574  0123  0878               	movf	??_receive_decode+1,w
  2575  0124  3D7A               	addwfc	??_receive_decode+3,w
  2576  0125  00FC               	movwf	??_receive_decode+5
  2577  0126  3F40               	moviw [0]fsr1
  2578  0127  077B               	addwf	??_receive_decode+4,w
  2579  0128  00A5               	movwf	(_g_data^(0+128)+5)
  2580  0129  3F41               	moviw [1]fsr1
  2581  012A  3D7C               	addwfc	??_receive_decode+5,w
  2582  012B  00A6               	movwf	(_g_data^(0+128)+6)
  2583                           
  2584                           ;receive_decode.c: 77:     if(old_time_h != g_data.g_time_h || old_time_m != g_data.g_ti
      +                          me_m){
  2585  012C  0020               	movlb	0	; select bank0
  2586  012D  0845               	movf	receive_decode@old_time_h+1,w
  2587  012E  0021               	movlb	1	; select bank1
  2588  012F  0624               	xorwf	((_g_data+1)^(0+128)+3),w
  2589  0130  1D03               	skipz
  2590  0131  2936               	goto	u70_25
  2591  0132  0020               	movlb	0	; select bank0
  2592  0133  0844               	movf	receive_decode@old_time_h,w
  2593  0134  0021               	movlb	1	; select bank1
  2594  0135  0623               	xorwf	(_g_data^(0+128)+3),w
  2595  0136                     u70_25:	
  2596  0136  1D03               	skipz
  2597  0137  2944               	goto	i1l1273
  2598  0138  0020               	movlb	0	; select bank0
  2599  0139  0847               	movf	receive_decode@old_time_m+1,w
  2600  013A  0021               	movlb	1	; select bank1
  2601  013B  0626               	xorwf	((_g_data+1)^(0+128)+5),w
  2602  013C  1D03               	skipz
  2603  013D  2942               	goto	u71_25
  2604  013E  0020               	movlb	0	; select bank0
  2605  013F  0846               	movf	receive_decode@old_time_m,w
  2606  0140  0021               	movlb	1	; select bank1
  2607  0141  0625               	xorwf	(_g_data^(0+128)+5),w
  2608  0142                     u71_25:	
  2609  0142  1903               	skipnz
  2610  0143  2947               	goto	i1l1275
  2611  0144                     i1l1273:	
  2612                           
  2613                           ;receive_decode.c: 78:         update_display();
  2614  0144  3182  22BC  3180   	fcall	_update_display
  2615  0147                     i1l1275:	
  2616                           ;receive_decode.c: 79:     }
  2617                           
  2618                           
  2619                           ;receive_decode.c: 82:     g_data.g_find_recv_start = FALSE;
  2620  0147  0021               	movlb	1	; select bank1
  2621  0148  01A2               	clrf	(_g_data^(0+128)+2)
  2622                           
  2623                           ;receive_decode.c: 83:     PORTCbits.RC2 = BPC_PWR_OFF;
  2624  0149  0020               	movlb	0	; select bank0
  2625  014A  150E               	bsf	14,2	;volatile
  2626                           
  2627                           ;receive_decode.c: 84:     g_data.g_start_read_data = 0;
  2628  014B  0021               	movlb	1	; select bank1
  2629  014C  01A1               	clrf	(_g_data^(0+128)+1)
  2630                           
  2631                           ;receive_decode.c: 85:     g_data.g_recv_count = 0;
  2632  014D  01AF               	clrf	(_g_data^(0+128)+15)
  2633  014E  01B0               	clrf	((_g_data+1)^(0+128)+15)
  2634                           
  2635                           ;receive_decode.c: 86:     for(int i = 0;i < 20; i++){
  2636  014F  0020               	movlb	0	; select bank0
  2637  0150  01C8               	clrf	receive_decode@i
  2638  0151  01C9               	clrf	receive_decode@i+1
  2639  0152                     L1:	
  2640  0152  0849               	movf	receive_decode@i+1,w
  2641  0153  3A80               	xorlw	128
  2642  0154  00F7               	movwf	??_receive_decode
  2643  0155  3080               	movlw	128
  2644  0156  0277               	subwf	??_receive_decode,w
  2645  0157  1D03               	skipz
  2646  0158  295B               	goto	u72_25
  2647  0159  3014               	movlw	20
  2648  015A  0248               	subwf	receive_decode@i,w
  2649  015B                     u72_25:	
  2650  015B  1803               	btfsc	3,0
  2651  015C  0008               	return
  2652                           
  2653                           ;receive_decode.c: 87:         g_data.g_recv_buf[i] = 5;
  2654  015D  0020               	movlb	0	; select bank0
  2655  015E  3548               	lslf	receive_decode@i,w
  2656  015F  3EB1               	addlw	(low ((_g_data| 0+17)))& (0+255)
  2657  0160  0086               	movwf	6
  2658  0161  0187               	clrf	7
  2659  0162  3005               	movlw	5
  2660  0163  3FC0               	movwi [0]fsr1
  2661  0164  3000               	movlw	0
  2662  0165  3FC1               	movwi [1]fsr1
  2663                           
  2664                           ;receive_decode.c: 88:     }
  2665  0166  3001               	movlw	1
  2666  0167  07C8               	addwf	receive_decode@i,f
  2667  0168  3000               	movlw	0
  2668  0169  3DC9               	addwfc	receive_decode@i+1,f
  2669  016A  2952               	goto	L1
  2670  016B                     __end_of_receive_decode:	
  2671                           ;receive_decode.c: 89:     return;
  2672                           
  2673                           
  2674                           	psect	text5
  2675  02BC                     __ptext5:	
  2676 ;; *************** function _update_display *****************
  2677 ;; Defined at:
  2678 ;;		line 36 in file "update_display.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		_control595_delay
  2701 ;;		_write_char
  2702 ;; This function is called by:
  2703 ;;		_receive_decode
  2704 ;;		_update_time
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _update_display
  2710  02BC                     _update_display:	
  2711                           
  2712                           ;update_display.c: 37:     write_char(0xff);
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  2716  02BC  30FF               	movlw	255
  2717  02BD  3182  2295  3182   	fcall	_write_char
  2718                           
  2719                           ;update_display.c: 38:     write_char(0x00);
  2720  02C0  3000               	movlw	0
  2721  02C1  3182  2295  3182   	fcall	_write_char
  2722                           
  2723                           ;update_display.c: 39:     write_char(0xf0);
  2724  02C4  30F0               	movlw	240
  2725  02C5  3182  2295  3182   	fcall	_write_char
  2726                           
  2727                           ;update_display.c: 40:     write_char(0x0f);
  2728  02C8  300F               	movlw	15
  2729  02C9  3182  2295  3182   	fcall	_write_char
  2730                           
  2731                           ;update_display.c: 51:  PORTBbits.RB1 = 1;
  2732  02CC  0020               	movlb	0	; select bank0
  2733  02CD  148D               	bsf	13,1	;volatile
  2734                           
  2735                           ;update_display.c: 52:  control595_delay();
  2736  02CE  3182  22D3         	fcall	_control595_delay
  2737                           
  2738                           ;update_display.c: 53:     PORTBbits.RB1 = 0;
  2739  02D0  0020               	movlb	0	; select bank0
  2740  02D1  108D               	bcf	13,1	;volatile
  2741  02D2  0008               	return
  2742  02D3                     __end_of_update_display:	
  2743                           ;update_display.c: 54:     return;
  2744                           
  2745                           
  2746                           	psect	text6
  2747  0295                     __ptext6:	
  2748 ;; *************** function _write_char *****************
  2749 ;; Defined at:
  2750 ;;		line 23 in file "update_display.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  dat             1    wreg     unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  dat             1    5[COMMON] unsigned char 
  2755 ;;  i               1    6[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;Total ram usage:        4 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    1
  2772 ;; This function calls:
  2773 ;;		_control595_delay
  2774 ;; This function is called by:
  2775 ;;		_update_display
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _write_char
  2781  0295                     _write_char:	
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  2785                           ;write_char@dat stored from wreg
  2786  0295  00F5               	movwf	write_char@dat
  2787                           
  2788                           ;update_display.c: 24:     unsigned char i;;update_display.c: 25:     for(i = 0; i < 8; 
      +                          i++){
  2789  0296  01F6               	clrf	write_char@i
  2790  0297                     L2:	
  2791  0297  3008               	movlw	8
  2792  0298  0276               	subwf	write_char@i,w
  2793  0299  1803               	btfsc	3,0
  2794  029A  0008               	return
  2795                           
  2796                           ;update_display.c: 26:   PORTBbits.RB5 = (dat & 0x80) >> 7;
  2797  029B  0875               	movf	write_char@dat,w
  2798  029C  00F3               	movwf	??_write_char
  2799  029D  3007               	movlw	7
  2800  029E                     u44_25:	
  2801  029E  36F3               	lsrf	??_write_char,f
  2802  029F  0B89               	decfsz	9,f
  2803  02A0  2A9E               	goto	u44_25
  2804  02A1  0873               	movf	??_write_char,w
  2805  02A2  3901               	andlw	1
  2806  02A3  00F4               	movwf	??_write_char+1
  2807  02A4  0EF4               	swapf	??_write_char+1,f
  2808  02A5  0DF4               	rlf	??_write_char+1,f
  2809  02A6  0020               	movlb	0	; select bank0
  2810  02A7  080D               	movf	13,w	;volatile
  2811  02A8  0674               	xorwf	??_write_char+1,w
  2812  02A9  39DF               	andlw	-33
  2813  02AA  0674               	xorwf	??_write_char+1,w
  2814  02AB  008D               	movwf	13	;volatile
  2815                           
  2816                           ;update_display.c: 27:         PORTBbits.RB0 = 0;
  2817  02AC  100D               	bcf	13,0	;volatile
  2818                           
  2819                           ;update_display.c: 28:   control595_delay();
  2820  02AD  3182  22D3  3182   	fcall	_control595_delay
  2821                           
  2822                           ;update_display.c: 29:         PORTBbits.RB0 = 1;
  2823  02B0  0020               	movlb	0	; select bank0
  2824  02B1  140D               	bsf	13,0	;volatile
  2825                           
  2826                           ;update_display.c: 30:   control595_delay();
  2827  02B2  3182  22D3  3182   	fcall	_control595_delay
  2828                           
  2829                           ;update_display.c: 32:         dat <<= 1;
  2830  02B5  1003               	clrc
  2831  02B6  0DF5               	rlf	write_char@dat,f
  2832                           
  2833                           ;update_display.c: 33:     }
  2834  02B7  3001               	movlw	1
  2835  02B8  00F3               	movwf	??_write_char
  2836  02B9  0873               	movf	??_write_char,w
  2837  02BA  07F6               	addwf	write_char@i,f
  2838  02BB  2A97               	goto	L2
  2839  02BC                     __end_of_write_char:	
  2840                           
  2841                           	psect	text7
  2842  02D3                     __ptext7:	
  2843 ;; *************** function _control595_delay *****************
  2844 ;; Defined at:
  2845 ;;		line 15 in file "update_display.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  times           2    1[COMMON] int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;Total ram usage:        3 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_write_char
  2869 ;;		_update_display
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _control595_delay
  2875  02D3                     _control595_delay:	
  2876                           
  2877                           ;update_display.c: 16:    int times = 10;
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in _control595_delay: [wreg]
  2881  02D3  300A               	movlw	10
  2882  02D4  00F1               	movwf	control595_delay@times
  2883  02D5  3000               	movlw	0
  2884  02D6  00F2               	movwf	control595_delay@times+1
  2885  02D7                     i1l167:	
  2886                           ;update_display.c: 20:    }
  2887                           
  2888                           ;update_display.c: 17:    while(times > 0){
  2889                           
  2890                           
  2891                           ;update_display.c: 17:    while(times > 0){
  2892  02D7  0872               	movf	control595_delay@times+1,w
  2893  02D8  3A80               	xorlw	128
  2894  02D9  00F0               	movwf	??_control595_delay
  2895  02DA  3080               	movlw	128
  2896  02DB  0270               	subwf	??_control595_delay,w
  2897  02DC  1D03               	skipz
  2898  02DD  2AE0               	goto	u42_25
  2899  02DE  3001               	movlw	1
  2900  02DF  0271               	subwf	control595_delay@times,w
  2901  02E0                     u42_25:	
  2902  02E0  1C03               	btfss	3,0
  2903  02E1  0008               	return
  2904                           
  2905                           ;update_display.c: 18:     __nop();
  2906  02E2  0000               	nop
  2907                           
  2908                           ;update_display.c: 19:        times--;
  2909  02E3  30FF               	movlw	255
  2910  02E4  07F1               	addwf	control595_delay@times,f
  2911  02E5  30FF               	movlw	255
  2912  02E6  3DF2               	addwfc	control595_delay@times+1,f
  2913  02E7  2AD7               	goto	i1l167
  2914  02E8                     __end_of_control595_delay:	
  2915                           
  2916                           	psect	text8
  2917  016B                     __ptext8:	
  2918 ;; *************** function _times2number *****************
  2919 ;; Defined at:
  2920 ;;		line 14 in file "receive_decode.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  high_level_t    2    0[COMMON] int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2    0[COMMON] int 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_receive_decode
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _times2number
  2949  016B                     _times2number:	
  2950                           
  2951                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _times2number: [wreg+status,2]
  2955  016B  0871               	movf	times2number@high_level_times+1,w
  2956  016C  3A80               	xorlw	128
  2957  016D  00F2               	movwf	??_times2number
  2958  016E  3080               	movlw	128
  2959  016F  0272               	subwf	??_times2number,w
  2960  0170  1D03               	skipz
  2961  0171  2974               	goto	u46_25
  2962  0172  3005               	movlw	5
  2963  0173  0270               	subwf	times2number@high_level_times,w
  2964  0174                     u46_25:	
  2965  0174  1C03               	skipc
  2966  0175  2984               	goto	i1l1057
  2967  0176  0871               	movf	times2number@high_level_times+1,w
  2968  0177  3A80               	xorlw	128
  2969  0178  00F2               	movwf	??_times2number
  2970  0179  3080               	movlw	128
  2971  017A  0272               	subwf	??_times2number,w
  2972  017B  1D03               	skipz
  2973  017C  297F               	goto	u47_25
  2974  017D  300F               	movlw	15
  2975  017E  0270               	subwf	times2number@high_level_times,w
  2976  017F                     u47_25:	
  2977  017F  1803               	skipnc
  2978  0180  2984               	goto	i1l1057
  2979                           
  2980                           ;receive_decode.c: 16:         return 0;
  2981  0181  01F0               	clrf	?_times2number
  2982  0182  01F1               	clrf	?_times2number+1
  2983                           
  2984                           ;receive_decode.c: 17:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  2985  0183  0008               	return
  2986  0184                     i1l1057:	
  2987  0184  0871               	movf	times2number@high_level_times+1,w
  2988  0185  3A80               	xorlw	128
  2989  0186  00F2               	movwf	??_times2number
  2990  0187  3080               	movlw	128
  2991  0188  0272               	subwf	??_times2number,w
  2992  0189  1D03               	skipz
  2993  018A  298D               	goto	u48_25
  2994  018B  300F               	movlw	15
  2995  018C  0270               	subwf	times2number@high_level_times,w
  2996  018D                     u48_25:	
  2997  018D  1C03               	skipc
  2998  018E  299F               	goto	i1l1067
  2999  018F  0871               	movf	times2number@high_level_times+1,w
  3000  0190  3A80               	xorlw	128
  3001  0191  00F2               	movwf	??_times2number
  3002  0192  3080               	movlw	128
  3003  0193  0272               	subwf	??_times2number,w
  3004  0194  1D03               	skipz
  3005  0195  2998               	goto	u49_25
  3006  0196  3019               	movlw	25
  3007  0197  0270               	subwf	times2number@high_level_times,w
  3008  0198                     u49_25:	
  3009  0198  1803               	skipnc
  3010  0199  299F               	goto	i1l1067
  3011                           
  3012                           ;receive_decode.c: 18:         return 1;
  3013  019A  3001               	movlw	1
  3014  019B  00F0               	movwf	?_times2number
  3015  019C  3000               	movlw	0
  3016  019D  00F1               	movwf	?_times2number+1
  3017                           
  3018                           ;receive_decode.c: 19:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  3019  019E  0008               	return
  3020  019F                     i1l1067:	
  3021  019F  0871               	movf	times2number@high_level_times+1,w
  3022  01A0  3A80               	xorlw	128
  3023  01A1  00F2               	movwf	??_times2number
  3024  01A2  3080               	movlw	128
  3025  01A3  0272               	subwf	??_times2number,w
  3026  01A4  1D03               	skipz
  3027  01A5  29A8               	goto	u50_25
  3028  01A6  3019               	movlw	25
  3029  01A7  0270               	subwf	times2number@high_level_times,w
  3030  01A8                     u50_25:	
  3031  01A8  1C03               	skipc
  3032  01A9  29BA               	goto	i1l1077
  3033  01AA  0871               	movf	times2number@high_level_times+1,w
  3034  01AB  3A80               	xorlw	128
  3035  01AC  00F2               	movwf	??_times2number
  3036  01AD  3080               	movlw	128
  3037  01AE  0272               	subwf	??_times2number,w
  3038  01AF  1D03               	skipz
  3039  01B0  29B3               	goto	u51_25
  3040  01B1  3023               	movlw	35
  3041  01B2  0270               	subwf	times2number@high_level_times,w
  3042  01B3                     u51_25:	
  3043  01B3  1803               	skipnc
  3044  01B4  29BA               	goto	i1l1077
  3045                           
  3046                           ;receive_decode.c: 20:         return 2;
  3047  01B5  3002               	movlw	2
  3048  01B6  00F0               	movwf	?_times2number
  3049  01B7  3000               	movlw	0
  3050  01B8  00F1               	movwf	?_times2number+1
  3051                           
  3052                           ;receive_decode.c: 21:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  3053  01B9  0008               	return
  3054  01BA                     i1l1077:	
  3055  01BA  0871               	movf	times2number@high_level_times+1,w
  3056  01BB  3A80               	xorlw	128
  3057  01BC  00F2               	movwf	??_times2number
  3058  01BD  3080               	movlw	128
  3059  01BE  0272               	subwf	??_times2number,w
  3060  01BF  1D03               	skipz
  3061  01C0  29C3               	goto	u52_25
  3062  01C1  3023               	movlw	35
  3063  01C2  0270               	subwf	times2number@high_level_times,w
  3064  01C3                     u52_25:	
  3065  01C3  1C03               	skipc
  3066  01C4  29D5               	goto	i1l1087
  3067  01C5  0871               	movf	times2number@high_level_times+1,w
  3068  01C6  3A80               	xorlw	128
  3069  01C7  00F2               	movwf	??_times2number
  3070  01C8  3080               	movlw	128
  3071  01C9  0272               	subwf	??_times2number,w
  3072  01CA  1D03               	skipz
  3073  01CB  29CE               	goto	u53_25
  3074  01CC  302D               	movlw	45
  3075  01CD  0270               	subwf	times2number@high_level_times,w
  3076  01CE                     u53_25:	
  3077  01CE  1803               	skipnc
  3078  01CF  29D5               	goto	i1l1087
  3079                           
  3080                           ;receive_decode.c: 22:         return 3;
  3081  01D0  3003               	movlw	3
  3082  01D1  00F0               	movwf	?_times2number
  3083  01D2  3000               	movlw	0
  3084  01D3  00F1               	movwf	?_times2number+1
  3085                           
  3086                           ;receive_decode.c: 23:     }else if(high_level_times >= 40 + 5){
  3087  01D4  0008               	return
  3088  01D5                     i1l1087:	
  3089  01D5  0871               	movf	times2number@high_level_times+1,w
  3090  01D6  3A80               	xorlw	128
  3091  01D7  00F2               	movwf	??_times2number
  3092  01D8  3080               	movlw	128
  3093  01D9  0272               	subwf	??_times2number,w
  3094  01DA  1D03               	skipz
  3095  01DB  29DE               	goto	u54_25
  3096  01DC  302D               	movlw	45
  3097  01DD  0270               	subwf	times2number@high_level_times,w
  3098  01DE                     u54_25:	
  3099  01DE  1C03               	skipc
  3100  01DF  29E5               	goto	i1l1095
  3101                           
  3102                           ;receive_decode.c: 24:         return 4;
  3103  01E0  3004               	movlw	4
  3104  01E1  00F0               	movwf	?_times2number
  3105  01E2  3000               	movlw	0
  3106  01E3  00F1               	movwf	?_times2number+1
  3107                           
  3108                           ;receive_decode.c: 25:     }else{
  3109  01E4  0008               	return
  3110  01E5                     i1l1095:	
  3111                           
  3112                           ;receive_decode.c: 26:         return 5;
  3113  01E5  3005               	movlw	5
  3114  01E6  00F0               	movwf	?_times2number
  3115  01E7  3000               	movlw	0
  3116  01E8  00F1               	movwf	?_times2number+1
  3117                           
  3118                           ;receive_decode.c: 27:     }
  3119  01E9  0008               	return
  3120  01EA                     __end_of_times2number:	
  3121  007E                     btemp	set	126	;btemp
  3122  007E                     int$flags	set	126
  3123  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     11      47
    BANK1            80      0      57
    BANK2            80      0      40
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_receive_decode
    _update_display->_write_char
    _write_char->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0     711
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                          0     0      0     117
                     _update_display
 ---------------------------------------------------------------------------------
 (3) _receive_decode                                      14    14      0     594
                                              7 COMMON     6     6      0
                                              0 BANK0      8     8      0
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       0     0      0     117
                   _control595_delay
                         _write_char
 ---------------------------------------------------------------------------------
 (5) _write_char                                           4     4      0      93
                                              3 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (6) _control595_delay                                     3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _times2number                                         3     1      2     274
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env

 _ISR (ROOT)
   _receive_decode
     _times2number
     _update_display
       _control595_delay
       _write_char
         _control595_delay
   _update_time
     _update_display
       _control595_delay
       _write_char
         _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      39       7       71.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      28       9       50.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 25 23:30:46 2019

             ?_receive_decode 0070                   _update_time 0265             _g_find_recv_start 0026  
                 __CFG_CP$OFF 0000                            l62 025D                            l81 0307  
              _update_display 02BC                   __CFG_LVP$ON 0000             ?_control595_delay 0070  
                __CFG_CPD$OFF 0000                           _ISR 0004                           u555 0243  
                         u565 025B                  __CFG_BORV$LO 0000            ??_control595_delay 0070  
                         wreg 0009                  __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000  
               write_char@dat 0075                          ?_ISR 0070                          l1185 0245  
                        _LATA 010C                          _LATB 010D                          _LATC 010E  
                        _ENUM 007D                          i1l73 001E                          i1l74 0031  
                        i1l68 0019                          i1l69 003F                          _TMR0 0015  
                        _WPUA 020C                          _WPUB 020D                          _WPUC 020E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _main 0304  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 0041                 __CFG_MCLRE$ON 0000  
                       ??_ISR 007D        __end_of_update_display 02D3                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _IOCAN 0392  
                       _IOCAP 0391                         _IOCBN 0395                         _IOCBP 0394  
                       _IOCCN 0398                         _IOCCP 0397                         i1l108 0073  
                       i1l167 02D7                         u50_25 01A8                         u42_25 02E0  
                       u51_25 01B3                         u52_25 01C3                         u44_25 029E  
                       u53_25 01CE                         u54_25 01DE                         u46_25 0174  
                       u70_25 0136                         u62_25 0081                         u47_25 017F  
                       u71_25 0142                         u48_25 018D                         u72_25 015B  
                       _TRISA 008C                         _TRISB 008D                         u49_25 0198  
                       _TRISC 008E                         u67_25 00C9                         status 0003  
                       wtemp0 007E               __initialization 0043                  __end_of_main 0308  
             ?_update_display 0070                __CFG_LPBOR$OFF 0000                        ??_main 004F  
                      i1l1215 0292                        i1l1057 0184                        i1l1241 00A1  
                      i1l1067 019F                        i1l1077 01BA                        i1l1317 0021  
                      i1l1095 01E5                        i1l1087 01D5                        i1l1273 0144  
                      i1l1265 00D9                        i1l1275 0147                __CFG_PWRTE$OFF 0000  
                      _g_data 00A0                __CFG_STVREN$ON 0000              __end_of_init_env 0265  
times2number@high_level_times 0070       __end_of__initialization 0067              ??_receive_decode 0077  
              __pcstackCOMMON 0070                  ?_update_time 0070         control595_delay@times 0071  
                __pidataBANK0 02E8                _OPTION_REGbits 0095                    __pbssBANK0 0020  
                  __pbssBANK1 00A0                    __pbssBANK2 0120     __size_of_control595_delay 0015  
             __CFG_VCAPEN$OFF 0000                    __pmaintext 0304                    _g_recv_buf 0120  
                  __pintentry 0004                  _g_recv_count 0020            _g_high_level_times 0024  
         _g_start_read_switch 002A                     ?_init_env 0070              ??_update_display 0077  
                     __ptext1 01EA                       __ptext3 0265                       __ptext4 006B  
                     __ptext5 02BC                       __ptext6 0295                       __ptext7 02D3  
                     __ptext8 016B                  __size_of_ISR 003D                 ?_times2number 0070  
                   _IOCCFbits 0399                     _IOCCPbits 0397                       clrloop0 02FF  
        end_of_initialization 0067                       init_ram 02F8                    ??_init_env 004C  
                     initloop 02F9          __size_of_update_time 0030                     _PORTBbits 000D  
                   _PORTCbits 000E                ??_times2number 0072                     _TRISCbits 008E  
            _control595_delay 02D3                    _write_char 0295      receive_decode@read_value 004A  
         start_initialization 0043      receive_decode@old_time_h 0044      receive_decode@old_time_m 0046  
                 __end_of_ISR 0041               receive_decode@i 0048                   __pdataBANK0 0034  
                 __pbssCOMMON 007D                     ___latbits 0002                 __pcstackBANK0 0044  
           __size_of_init_env 007B          __end_of_times2number 01EA       __size_of_receive_decode 0100  
                 ?_write_char 0070                     clear_ram0 02FE      __end_of_control595_delay 02E8  
                 write_char@i 0076                      _WPUCbits 020E           __size_of_write_char 0027  
               ??_update_time 0077                     init_env@i 004D       __size_of_update_display 0017  
                    _g_time_h 0032                      _g_time_m 0030                      _g_time_s 002E  
                    _g_time_u 002C             _g_start_read_data 0028         __size_of_times2number 007F  
                    _init_env 01EA                 __size_of_main 0004                      _segmcode 0034  
                    int$flags 007E                _receive_decode 006B           __end_of_update_time 0295  
                  _INTCONbits 000B                  _times2number 016B                      intlevel1 0000  
           __CFG_CLKOUTEN$OFF 0000                    _OSCCONbits 0099             _g_all_level_times 0022  
      __end_of_receive_decode 016B                  ??_write_char 0073            __end_of_write_char 02BC  



Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Mar 27 23:13:22 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.00
    25                           ; Generated 27/05/2018 GMT
    26                           ; 
    27                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1786 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011C                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  011F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0197                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  0210                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  028C                     	;# 
   185  028D                     	;# 
   186  028E                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  030C                     	;# 
   196  030D                     	;# 
   197  030E                     	;# 
   198  0311                     	;# 
   199  0311                     	;# 
   200  0312                     	;# 
   201  0313                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0390                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0397                     	;# 
   213  0398                     	;# 
   214  0399                     	;# 
   215  039D                     	;# 
   216  039E                     	;# 
   217  039F                     	;# 
   218  0511                     	;# 
   219  0513                     	;# 
   220  051A                     	;# 
   221  0811                     	;# 
   222  0812                     	;# 
   223  0813                     	;# 
   224  0814                     	;# 
   225  0815                     	;# 
   226  0816                     	;# 
   227  0817                     	;# 
   228  0818                     	;# 
   229  0819                     	;# 
   230  081A                     	;# 
   231  081B                     	;# 
   232  081C                     	;# 
   233  081D                     	;# 
   234  081E                     	;# 
   235  081F                     	;# 
   236  0820                     	;# 
   237  0821                     	;# 
   238  0821                     	;# 
   239  0822                     	;# 
   240  0823                     	;# 
   241  0823                     	;# 
   242  0824                     	;# 
   243  0825                     	;# 
   244  0825                     	;# 
   245  0826                     	;# 
   246  0827                     	;# 
   247  0827                     	;# 
   248  0828                     	;# 
   249  0829                     	;# 
   250  082A                     	;# 
   251  082B                     	;# 
   252  082C                     	;# 
   253  082D                     	;# 
   254  082E                     	;# 
   255  082F                     	;# 
   256  0831                     	;# 
   257  0832                     	;# 
   258  0833                     	;# 
   259  0834                     	;# 
   260  0835                     	;# 
   261  0836                     	;# 
   262  0837                     	;# 
   263  0838                     	;# 
   264  0839                     	;# 
   265  083A                     	;# 
   266  083B                     	;# 
   267  083C                     	;# 
   268  083D                     	;# 
   269  083E                     	;# 
   270  083F                     	;# 
   271  0840                     	;# 
   272  0841                     	;# 
   273  0841                     	;# 
   274  0842                     	;# 
   275  0843                     	;# 
   276  0843                     	;# 
   277  0844                     	;# 
   278  0845                     	;# 
   279  0845                     	;# 
   280  0846                     	;# 
   281  0847                     	;# 
   282  0847                     	;# 
   283  0848                     	;# 
   284  0849                     	;# 
   285  084A                     	;# 
   286  084B                     	;# 
   287  084C                     	;# 
   288  084D                     	;# 
   289  084E                     	;# 
   290  084F                     	;# 
   291  0851                     	;# 
   292  0852                     	;# 
   293  0853                     	;# 
   294  0854                     	;# 
   295  0855                     	;# 
   296  0856                     	;# 
   297  0857                     	;# 
   298  0858                     	;# 
   299  0859                     	;# 
   300  085A                     	;# 
   301  085B                     	;# 
   302  085C                     	;# 
   303  085D                     	;# 
   304  085E                     	;# 
   305  085F                     	;# 
   306  0860                     	;# 
   307  0861                     	;# 
   308  0861                     	;# 
   309  0862                     	;# 
   310  0863                     	;# 
   311  0863                     	;# 
   312  0864                     	;# 
   313  0865                     	;# 
   314  0865                     	;# 
   315  0866                     	;# 
   316  0867                     	;# 
   317  0867                     	;# 
   318  0868                     	;# 
   319  0869                     	;# 
   320  086A                     	;# 
   321  086B                     	;# 
   322  086C                     	;# 
   323  086D                     	;# 
   324  086E                     	;# 
   325  086F                     	;# 
   326  0FE4                     	;# 
   327  0FE5                     	;# 
   328  0FE6                     	;# 
   329  0FE7                     	;# 
   330  0FE8                     	;# 
   331  0FE9                     	;# 
   332  0FEA                     	;# 
   333  0FEB                     	;# 
   334  0FED                     	;# 
   335  0FEE                     	;# 
   336  0FEF                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  0010                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0014                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  0111                     	;# 
   390  0112                     	;# 
   391  0113                     	;# 
   392  0114                     	;# 
   393  0115                     	;# 
   394  0116                     	;# 
   395  0117                     	;# 
   396  0118                     	;# 
   397  0119                     	;# 
   398  011A                     	;# 
   399  011B                     	;# 
   400  011C                     	;# 
   401  011D                     	;# 
   402  011D                     	;# 
   403  011D                     	;# 
   404  011E                     	;# 
   405  011F                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  0191                     	;# 
   409  0191                     	;# 
   410  0192                     	;# 
   411  0193                     	;# 
   412  0193                     	;# 
   413  0193                     	;# 
   414  0194                     	;# 
   415  0195                     	;# 
   416  0196                     	;# 
   417  0197                     	;# 
   418  0199                     	;# 
   419  0199                     	;# 
   420  0199                     	;# 
   421  019A                     	;# 
   422  019A                     	;# 
   423  019A                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019C                     	;# 
   431  019C                     	;# 
   432  019D                     	;# 
   433  019D                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019E                     	;# 
   437  019E                     	;# 
   438  019F                     	;# 
   439  019F                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  020C                     	;# 
   444  020D                     	;# 
   445  020E                     	;# 
   446  0210                     	;# 
   447  0211                     	;# 
   448  0211                     	;# 
   449  0212                     	;# 
   450  0212                     	;# 
   451  0213                     	;# 
   452  0213                     	;# 
   453  0214                     	;# 
   454  0214                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0216                     	;# 
   460  0216                     	;# 
   461  0217                     	;# 
   462  0217                     	;# 
   463  028C                     	;# 
   464  028D                     	;# 
   465  028E                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0298                     	;# 
   471  0298                     	;# 
   472  0299                     	;# 
   473  029A                     	;# 
   474  030C                     	;# 
   475  030D                     	;# 
   476  030E                     	;# 
   477  0311                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  038C                     	;# 
   482  038D                     	;# 
   483  038E                     	;# 
   484  0390                     	;# 
   485  0391                     	;# 
   486  0392                     	;# 
   487  0393                     	;# 
   488  0394                     	;# 
   489  0395                     	;# 
   490  0396                     	;# 
   491  0397                     	;# 
   492  0398                     	;# 
   493  0399                     	;# 
   494  039D                     	;# 
   495  039E                     	;# 
   496  039F                     	;# 
   497  0511                     	;# 
   498  0513                     	;# 
   499  051A                     	;# 
   500  0811                     	;# 
   501  0812                     	;# 
   502  0813                     	;# 
   503  0814                     	;# 
   504  0815                     	;# 
   505  0816                     	;# 
   506  0817                     	;# 
   507  0818                     	;# 
   508  0819                     	;# 
   509  081A                     	;# 
   510  081B                     	;# 
   511  081C                     	;# 
   512  081D                     	;# 
   513  081E                     	;# 
   514  081F                     	;# 
   515  0820                     	;# 
   516  0821                     	;# 
   517  0821                     	;# 
   518  0822                     	;# 
   519  0823                     	;# 
   520  0823                     	;# 
   521  0824                     	;# 
   522  0825                     	;# 
   523  0825                     	;# 
   524  0826                     	;# 
   525  0827                     	;# 
   526  0827                     	;# 
   527  0828                     	;# 
   528  0829                     	;# 
   529  082A                     	;# 
   530  082B                     	;# 
   531  082C                     	;# 
   532  082D                     	;# 
   533  082E                     	;# 
   534  082F                     	;# 
   535  0831                     	;# 
   536  0832                     	;# 
   537  0833                     	;# 
   538  0834                     	;# 
   539  0835                     	;# 
   540  0836                     	;# 
   541  0837                     	;# 
   542  0838                     	;# 
   543  0839                     	;# 
   544  083A                     	;# 
   545  083B                     	;# 
   546  083C                     	;# 
   547  083D                     	;# 
   548  083E                     	;# 
   549  083F                     	;# 
   550  0840                     	;# 
   551  0841                     	;# 
   552  0841                     	;# 
   553  0842                     	;# 
   554  0843                     	;# 
   555  0843                     	;# 
   556  0844                     	;# 
   557  0845                     	;# 
   558  0845                     	;# 
   559  0846                     	;# 
   560  0847                     	;# 
   561  0847                     	;# 
   562  0848                     	;# 
   563  0849                     	;# 
   564  084A                     	;# 
   565  084B                     	;# 
   566  084C                     	;# 
   567  084D                     	;# 
   568  084E                     	;# 
   569  084F                     	;# 
   570  0851                     	;# 
   571  0852                     	;# 
   572  0853                     	;# 
   573  0854                     	;# 
   574  0855                     	;# 
   575  0856                     	;# 
   576  0857                     	;# 
   577  0858                     	;# 
   578  0859                     	;# 
   579  085A                     	;# 
   580  085B                     	;# 
   581  085C                     	;# 
   582  085D                     	;# 
   583  085E                     	;# 
   584  085F                     	;# 
   585  0860                     	;# 
   586  0861                     	;# 
   587  0861                     	;# 
   588  0862                     	;# 
   589  0863                     	;# 
   590  0863                     	;# 
   591  0864                     	;# 
   592  0865                     	;# 
   593  0865                     	;# 
   594  0866                     	;# 
   595  0867                     	;# 
   596  0867                     	;# 
   597  0868                     	;# 
   598  0869                     	;# 
   599  086A                     	;# 
   600  086B                     	;# 
   601  086C                     	;# 
   602  086D                     	;# 
   603  086E                     	;# 
   604  086F                     	;# 
   605  0FE4                     	;# 
   606  0FE5                     	;# 
   607  0FE6                     	;# 
   608  0FE7                     	;# 
   609  0FE8                     	;# 
   610  0FE9                     	;# 
   611  0FEA                     	;# 
   612  0FEB                     	;# 
   613  0FED                     	;# 
   614  0FEE                     	;# 
   615  0FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  0010                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0013                     	;# 
   635  0014                     	;# 
   636  0015                     	;# 
   637  0016                     	;# 
   638  0016                     	;# 
   639  0017                     	;# 
   640  0018                     	;# 
   641  0019                     	;# 
   642  001A                     	;# 
   643  001B                     	;# 
   644  001C                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009B                     	;# 
   661  009C                     	;# 
   662  009D                     	;# 
   663  009E                     	;# 
   664  009F                     	;# 
   665  010C                     	;# 
   666  010D                     	;# 
   667  010E                     	;# 
   668  0111                     	;# 
   669  0112                     	;# 
   670  0113                     	;# 
   671  0114                     	;# 
   672  0115                     	;# 
   673  0116                     	;# 
   674  0117                     	;# 
   675  0118                     	;# 
   676  0119                     	;# 
   677  011A                     	;# 
   678  011B                     	;# 
   679  011C                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011D                     	;# 
   683  011E                     	;# 
   684  011F                     	;# 
   685  018C                     	;# 
   686  018D                     	;# 
   687  0191                     	;# 
   688  0191                     	;# 
   689  0192                     	;# 
   690  0193                     	;# 
   691  0193                     	;# 
   692  0193                     	;# 
   693  0194                     	;# 
   694  0195                     	;# 
   695  0196                     	;# 
   696  0197                     	;# 
   697  0199                     	;# 
   698  0199                     	;# 
   699  0199                     	;# 
   700  019A                     	;# 
   701  019A                     	;# 
   702  019A                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  019C                     	;# 
   710  019C                     	;# 
   711  019D                     	;# 
   712  019D                     	;# 
   713  019D                     	;# 
   714  019E                     	;# 
   715  019E                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  019F                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  020E                     	;# 
   725  0210                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  028C                     	;# 
   743  028D                     	;# 
   744  028E                     	;# 
   745  0291                     	;# 
   746  0291                     	;# 
   747  0292                     	;# 
   748  0293                     	;# 
   749  0298                     	;# 
   750  0298                     	;# 
   751  0299                     	;# 
   752  029A                     	;# 
   753  030C                     	;# 
   754  030D                     	;# 
   755  030E                     	;# 
   756  0311                     	;# 
   757  0311                     	;# 
   758  0312                     	;# 
   759  0313                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0390                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  0393                     	;# 
   767  0394                     	;# 
   768  0395                     	;# 
   769  0396                     	;# 
   770  0397                     	;# 
   771  0398                     	;# 
   772  0399                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0511                     	;# 
   777  0513                     	;# 
   778  051A                     	;# 
   779  0811                     	;# 
   780  0812                     	;# 
   781  0813                     	;# 
   782  0814                     	;# 
   783  0815                     	;# 
   784  0816                     	;# 
   785  0817                     	;# 
   786  0818                     	;# 
   787  0819                     	;# 
   788  081A                     	;# 
   789  081B                     	;# 
   790  081C                     	;# 
   791  081D                     	;# 
   792  081E                     	;# 
   793  081F                     	;# 
   794  0820                     	;# 
   795  0821                     	;# 
   796  0821                     	;# 
   797  0822                     	;# 
   798  0823                     	;# 
   799  0823                     	;# 
   800  0824                     	;# 
   801  0825                     	;# 
   802  0825                     	;# 
   803  0826                     	;# 
   804  0827                     	;# 
   805  0827                     	;# 
   806  0828                     	;# 
   807  0829                     	;# 
   808  082A                     	;# 
   809  082B                     	;# 
   810  082C                     	;# 
   811  082D                     	;# 
   812  082E                     	;# 
   813  082F                     	;# 
   814  0831                     	;# 
   815  0832                     	;# 
   816  0833                     	;# 
   817  0834                     	;# 
   818  0835                     	;# 
   819  0836                     	;# 
   820  0837                     	;# 
   821  0838                     	;# 
   822  0839                     	;# 
   823  083A                     	;# 
   824  083B                     	;# 
   825  083C                     	;# 
   826  083D                     	;# 
   827  083E                     	;# 
   828  083F                     	;# 
   829  0840                     	;# 
   830  0841                     	;# 
   831  0841                     	;# 
   832  0842                     	;# 
   833  0843                     	;# 
   834  0843                     	;# 
   835  0844                     	;# 
   836  0845                     	;# 
   837  0845                     	;# 
   838  0846                     	;# 
   839  0847                     	;# 
   840  0847                     	;# 
   841  0848                     	;# 
   842  0849                     	;# 
   843  084A                     	;# 
   844  084B                     	;# 
   845  084C                     	;# 
   846  084D                     	;# 
   847  084E                     	;# 
   848  084F                     	;# 
   849  0851                     	;# 
   850  0852                     	;# 
   851  0853                     	;# 
   852  0854                     	;# 
   853  0855                     	;# 
   854  0856                     	;# 
   855  0857                     	;# 
   856  0858                     	;# 
   857  0859                     	;# 
   858  085A                     	;# 
   859  085B                     	;# 
   860  085C                     	;# 
   861  085D                     	;# 
   862  085E                     	;# 
   863  085F                     	;# 
   864  0860                     	;# 
   865  0861                     	;# 
   866  0861                     	;# 
   867  0862                     	;# 
   868  0863                     	;# 
   869  0863                     	;# 
   870  0864                     	;# 
   871  0865                     	;# 
   872  0865                     	;# 
   873  0866                     	;# 
   874  0867                     	;# 
   875  0867                     	;# 
   876  0868                     	;# 
   877  0869                     	;# 
   878  086A                     	;# 
   879  086B                     	;# 
   880  086C                     	;# 
   881  086D                     	;# 
   882  086E                     	;# 
   883  086F                     	;# 
   884  0FE4                     	;# 
   885  0FE5                     	;# 
   886  0FE6                     	;# 
   887  0FE7                     	;# 
   888  0FE8                     	;# 
   889  0FE9                     	;# 
   890  0FEA                     	;# 
   891  0FEB                     	;# 
   892  0FED                     	;# 
   893  0FEE                     	;# 
   894  0FEF                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0008                     	;# 
   904  0009                     	;# 
   905  000A                     	;# 
   906  000B                     	;# 
   907  000C                     	;# 
   908  000D                     	;# 
   909  000E                     	;# 
   910  0010                     	;# 
   911  0011                     	;# 
   912  0012                     	;# 
   913  0013                     	;# 
   914  0014                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  008C                     	;# 
   925  008D                     	;# 
   926  008E                     	;# 
   927  0090                     	;# 
   928  0091                     	;# 
   929  0092                     	;# 
   930  0093                     	;# 
   931  0094                     	;# 
   932  0095                     	;# 
   933  0096                     	;# 
   934  0097                     	;# 
   935  0098                     	;# 
   936  0099                     	;# 
   937  009A                     	;# 
   938  009B                     	;# 
   939  009B                     	;# 
   940  009C                     	;# 
   941  009D                     	;# 
   942  009E                     	;# 
   943  009F                     	;# 
   944  010C                     	;# 
   945  010D                     	;# 
   946  010E                     	;# 
   947  0111                     	;# 
   948  0112                     	;# 
   949  0113                     	;# 
   950  0114                     	;# 
   951  0115                     	;# 
   952  0116                     	;# 
   953  0117                     	;# 
   954  0118                     	;# 
   955  0119                     	;# 
   956  011A                     	;# 
   957  011B                     	;# 
   958  011C                     	;# 
   959  011D                     	;# 
   960  011D                     	;# 
   961  011D                     	;# 
   962  011E                     	;# 
   963  011F                     	;# 
   964  018C                     	;# 
   965  018D                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0194                     	;# 
   973  0195                     	;# 
   974  0196                     	;# 
   975  0197                     	;# 
   976  0199                     	;# 
   977  0199                     	;# 
   978  0199                     	;# 
   979  019A                     	;# 
   980  019A                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019C                     	;# 
   988  019C                     	;# 
   989  019C                     	;# 
   990  019D                     	;# 
   991  019D                     	;# 
   992  019D                     	;# 
   993  019E                     	;# 
   994  019E                     	;# 
   995  019E                     	;# 
   996  019F                     	;# 
   997  019F                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  020C                     	;# 
  1002  020D                     	;# 
  1003  020E                     	;# 
  1004  0210                     	;# 
  1005  0211                     	;# 
  1006  0211                     	;# 
  1007  0212                     	;# 
  1008  0212                     	;# 
  1009  0213                     	;# 
  1010  0213                     	;# 
  1011  0214                     	;# 
  1012  0214                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0216                     	;# 
  1018  0216                     	;# 
  1019  0217                     	;# 
  1020  0217                     	;# 
  1021  028C                     	;# 
  1022  028D                     	;# 
  1023  028E                     	;# 
  1024  0291                     	;# 
  1025  0291                     	;# 
  1026  0292                     	;# 
  1027  0293                     	;# 
  1028  0298                     	;# 
  1029  0298                     	;# 
  1030  0299                     	;# 
  1031  029A                     	;# 
  1032  030C                     	;# 
  1033  030D                     	;# 
  1034  030E                     	;# 
  1035  0311                     	;# 
  1036  0311                     	;# 
  1037  0312                     	;# 
  1038  0313                     	;# 
  1039  038C                     	;# 
  1040  038D                     	;# 
  1041  038E                     	;# 
  1042  0390                     	;# 
  1043  0391                     	;# 
  1044  0392                     	;# 
  1045  0393                     	;# 
  1046  0394                     	;# 
  1047  0395                     	;# 
  1048  0396                     	;# 
  1049  0397                     	;# 
  1050  0398                     	;# 
  1051  0399                     	;# 
  1052  039D                     	;# 
  1053  039E                     	;# 
  1054  039F                     	;# 
  1055  0511                     	;# 
  1056  0513                     	;# 
  1057  051A                     	;# 
  1058  0811                     	;# 
  1059  0812                     	;# 
  1060  0813                     	;# 
  1061  0814                     	;# 
  1062  0815                     	;# 
  1063  0816                     	;# 
  1064  0817                     	;# 
  1065  0818                     	;# 
  1066  0819                     	;# 
  1067  081A                     	;# 
  1068  081B                     	;# 
  1069  081C                     	;# 
  1070  081D                     	;# 
  1071  081E                     	;# 
  1072  081F                     	;# 
  1073  0820                     	;# 
  1074  0821                     	;# 
  1075  0821                     	;# 
  1076  0822                     	;# 
  1077  0823                     	;# 
  1078  0823                     	;# 
  1079  0824                     	;# 
  1080  0825                     	;# 
  1081  0825                     	;# 
  1082  0826                     	;# 
  1083  0827                     	;# 
  1084  0827                     	;# 
  1085  0828                     	;# 
  1086  0829                     	;# 
  1087  082A                     	;# 
  1088  082B                     	;# 
  1089  082C                     	;# 
  1090  082D                     	;# 
  1091  082E                     	;# 
  1092  082F                     	;# 
  1093  0831                     	;# 
  1094  0832                     	;# 
  1095  0833                     	;# 
  1096  0834                     	;# 
  1097  0835                     	;# 
  1098  0836                     	;# 
  1099  0837                     	;# 
  1100  0838                     	;# 
  1101  0839                     	;# 
  1102  083A                     	;# 
  1103  083B                     	;# 
  1104  083C                     	;# 
  1105  083D                     	;# 
  1106  083E                     	;# 
  1107  083F                     	;# 
  1108  0840                     	;# 
  1109  0841                     	;# 
  1110  0841                     	;# 
  1111  0842                     	;# 
  1112  0843                     	;# 
  1113  0843                     	;# 
  1114  0844                     	;# 
  1115  0845                     	;# 
  1116  0845                     	;# 
  1117  0846                     	;# 
  1118  0847                     	;# 
  1119  0847                     	;# 
  1120  0848                     	;# 
  1121  0849                     	;# 
  1122  084A                     	;# 
  1123  084B                     	;# 
  1124  084C                     	;# 
  1125  084D                     	;# 
  1126  084E                     	;# 
  1127  084F                     	;# 
  1128  0851                     	;# 
  1129  0852                     	;# 
  1130  0853                     	;# 
  1131  0854                     	;# 
  1132  0855                     	;# 
  1133  0856                     	;# 
  1134  0857                     	;# 
  1135  0858                     	;# 
  1136  0859                     	;# 
  1137  085A                     	;# 
  1138  085B                     	;# 
  1139  085C                     	;# 
  1140  085D                     	;# 
  1141  085E                     	;# 
  1142  085F                     	;# 
  1143  0860                     	;# 
  1144  0861                     	;# 
  1145  0861                     	;# 
  1146  0862                     	;# 
  1147  0863                     	;# 
  1148  0863                     	;# 
  1149  0864                     	;# 
  1150  0865                     	;# 
  1151  0865                     	;# 
  1152  0866                     	;# 
  1153  0867                     	;# 
  1154  0867                     	;# 
  1155  0868                     	;# 
  1156  0869                     	;# 
  1157  086A                     	;# 
  1158  086B                     	;# 
  1159  086C                     	;# 
  1160  086D                     	;# 
  1161  086E                     	;# 
  1162  086F                     	;# 
  1163  0FE4                     	;# 
  1164  0FE5                     	;# 
  1165  0FE6                     	;# 
  1166  0FE7                     	;# 
  1167  0FE8                     	;# 
  1168  0FE9                     	;# 
  1169  0FEA                     	;# 
  1170  0FEB                     	;# 
  1171  0FED                     	;# 
  1172  0FEE                     	;# 
  1173  0FEF                     	;# 
  1174  0000                     	;# 
  1175  0001                     	;# 
  1176  0002                     	;# 
  1177  0003                     	;# 
  1178  0004                     	;# 
  1179  0005                     	;# 
  1180  0006                     	;# 
  1181  0007                     	;# 
  1182  0008                     	;# 
  1183  0009                     	;# 
  1184  000A                     	;# 
  1185  000B                     	;# 
  1186  000C                     	;# 
  1187  000D                     	;# 
  1188  000E                     	;# 
  1189  0010                     	;# 
  1190  0011                     	;# 
  1191  0012                     	;# 
  1192  0013                     	;# 
  1193  0014                     	;# 
  1194  0015                     	;# 
  1195  0016                     	;# 
  1196  0016                     	;# 
  1197  0017                     	;# 
  1198  0018                     	;# 
  1199  0019                     	;# 
  1200  001A                     	;# 
  1201  001B                     	;# 
  1202  001C                     	;# 
  1203  008C                     	;# 
  1204  008D                     	;# 
  1205  008E                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0092                     	;# 
  1209  0093                     	;# 
  1210  0094                     	;# 
  1211  0095                     	;# 
  1212  0096                     	;# 
  1213  0097                     	;# 
  1214  0098                     	;# 
  1215  0099                     	;# 
  1216  009A                     	;# 
  1217  009B                     	;# 
  1218  009B                     	;# 
  1219  009C                     	;# 
  1220  009D                     	;# 
  1221  009E                     	;# 
  1222  009F                     	;# 
  1223  010C                     	;# 
  1224  010D                     	;# 
  1225  010E                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0113                     	;# 
  1229  0114                     	;# 
  1230  0115                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  0118                     	;# 
  1234  0119                     	;# 
  1235  011A                     	;# 
  1236  011B                     	;# 
  1237  011C                     	;# 
  1238  011D                     	;# 
  1239  011D                     	;# 
  1240  011D                     	;# 
  1241  011E                     	;# 
  1242  011F                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  0191                     	;# 
  1246  0191                     	;# 
  1247  0192                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  020C                     	;# 
  1281  020D                     	;# 
  1282  020E                     	;# 
  1283  0210                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0214                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  028C                     	;# 
  1301  028D                     	;# 
  1302  028E                     	;# 
  1303  0291                     	;# 
  1304  0291                     	;# 
  1305  0292                     	;# 
  1306  0293                     	;# 
  1307  0298                     	;# 
  1308  0298                     	;# 
  1309  0299                     	;# 
  1310  029A                     	;# 
  1311  030C                     	;# 
  1312  030D                     	;# 
  1313  030E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  0393                     	;# 
  1325  0394                     	;# 
  1326  0395                     	;# 
  1327  0396                     	;# 
  1328  0397                     	;# 
  1329  0398                     	;# 
  1330  0399                     	;# 
  1331  039D                     	;# 
  1332  039E                     	;# 
  1333  039F                     	;# 
  1334  0511                     	;# 
  1335  0513                     	;# 
  1336  051A                     	;# 
  1337  0811                     	;# 
  1338  0812                     	;# 
  1339  0813                     	;# 
  1340  0814                     	;# 
  1341  0815                     	;# 
  1342  0816                     	;# 
  1343  0817                     	;# 
  1344  0818                     	;# 
  1345  0819                     	;# 
  1346  081A                     	;# 
  1347  081B                     	;# 
  1348  081C                     	;# 
  1349  081D                     	;# 
  1350  081E                     	;# 
  1351  081F                     	;# 
  1352  0820                     	;# 
  1353  0821                     	;# 
  1354  0821                     	;# 
  1355  0822                     	;# 
  1356  0823                     	;# 
  1357  0823                     	;# 
  1358  0824                     	;# 
  1359  0825                     	;# 
  1360  0825                     	;# 
  1361  0826                     	;# 
  1362  0827                     	;# 
  1363  0827                     	;# 
  1364  0828                     	;# 
  1365  0829                     	;# 
  1366  082A                     	;# 
  1367  082B                     	;# 
  1368  082C                     	;# 
  1369  082D                     	;# 
  1370  082E                     	;# 
  1371  082F                     	;# 
  1372  0831                     	;# 
  1373  0832                     	;# 
  1374  0833                     	;# 
  1375  0834                     	;# 
  1376  0835                     	;# 
  1377  0836                     	;# 
  1378  0837                     	;# 
  1379  0838                     	;# 
  1380  0839                     	;# 
  1381  083A                     	;# 
  1382  083B                     	;# 
  1383  083C                     	;# 
  1384  083D                     	;# 
  1385  083E                     	;# 
  1386  083F                     	;# 
  1387  0840                     	;# 
  1388  0841                     	;# 
  1389  0841                     	;# 
  1390  0842                     	;# 
  1391  0843                     	;# 
  1392  0843                     	;# 
  1393  0844                     	;# 
  1394  0845                     	;# 
  1395  0845                     	;# 
  1396  0846                     	;# 
  1397  0847                     	;# 
  1398  0847                     	;# 
  1399  0848                     	;# 
  1400  0849                     	;# 
  1401  084A                     	;# 
  1402  084B                     	;# 
  1403  084C                     	;# 
  1404  084D                     	;# 
  1405  084E                     	;# 
  1406  084F                     	;# 
  1407  0851                     	;# 
  1408  0852                     	;# 
  1409  0853                     	;# 
  1410  0854                     	;# 
  1411  0855                     	;# 
  1412  0856                     	;# 
  1413  0857                     	;# 
  1414  0858                     	;# 
  1415  0859                     	;# 
  1416  085A                     	;# 
  1417  085B                     	;# 
  1418  085C                     	;# 
  1419  085D                     	;# 
  1420  085E                     	;# 
  1421  085F                     	;# 
  1422  0860                     	;# 
  1423  0861                     	;# 
  1424  0861                     	;# 
  1425  0862                     	;# 
  1426  0863                     	;# 
  1427  0863                     	;# 
  1428  0864                     	;# 
  1429  0865                     	;# 
  1430  0865                     	;# 
  1431  0866                     	;# 
  1432  0867                     	;# 
  1433  0867                     	;# 
  1434  0868                     	;# 
  1435  0869                     	;# 
  1436  086A                     	;# 
  1437  086B                     	;# 
  1438  086C                     	;# 
  1439  086D                     	;# 
  1440  086E                     	;# 
  1441  086F                     	;# 
  1442  0FE4                     	;# 
  1443  0FE5                     	;# 
  1444  0FE6                     	;# 
  1445  0FE7                     	;# 
  1446  0FE8                     	;# 
  1447  0FE9                     	;# 
  1448  0FEA                     	;# 
  1449  0FEB                     	;# 
  1450  0FED                     	;# 
  1451  0FEE                     	;# 
  1452  0FEF                     	;# 
  1453                           
  1454                           	psect	stringtext1
  1455  02BA                     __pstringtext1:	
  1456  02BA                     _segmcode:	
  1457  02BA  343F               	retlw	63
  1458  02BB  3406               	retlw	6
  1459  02BC  345B               	retlw	91
  1460  02BD  344F               	retlw	79
  1461  02BE  3466               	retlw	102
  1462  02BF  346D               	retlw	109
  1463  02C0  347D               	retlw	125
  1464  02C1  3407               	retlw	7
  1465  02C2  347F               	retlw	127
  1466  02C3  346F               	retlw	111
  1467  02C4  3477               	retlw	119
  1468  02C5  347C               	retlw	124
  1469  02C6  3439               	retlw	57
  1470  02C7  345E               	retlw	94
  1471  02C8  3479               	retlw	121
  1472  02C9  3471               	retlw	113
  1473  02CA                     __end_of_segmcode:	
  1474  000E                     _PORTCbits	set	14
  1475  000D                     _PORTBbits	set	13
  1476  0015                     _TMR0	set	21
  1477  000B                     _INTCONbits	set	11
  1478  008E                     _TRISCbits	set	142
  1479  008E                     _TRISC	set	142
  1480  008D                     _TRISB	set	141
  1481  008C                     _TRISA	set	140
  1482  0095                     _OPTION_REGbits	set	149
  1483  0099                     _OSCCONbits	set	153
  1484  010E                     _LATC	set	270
  1485  010D                     _LATB	set	269
  1486  010C                     _LATA	set	268
  1487  020E                     _WPUCbits	set	526
  1488  020E                     _WPUC	set	526
  1489  020D                     _WPUB	set	525
  1490  020C                     _WPUA	set	524
  1491  0399                     _IOCCFbits	set	921
  1492  0397                     _IOCCPbits	set	919
  1493  0398                     _IOCCN	set	920
  1494  0397                     _IOCCP	set	919
  1495  0395                     _IOCBN	set	917
  1496  0394                     _IOCBP	set	916
  1497  0392                     _IOCAN	set	914
  1498  0391                     _IOCAP	set	913
  1499                           
  1500                           ; #config settings
  1501  0000                     
  1502                           	psect	cinit
  1503  0061                     start_initialization:	
  1504  0061                     __initialization:	
  1505                           
  1506                           ; Clear objects allocated to COMMON
  1507  0061  01FD               	clrf	__pbssCOMMON& (0+127)
  1508                           
  1509                           ; Clear objects allocated to BANK0
  1510  0062  3020               	movlw	low __pbssBANK0
  1511  0063  0084               	movwf	4
  1512  0064  3000               	movlw	high __pbssBANK0
  1513  0065  0085               	movwf	5
  1514  0066  3024               	movlw	36
  1515  0067  3182  22E2         	fcall	clear_ram0
  1516  0069                     end_of_initialization:	
  1517                           ;End of C runtime variable initialization code
  1518                           
  1519  0069                     __end_of__initialization:	
  1520  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1521  006A  0020               	movlb	0
  1522  006B  3182  2AE8         	ljmp	_main	;jump to C main() function
  1523                           
  1524                           	psect	bssCOMMON
  1525  007D                     __pbssCOMMON:	
  1526  007D                     _ENUM:	
  1527  007D                     	ds	1
  1528                           
  1529                           	psect	bssBANK0
  1530  0020                     __pbssBANK0:	
  1531  0020                     _g_data:	
  1532  0020                     	ds	33
  1533  0041                     ISR@key_time_cnt:	
  1534  0041                     	ds	2
  1535  0043                     ISR@history_key:	
  1536  0043                     	ds	1
  1537                           
  1538                           	psect	clrtext
  1539  02E2                     clear_ram0:	
  1540                           ;	Called with FSR0 containing the base address, and
  1541                           ;	WREG with the size to clear
  1542                           
  1543  02E2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1544  02E3                     clrloop0:	
  1545  02E3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1546  02E4  3101               	addfsr 0,1
  1547  02E5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1548  02E6  2AE3               	goto	clrloop0	;have we reached the end yet?
  1549  02E7  3400               	retlw	0	;all done for this memory range, return
  1550                           
  1551                           	psect	cstackCOMMON
  1552  0070                     __pcstackCOMMON:	
  1553  0070                     ?_update_time:	
  1554  0070                     ?_receive_decode:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_update_display:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_init_env:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_ISR:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_main:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_times2number:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_control595_delay:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??_control595_delay:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_write_byte:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?___lwmod:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     times2number@high_level_times:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0070                     ___lwmod@divisor:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590                           
  1591                           ; 2 bytes @ 0x0
  1592  0070                     	ds	1
  1593  0071                     control595_delay@times:	
  1594                           
  1595                           ; 1 bytes @ 0x1
  1596  0071                     	ds	1
  1597  0072                     ??_times2number:	
  1598  0072                     ??_write_byte:	
  1599                           ; 1 bytes @ 0x2
  1600                           
  1601  0072                     ___lwmod@dividend:	
  1602                           ; 1 bytes @ 0x2
  1603                           
  1604                           
  1605                           ; 2 bytes @ 0x2
  1606  0072                     	ds	2
  1607  0074                     ??___lwmod:	
  1608  0074                     write_byte@data:	
  1609                           ; 1 bytes @ 0x4
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0x4
  1613  0074                     	ds	1
  1614  0075                     write_byte@i:	
  1615  0075                     ___lwmod@counter:	
  1616                           ; 1 bytes @ 0x5
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0x5
  1620  0075                     	ds	1
  1621  0076                     ?_write_once:	
  1622  0076                     write_once@HR:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625                           
  1626                           ; 1 bytes @ 0x6
  1627  0076                     	ds	1
  1628  0077                     write_once@ML:	
  1629                           
  1630                           ; 1 bytes @ 0x7
  1631  0077                     	ds	1
  1632  0078                     write_once@MR:	
  1633                           
  1634                           ; 1 bytes @ 0x8
  1635  0078                     	ds	1
  1636  0079                     ??_write_once:	
  1637  0079                     write_once@HL:	
  1638                           ; 1 bytes @ 0x9
  1639                           
  1640                           
  1641                           ; 1 bytes @ 0x9
  1642  0079                     	ds	1
  1643  007A                     ??_update_display:	
  1644                           
  1645                           ; 1 bytes @ 0xA
  1646  007A                     	ds	2
  1647  007C                     ??_update_time:	
  1648                           
  1649                           ; 1 bytes @ 0xC
  1650  007C                     	ds	1
  1651                           
  1652                           	psect	cstackBANK0
  1653  0044                     __pcstackBANK0:	
  1654  0044                     ??_receive_decode:	
  1655                           
  1656                           ; 1 bytes @ 0x0
  1657  0044                     	ds	4
  1658  0048                     receive_decode@last_time_h:	
  1659                           
  1660                           ; 2 bytes @ 0x4
  1661  0048                     	ds	2
  1662  004A                     receive_decode@last_time_m:	
  1663                           
  1664                           ; 2 bytes @ 0x6
  1665  004A                     	ds	2
  1666  004C                     receive_decode@i:	
  1667                           
  1668                           ; 2 bytes @ 0x8
  1669  004C                     	ds	2
  1670  004E                     receive_decode@read_value:	
  1671                           
  1672                           ; 1 bytes @ 0xA
  1673  004E                     	ds	1
  1674  004F                     ??_ISR:	
  1675                           
  1676                           ; 1 bytes @ 0xB
  1677  004F                     	ds	2
  1678  0051                     ??_init_env:	
  1679                           
  1680                           ; 1 bytes @ 0xD
  1681  0051                     	ds	1
  1682  0052                     init_env@i:	
  1683                           
  1684                           ; 2 bytes @ 0xE
  1685  0052                     	ds	2
  1686  0054                     ??_main:	
  1687                           
  1688                           	psect	maintext
  1689  02E8                     __pmaintext:	
  1690                           ; 1 bytes @ 0x10
  1691 ;;
  1692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1693 ;;
  1694 ;; *************** function _main *****************
  1695 ;; Defined at:
  1696 ;;		line 205 in file "main.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : B1F/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels required when called:    7
  1716 ;; This function calls:
  1717 ;;		_init_env
  1718 ;; This function is called by:
  1719 ;;		Startup code after reset
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _main
  1725  02E8                     _main:	
  1726                           
  1727                           ;main.c: 207:     init_env();
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1731  02E8  3181  215F  3182   	fcall	_init_env
  1732  02EB                     l86:	
  1733                           ;main.c: 209:     while(1);
  1734                           
  1735  02EB  2AEB               	goto	l86
  1736  02EC                     __end_of_main:	
  1737                           ;main.c: 210:     return;
  1738                           
  1739                           
  1740                           	psect	text1
  1741  015F                     __ptext1:	
  1742 ;; *************** function _init_env *****************
  1743 ;; Defined at:
  1744 ;;		line 37 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  i               2   14[BANK0 ] int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;Total ram usage:        3 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    6
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _init_env
  1774  015F                     _init_env:	
  1775                           
  1776                           ;main.c: 42:     TRISA = 0;
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0]
  1780  015F  178B               	bsf	11,7	;volatile
  1781                           
  1782                           ;main.c: 44:     WPUA = 0;
  1783  0160  158B               	bsf	11,3	;volatile
  1784                           
  1785                           ;main.c: 48:     TRISB = 0;
  1786  0161  168B               	bsf	11,5	;volatile
  1787                           
  1788                           ;main.c: 54:     TRISC = 0;
  1789  0162  0021               	movlb	1	; select bank1
  1790  0163  0819               	movf	25,w	;volatile
  1791  0164  39FC               	andlw	-4
  1792  0165  3802               	iorlw	2
  1793  0166  0099               	movwf	25	;volatile
  1794                           
  1795                           ;main.c: 55:     LATC = 0;
  1796  0167  0819               	movf	25,w	;volatile
  1797  0168  3987               	andlw	-121
  1798  0169  3850               	iorlw	80
  1799  016A  0099               	movwf	25	;volatile
  1800                           
  1801                           ;main.c: 63:     TRISCbits.TRISC5 = 1;
  1802  016B  1195               	bcf	21,3	;volatile
  1803                           
  1804                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  1805  016C  1295               	bcf	21,5	;volatile
  1806                           
  1807                           ;main.c: 65: 
  1808  016D  0815               	movf	21,w	;volatile
  1809  016E  39F8               	andlw	-8
  1810  016F  3804               	iorlw	4
  1811  0170  0095               	movwf	21	;volatile
  1812                           
  1813                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  1814  0171  30E7               	movlw	231
  1815  0172  0020               	movlb	0	; select bank0
  1816  0173  0095               	movwf	21	;volatile
  1817                           
  1818                           ;main.c: 74:     g_data.g_time_m = 0;
  1819  0174  0021               	movlb	1	; select bank1
  1820  0175  1395               	bcf	21,7	;volatile
  1821                           
  1822                           ;main.c: 76:     g_data.g_time_10ms = 0;
  1823  0176  018C               	clrf	12	;volatile
  1824                           
  1825                           ;main.c: 77: 
  1826  0177  0022               	movlb	2	; select bank2
  1827  0178  018C               	clrf	12	;volatile
  1828                           
  1829                           ;main.c: 78: 
  1830  0179  0024               	movlb	4	; select bank4
  1831  017A  018C               	clrf	12	;volatile
  1832                           
  1833                           ;main.c: 79:     g_data.g_flg_switch = FALSE;
  1834  017B  0027               	movlb	7	; select bank7
  1835  017C  0191               	clrf	17	;volatile
  1836                           
  1837                           ;main.c: 80:     g_data.g_start_read_data = FALSE;
  1838  017D  0192               	clrf	18	;volatile
  1839                           
  1840                           ;main.c: 82: 
  1841  017E  0021               	movlb	1	; select bank1
  1842  017F  018D               	clrf	13	;volatile
  1843                           
  1844                           ;main.c: 83: 
  1845  0180  0022               	movlb	2	; select bank2
  1846  0181  018D               	clrf	13	;volatile
  1847                           
  1848                           ;main.c: 84:     g_data.g_high_level_times = 0;
  1849  0182  0024               	movlb	4	; select bank4
  1850  0183  018D               	clrf	13	;volatile
  1851                           
  1852                           ;main.c: 85:     g_data.g_all_level_times = 0;
  1853  0184  0027               	movlb	7	; select bank7
  1854  0185  0194               	clrf	20	;volatile
  1855                           
  1856                           ;main.c: 86:     g_data.g_recv_count = 0;
  1857  0186  0195               	clrf	21	;volatile
  1858                           
  1859                           ;main.c: 88:         g_data.g_recv_buf[i] = 5;
  1860  0187  0021               	movlb	1	; select bank1
  1861  0188  018E               	clrf	14	;volatile
  1862                           
  1863                           ;main.c: 89:     }
  1864  0189  0022               	movlb	2	; select bank2
  1865  018A  018E               	clrf	14	;volatile
  1866                           
  1867                           ;main.c: 90: 
  1868  018B  0024               	movlb	4	; select bank4
  1869  018C  018E               	clrf	14	;volatile
  1870                           
  1871                           ;main.c: 91: 
  1872  018D  0027               	movlb	7	; select bank7
  1873  018E  0197               	clrf	23	;volatile
  1874                           
  1875                           ;main.c: 92: 
  1876  018F  0198               	clrf	24	;volatile
  1877                           
  1878                           ;main.c: 97:     PORTCbits.RC2 = BPC_PWR_ON;
  1879  0190  0021               	movlb	1	; select bank1
  1880  0191  168E               	bsf	14,5	;volatile
  1881                           
  1882                           ;main.c: 98: 
  1883  0192  0024               	movlb	4	; select bank4
  1884  0193  168E               	bsf	14,5	;volatile
  1885                           
  1886                           ;main.c: 100:     TRISCbits.TRISC0 = 1;
  1887  0194  0021               	movlb	1	; select bank1
  1888  0195  148E               	bsf	14,1	;volatile
  1889                           
  1890                           ;main.c: 101:     WPUCbits.WPUC0 = 1;
  1891  0196  0024               	movlb	4	; select bank4
  1892  0197  148E               	bsf	14,1	;volatile
  1893  0198  0027               	movlb	7	; select bank7
  1894  0199  1497               	bsf	23,1	;volatile
  1895  019A  0020               	movlb	0	; select bank0
  1896  019B  01A3               	clrf	_g_data+3	;volatile
  1897  019C  01A4               	clrf	_g_data+4	;volatile
  1898  019D  01A5               	clrf	_g_data+5	;volatile
  1899  019E  01A6               	clrf	_g_data+6	;volatile
  1900  019F  01A0               	clrf	_g_data	;volatile
  1901  01A0  01A1               	clrf	_g_data+1	;volatile
  1902  01A1  01A2               	clrf	_g_data+2	;volatile
  1903  01A2  01A7               	clrf	_g_data+7	;volatile
  1904  01A3  01A8               	clrf	_g_data+8	;volatile
  1905  01A4  01A9               	clrf	_g_data+9	;volatile
  1906  01A5  01AA               	clrf	_g_data+10	;volatile
  1907  01A6  01AB               	clrf	_g_data+11	;volatile
  1908  01A7  01AC               	clrf	_g_data+12	;volatile
  1909  01A8  01D2               	clrf	init_env@i
  1910  01A9  01D3               	clrf	init_env@i+1
  1911  01AA  0853               	movf	init_env@i+1,w
  1912  01AB  3A80               	xorlw	128
  1913  01AC  00D1               	movwf	??_init_env
  1914  01AD  3080               	movlw	128
  1915  01AE  0251               	subwf	??_init_env,w
  1916  01AF  1D03               	skipz
  1917  01B0  29B3               	goto	u645
  1918  01B1  3014               	movlw	20
  1919  01B2  0252               	subwf	init_env@i,w
  1920  01B3                     u645:	
  1921  01B3  1803               	btfsc	3,0
  1922  01B4  29CD               	goto	l62
  1923  01B5                     l1189:	
  1924  01B5  3005               	movlw	5
  1925  01B6  0020               	movlb	0	; select bank0
  1926  01B7  00D1               	movwf	??_init_env
  1927  01B8  0852               	movf	init_env@i,w
  1928  01B9  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  1929  01BA  0086               	movwf	6
  1930  01BB  0187               	clrf	7
  1931  01BC  0851               	movf	??_init_env,w
  1932  01BD  0081               	movwf	1
  1933  01BE  3001               	movlw	1
  1934  01BF  07D2               	addwf	init_env@i,f
  1935  01C0  3000               	movlw	0
  1936  01C1  3DD3               	addwfc	init_env@i+1,f
  1937  01C2  0853               	movf	init_env@i+1,w
  1938  01C3  3A80               	xorlw	128
  1939  01C4  00D1               	movwf	??_init_env
  1940  01C5  3080               	movlw	128
  1941  01C6  0251               	subwf	??_init_env,w
  1942  01C7  1D03               	skipz
  1943  01C8  29CB               	goto	u655
  1944  01C9  3014               	movlw	20
  1945  01CA  0252               	subwf	init_env@i,w
  1946  01CB                     u655:	
  1947  01CB  1C03               	skipc
  1948  01CC  29B5               	goto	l1189
  1949  01CD                     l62:	
  1950  01CD  0020               	movlb	0	; select bank0
  1951  01CE  158D               	bsf	13,3	;volatile
  1952  01CF  110E               	bcf	14,2	;volatile
  1953  01D0  0021               	movlb	1	; select bank1
  1954  01D1  140E               	bsf	14,0	;volatile
  1955  01D2  0024               	movlb	4	; select bank4
  1956  01D3  140E               	bsf	14,0	;volatile
  1957  01D4  0008               	return
  1958  01D5                     __end_of_init_env:	
  1959                           
  1960                           	psect	intentry
  1961  0004                     __pintentry:	
  1962 ;; *************** function _ISR *****************
  1963 ;; Defined at:
  1964 ;;		line 156 in file "main.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    5
  1985 ;; This function calls:
  1986 ;;		___lwmod
  1987 ;;		_receive_decode
  1988 ;;		_update_time
  1989 ;; This function is called by:
  1990 ;;		Interrupt level 1
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994  0004                     _ISR:	
  1995                           
  1996                           ;incstack = 0
  1997  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1998                           
  1999                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2000  0005  3180               	pagesel	$
  2001                           
  2002                           ;main.c: 157:     static u8 history_key = 0;;main.c: 158:     static u16 key_time_cnt = 
      +                          0;;main.c: 162:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && 
      +                          g_data.g_flg_switch == TRUE){
  2003  0006  0027               	movlb	7	; select bank7
  2004  0007  1C99               	btfss	25,1	;volatile
  2005  0008  281A               	goto	i1l72
  2006  0009  0020               	movlb	0	; select bank0
  2007  000A  0821               	movf	_g_data+1,w	;volatile
  2008  000B  1D03               	btfss	3,2
  2009  000C  281A               	goto	i1l72
  2010  000D  0320               	decf	_g_data,w	;volatile
  2011  000E  1D03               	btfss	3,2
  2012  000F  281A               	goto	i1l72
  2013                           
  2014                           ;main.c: 164: ;main.c: 167:         g_data.g_start_read_data = TRUE;
  2015  0010  3001               	movlw	1
  2016  0011  00CF               	movwf	??_ISR
  2017  0012  084F               	movf	??_ISR,w
  2018  0013  00A1               	movwf	_g_data+1	;volatile
  2019                           
  2020                           ;main.c: 168:         g_data.g_flg_switch = FALSE;
  2021  0014  01A0               	clrf	_g_data	;volatile
  2022                           
  2023                           ;main.c: 169:         PORTCbits.RC2 = BPC_PWR_ON;
  2024  0015  110E               	bcf	14,2	;volatile
  2025                           
  2026                           ;main.c: 171:         INTCONbits.IOCIF = FALSE;
  2027  0016  100B               	bcf	11,0	;volatile
  2028                           
  2029                           ;main.c: 172:         IOCCFbits.IOCCF1 = FALSE;
  2030  0017  0027               	movlb	7	; select bank7
  2031  0018  1099               	bcf	25,1	;volatile
  2032                           
  2033                           ;main.c: 173:         return;
  2034  0019  285D               	goto	i1l73
  2035  001A                     i1l72:	
  2036                           ;main.c: 174:     }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1){
  2037                           
  2038  001A  180B               	btfsc	11,0	;volatile
  2039  001B  281F               	goto	i1l77
  2040  001C  0027               	movlb	7	; select bank7
  2041  001D  1C99               	btfss	25,1	;volatile
  2042  001E  2822               	goto	i1l74
  2043  001F                     i1l77:	
  2044                           
  2045                           ;main.c: 175:         INTCONbits.IOCIF = FALSE;
  2046  001F  100B               	bcf	11,0	;volatile
  2047                           
  2048                           ;main.c: 176:         IOCCFbits.IOCCF1 = FALSE;
  2049  0020  0027               	movlb	7	; select bank7
  2050  0021  1099               	bcf	25,1	;volatile
  2051  0022                     i1l74:	
  2052                           ;main.c: 177:     }
  2053                           
  2054                           
  2055                           ;main.c: 180:     if(INTCONbits.TMR0IF){
  2056  0022  1D0B               	btfss	11,2	;volatile
  2057  0023  285D               	goto	i1l73
  2058                           
  2059                           ;main.c: 181:         update_time();
  2060  0024  3182  2220  3180   	fcall	_update_time
  2061                           
  2062                           ;main.c: 183:         if(g_data.g_start_read_data == TRUE ){
  2063  0027  0020               	movlb	0	; select bank0
  2064  0028  0321               	decf	_g_data+1,w	;volatile
  2065  0029  1D03               	btfss	3,2
  2066  002A  282E               	goto	i1l1343
  2067                           
  2068                           ;main.c: 184:             receive_decode();
  2069  002B  3180  206D  3180   	fcall	_receive_decode
  2070  002E                     i1l1343:	
  2071                           ;main.c: 185:         }
  2072                           
  2073                           
  2074                           ;main.c: 188:         if(key_time_cnt++ % 10 == 0)
  2075  002E  300A               	movlw	10
  2076  002F  00F0               	movwf	___lwmod@divisor
  2077  0030  3000               	movlw	0
  2078  0031  00F1               	movwf	___lwmod@divisor+1
  2079  0032  0020               	movlb	0	; select bank0
  2080  0033  0842               	movf	ISR@key_time_cnt+1,w
  2081  0034  00D0               	movwf	??_ISR+1
  2082  0035  0841               	movf	ISR@key_time_cnt,w
  2083  0036  00CF               	movwf	??_ISR
  2084  0037  0AC1               	incf	ISR@key_time_cnt,f
  2085  0038  1903               	skipnz
  2086  0039  0AC2               	incf	ISR@key_time_cnt+1,f
  2087  003A  084F               	movf	??_ISR,w
  2088  003B  00F2               	movwf	___lwmod@dividend
  2089  003C  0850               	movf	??_ISR+1,w
  2090  003D  00F3               	movwf	___lwmod@dividend+1
  2091  003E  3182  224F  3180   	fcall	___lwmod
  2092  0041  0870               	movf	?___lwmod,w
  2093  0042  0471               	iorwf	?___lwmod+1,w
  2094  0043  1D03               	btfss	3,2
  2095  0044  2859               	goto	i1l1353
  2096                           
  2097                           ;main.c: 189:         {;main.c: 190:             history_key <<= 1;
  2098  0045  1003               	clrc
  2099  0046  0020               	movlb	0	; select bank0
  2100  0047  0DC3               	rlf	ISR@history_key,f
  2101                           
  2102                           ;main.c: 191:             history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  2103  0048  0E0E               	swapf	14,w	;volatile
  2104  0049  0C89               	rrf	9,f
  2105  004A  3901               	andlw	1
  2106  004B  00CF               	movwf	??_ISR
  2107  004C  084F               	movf	??_ISR,w
  2108  004D  04C3               	iorwf	ISR@history_key,f
  2109                           
  2110                           ;main.c: 192:             if((0x03) == (history_key & (0x0f)) )
  2111  004E  300F               	movlw	15
  2112  004F  0543               	andwf	ISR@history_key,w
  2113  0050  00CF               	movwf	??_ISR
  2114  0051  3003               	movlw	3
  2115  0052  064F               	xorwf	??_ISR,w
  2116  0053  1D03               	btfss	3,2
  2117  0054  2859               	goto	i1l1353
  2118                           
  2119                           ;main.c: 193:             {;main.c: 194:                 g_data.g_flg_switch = TRUE;
  2120  0055  3001               	movlw	1
  2121  0056  00CF               	movwf	??_ISR
  2122  0057  084F               	movf	??_ISR,w
  2123  0058  00A0               	movwf	_g_data	;volatile
  2124  0059                     i1l1353:	
  2125                           ;main.c: 196:         }
  2126                           
  2127                           ;main.c: 195:             }
  2128                           
  2129                           
  2130                           ;main.c: 198:         INTCONbits.TMR0IF = 0;
  2131  0059  110B               	bcf	11,2	;volatile
  2132                           
  2133                           ;main.c: 199:         TMR0 = (217 + 14);
  2134  005A  30E7               	movlw	231
  2135  005B  0020               	movlb	0	; select bank0
  2136  005C  0095               	movwf	21	;volatile
  2137  005D                     i1l73:	
  2138                           ;main.c: 202:     return;
  2139                           
  2140                           ;main.c: 201:     }
  2141                           
  2142                           ;main.c: 200:         return;
  2143                           
  2144  005D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2145  005E  0009               	retfie
  2146  005F                     __end_of_ISR:	
  2147                           
  2148                           	psect	text3
  2149  0220                     __ptext3:	
  2150 ;; *************** function _update_time *****************
  2151 ;; Defined at:
  2152 ;;		line 14 in file "update_time.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;Total ram usage:        1 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    4
  2173 ;; This function calls:
  2174 ;;		_update_display
  2175 ;; This function is called by:
  2176 ;;		_ISR
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _update_time
  2182  0220                     _update_time:	
  2183                           
  2184                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2188  0220  3001               	movlw	1
  2189  0221  00FC               	movwf	??_update_time
  2190  0222  087C               	movf	??_update_time,w
  2191  0223  0020               	banksel	_g_data
  2192  0224  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  2193                           
  2194                           ;update_time.c: 16:     if(g_data.g_time_10ms == 100){
  2195  0225  3064               	movlw	100
  2196  0226  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2197  0227  1D03               	btfss	3,2
  2198  0228  0008               	return
  2199                           
  2200                           ;update_time.c: 18:         g_data.g_time_10ms = 0;
  2201  0229  3000               	movlw	0
  2202  022A  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  2203                           
  2204                           ;update_time.c: 19:         g_data.g_time_s++;
  2205  022B  3001               	movlw	1
  2206  022C  00FC               	movwf	??_update_time
  2207  022D  087C               	movf	??_update_time,w
  2208  022E  0020               	banksel	_g_data
  2209  022F  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  2210                           
  2211                           ;update_time.c: 21:         if(g_data.g_time_s == 60){
  2212  0230  303C               	movlw	60
  2213  0231  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  2214  0232  1D03               	btfss	3,2
  2215  0233  0008               	return
  2216                           
  2217                           ;update_time.c: 22:             g_data.g_time_m++;
  2218  0234  3001               	movlw	1
  2219  0235  00FC               	movwf	??_update_time
  2220  0236  087C               	movf	??_update_time,w
  2221  0237  0020               	banksel	_g_data
  2222  0238  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  2223                           
  2224                           ;update_time.c: 23:             g_data.g_time_s = 0;
  2225  0239  3000               	movlw	0
  2226  023A  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  2227                           
  2228                           ;update_time.c: 25:             if(g_data.g_time_m == 60){
  2229  023B  303C               	movlw	60
  2230  023C  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  2231  023D  1D03               	btfss	3,2
  2232  023E  2A4C               	goto	i1l1211
  2233                           
  2234                           ;update_time.c: 26:                 g_data.g_time_h++;
  2235  023F  3001               	movlw	1
  2236  0240  00FC               	movwf	??_update_time
  2237  0241  087C               	movf	??_update_time,w
  2238  0242  0020               	banksel	_g_data
  2239  0243  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  2240                           
  2241                           ;update_time.c: 27:                 g_data.g_time_m = 0;
  2242  0244  3000               	movlw	0
  2243  0245  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2244                           
  2245                           ;update_time.c: 29:                 if(g_data.g_time_h == 24){
  2246  0246  3018               	movlw	24
  2247  0247  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  2248  0248  1D03               	btfss	3,2
  2249  0249  2A4C               	goto	i1l1211
  2250                           
  2251                           ;update_time.c: 30:                     g_data.g_time_h = 0;
  2252  024A  3000               	movlw	0
  2253  024B  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2254  024C                     i1l1211:	
  2255                           ;update_time.c: 32:             }
  2256                           
  2257                           ;update_time.c: 31:                 }
  2258                           
  2259                           
  2260                           ;update_time.c: 34:             update_display();
  2261  024C  3182  22CA         	fcall	_update_display
  2262                           
  2263                           ;update_time.c: 37:     }
  2264                           
  2265                           ;update_time.c: 35:         }
  2266  024E  0008               	return
  2267  024F                     __end_of_update_time:	
  2268                           ;update_time.c: 38:     return;
  2269                           
  2270                           
  2271                           	psect	text4
  2272  006D                     __ptext4:	
  2273 ;; *************** function _receive_decode *****************
  2274 ;; Defined at:
  2275 ;;		line 36 in file "receive_decode.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  i               2    8[BANK0 ] int 
  2280 ;;  last_time_m     2    6[BANK0 ] unsigned short 
  2281 ;;  last_time_h     2    4[BANK0 ] unsigned short 
  2282 ;;  read_value      1   10[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;Total ram usage:       11 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    4
  2299 ;; This function calls:
  2300 ;;		_times2number
  2301 ;;		_update_display
  2302 ;; This function is called by:
  2303 ;;		_ISR
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _receive_decode
  2309  006D                     _receive_decode:	
  2310                           
  2311                           ;receive_decode.c: 38:     if(PORTCbits.RC1 == PIN_HIGH){
  2312                           
  2313                           ;incstack = 0
  2314                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2315  006D  0020               	movlb	0	; select bank0
  2316  006E  1C8E               	btfss	14,1	;volatile
  2317  006F  2875               	goto	i1l113
  2318                           
  2319                           ;receive_decode.c: 39:         g_data.g_high_level_times++;
  2320  0070  3001               	movlw	1
  2321  0071  0020               	banksel	_g_data
  2322  0072  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  2323  0073  3000               	movlw	0
  2324  0074  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  2325  0075                     i1l113:	
  2326                           ;receive_decode.c: 40:     }
  2327                           
  2328                           
  2329                           ;receive_decode.c: 42:     g_data.g_all_level_times++;
  2330  0075  3001               	movlw	1
  2331  0076  0020               	banksel	_g_data
  2332  0077  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  2333  0078  3000               	movlw	0
  2334  0079  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  2335                           
  2336                           ;receive_decode.c: 45:     if(g_data.g_all_level_times < 100){
  2337  007A  3000               	movlw	0
  2338  007B  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  2339  007C  3064               	movlw	100
  2340  007D  1903               	skipnz
  2341  007E  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  2342  007F  1C03               	btfss	3,0
  2343  0080  0008               	return
  2344                           
  2345                           ;receive_decode.c: 49:     u8 read_value = times2number(g_data.g_high_level_times);
  2346                           
  2347                           ;receive_decode.c: 47:     }
  2348                           
  2349                           ;receive_decode.c: 46:         return;
  2350  0081  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  2351  0082  00F1               	movwf	times2number@high_level_times+1
  2352  0083  0020               	banksel	_g_data
  2353  0084  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  2354  0085  00F0               	movwf	times2number@high_level_times
  2355  0086  3181  21D5  3180   	fcall	_times2number
  2356  0089  0020               	movlb	0	; select bank0
  2357  008A  00C4               	movwf	??_receive_decode
  2358  008B  0844               	movf	??_receive_decode,w
  2359  008C  00CE               	movwf	receive_decode@read_value
  2360                           
  2361                           ;receive_decode.c: 50:     g_data.g_all_level_times = 0;
  2362  008D  0020               	banksel	_g_data
  2363  008E  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  2364  008F  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  2365                           
  2366                           ;receive_decode.c: 51:     g_data.g_high_level_times = 0;
  2367  0090  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  2368  0091  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  2369                           
  2370                           ;receive_decode.c: 53:     if(read_value == 5){
  2371  0092  3005               	movlw	5
  2372  0093  0020               	movlb	0	; select bank0
  2373  0094  064E               	xorwf	receive_decode@read_value,w
  2374  0095  1D03               	btfss	3,2
  2375  0096  289D               	goto	i1l1237
  2376                           
  2377                           ;receive_decode.c: 55:         g_data.g_find_recv_start = TRUE;
  2378  0097  3001               	movlw	1
  2379  0098  0020               	banksel	_g_data
  2380  0099  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  2381                           
  2382                           ;receive_decode.c: 56:         g_data.g_recv_count = 0;
  2383  009A  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  2384  009B  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  2385                           
  2386                           ;receive_decode.c: 57:         return;
  2387  009C  0008               	return
  2388  009D                     i1l1237:	
  2389                           ;receive_decode.c: 58:     }else if(read_value == 4){
  2390                           
  2391  009D  3004               	movlw	4
  2392  009E  0020               	movlb	0	; select bank0
  2393  009F  064E               	xorwf	receive_decode@read_value,w
  2394  00A0  1903               	btfsc	3,2
  2395  00A1  0008               	return
  2396                           
  2397                           ;receive_decode.c: 62:     if(g_data.g_find_recv_start == FALSE || read_value == 5){
  2398                           
  2399                           ;receive_decode.c: 60:     }
  2400                           
  2401                           ;receive_decode.c: 59:         return;
  2402  00A2  0020               	banksel	_g_data
  2403  00A3  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  2404  00A4  1903               	btfsc	3,2
  2405  00A5  0008               	return
  2406  00A6  3005               	movlw	5
  2407  00A7  0020               	movlb	0	; select bank0
  2408  00A8  064E               	xorwf	receive_decode@read_value,w
  2409  00A9  1903               	btfsc	3,2
  2410  00AA  0008               	return
  2411                           
  2412                           ;receive_decode.c: 66:     g_data.g_recv_buf[g_data.g_recv_count] = read_value;
  2413                           
  2414                           ;receive_decode.c: 64:     }
  2415                           
  2416                           ;receive_decode.c: 63:         return;
  2417  00AB  3020               	movlw	low _g_data
  2418  00AC  0086               	movwf	6
  2419  00AD  3000               	movlw	high _g_data
  2420  00AE  0087               	movwf	7
  2421  00AF  314B               	addfsr 1,11
  2422  00B0  302D               	movlw	low (_g_data+13)
  2423  00B1  00C4               	movwf	??_receive_decode
  2424  00B2  3000               	movlw	high (_g_data+13)
  2425  00B3  00C5               	movwf	??_receive_decode+1
  2426  00B4  3F40               	moviw [0]fsr1
  2427  00B5  0744               	addwf	??_receive_decode,w
  2428  00B6  00C6               	movwf	??_receive_decode+2
  2429  00B7  3F41               	moviw [1]fsr1
  2430  00B8  3D45               	addwfc	??_receive_decode+1,w
  2431  00B9  00C7               	movwf	??_receive_decode+3
  2432  00BA  0846               	movf	??_receive_decode+2,w
  2433  00BB  0086               	movwf	6
  2434  00BC  0847               	movf	??_receive_decode+3,w
  2435  00BD  0087               	movwf	7
  2436  00BE  084E               	movf	receive_decode@read_value,w
  2437  00BF  0081               	movwf	1
  2438                           
  2439                           ;receive_decode.c: 67:     g_data.g_recv_count++;
  2440  00C0  3001               	movlw	1
  2441  00C1  0020               	banksel	_g_data
  2442  00C2  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  2443  00C3  3000               	movlw	0
  2444  00C4  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  2445                           
  2446                           ;receive_decode.c: 68:     if(g_data.g_recv_count < 6){
  2447  00C5  3000               	movlw	0
  2448  00C6  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  2449  00C7  3006               	movlw	6
  2450  00C8  1903               	skipnz
  2451  00C9  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  2452  00CA  1C03               	btfss	3,0
  2453  00CB  0008               	return
  2454                           
  2455                           ;receive_decode.c: 72:     if(g_data.g_recv_buf[0] != 0 && g_data.g_recv_buf[1] != 0){
  2456                           
  2457                           ;receive_decode.c: 70:     }
  2458                           
  2459                           ;receive_decode.c: 69:         return;
  2460  00CC  082D               	movf	(_g_data& (0+127)+13),w	;volatile
  2461  00CD  1903               	btfsc	3,2
  2462  00CE  28D9               	goto	i1l1263
  2463  00CF  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  2464  00D0  1903               	btfsc	3,2
  2465  00D1  28D9               	goto	i1l1263
  2466                           
  2467                           ;receive_decode.c: 73:         g_data.g_find_recv_start = FALSE;
  2468  00D2  3000               	movlw	0
  2469  00D3  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  2470                           
  2471                           ;receive_decode.c: 74:         g_data.g_start_read_data = 0;
  2472  00D4  3000               	movlw	0
  2473  00D5  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  2474                           
  2475                           ;receive_decode.c: 75:         g_data.g_recv_count = 0;
  2476  00D6  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  2477  00D7  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  2478                           
  2479                           ;receive_decode.c: 76:         return;
  2480  00D8  0008               	return
  2481  00D9                     i1l1263:	
  2482                           ;receive_decode.c: 77:     }
  2483                           
  2484                           
  2485                           ;receive_decode.c: 79:     u16 last_time_h = g_data.g_time_h;
  2486  00D9  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  2487  00DA  0020               	movlb	0	; select bank0
  2488  00DB  00C4               	movwf	??_receive_decode
  2489  00DC  01C5               	clrf	??_receive_decode+1
  2490  00DD  0844               	movf	??_receive_decode,w
  2491  00DE  00C8               	movwf	receive_decode@last_time_h
  2492  00DF  0845               	movf	??_receive_decode+1,w
  2493  00E0  00C9               	movwf	receive_decode@last_time_h+1
  2494                           
  2495                           ;receive_decode.c: 80:     u16 last_time_m = g_data.g_time_m;
  2496  00E1  0020               	banksel	_g_data
  2497  00E2  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  2498  00E3  0020               	movlb	0	; select bank0
  2499  00E4  00C4               	movwf	??_receive_decode
  2500  00E5  01C5               	clrf	??_receive_decode+1
  2501  00E6  0844               	movf	??_receive_decode,w
  2502  00E7  00CA               	movwf	receive_decode@last_time_m
  2503  00E8  0845               	movf	??_receive_decode+1,w
  2504  00E9  00CB               	movwf	receive_decode@last_time_m+1
  2505                           
  2506                           ;receive_decode.c: 81:     g_data.g_time_h = g_data.g_recv_buf[2] * 4 + g_data.g_recv_bu
      +                          f[3];
  2507  00EA  0020               	banksel	_g_data
  2508  00EB  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  2509  00EC  0020               	movlb	0	; select bank0
  2510  00ED  00C4               	movwf	??_receive_decode
  2511  00EE  3002               	movlw	2
  2512  00EF                     u79_25:	
  2513  00EF  35C4               	lslf	??_receive_decode,f
  2514  00F0  0B89               	decfsz	9,f
  2515  00F1  28EF               	goto	u79_25
  2516  00F2  0020               	banksel	_g_data
  2517  00F3  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  2518  00F4  0020               	movlb	0	; select bank0
  2519  00F5  0744               	addwf	??_receive_decode,w
  2520  00F6  00C5               	movwf	??_receive_decode+1
  2521  00F7  0845               	movf	??_receive_decode+1,w
  2522  00F8  0020               	banksel	_g_data
  2523  00F9  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2524                           
  2525                           ;receive_decode.c: 82:     g_data.g_time_m = g_data.g_recv_buf[4] * 16 + g_data.g_recv_b
      +                          uf[5] * 4 + g_data.g_recv_buf[6];
  2526  00FA  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  2527  00FB  0020               	movlb	0	; select bank0
  2528  00FC  00C4               	movwf	??_receive_decode
  2529  00FD  3004               	movlw	4
  2530  00FE                     u80_25:	
  2531  00FE  35C4               	lslf	??_receive_decode,f
  2532  00FF  0B89               	decfsz	9,f
  2533  0100  28FE               	goto	u80_25
  2534  0101  0020               	banksel	_g_data
  2535  0102  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  2536  0103  0020               	movlb	0	; select bank0
  2537  0104  00C5               	movwf	??_receive_decode+1
  2538  0105  3001               	movlw	1
  2539  0106                     u81_25:	
  2540  0106  35C5               	lslf	??_receive_decode+1,f
  2541  0107  3EFF               	addlw	-1
  2542  0108  1D03               	skipz
  2543  0109  2906               	goto	u81_25
  2544  010A  3545               	lslf	??_receive_decode+1,w
  2545  010B  0744               	addwf	??_receive_decode,w
  2546  010C  00C6               	movwf	??_receive_decode+2
  2547  010D  0020               	banksel	_g_data
  2548  010E  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  2549  010F  0020               	movlb	0	; select bank0
  2550  0110  0746               	addwf	??_receive_decode+2,w
  2551  0111  00C7               	movwf	??_receive_decode+3
  2552  0112  0847               	movf	??_receive_decode+3,w
  2553  0113  0020               	banksel	_g_data
  2554  0114  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2555                           
  2556                           ;receive_decode.c: 84:     if(last_time_h != g_data.g_time_h || last_time_m != g_data.g_
      +                          time_m){
  2557  0115  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  2558  0116  0020               	movlb	0	; select bank0
  2559  0117  00C4               	movwf	??_receive_decode
  2560  0118  01C5               	clrf	??_receive_decode+1
  2561  0119  0849               	movf	receive_decode@last_time_h+1,w
  2562  011A  0645               	xorwf	??_receive_decode+1,w
  2563  011B  1D03               	skipz
  2564  011C  291F               	goto	u82_25
  2565  011D  0848               	movf	receive_decode@last_time_h,w
  2566  011E  0644               	xorwf	??_receive_decode,w
  2567  011F                     u82_25:	
  2568  011F  1D03               	skipz
  2569  0120  292E               	goto	i1l1271
  2570  0121  0020               	banksel	_g_data
  2571  0122  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  2572  0123  0020               	movlb	0	; select bank0
  2573  0124  00C4               	movwf	??_receive_decode
  2574  0125  01C5               	clrf	??_receive_decode+1
  2575  0126  084B               	movf	receive_decode@last_time_m+1,w
  2576  0127  0645               	xorwf	??_receive_decode+1,w
  2577  0128  1D03               	skipz
  2578  0129  292C               	goto	u83_25
  2579  012A  084A               	movf	receive_decode@last_time_m,w
  2580  012B  0644               	xorwf	??_receive_decode,w
  2581  012C                     u83_25:	
  2582  012C  1903               	skipnz
  2583  012D  2931               	goto	i1l1273
  2584  012E                     i1l1271:	
  2585                           
  2586                           ;receive_decode.c: 85:         update_display();
  2587  012E  3182  22CA  3180   	fcall	_update_display
  2588  0131                     i1l1273:	
  2589                           ;receive_decode.c: 86:     }
  2590                           
  2591                           
  2592                           ;receive_decode.c: 89:     g_data.g_find_recv_start = FALSE;
  2593  0131  3000               	movlw	0
  2594  0132  0020               	banksel	_g_data
  2595  0133  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  2596                           
  2597                           ;receive_decode.c: 90:     PORTCbits.RC2 = BPC_PWR_ON;
  2598  0134  0020               	movlb	0	; select bank0
  2599  0135  110E               	bcf	14,2	;volatile
  2600                           
  2601                           ;receive_decode.c: 91:     g_data.g_start_read_data = 0;
  2602  0136  3000               	movlw	0
  2603  0137  0020               	banksel	_g_data
  2604  0138  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  2605                           
  2606                           ;receive_decode.c: 92:     g_data.g_recv_count = 0;
  2607  0139  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  2608  013A  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  2609                           
  2610                           ;receive_decode.c: 93:     for(int i = 0;i < 20; i++){
  2611  013B  0020               	movlb	0	; select bank0
  2612  013C  01CC               	clrf	receive_decode@i
  2613  013D  01CD               	clrf	receive_decode@i+1
  2614  013E                     L1:	
  2615  013E  084D               	movf	receive_decode@i+1,w
  2616  013F  3A80               	xorlw	128
  2617  0140  00C4               	movwf	??_receive_decode
  2618  0141  3080               	movlw	128
  2619  0142  0244               	subwf	??_receive_decode,w
  2620  0143  1D03               	skipz
  2621  0144  2947               	goto	u84_25
  2622  0145  3014               	movlw	20
  2623  0146  024C               	subwf	receive_decode@i,w
  2624  0147                     u84_25:	
  2625  0147  1803               	btfsc	3,0
  2626  0148  0008               	return
  2627                           
  2628                           ;receive_decode.c: 94:         g_data.g_recv_buf[i] = 5;
  2629  0149  302D               	movlw	low (_g_data+13)
  2630  014A  0020               	movlb	0	; select bank0
  2631  014B  00C4               	movwf	??_receive_decode
  2632  014C  3000               	movlw	high (_g_data+13)
  2633  014D  00C5               	movwf	??_receive_decode+1
  2634  014E  084C               	movf	receive_decode@i,w
  2635  014F  0744               	addwf	??_receive_decode,w
  2636  0150  00C6               	movwf	??_receive_decode+2
  2637  0151  084D               	movf	receive_decode@i+1,w
  2638  0152  3D45               	addwfc	??_receive_decode+1,w
  2639  0153  00C7               	movwf	??_receive_decode+3
  2640  0154  0846               	movf	??_receive_decode+2,w
  2641  0155  0086               	movwf	6
  2642  0156  0847               	movf	??_receive_decode+3,w
  2643  0157  0087               	movwf	7
  2644  0158  3005               	movlw	5
  2645  0159  0081               	movwf	1
  2646                           
  2647                           ;receive_decode.c: 95:     }
  2648  015A  3001               	movlw	1
  2649  015B  07CC               	addwf	receive_decode@i,f
  2650  015C  3000               	movlw	0
  2651  015D  3DCD               	addwfc	receive_decode@i+1,f
  2652  015E  293E               	goto	L1
  2653  015F                     __end_of_receive_decode:	
  2654                           ;receive_decode.c: 96:     return;
  2655                           
  2656                           
  2657                           	psect	text5
  2658  02CA                     __ptext5:	
  2659 ;; *************** function _update_display *****************
  2660 ;; Defined at:
  2661 ;;		line 63 in file "update_display.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    3
  2682 ;; This function calls:
  2683 ;;		_write_once
  2684 ;; This function is called by:
  2685 ;;		_receive_decode
  2686 ;;		_update_time
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _update_display
  2692  02CA                     _update_display:	
  2693                           
  2694                           ;update_display.c: 74:     write_once(0xff, 0x00, 0xf0, 0x0f);
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  2698  02CA  01F6               	clrf	write_once@HR
  2699  02CB  30F0               	movlw	240
  2700  02CC  00FA               	movwf	??_update_display
  2701  02CD  087A               	movf	??_update_display,w
  2702  02CE  00F7               	movwf	write_once@ML
  2703  02CF  300F               	movlw	15
  2704  02D0  00FB               	movwf	??_update_display+1
  2705  02D1  087B               	movf	??_update_display+1,w
  2706  02D2  00F8               	movwf	write_once@MR
  2707  02D3  30FF               	movlw	255
  2708  02D4  3182  22A2         	fcall	_write_once
  2709  02D6  0008               	return
  2710  02D7                     __end_of_update_display:	
  2711                           ;update_display.c: 75:     return;
  2712                           
  2713                           
  2714                           	psect	text6
  2715  02A2                     __ptext6:	
  2716 ;; *************** function _write_once *****************
  2717 ;; Defined at:
  2718 ;;		line 51 in file "update_display.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  HL              1    wreg     unsigned char 
  2721 ;;  HR              1    6[COMMON] unsigned char 
  2722 ;;  ML              1    7[COMMON] unsigned char 
  2723 ;;  MR              1    8[COMMON] unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  HL              1    9[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2735 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;Total ram usage:        4 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    2
  2742 ;; This function calls:
  2743 ;;		_control595_delay
  2744 ;;		_write_byte
  2745 ;; This function is called by:
  2746 ;;		_update_display
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _write_once
  2752  02A2                     _write_once:	
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  2756                           ;write_once@HL stored from wreg
  2757  02A2  00F9               	movwf	write_once@HL
  2758                           
  2759                           ;update_display.c: 53:     write_byte(HL);
  2760  02A3  0879               	movf	write_once@HL,w
  2761  02A4  3182  227B  3182   	fcall	_write_byte
  2762                           
  2763                           ;update_display.c: 54:     write_byte(HR);
  2764  02A7  0876               	movf	write_once@HR,w
  2765  02A8  3182  227B  3182   	fcall	_write_byte
  2766                           
  2767                           ;update_display.c: 55:     write_byte(ML);
  2768  02AB  0877               	movf	write_once@ML,w
  2769  02AC  3182  227B  3182   	fcall	_write_byte
  2770                           
  2771                           ;update_display.c: 56:     write_byte(MR);
  2772  02AF  0878               	movf	write_once@MR,w
  2773  02B0  3182  227B  3182   	fcall	_write_byte
  2774                           
  2775                           ;update_display.c: 58:     PORTBbits.RB1 = PIN_HIGH;
  2776  02B3  0020               	movlb	0	; select bank0
  2777  02B4  148D               	bsf	13,1	;volatile
  2778                           
  2779                           ;update_display.c: 59:  control595_delay();
  2780  02B5  3182  22D7         	fcall	_control595_delay
  2781                           
  2782                           ;update_display.c: 60:     PORTBbits.RB1 = PIN_LOW;
  2783  02B7  0020               	movlb	0	; select bank0
  2784  02B8  108D               	bcf	13,1	;volatile
  2785  02B9  0008               	return
  2786  02BA                     __end_of_write_once:	
  2787                           
  2788                           	psect	text7
  2789  027B                     __ptext7:	
  2790 ;; *************** function _write_byte *****************
  2791 ;; Defined at:
  2792 ;;		line 38 in file "update_display.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  data            1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  data            1    4[COMMON] unsigned char 
  2797 ;;  i               1    5[COMMON] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, pclath, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;Total ram usage:        4 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    1
  2814 ;; This function calls:
  2815 ;;		_control595_delay
  2816 ;; This function is called by:
  2817 ;;		_write_once
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _write_byte
  2823  027B                     _write_byte:	
  2824                           
  2825                           ;incstack = 0
  2826                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  2827                           ;write_byte@data stored from wreg
  2828  027B  00F4               	movwf	write_byte@data
  2829                           
  2830                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  2831  027C  01F5               	clrf	write_byte@i
  2832  027D                     L2:	
  2833  027D  3008               	movlw	8
  2834  027E  0275               	subwf	write_byte@i,w
  2835  027F  1803               	btfsc	3,0
  2836  0280  0008               	return
  2837                           
  2838                           ;update_display.c: 41:   PORTBbits.RB5 = (data & 0x80) >> 7;
  2839  0281  0874               	movf	write_byte@data,w
  2840  0282  00F2               	movwf	??_write_byte
  2841  0283  3007               	movlw	7
  2842  0284                     u53_25:	
  2843  0284  36F2               	lsrf	??_write_byte,f
  2844  0285  0B89               	decfsz	9,f
  2845  0286  2A84               	goto	u53_25
  2846  0287  0872               	movf	??_write_byte,w
  2847  0288  3901               	andlw	1
  2848  0289  00F3               	movwf	??_write_byte+1
  2849  028A  0EF3               	swapf	??_write_byte+1,f
  2850  028B  0DF3               	rlf	??_write_byte+1,f
  2851  028C  0020               	movlb	0	; select bank0
  2852  028D  080D               	movf	13,w	;volatile
  2853  028E  0673               	xorwf	??_write_byte+1,w
  2854  028F  39DF               	andlw	-33
  2855  0290  0673               	xorwf	??_write_byte+1,w
  2856  0291  008D               	movwf	13	;volatile
  2857                           
  2858                           ;update_display.c: 42:         PORTBbits.RB0 = PIN_LOW;
  2859  0292  100D               	bcf	13,0	;volatile
  2860                           
  2861                           ;update_display.c: 43:   control595_delay();
  2862  0293  3182  22D7  3182   	fcall	_control595_delay
  2863                           
  2864                           ;update_display.c: 44:         PORTBbits.RB0 = PIN_HIGH;
  2865  0296  0020               	movlb	0	; select bank0
  2866  0297  140D               	bsf	13,0	;volatile
  2867                           
  2868                           ;update_display.c: 45:   control595_delay();
  2869  0298  3182  22D7  3182   	fcall	_control595_delay
  2870                           
  2871                           ;update_display.c: 47:         data <<= 1;
  2872  029B  1003               	clrc
  2873  029C  0DF4               	rlf	write_byte@data,f
  2874                           
  2875                           ;update_display.c: 48:     }
  2876  029D  3001               	movlw	1
  2877  029E  00F2               	movwf	??_write_byte
  2878  029F  0872               	movf	??_write_byte,w
  2879  02A0  07F5               	addwf	write_byte@i,f
  2880  02A1  2A7D               	goto	L2
  2881  02A2                     __end_of_write_byte:	
  2882                           
  2883                           	psect	text8
  2884  02D7                     __ptext8:	
  2885 ;; *************** function _control595_delay *****************
  2886 ;; Defined at:
  2887 ;;		line 21 in file "update_display.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  times           1    1[COMMON] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;Total ram usage:        2 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_write_byte
  2911 ;;		_write_once
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _control595_delay
  2917  02D7                     _control595_delay:	
  2918                           
  2919                           ;update_display.c: 22:    u8 times = 10;
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  2923  02D7  300A               	movlw	10
  2924  02D8  00F0               	movwf	??_control595_delay
  2925  02D9  0870               	movf	??_control595_delay,w
  2926  02DA  00F1               	movwf	control595_delay@times
  2927  02DB                     i1l152:	
  2928                           ;update_display.c: 26:    }
  2929                           
  2930                           ;update_display.c: 23:    while(times > 0){
  2931                           
  2932                           
  2933                           ;update_display.c: 23:    while(times > 0){
  2934  02DB  0871               	movf	control595_delay@times,w
  2935  02DC  1903               	btfsc	3,2
  2936  02DD  0008               	return
  2937                           
  2938                           ;update_display.c: 24:     __nop();
  2939  02DE  0000               	nop
  2940                           
  2941                           ;update_display.c: 25:        times--;
  2942  02DF  3001               	movlw	1
  2943  02E0  02F1               	subwf	control595_delay@times,f
  2944  02E1  2ADB               	goto	i1l152
  2945  02E2                     __end_of_control595_delay:	
  2946                           
  2947                           	psect	text9
  2948  01D5                     __ptext9:	
  2949 ;; *************** function _times2number *****************
  2950 ;; Defined at:
  2951 ;;		line 14 in file "receive_decode.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  high_level_t    2    0[COMMON] unsigned short 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      unsigned char 
  2958 ;; Registers used:
  2959 ;;		wreg
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_receive_decode
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _times2number
  2980  01D5                     _times2number:	
  2981                           
  2982                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _times2number: [wreg]
  2986  01D5  3000               	movlw	0
  2987  01D6  0271               	subwf	times2number@high_level_times+1,w
  2988  01D7  3005               	movlw	5
  2989  01D8  1903               	skipnz
  2990  01D9  0270               	subwf	times2number@high_level_times,w
  2991  01DA  1C03               	skipc
  2992  01DB  29E5               	goto	i1l1065
  2993  01DC  3000               	movlw	0
  2994  01DD  0271               	subwf	times2number@high_level_times+1,w
  2995  01DE  300F               	movlw	15
  2996  01DF  1903               	skipnz
  2997  01E0  0270               	subwf	times2number@high_level_times,w
  2998  01E1  1803               	skipnc
  2999  01E2  29E5               	goto	i1l1065
  3000                           
  3001                           ;receive_decode.c: 17:         return 0;
  3002  01E3  3000               	movlw	0
  3003                           
  3004                           ;receive_decode.c: 18:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  3005  01E4  0008               	return
  3006  01E5                     i1l1065:	
  3007  01E5  3000               	movlw	0
  3008  01E6  0271               	subwf	times2number@high_level_times+1,w
  3009  01E7  300F               	movlw	15
  3010  01E8  1903               	skipnz
  3011  01E9  0270               	subwf	times2number@high_level_times,w
  3012  01EA  1C03               	skipc
  3013  01EB  29F5               	goto	i1l1075
  3014  01EC  3000               	movlw	0
  3015  01ED  0271               	subwf	times2number@high_level_times+1,w
  3016  01EE  3019               	movlw	25
  3017  01EF  1903               	skipnz
  3018  01F0  0270               	subwf	times2number@high_level_times,w
  3019  01F1  1803               	skipnc
  3020  01F2  29F5               	goto	i1l1075
  3021                           
  3022                           ;receive_decode.c: 20:         return 1;
  3023  01F3  3001               	movlw	1
  3024                           
  3025                           ;receive_decode.c: 21:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  3026  01F4  0008               	return
  3027  01F5                     i1l1075:	
  3028  01F5  3000               	movlw	0
  3029  01F6  0271               	subwf	times2number@high_level_times+1,w
  3030  01F7  3019               	movlw	25
  3031  01F8  1903               	skipnz
  3032  01F9  0270               	subwf	times2number@high_level_times,w
  3033  01FA  1C03               	skipc
  3034  01FB  2A05               	goto	i1l1085
  3035  01FC  3000               	movlw	0
  3036  01FD  0271               	subwf	times2number@high_level_times+1,w
  3037  01FE  3023               	movlw	35
  3038  01FF  1903               	skipnz
  3039  0200  0270               	subwf	times2number@high_level_times,w
  3040  0201  1803               	skipnc
  3041  0202  2A05               	goto	i1l1085
  3042                           
  3043                           ;receive_decode.c: 23:         return 2;
  3044  0203  3002               	movlw	2
  3045                           
  3046                           ;receive_decode.c: 24:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  3047  0204  0008               	return
  3048  0205                     i1l1085:	
  3049  0205  3000               	movlw	0
  3050  0206  0271               	subwf	times2number@high_level_times+1,w
  3051  0207  3023               	movlw	35
  3052  0208  1903               	skipnz
  3053  0209  0270               	subwf	times2number@high_level_times,w
  3054  020A  1C03               	skipc
  3055  020B  2A15               	goto	i1l1095
  3056  020C  3000               	movlw	0
  3057  020D  0271               	subwf	times2number@high_level_times+1,w
  3058  020E  302D               	movlw	45
  3059  020F  1903               	skipnz
  3060  0210  0270               	subwf	times2number@high_level_times,w
  3061  0211  1803               	skipnc
  3062  0212  2A15               	goto	i1l1095
  3063                           
  3064                           ;receive_decode.c: 26:         return 3;
  3065  0213  3003               	movlw	3
  3066                           
  3067                           ;receive_decode.c: 27:     }else if(high_level_times >= 40 + 5){
  3068  0214  0008               	return
  3069  0215                     i1l1095:	
  3070  0215  3000               	movlw	0
  3071  0216  0271               	subwf	times2number@high_level_times+1,w
  3072  0217  302D               	movlw	45
  3073  0218  1903               	skipnz
  3074  0219  0270               	subwf	times2number@high_level_times,w
  3075  021A  1C03               	skipc
  3076  021B  2A1E               	goto	i1l1103
  3077                           
  3078                           ;receive_decode.c: 29:         return 4;
  3079  021C  3004               	movlw	4
  3080                           
  3081                           ;receive_decode.c: 30:     }else{
  3082  021D  0008               	return
  3083  021E                     i1l1103:	
  3084                           
  3085                           ;receive_decode.c: 32:         return 5;
  3086  021E  3005               	movlw	5
  3087                           
  3088                           ;receive_decode.c: 33:     }
  3089  021F  0008               	return
  3090  0220                     __end_of_times2number:	
  3091                           
  3092                           	psect	text10
  3093  024F                     __ptext10:	
  3094 ;; *************** function ___lwmod *****************
  3095 ;; Defined at:
  3096 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  divisor         2    0[COMMON] unsigned int 
  3099 ;;  dividend        2    2[COMMON] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  counter         1    5[COMMON] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2    0[COMMON] unsigned int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;Total ram usage:        6 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_ISR
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function ___lwmod
  3126  024F                     ___lwmod:	
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3130  024F  0870               	movf	___lwmod@divisor,w
  3131  0250  0471               	iorwf	___lwmod@divisor+1,w
  3132  0251  1903               	btfsc	3,2
  3133  0252  2A76               	goto	i1l1311
  3134  0253  01F5               	clrf	___lwmod@counter
  3135  0254  0AF5               	incf	___lwmod@counter,f
  3136  0255                     i1l1301:	
  3137  0255  1BF1               	btfsc	___lwmod@divisor+1,7
  3138  0256  2A61               	goto	i1l1303
  3139  0257  3001               	movlw	1
  3140  0258                     u87_25:	
  3141  0258  35F0               	lslf	___lwmod@divisor,f
  3142  0259  0DF1               	rlf	___lwmod@divisor+1,f
  3143  025A  0B89               	decfsz	9,f
  3144  025B  2A58               	goto	u87_25
  3145  025C  3001               	movlw	1
  3146  025D  00F4               	movwf	??___lwmod
  3147  025E  0874               	movf	??___lwmod,w
  3148  025F  07F5               	addwf	___lwmod@counter,f
  3149  0260  2A55               	goto	i1l1301
  3150  0261                     i1l1303:	
  3151  0261  0871               	movf	___lwmod@divisor+1,w
  3152  0262  0273               	subwf	___lwmod@dividend+1,w
  3153  0263  1D03               	skipz
  3154  0264  2A67               	goto	u89_25
  3155  0265  0870               	movf	___lwmod@divisor,w
  3156  0266  0272               	subwf	___lwmod@dividend,w
  3157  0267                     u89_25:	
  3158  0267  1C03               	skipc
  3159  0268  2A6D               	goto	i1l1307
  3160  0269  0870               	movf	___lwmod@divisor,w
  3161  026A  02F2               	subwf	___lwmod@dividend,f
  3162  026B  0871               	movf	___lwmod@divisor+1,w
  3163  026C  3BF3               	subwfb	___lwmod@dividend+1,f
  3164  026D                     i1l1307:	
  3165  026D  3001               	movlw	1
  3166  026E                     u90_25:	
  3167  026E  36F1               	lsrf	___lwmod@divisor+1,f
  3168  026F  0CF0               	rrf	___lwmod@divisor,f
  3169  0270  0B89               	decfsz	9,f
  3170  0271  2A6E               	goto	u90_25
  3171  0272  3001               	movlw	1
  3172  0273  02F5               	subwf	___lwmod@counter,f
  3173  0274  1D03               	btfss	3,2
  3174  0275  2A61               	goto	i1l1303
  3175  0276                     i1l1311:	
  3176  0276  0873               	movf	___lwmod@dividend+1,w
  3177  0277  00F1               	movwf	?___lwmod+1
  3178  0278  0872               	movf	___lwmod@dividend,w
  3179  0279  00F0               	movwf	?___lwmod
  3180  027A  0008               	return
  3181  027B                     __end_of___lwmod:	
  3182  007E                     btemp	set	126	;btemp
  3183  007E                     int$flags	set	126
  3184  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      52
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                             13 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0    1654
                                             11 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                          1     1      0     433
                                             12 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (3) _receive_decode                                      11    11      0     910
                                              0 BANK0     11    11      0
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       2     2      0     433
                                             10 COMMON     2     2      0
                         _write_once
 ---------------------------------------------------------------------------------
 (5) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (6) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (7) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      42      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      42      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Mar 27 23:13:22 2019

             ?_receive_decode 0070                   _update_time 0220                   __CFG_CP$OFF 0000  
                          l62 01CD                            l86 02EB                _update_display 02CA  
                 __CFG_LVP$ON 0000             ?_control595_delay 0070                  __CFG_CPD$OFF 0000  
                         _ISR 0004                           u645 01B3                           u655 01CB  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000                          ?_ISR 0070  
                        l1189 01B5                          _LATA 010C                          _LATB 010D  
                        _LATC 010E                          _ENUM 007D                          i1l72 001A  
                        i1l73 005D                          i1l74 0022                          i1l77 001F  
                        _TMR0 0015                          _WPUA 020C                          _WPUB 020D  
                        _WPUC 020E                  __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000  
                        _main 02E8                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 005F                 __CFG_MCLRE$ON 0000                         ??_ISR 004F  
      __end_of_update_display 02D7                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l113 0075                         i1l152 02DB  
             __end_of___lwmod 027B                         u53_25 0284                         u80_25 00FE  
                       _TRISA 008C                         _TRISB 008D                         u81_25 0106  
                       _TRISC 008E                         u90_25 026E                         u82_25 011F  
                       u83_25 012C                         u84_25 0147                         u87_25 0258  
                       u79_25 00EF                         u89_25 0267                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0061  
                __end_of_main 02EC               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 0054                        i1l1103 021E                        i1l1211 024C  
                      i1l1301 0255                        i1l1303 0261                        i1l1311 0276  
                      i1l1065 01E5                        i1l1307 026D                        i1l1075 01F5  
                      i1l1085 0205                        i1l1237 009D                        i1l1095 0215  
                      i1l1271 012E                        i1l1263 00D9                        i1l1343 002E  
                      i1l1273 0131                        i1l1353 0059                __CFG_PWRTE$OFF 0000  
                      _g_data 0020                __CFG_STVREN$ON 0000                     ??___lwmod 0074  
            __end_of_init_env 01D5              __end_of_segmcode 02CA  times2number@high_level_times 0070  
     __end_of__initialization 0069              ??_receive_decode 0044                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                _OPTION_REGbits 0095  
                  __pbssBANK0 0020     __size_of_control595_delay 000B               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 02E8                    __pintentry 0004                ISR@history_key 0043  
                   ?_init_env 0070              ??_update_display 007A                       ___lwmod 024F  
                     __ptext1 015F                       __ptext3 0220                       __ptext4 006D  
                     __ptext5 02CA                       __ptext6 02A2                       __ptext7 027B  
                     __ptext8 02D7                       __ptext9 01D5                  __size_of_ISR 005B  
               ?_times2number 0070                     _IOCCFbits 0399                     _IOCCPbits 0397  
                     clrloop0 02E3          end_of_initialization 0069                    ??_init_env 0051  
        __size_of_update_time 002F                     _PORTBbits 000D                     _PORTCbits 000E  
              ??_times2number 0072                     _TRISCbits 008E              _control595_delay 02D7  
                write_once@HL 0079                  write_once@HR 0076                  write_once@ML 0077  
                write_once@MR 0078                    _write_byte 027B                    _write_once 02A2  
    receive_decode@read_value 004E           start_initialization 0061                   __end_of_ISR 005F  
             receive_decode@i 004C                   __pbssCOMMON 007D                     ___latbits 0002  
               __pcstackBANK0 0044             __size_of_init_env 0076     receive_decode@last_time_h 0048  
   receive_decode@last_time_m 004A          __end_of_times2number 0220                      ?___lwmod 0070  
     __size_of_receive_decode 00F2                   ?_write_byte 0070                   ?_write_once 0076  
             ISR@key_time_cnt 0041                     clear_ram0 02E2      __end_of_control595_delay 02E2  
                    _WPUCbits 020E                   write_byte@i 0075           __size_of_write_byte 0027  
         __size_of_write_once 0018                 ??_update_time 007C                     init_env@i 0052  
            __size_of___lwmod 002C       __size_of_update_display 000D                      __ptext10 024F  
       __size_of_times2number 004B                      _init_env 015F                 __size_of_main 0004  
                    _segmcode 02BA                      int$flags 007E                _receive_decode 006D  
         __end_of_update_time 024F                    _INTCONbits 000B                  _times2number 01D5  
                    intlevel1 0000              ___lwmod@dividend 0072             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099        __end_of_receive_decode 015F                  ??_write_byte 0072  
                ??_write_once 0079                 __pstringtext1 02BA               ___lwmod@divisor 0070  
             ___lwmod@counter 0075            __end_of_write_byte 02A2            __end_of_write_once 02BA  



Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Mar 30 23:23:47 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.00
    27                           ; Generated 27/05/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1786 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  038C                     	;# 
   205  038D                     	;# 
   206  038E                     	;# 
   207  0390                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0511                     	;# 
   221  0513                     	;# 
   222  051A                     	;# 
   223  0811                     	;# 
   224  0812                     	;# 
   225  0813                     	;# 
   226  0814                     	;# 
   227  0815                     	;# 
   228  0816                     	;# 
   229  0817                     	;# 
   230  0818                     	;# 
   231  0819                     	;# 
   232  081A                     	;# 
   233  081B                     	;# 
   234  081C                     	;# 
   235  081D                     	;# 
   236  081E                     	;# 
   237  081F                     	;# 
   238  0820                     	;# 
   239  0821                     	;# 
   240  0821                     	;# 
   241  0822                     	;# 
   242  0823                     	;# 
   243  0823                     	;# 
   244  0824                     	;# 
   245  0825                     	;# 
   246  0825                     	;# 
   247  0826                     	;# 
   248  0827                     	;# 
   249  0827                     	;# 
   250  0828                     	;# 
   251  0829                     	;# 
   252  082A                     	;# 
   253  082B                     	;# 
   254  082C                     	;# 
   255  082D                     	;# 
   256  082E                     	;# 
   257  082F                     	;# 
   258  0831                     	;# 
   259  0832                     	;# 
   260  0833                     	;# 
   261  0834                     	;# 
   262  0835                     	;# 
   263  0836                     	;# 
   264  0837                     	;# 
   265  0838                     	;# 
   266  0839                     	;# 
   267  083A                     	;# 
   268  083B                     	;# 
   269  083C                     	;# 
   270  083D                     	;# 
   271  083E                     	;# 
   272  083F                     	;# 
   273  0840                     	;# 
   274  0841                     	;# 
   275  0841                     	;# 
   276  0842                     	;# 
   277  0843                     	;# 
   278  0843                     	;# 
   279  0844                     	;# 
   280  0845                     	;# 
   281  0845                     	;# 
   282  0846                     	;# 
   283  0847                     	;# 
   284  0847                     	;# 
   285  0848                     	;# 
   286  0849                     	;# 
   287  084A                     	;# 
   288  084B                     	;# 
   289  084C                     	;# 
   290  084D                     	;# 
   291  084E                     	;# 
   292  084F                     	;# 
   293  0851                     	;# 
   294  0852                     	;# 
   295  0853                     	;# 
   296  0854                     	;# 
   297  0855                     	;# 
   298  0856                     	;# 
   299  0857                     	;# 
   300  0858                     	;# 
   301  0859                     	;# 
   302  085A                     	;# 
   303  085B                     	;# 
   304  085C                     	;# 
   305  085D                     	;# 
   306  085E                     	;# 
   307  085F                     	;# 
   308  0860                     	;# 
   309  0861                     	;# 
   310  0861                     	;# 
   311  0862                     	;# 
   312  0863                     	;# 
   313  0863                     	;# 
   314  0864                     	;# 
   315  0865                     	;# 
   316  0865                     	;# 
   317  0866                     	;# 
   318  0867                     	;# 
   319  0867                     	;# 
   320  0868                     	;# 
   321  0869                     	;# 
   322  086A                     	;# 
   323  086B                     	;# 
   324  086C                     	;# 
   325  086D                     	;# 
   326  086E                     	;# 
   327  086F                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011C                     	;# 
   403  011D                     	;# 
   404  011D                     	;# 
   405  011D                     	;# 
   406  011E                     	;# 
   407  011F                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  028C                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  0291                     	;# 
   469  0291                     	;# 
   470  0292                     	;# 
   471  0293                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  030C                     	;# 
   477  030D                     	;# 
   478  030E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  0390                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  0397                     	;# 
   494  0398                     	;# 
   495  0399                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0511                     	;# 
   500  0513                     	;# 
   501  051A                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  0815                     	;# 
   507  0816                     	;# 
   508  0817                     	;# 
   509  0818                     	;# 
   510  0819                     	;# 
   511  081A                     	;# 
   512  081B                     	;# 
   513  081C                     	;# 
   514  081D                     	;# 
   515  081E                     	;# 
   516  081F                     	;# 
   517  0820                     	;# 
   518  0821                     	;# 
   519  0821                     	;# 
   520  0822                     	;# 
   521  0823                     	;# 
   522  0823                     	;# 
   523  0824                     	;# 
   524  0825                     	;# 
   525  0825                     	;# 
   526  0826                     	;# 
   527  0827                     	;# 
   528  0827                     	;# 
   529  0828                     	;# 
   530  0829                     	;# 
   531  082A                     	;# 
   532  082B                     	;# 
   533  082C                     	;# 
   534  082D                     	;# 
   535  082E                     	;# 
   536  082F                     	;# 
   537  0831                     	;# 
   538  0832                     	;# 
   539  0833                     	;# 
   540  0834                     	;# 
   541  0835                     	;# 
   542  0836                     	;# 
   543  0837                     	;# 
   544  0838                     	;# 
   545  0839                     	;# 
   546  083A                     	;# 
   547  083B                     	;# 
   548  083C                     	;# 
   549  083D                     	;# 
   550  083E                     	;# 
   551  083F                     	;# 
   552  0840                     	;# 
   553  0841                     	;# 
   554  0841                     	;# 
   555  0842                     	;# 
   556  0843                     	;# 
   557  0843                     	;# 
   558  0844                     	;# 
   559  0845                     	;# 
   560  0845                     	;# 
   561  0846                     	;# 
   562  0847                     	;# 
   563  0847                     	;# 
   564  0848                     	;# 
   565  0849                     	;# 
   566  084A                     	;# 
   567  084B                     	;# 
   568  084C                     	;# 
   569  084D                     	;# 
   570  084E                     	;# 
   571  084F                     	;# 
   572  0851                     	;# 
   573  0852                     	;# 
   574  0853                     	;# 
   575  0854                     	;# 
   576  0855                     	;# 
   577  0856                     	;# 
   578  0857                     	;# 
   579  0858                     	;# 
   580  0859                     	;# 
   581  085A                     	;# 
   582  085B                     	;# 
   583  085C                     	;# 
   584  085D                     	;# 
   585  085E                     	;# 
   586  085F                     	;# 
   587  0860                     	;# 
   588  0861                     	;# 
   589  0861                     	;# 
   590  0862                     	;# 
   591  0863                     	;# 
   592  0863                     	;# 
   593  0864                     	;# 
   594  0865                     	;# 
   595  0865                     	;# 
   596  0866                     	;# 
   597  0867                     	;# 
   598  0867                     	;# 
   599  0868                     	;# 
   600  0869                     	;# 
   601  086A                     	;# 
   602  086B                     	;# 
   603  086C                     	;# 
   604  086D                     	;# 
   605  086E                     	;# 
   606  086F                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0016                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  0090                     	;# 
   651  0091                     	;# 
   652  0092                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0115                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0118                     	;# 
   678  0119                     	;# 
   679  011A                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0199                     	;# 
   700  0199                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019A                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019D                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019E                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  019F                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  030C                     	;# 
   756  030D                     	;# 
   757  030E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  0393                     	;# 
   769  0394                     	;# 
   770  0395                     	;# 
   771  0396                     	;# 
   772  0397                     	;# 
   773  0398                     	;# 
   774  0399                     	;# 
   775  039D                     	;# 
   776  039E                     	;# 
   777  039F                     	;# 
   778  0511                     	;# 
   779  0513                     	;# 
   780  051A                     	;# 
   781  0811                     	;# 
   782  0812                     	;# 
   783  0813                     	;# 
   784  0814                     	;# 
   785  0815                     	;# 
   786  0816                     	;# 
   787  0817                     	;# 
   788  0818                     	;# 
   789  0819                     	;# 
   790  081A                     	;# 
   791  081B                     	;# 
   792  081C                     	;# 
   793  081D                     	;# 
   794  081E                     	;# 
   795  081F                     	;# 
   796  0820                     	;# 
   797  0821                     	;# 
   798  0821                     	;# 
   799  0822                     	;# 
   800  0823                     	;# 
   801  0823                     	;# 
   802  0824                     	;# 
   803  0825                     	;# 
   804  0825                     	;# 
   805  0826                     	;# 
   806  0827                     	;# 
   807  0827                     	;# 
   808  0828                     	;# 
   809  0829                     	;# 
   810  082A                     	;# 
   811  082B                     	;# 
   812  082C                     	;# 
   813  082D                     	;# 
   814  082E                     	;# 
   815  082F                     	;# 
   816  0831                     	;# 
   817  0832                     	;# 
   818  0833                     	;# 
   819  0834                     	;# 
   820  0835                     	;# 
   821  0836                     	;# 
   822  0837                     	;# 
   823  0838                     	;# 
   824  0839                     	;# 
   825  083A                     	;# 
   826  083B                     	;# 
   827  083C                     	;# 
   828  083D                     	;# 
   829  083E                     	;# 
   830  083F                     	;# 
   831  0840                     	;# 
   832  0841                     	;# 
   833  0841                     	;# 
   834  0842                     	;# 
   835  0843                     	;# 
   836  0843                     	;# 
   837  0844                     	;# 
   838  0845                     	;# 
   839  0845                     	;# 
   840  0846                     	;# 
   841  0847                     	;# 
   842  0847                     	;# 
   843  0848                     	;# 
   844  0849                     	;# 
   845  084A                     	;# 
   846  084B                     	;# 
   847  084C                     	;# 
   848  084D                     	;# 
   849  084E                     	;# 
   850  084F                     	;# 
   851  0851                     	;# 
   852  0852                     	;# 
   853  0853                     	;# 
   854  0854                     	;# 
   855  0855                     	;# 
   856  0856                     	;# 
   857  0857                     	;# 
   858  0858                     	;# 
   859  0859                     	;# 
   860  085A                     	;# 
   861  085B                     	;# 
   862  085C                     	;# 
   863  085D                     	;# 
   864  085E                     	;# 
   865  085F                     	;# 
   866  0860                     	;# 
   867  0861                     	;# 
   868  0861                     	;# 
   869  0862                     	;# 
   870  0863                     	;# 
   871  0863                     	;# 
   872  0864                     	;# 
   873  0865                     	;# 
   874  0865                     	;# 
   875  0866                     	;# 
   876  0867                     	;# 
   877  0867                     	;# 
   878  0868                     	;# 
   879  0869                     	;# 
   880  086A                     	;# 
   881  086B                     	;# 
   882  086C                     	;# 
   883  086D                     	;# 
   884  086E                     	;# 
   885  086F                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  000E                     	;# 
   912  0010                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0013                     	;# 
   916  0014                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  008E                     	;# 
   929  0090                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0093                     	;# 
   933  0094                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  010E                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011C                     	;# 
   961  011D                     	;# 
   962  011D                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  011F                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0197                     	;# 
   978  0199                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019C                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019D                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019E                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  020C                     	;# 
  1004  020D                     	;# 
  1005  020E                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0298                     	;# 
  1031  0298                     	;# 
  1032  0299                     	;# 
  1033  029A                     	;# 
  1034  030C                     	;# 
  1035  030D                     	;# 
  1036  030E                     	;# 
  1037  0311                     	;# 
  1038  0311                     	;# 
  1039  0312                     	;# 
  1040  0313                     	;# 
  1041  038C                     	;# 
  1042  038D                     	;# 
  1043  038E                     	;# 
  1044  0390                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0397                     	;# 
  1052  0398                     	;# 
  1053  0399                     	;# 
  1054  039D                     	;# 
  1055  039E                     	;# 
  1056  039F                     	;# 
  1057  0511                     	;# 
  1058  0513                     	;# 
  1059  051A                     	;# 
  1060  0811                     	;# 
  1061  0812                     	;# 
  1062  0813                     	;# 
  1063  0814                     	;# 
  1064  0815                     	;# 
  1065  0816                     	;# 
  1066  0817                     	;# 
  1067  0818                     	;# 
  1068  0819                     	;# 
  1069  081A                     	;# 
  1070  081B                     	;# 
  1071  081C                     	;# 
  1072  081D                     	;# 
  1073  081E                     	;# 
  1074  081F                     	;# 
  1075  0820                     	;# 
  1076  0821                     	;# 
  1077  0821                     	;# 
  1078  0822                     	;# 
  1079  0823                     	;# 
  1080  0823                     	;# 
  1081  0824                     	;# 
  1082  0825                     	;# 
  1083  0825                     	;# 
  1084  0826                     	;# 
  1085  0827                     	;# 
  1086  0827                     	;# 
  1087  0828                     	;# 
  1088  0829                     	;# 
  1089  082A                     	;# 
  1090  082B                     	;# 
  1091  082C                     	;# 
  1092  082D                     	;# 
  1093  082E                     	;# 
  1094  082F                     	;# 
  1095  0831                     	;# 
  1096  0832                     	;# 
  1097  0833                     	;# 
  1098  0834                     	;# 
  1099  0835                     	;# 
  1100  0836                     	;# 
  1101  0837                     	;# 
  1102  0838                     	;# 
  1103  0839                     	;# 
  1104  083A                     	;# 
  1105  083B                     	;# 
  1106  083C                     	;# 
  1107  083D                     	;# 
  1108  083E                     	;# 
  1109  083F                     	;# 
  1110  0840                     	;# 
  1111  0841                     	;# 
  1112  0841                     	;# 
  1113  0842                     	;# 
  1114  0843                     	;# 
  1115  0843                     	;# 
  1116  0844                     	;# 
  1117  0845                     	;# 
  1118  0845                     	;# 
  1119  0846                     	;# 
  1120  0847                     	;# 
  1121  0847                     	;# 
  1122  0848                     	;# 
  1123  0849                     	;# 
  1124  084A                     	;# 
  1125  084B                     	;# 
  1126  084C                     	;# 
  1127  084D                     	;# 
  1128  084E                     	;# 
  1129  084F                     	;# 
  1130  0851                     	;# 
  1131  0852                     	;# 
  1132  0853                     	;# 
  1133  0854                     	;# 
  1134  0855                     	;# 
  1135  0856                     	;# 
  1136  0857                     	;# 
  1137  0858                     	;# 
  1138  0859                     	;# 
  1139  085A                     	;# 
  1140  085B                     	;# 
  1141  085C                     	;# 
  1142  085D                     	;# 
  1143  085E                     	;# 
  1144  085F                     	;# 
  1145  0860                     	;# 
  1146  0861                     	;# 
  1147  0861                     	;# 
  1148  0862                     	;# 
  1149  0863                     	;# 
  1150  0863                     	;# 
  1151  0864                     	;# 
  1152  0865                     	;# 
  1153  0865                     	;# 
  1154  0866                     	;# 
  1155  0867                     	;# 
  1156  0867                     	;# 
  1157  0868                     	;# 
  1158  0869                     	;# 
  1159  086A                     	;# 
  1160  086B                     	;# 
  1161  086C                     	;# 
  1162  086D                     	;# 
  1163  086E                     	;# 
  1164  086F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  0010                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  009F                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  011A                     	;# 
  1238  011B                     	;# 
  1239  011C                     	;# 
  1240  011D                     	;# 
  1241  011D                     	;# 
  1242  011D                     	;# 
  1243  011E                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  0210                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  028C                     	;# 
  1303  028D                     	;# 
  1304  028E                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  030C                     	;# 
  1314  030D                     	;# 
  1315  030E                     	;# 
  1316  0311                     	;# 
  1317  0311                     	;# 
  1318  0312                     	;# 
  1319  0313                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0390                     	;# 
  1324  0391                     	;# 
  1325  0392                     	;# 
  1326  0393                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0397                     	;# 
  1331  0398                     	;# 
  1332  0399                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0511                     	;# 
  1337  0513                     	;# 
  1338  051A                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  0815                     	;# 
  1344  0816                     	;# 
  1345  0817                     	;# 
  1346  0818                     	;# 
  1347  0819                     	;# 
  1348  081A                     	;# 
  1349  081B                     	;# 
  1350  081C                     	;# 
  1351  081D                     	;# 
  1352  081E                     	;# 
  1353  081F                     	;# 
  1354  0820                     	;# 
  1355  0821                     	;# 
  1356  0821                     	;# 
  1357  0822                     	;# 
  1358  0823                     	;# 
  1359  0823                     	;# 
  1360  0824                     	;# 
  1361  0825                     	;# 
  1362  0825                     	;# 
  1363  0826                     	;# 
  1364  0827                     	;# 
  1365  0827                     	;# 
  1366  0828                     	;# 
  1367  0829                     	;# 
  1368  082A                     	;# 
  1369  082B                     	;# 
  1370  082C                     	;# 
  1371  082D                     	;# 
  1372  082E                     	;# 
  1373  082F                     	;# 
  1374  0831                     	;# 
  1375  0832                     	;# 
  1376  0833                     	;# 
  1377  0834                     	;# 
  1378  0835                     	;# 
  1379  0836                     	;# 
  1380  0837                     	;# 
  1381  0838                     	;# 
  1382  0839                     	;# 
  1383  083A                     	;# 
  1384  083B                     	;# 
  1385  083C                     	;# 
  1386  083D                     	;# 
  1387  083E                     	;# 
  1388  083F                     	;# 
  1389  0840                     	;# 
  1390  0841                     	;# 
  1391  0841                     	;# 
  1392  0842                     	;# 
  1393  0843                     	;# 
  1394  0843                     	;# 
  1395  0844                     	;# 
  1396  0845                     	;# 
  1397  0845                     	;# 
  1398  0846                     	;# 
  1399  0847                     	;# 
  1400  0847                     	;# 
  1401  0848                     	;# 
  1402  0849                     	;# 
  1403  084A                     	;# 
  1404  084B                     	;# 
  1405  084C                     	;# 
  1406  084D                     	;# 
  1407  084E                     	;# 
  1408  084F                     	;# 
  1409  0851                     	;# 
  1410  0852                     	;# 
  1411  0853                     	;# 
  1412  0854                     	;# 
  1413  0855                     	;# 
  1414  0856                     	;# 
  1415  0857                     	;# 
  1416  0858                     	;# 
  1417  0859                     	;# 
  1418  085A                     	;# 
  1419  085B                     	;# 
  1420  085C                     	;# 
  1421  085D                     	;# 
  1422  085E                     	;# 
  1423  085F                     	;# 
  1424  0860                     	;# 
  1425  0861                     	;# 
  1426  0861                     	;# 
  1427  0862                     	;# 
  1428  0863                     	;# 
  1429  0863                     	;# 
  1430  0864                     	;# 
  1431  0865                     	;# 
  1432  0865                     	;# 
  1433  0866                     	;# 
  1434  0867                     	;# 
  1435  0867                     	;# 
  1436  0868                     	;# 
  1437  0869                     	;# 
  1438  086A                     	;# 
  1439  086B                     	;# 
  1440  086C                     	;# 
  1441  086D                     	;# 
  1442  086E                     	;# 
  1443  086F                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455  0000                     	;# 
  1456  0001                     	;# 
  1457  0002                     	;# 
  1458  0003                     	;# 
  1459  0004                     	;# 
  1460  0005                     	;# 
  1461  0006                     	;# 
  1462  0007                     	;# 
  1463  0008                     	;# 
  1464  0009                     	;# 
  1465  000A                     	;# 
  1466  000B                     	;# 
  1467  000C                     	;# 
  1468  000D                     	;# 
  1469  000E                     	;# 
  1470  0010                     	;# 
  1471  0011                     	;# 
  1472  0012                     	;# 
  1473  0013                     	;# 
  1474  0014                     	;# 
  1475  0015                     	;# 
  1476  0016                     	;# 
  1477  0016                     	;# 
  1478  0017                     	;# 
  1479  0018                     	;# 
  1480  0019                     	;# 
  1481  001A                     	;# 
  1482  001B                     	;# 
  1483  001C                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  0090                     	;# 
  1488  0091                     	;# 
  1489  0092                     	;# 
  1490  0093                     	;# 
  1491  0094                     	;# 
  1492  0095                     	;# 
  1493  0096                     	;# 
  1494  0097                     	;# 
  1495  0098                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0111                     	;# 
  1508  0112                     	;# 
  1509  0113                     	;# 
  1510  0114                     	;# 
  1511  0115                     	;# 
  1512  0116                     	;# 
  1513  0117                     	;# 
  1514  0118                     	;# 
  1515  0119                     	;# 
  1516  011A                     	;# 
  1517  011B                     	;# 
  1518  011C                     	;# 
  1519  011D                     	;# 
  1520  011D                     	;# 
  1521  011D                     	;# 
  1522  011E                     	;# 
  1523  011F                     	;# 
  1524  018C                     	;# 
  1525  018D                     	;# 
  1526  0191                     	;# 
  1527  0191                     	;# 
  1528  0192                     	;# 
  1529  0193                     	;# 
  1530  0193                     	;# 
  1531  0193                     	;# 
  1532  0194                     	;# 
  1533  0195                     	;# 
  1534  0196                     	;# 
  1535  0197                     	;# 
  1536  0199                     	;# 
  1537  0199                     	;# 
  1538  0199                     	;# 
  1539  019A                     	;# 
  1540  019A                     	;# 
  1541  019A                     	;# 
  1542  019B                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019C                     	;# 
  1548  019C                     	;# 
  1549  019C                     	;# 
  1550  019D                     	;# 
  1551  019D                     	;# 
  1552  019D                     	;# 
  1553  019E                     	;# 
  1554  019E                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  019F                     	;# 
  1558  019F                     	;# 
  1559  019F                     	;# 
  1560  019F                     	;# 
  1561  020C                     	;# 
  1562  020D                     	;# 
  1563  020E                     	;# 
  1564  0210                     	;# 
  1565  0211                     	;# 
  1566  0211                     	;# 
  1567  0212                     	;# 
  1568  0212                     	;# 
  1569  0213                     	;# 
  1570  0213                     	;# 
  1571  0214                     	;# 
  1572  0214                     	;# 
  1573  0215                     	;# 
  1574  0215                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0216                     	;# 
  1578  0216                     	;# 
  1579  0217                     	;# 
  1580  0217                     	;# 
  1581  028C                     	;# 
  1582  028D                     	;# 
  1583  028E                     	;# 
  1584  0291                     	;# 
  1585  0291                     	;# 
  1586  0292                     	;# 
  1587  0293                     	;# 
  1588  0298                     	;# 
  1589  0298                     	;# 
  1590  0299                     	;# 
  1591  029A                     	;# 
  1592  030C                     	;# 
  1593  030D                     	;# 
  1594  030E                     	;# 
  1595  0311                     	;# 
  1596  0311                     	;# 
  1597  0312                     	;# 
  1598  0313                     	;# 
  1599  038C                     	;# 
  1600  038D                     	;# 
  1601  038E                     	;# 
  1602  0390                     	;# 
  1603  0391                     	;# 
  1604  0392                     	;# 
  1605  0393                     	;# 
  1606  0394                     	;# 
  1607  0395                     	;# 
  1608  0396                     	;# 
  1609  0397                     	;# 
  1610  0398                     	;# 
  1611  0399                     	;# 
  1612  039D                     	;# 
  1613  039E                     	;# 
  1614  039F                     	;# 
  1615  0511                     	;# 
  1616  0513                     	;# 
  1617  051A                     	;# 
  1618  0811                     	;# 
  1619  0812                     	;# 
  1620  0813                     	;# 
  1621  0814                     	;# 
  1622  0815                     	;# 
  1623  0816                     	;# 
  1624  0817                     	;# 
  1625  0818                     	;# 
  1626  0819                     	;# 
  1627  081A                     	;# 
  1628  081B                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  081E                     	;# 
  1632  081F                     	;# 
  1633  0820                     	;# 
  1634  0821                     	;# 
  1635  0821                     	;# 
  1636  0822                     	;# 
  1637  0823                     	;# 
  1638  0823                     	;# 
  1639  0824                     	;# 
  1640  0825                     	;# 
  1641  0825                     	;# 
  1642  0826                     	;# 
  1643  0827                     	;# 
  1644  0827                     	;# 
  1645  0828                     	;# 
  1646  0829                     	;# 
  1647  082A                     	;# 
  1648  082B                     	;# 
  1649  082C                     	;# 
  1650  082D                     	;# 
  1651  082E                     	;# 
  1652  082F                     	;# 
  1653  0831                     	;# 
  1654  0832                     	;# 
  1655  0833                     	;# 
  1656  0834                     	;# 
  1657  0835                     	;# 
  1658  0836                     	;# 
  1659  0837                     	;# 
  1660  0838                     	;# 
  1661  0839                     	;# 
  1662  083A                     	;# 
  1663  083B                     	;# 
  1664  083C                     	;# 
  1665  083D                     	;# 
  1666  083E                     	;# 
  1667  083F                     	;# 
  1668  0840                     	;# 
  1669  0841                     	;# 
  1670  0841                     	;# 
  1671  0842                     	;# 
  1672  0843                     	;# 
  1673  0843                     	;# 
  1674  0844                     	;# 
  1675  0845                     	;# 
  1676  0845                     	;# 
  1677  0846                     	;# 
  1678  0847                     	;# 
  1679  0847                     	;# 
  1680  0848                     	;# 
  1681  0849                     	;# 
  1682  084A                     	;# 
  1683  084B                     	;# 
  1684  084C                     	;# 
  1685  084D                     	;# 
  1686  084E                     	;# 
  1687  084F                     	;# 
  1688  0851                     	;# 
  1689  0852                     	;# 
  1690  0853                     	;# 
  1691  0854                     	;# 
  1692  0855                     	;# 
  1693  0856                     	;# 
  1694  0857                     	;# 
  1695  0858                     	;# 
  1696  0859                     	;# 
  1697  085A                     	;# 
  1698  085B                     	;# 
  1699  085C                     	;# 
  1700  085D                     	;# 
  1701  085E                     	;# 
  1702  085F                     	;# 
  1703  0860                     	;# 
  1704  0861                     	;# 
  1705  0861                     	;# 
  1706  0862                     	;# 
  1707  0863                     	;# 
  1708  0863                     	;# 
  1709  0864                     	;# 
  1710  0865                     	;# 
  1711  0865                     	;# 
  1712  0866                     	;# 
  1713  0867                     	;# 
  1714  0867                     	;# 
  1715  0868                     	;# 
  1716  0869                     	;# 
  1717  086A                     	;# 
  1718  086B                     	;# 
  1719  086C                     	;# 
  1720  086D                     	;# 
  1721  086E                     	;# 
  1722  086F                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  0010                     	;# 
  1750  0011                     	;# 
  1751  0012                     	;# 
  1752  0013                     	;# 
  1753  0014                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  0090                     	;# 
  1767  0091                     	;# 
  1768  0092                     	;# 
  1769  0093                     	;# 
  1770  0094                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  0111                     	;# 
  1787  0112                     	;# 
  1788  0113                     	;# 
  1789  0114                     	;# 
  1790  0115                     	;# 
  1791  0116                     	;# 
  1792  0117                     	;# 
  1793  0118                     	;# 
  1794  0119                     	;# 
  1795  011A                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  018C                     	;# 
  1804  018D                     	;# 
  1805  0191                     	;# 
  1806  0191                     	;# 
  1807  0192                     	;# 
  1808  0193                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  0210                     	;# 
  1844  0211                     	;# 
  1845  0211                     	;# 
  1846  0212                     	;# 
  1847  0212                     	;# 
  1848  0213                     	;# 
  1849  0213                     	;# 
  1850  0214                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0216                     	;# 
  1857  0216                     	;# 
  1858  0217                     	;# 
  1859  0217                     	;# 
  1860  028C                     	;# 
  1861  028D                     	;# 
  1862  028E                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0298                     	;# 
  1868  0298                     	;# 
  1869  0299                     	;# 
  1870  029A                     	;# 
  1871  030C                     	;# 
  1872  030D                     	;# 
  1873  030E                     	;# 
  1874  0311                     	;# 
  1875  0311                     	;# 
  1876  0312                     	;# 
  1877  0313                     	;# 
  1878  038C                     	;# 
  1879  038D                     	;# 
  1880  038E                     	;# 
  1881  0390                     	;# 
  1882  0391                     	;# 
  1883  0392                     	;# 
  1884  0393                     	;# 
  1885  0394                     	;# 
  1886  0395                     	;# 
  1887  0396                     	;# 
  1888  0397                     	;# 
  1889  0398                     	;# 
  1890  0399                     	;# 
  1891  039D                     	;# 
  1892  039E                     	;# 
  1893  039F                     	;# 
  1894  0511                     	;# 
  1895  0513                     	;# 
  1896  051A                     	;# 
  1897  0811                     	;# 
  1898  0812                     	;# 
  1899  0813                     	;# 
  1900  0814                     	;# 
  1901  0815                     	;# 
  1902  0816                     	;# 
  1903  0817                     	;# 
  1904  0818                     	;# 
  1905  0819                     	;# 
  1906  081A                     	;# 
  1907  081B                     	;# 
  1908  081C                     	;# 
  1909  081D                     	;# 
  1910  081E                     	;# 
  1911  081F                     	;# 
  1912  0820                     	;# 
  1913  0821                     	;# 
  1914  0821                     	;# 
  1915  0822                     	;# 
  1916  0823                     	;# 
  1917  0823                     	;# 
  1918  0824                     	;# 
  1919  0825                     	;# 
  1920  0825                     	;# 
  1921  0826                     	;# 
  1922  0827                     	;# 
  1923  0827                     	;# 
  1924  0828                     	;# 
  1925  0829                     	;# 
  1926  082A                     	;# 
  1927  082B                     	;# 
  1928  082C                     	;# 
  1929  082D                     	;# 
  1930  082E                     	;# 
  1931  082F                     	;# 
  1932  0831                     	;# 
  1933  0832                     	;# 
  1934  0833                     	;# 
  1935  0834                     	;# 
  1936  0835                     	;# 
  1937  0836                     	;# 
  1938  0837                     	;# 
  1939  0838                     	;# 
  1940  0839                     	;# 
  1941  083A                     	;# 
  1942  083B                     	;# 
  1943  083C                     	;# 
  1944  083D                     	;# 
  1945  083E                     	;# 
  1946  083F                     	;# 
  1947  0840                     	;# 
  1948  0841                     	;# 
  1949  0841                     	;# 
  1950  0842                     	;# 
  1951  0843                     	;# 
  1952  0843                     	;# 
  1953  0844                     	;# 
  1954  0845                     	;# 
  1955  0845                     	;# 
  1956  0846                     	;# 
  1957  0847                     	;# 
  1958  0847                     	;# 
  1959  0848                     	;# 
  1960  0849                     	;# 
  1961  084A                     	;# 
  1962  084B                     	;# 
  1963  084C                     	;# 
  1964  084D                     	;# 
  1965  084E                     	;# 
  1966  084F                     	;# 
  1967  0851                     	;# 
  1968  0852                     	;# 
  1969  0853                     	;# 
  1970  0854                     	;# 
  1971  0855                     	;# 
  1972  0856                     	;# 
  1973  0857                     	;# 
  1974  0858                     	;# 
  1975  0859                     	;# 
  1976  085A                     	;# 
  1977  085B                     	;# 
  1978  085C                     	;# 
  1979  085D                     	;# 
  1980  085E                     	;# 
  1981  085F                     	;# 
  1982  0860                     	;# 
  1983  0861                     	;# 
  1984  0861                     	;# 
  1985  0862                     	;# 
  1986  0863                     	;# 
  1987  0863                     	;# 
  1988  0864                     	;# 
  1989  0865                     	;# 
  1990  0865                     	;# 
  1991  0866                     	;# 
  1992  0867                     	;# 
  1993  0867                     	;# 
  1994  0868                     	;# 
  1995  0869                     	;# 
  1996  086A                     	;# 
  1997  086B                     	;# 
  1998  086C                     	;# 
  1999  086D                     	;# 
  2000  086E                     	;# 
  2001  086F                     	;# 
  2002  0FE4                     	;# 
  2003  0FE5                     	;# 
  2004  0FE6                     	;# 
  2005  0FE7                     	;# 
  2006  0FE8                     	;# 
  2007  0FE9                     	;# 
  2008  0FEA                     	;# 
  2009  0FEB                     	;# 
  2010  0FED                     	;# 
  2011  0FEE                     	;# 
  2012  0FEF                     	;# 
  2013                           
  2014                           	psect	stringtext1
  2015  0322                     __pstringtext1:	
  2016  0322                     _segmcode:	
  2017  0322  343F               	retlw	63
  2018  0323  3406               	retlw	6
  2019  0324  345B               	retlw	91
  2020  0325  344F               	retlw	79
  2021  0326  3466               	retlw	102
  2022  0327  346D               	retlw	109
  2023  0328  347D               	retlw	125
  2024  0329  3407               	retlw	7
  2025  032A  347F               	retlw	127
  2026  032B  346F               	retlw	111
  2027  032C  3477               	retlw	119
  2028  032D  347C               	retlw	124
  2029  032E  3439               	retlw	57
  2030  032F  345E               	retlw	94
  2031  0330  3479               	retlw	121
  2032  0331  3471               	retlw	113
  2033  0332                     __end_of_segmcode:	
  2034  000E                     _PORTCbits	set	14
  2035  000D                     _PORTBbits	set	13
  2036  0015                     _TMR0	set	21
  2037  000B                     _INTCONbits	set	11
  2038  005F                     _GIE	set	95
  2039  0074                     _RC4	set	116
  2040  008E                     _TRISCbits	set	142
  2041  008E                     _TRISC	set	142
  2042  008D                     _TRISB	set	141
  2043  008C                     _TRISA	set	140
  2044  0095                     _OPTION_REGbits	set	149
  2045  0099                     _OSCCONbits	set	153
  2046  0473                     _TRISC3	set	1139
  2047  0474                     _TRISC4	set	1140
  2048  010E                     _LATC	set	270
  2049  010D                     _LATB	set	269
  2050  010C                     _LATA	set	268
  2051  0874                     _LATC4	set	2164
  2052  0873                     _LATC3	set	2163
  2053  020E                     _WPUCbits	set	526
  2054  020E                     _WPUC	set	526
  2055  020D                     _WPUB	set	525
  2056  020C                     _WPUA	set	524
  2057  1073                     _WPUC3	set	4211
  2058  1074                     _WPUC4	set	4212
  2059  1474                     _ODCONC4	set	5236
  2060  1473                     _ODCONC3	set	5235
  2061  0399                     _IOCCFbits	set	921
  2062  0397                     _IOCCPbits	set	919
  2063  0398                     _IOCCN	set	920
  2064  0397                     _IOCCP	set	919
  2065  0395                     _IOCBN	set	917
  2066  0394                     _IOCBP	set	916
  2067  0392                     _IOCAN	set	914
  2068  0391                     _IOCAP	set	913
  2069                           
  2070                           ; #config settings
  2071  0000                     
  2072                           	psect	cinit
  2073  0061                     start_initialization:	
  2074  0061                     __initialization:	
  2075                           
  2076                           ; Clear objects allocated to COMMON
  2077  0061  01FD               	clrf	__pbssCOMMON& (0+127)
  2078                           
  2079                           ; Clear objects allocated to BANK0
  2080  0062  3020               	movlw	low __pbssBANK0
  2081  0063  0084               	movwf	4
  2082  0064  3000               	movlw	high __pbssBANK0
  2083  0065  0085               	movwf	5
  2084  0066  3028               	movlw	40
  2085  0067  3183  2357         	fcall	clear_ram0
  2086  0069                     end_of_initialization:	
  2087                           ;End of C runtime variable initialization code
  2088                           
  2089  0069                     __end_of__initialization:	
  2090  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2091  006A  0020               	movlb	0
  2092  006B  3183  2B5D         	ljmp	_main	;jump to C main() function
  2093                           
  2094                           	psect	bssCOMMON
  2095  007D                     __pbssCOMMON:	
  2096  007D                     _temp_h:	
  2097  007D                     	ds	1
  2098                           
  2099                           	psect	bssBANK0
  2100  0020                     __pbssBANK0:	
  2101  0020                     _g_data:	
  2102  0020                     	ds	33
  2103  0041                     _Temp:	
  2104  0041                     	ds	2
  2105  0043                     ISR@key_time_cnt:	
  2106  0043                     	ds	2
  2107  0045                     _temp_l:	
  2108  0045                     	ds	1
  2109  0046                     ISR@history_key:	
  2110  0046                     	ds	1
  2111  0047                     _ENUM:	
  2112  0047                     	ds	1
  2113                           
  2114                           	psect	clrtext
  2115  0357                     clear_ram0:	
  2116                           ;	Called with FSR0 containing the base address, and
  2117                           ;	WREG with the size to clear
  2118                           
  2119  0357  0064               	clrwdt	;clear the watchdog before getting into this loop
  2120  0358                     clrloop0:	
  2121  0358  0180               	clrf	0	;clear RAM location pointed to by FSR
  2122  0359  3101               	addfsr 0,1
  2123  035A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2124  035B  2B58               	goto	clrloop0	;have we reached the end yet?
  2125  035C  3400               	retlw	0	;all done for this memory range, return
  2126                           
  2127                           	psect	cstackBANK1
  2128  00A0                     __pcstackBANK1:	
  2129  00A0                     ??_init_env:	
  2130                           
  2131                           ; 1 bytes @ 0x0
  2132  00A0                     	ds	1
  2133  00A1                     init_env@i:	
  2134                           
  2135                           ; 2 bytes @ 0x1
  2136  00A1                     	ds	2
  2137                           
  2138                           	psect	cstackCOMMON
  2139  0070                     __pcstackCOMMON:	
  2140  0070                     ?_IIC_Init:	
  2141  0070                     ?_update_time:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?_receive_decode:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?_update_display:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_init_env:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ?_ISR:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_main:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_times2number:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_control595_delay:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ??_control595_delay:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?_write_byte:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?___lwmod:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     times2number@high_level_times:	
  2175                           ; 2 bytes @ 0x0
  2176                           
  2177  0070                     ___lwmod@divisor:	
  2178                           ; 2 bytes @ 0x0
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x0
  2182  0070                     	ds	1
  2183  0071                     control595_delay@times:	
  2184                           
  2185                           ; 1 bytes @ 0x1
  2186  0071                     	ds	1
  2187  0072                     ??_times2number:	
  2188  0072                     ??_write_byte:	
  2189                           ; 1 bytes @ 0x2
  2190                           
  2191  0072                     ___lwmod@dividend:	
  2192                           ; 1 bytes @ 0x2
  2193                           
  2194                           
  2195                           ; 2 bytes @ 0x2
  2196  0072                     	ds	2
  2197  0074                     ??___lwmod:	
  2198  0074                     write_byte@data:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x4
  2203  0074                     	ds	1
  2204  0075                     write_byte@i:	
  2205  0075                     ___lwmod@counter:	
  2206                           ; 1 bytes @ 0x5
  2207                           
  2208                           
  2209                           ; 1 bytes @ 0x5
  2210  0075                     	ds	1
  2211  0076                     ?_write_once:	
  2212  0076                     write_once@HR:	
  2213                           ; 1 bytes @ 0x6
  2214                           
  2215                           
  2216                           ; 1 bytes @ 0x6
  2217  0076                     	ds	1
  2218  0077                     write_once@ML:	
  2219                           
  2220                           ; 1 bytes @ 0x7
  2221  0077                     	ds	1
  2222  0078                     write_once@MR:	
  2223                           
  2224                           ; 1 bytes @ 0x8
  2225  0078                     	ds	1
  2226  0079                     ??_write_once:	
  2227  0079                     write_once@HL:	
  2228                           ; 1 bytes @ 0x9
  2229                           
  2230                           
  2231                           ; 1 bytes @ 0x9
  2232  0079                     	ds	1
  2233  007A                     ??_update_display:	
  2234                           
  2235                           ; 1 bytes @ 0xA
  2236  007A                     	ds	2
  2237  007C                     ??_update_time:	
  2238                           
  2239                           ; 1 bytes @ 0xC
  2240  007C                     	ds	1
  2241                           
  2242                           	psect	cstackBANK0
  2243  0048                     __pcstackBANK0:	
  2244  0048                     ??_receive_decode:	
  2245                           
  2246                           ; 1 bytes @ 0x0
  2247  0048                     	ds	5
  2248  004D                     receive_decode@last_time_h:	
  2249                           
  2250                           ; 2 bytes @ 0x5
  2251  004D                     	ds	2
  2252  004F                     receive_decode@last_time_m:	
  2253                           
  2254                           ; 2 bytes @ 0x7
  2255  004F                     	ds	2
  2256  0051                     _receive_decode$520:	
  2257                           
  2258                           ; 2 bytes @ 0x9
  2259  0051                     	ds	2
  2260  0053                     _receive_decode$521:	
  2261                           
  2262                           ; 2 bytes @ 0xB
  2263  0053                     	ds	2
  2264  0055                     receive_decode@i_522:	
  2265                           
  2266                           ; 2 bytes @ 0xD
  2267  0055                     	ds	2
  2268  0057                     receive_decode@read_value:	
  2269                           
  2270                           ; 1 bytes @ 0xF
  2271  0057                     	ds	1
  2272  0058                     receive_decode@i:	
  2273                           
  2274                           ; 1 bytes @ 0x10
  2275  0058                     	ds	1
  2276  0059                     receive_decode@check:	
  2277                           
  2278                           ; 1 bytes @ 0x11
  2279  0059                     	ds	1
  2280  005A                     ??_ISR:	
  2281                           
  2282                           ; 1 bytes @ 0x12
  2283  005A                     	ds	2
  2284  005C                     ??_IIC_Init:	
  2285  005C                     ??_main:	
  2286                           ; 1 bytes @ 0x14
  2287                           
  2288                           
  2289                           	psect	maintext
  2290  035D                     __pmaintext:	
  2291                           ; 1 bytes @ 0x14
  2292 ;;
  2293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2294 ;;
  2295 ;; *************** function _main *****************
  2296 ;; Defined at:
  2297 ;;		line 207 in file "main.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : B1F/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels required when called:    8
  2317 ;; This function calls:
  2318 ;;		_init_env
  2319 ;; This function is called by:
  2320 ;;		Startup code after reset
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _main
  2326  035D                     _main:	
  2327                           
  2328                           ;main.c: 209:     init_env();
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2332  035D  3181  21C3  3183   	fcall	_init_env
  2333  0360                     l88:	
  2334                           ;main.c: 211:     while(1);
  2335                           
  2336  0360  2B60               	goto	l88
  2337  0361                     __end_of_main:	
  2338                           ;main.c: 212:     return;
  2339                           
  2340                           
  2341                           	psect	text1
  2342  01C3                     __ptext1:	
  2343 ;; *************** function _init_env *****************
  2344 ;; Defined at:
  2345 ;;		line 38 in file "main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  i               2    1[BANK1 ] int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    7
  2366 ;; This function calls:
  2367 ;;		_IIC_Init
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _init_env
  2375  01C3                     _init_env:	
  2376                           
  2377                           ;main.c: 43:     LATA = 0;
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2381  01C3  178B               	bsf	11,7	;volatile
  2382                           
  2383                           ;main.c: 45:     IOCAP = 0;
  2384  01C4  158B               	bsf	11,3	;volatile
  2385                           
  2386                           ;main.c: 49:     LATB = 0;
  2387  01C5  168B               	bsf	11,5	;volatile
  2388                           
  2389                           ;main.c: 55:     LATC = 0;
  2390  01C6  0021               	movlb	1	; select bank1
  2391  01C7  0819               	movf	25,w	;volatile
  2392  01C8  39FC               	andlw	-4
  2393  01C9  3802               	iorlw	2
  2394  01CA  0099               	movwf	25	;volatile
  2395                           
  2396                           ;main.c: 56:     WPUC = 1;
  2397  01CB  0819               	movf	25,w	;volatile
  2398  01CC  3987               	andlw	-121
  2399  01CD  3850               	iorlw	80
  2400  01CE  0099               	movwf	25	;volatile
  2401                           
  2402                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  2403  01CF  1195               	bcf	21,3	;volatile
  2404                           
  2405                           ;main.c: 65: 
  2406  01D0  1295               	bcf	21,5	;volatile
  2407                           
  2408                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  2409  01D1  0815               	movf	21,w	;volatile
  2410  01D2  39F8               	andlw	-8
  2411  01D3  3804               	iorlw	4
  2412  01D4  0095               	movwf	21	;volatile
  2413                           
  2414                           ;main.c: 67:     WPUCbits.WPUC1 = 1;
  2415  01D5  30E7               	movlw	231
  2416  01D6  0020               	movlb	0	; select bank0
  2417  01D7  0095               	movwf	21	;volatile
  2418                           
  2419                           ;main.c: 75:     g_data.g_time_s = 0;
  2420  01D8  0021               	movlb	1	; select bank1
  2421  01D9  1395               	bcf	21,7	;volatile
  2422                           
  2423                           ;main.c: 77: 
  2424  01DA  018C               	clrf	12	;volatile
  2425                           
  2426                           ;main.c: 78: 
  2427  01DB  0022               	movlb	2	; select bank2
  2428  01DC  018C               	clrf	12	;volatile
  2429                           
  2430                           ;main.c: 79:     g_data.g_flg_switch = FALSE;
  2431  01DD  0024               	movlb	4	; select bank4
  2432  01DE  018C               	clrf	12	;volatile
  2433                           
  2434                           ;main.c: 80:     g_data.g_start_read_data = FALSE;
  2435  01DF  0027               	movlb	7	; select bank7
  2436  01E0  0191               	clrf	17	;volatile
  2437                           
  2438                           ;main.c: 81:     g_data.g_find_recv_start = FALSE;
  2439  01E1  0192               	clrf	18	;volatile
  2440                           
  2441                           ;main.c: 83: 
  2442  01E2  0021               	movlb	1	; select bank1
  2443  01E3  018D               	clrf	13	;volatile
  2444                           
  2445                           ;main.c: 84:     g_data.g_high_level_times = 0;
  2446  01E4  0022               	movlb	2	; select bank2
  2447  01E5  018D               	clrf	13	;volatile
  2448                           
  2449                           ;main.c: 85:     g_data.g_all_level_times = 0;
  2450  01E6  0024               	movlb	4	; select bank4
  2451  01E7  018D               	clrf	13	;volatile
  2452                           
  2453                           ;main.c: 86:     g_data.g_recv_count = 0;
  2454  01E8  0027               	movlb	7	; select bank7
  2455  01E9  0194               	clrf	20	;volatile
  2456                           
  2457                           ;main.c: 87:     for(int i = 0;i < 20; i++){
  2458  01EA  0195               	clrf	21	;volatile
  2459                           
  2460                           ;main.c: 89:     }
  2461  01EB  0021               	movlb	1	; select bank1
  2462  01EC  018E               	clrf	14	;volatile
  2463                           
  2464                           ;main.c: 90: 
  2465  01ED  0022               	movlb	2	; select bank2
  2466  01EE  018E               	clrf	14	;volatile
  2467                           
  2468                           ;main.c: 91: 
  2469  01EF  3001               	movlw	1
  2470  01F0  0024               	movlb	4	; select bank4
  2471  01F1  008E               	movwf	14	;volatile
  2472                           
  2473                           ;main.c: 92: 
  2474  01F2  0027               	movlb	7	; select bank7
  2475  01F3  0197               	clrf	23	;volatile
  2476                           
  2477                           ;main.c: 93: 
  2478  01F4  0198               	clrf	24	;volatile
  2479                           
  2480                           ;main.c: 98: 
  2481  01F5  0021               	movlb	1	; select bank1
  2482  01F6  168E               	bsf	14,5	;volatile
  2483                           
  2484                           ;main.c: 99: 
  2485  01F7  0024               	movlb	4	; select bank4
  2486  01F8  168E               	bsf	14,5	;volatile
  2487                           
  2488                           ;main.c: 101:     WPUCbits.WPUC0 = 1;
  2489  01F9  0021               	movlb	1	; select bank1
  2490  01FA  148E               	bsf	14,1	;volatile
  2491                           
  2492                           ;main.c: 102: 
  2493  01FB  0024               	movlb	4	; select bank4
  2494  01FC  148E               	bsf	14,1	;volatile
  2495                           
  2496                           ;main.c: 103: 
  2497  01FD  0027               	movlb	7	; select bank7
  2498  01FE  1497               	bsf	23,1	;volatile
  2499  01FF  0020               	movlb	0	; select bank0
  2500  0200  01A3               	clrf	_g_data+3	;volatile
  2501  0201  01A4               	clrf	_g_data+4	;volatile
  2502  0202  01A5               	clrf	_g_data+5	;volatile
  2503  0203  01A6               	clrf	_g_data+6	;volatile
  2504  0204  01A0               	clrf	_g_data	;volatile
  2505  0205  01A1               	clrf	_g_data+1	;volatile
  2506  0206  01A2               	clrf	_g_data+2	;volatile
  2507  0207  01A7               	clrf	_g_data+7	;volatile
  2508  0208  01A8               	clrf	_g_data+8	;volatile
  2509  0209  01A9               	clrf	_g_data+9	;volatile
  2510  020A  01AA               	clrf	_g_data+10	;volatile
  2511  020B  01AB               	clrf	_g_data+11	;volatile
  2512  020C  01AC               	clrf	_g_data+12	;volatile
  2513  020D  0021               	movlb	1	; select bank1
  2514  020E  01A1               	clrf	init_env@i^(0+128)
  2515  020F  01A2               	clrf	(init_env@i+1)^(0+128)
  2516  0210  0822               	movf	(init_env@i+1)^(0+128),w
  2517  0211  3A80               	xorlw	128
  2518  0212  00A0               	movwf	??_init_env^(0+128)
  2519  0213  3080               	movlw	128
  2520  0214  0220               	subwf	??_init_env^(0+128),w
  2521  0215  1D03               	skipz
  2522  0216  2A19               	goto	u1475
  2523  0217  3014               	movlw	20
  2524  0218  0221               	subwf	init_env@i^(0+128),w
  2525  0219                     u1475:	
  2526  0219  1803               	btfsc	3,0
  2527  021A  2A33               	goto	l64
  2528  021B                     l1928:	
  2529  021B  3005               	movlw	5
  2530  021C  0021               	movlb	1	; select bank1
  2531  021D  00A0               	movwf	??_init_env^(0+128)
  2532  021E  0821               	movf	init_env@i^(0+128),w
  2533  021F  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2534  0220  0086               	movwf	6
  2535  0221  0187               	clrf	7
  2536  0222  0820               	movf	??_init_env^(0+128),w
  2537  0223  0081               	movwf	1
  2538  0224  3001               	movlw	1
  2539  0225  07A1               	addwf	init_env@i^(0+128),f
  2540  0226  3000               	movlw	0
  2541  0227  3DA2               	addwfc	(init_env@i+1)^(0+128),f
  2542  0228  0822               	movf	(init_env@i+1)^(0+128),w
  2543  0229  3A80               	xorlw	128
  2544  022A  00A0               	movwf	??_init_env^(0+128)
  2545  022B  3080               	movlw	128
  2546  022C  0220               	subwf	??_init_env^(0+128),w
  2547  022D  1D03               	skipz
  2548  022E  2A31               	goto	u1485
  2549  022F  3014               	movlw	20
  2550  0230  0221               	subwf	init_env@i^(0+128),w
  2551  0231                     u1485:	
  2552  0231  1C03               	skipc
  2553  0232  2A1B               	goto	l1928
  2554  0233                     l64:	
  2555  0233  0020               	movlb	0	; select bank0
  2556  0234  158D               	bsf	13,3	;volatile
  2557  0235  110E               	bcf	14,2	;volatile
  2558  0236  0021               	movlb	1	; select bank1
  2559  0237  140E               	bsf	14,0	;volatile
  2560  0238  0024               	movlb	4	; select bank4
  2561  0239  140E               	bsf	14,0	;volatile
  2562  023A  3183  2332         	fcall	_IIC_Init
  2563  023C  0008               	return
  2564  023D                     __end_of_init_env:	
  2565                           
  2566                           	psect	text2
  2567  0332                     __ptext2:	
  2568 ;; *************** function _IIC_Init *****************
  2569 ;; Defined at:
  2570 ;;		line 8 in file "../AD/AD_temp.X/myiic.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		None
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    6
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_init_env
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _IIC_Init
  2600  0332                     _IIC_Init:	
  2601                           
  2602                           ;../AD/AD_temp.X/myiic.c: 10:     LATC3=1;
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _IIC_Init: []
  2606  0332  0022               	movlb	2	; select bank2
  2607  0333  158E               	bsf	14,3	;volatile
  2608                           
  2609                           ;../AD/AD_temp.X/myiic.c: 11:  LATC4=1;
  2610  0334  160E               	bsf	14,4	;volatile
  2611                           
  2612                           ;../AD/AD_temp.X/myiic.c: 13:     ODCONC3 = 1;
  2613  0335  0025               	movlb	5	; select bank5
  2614  0336  158E               	bsf	14,3	;volatile
  2615                           
  2616                           ;../AD/AD_temp.X/myiic.c: 14:     ODCONC4 = 1;
  2617  0337  160E               	bsf	14,4	;volatile
  2618                           
  2619                           ;../AD/AD_temp.X/myiic.c: 16:     TRISC4 = 0;
  2620  0338  0021               	movlb	1	; select bank1
  2621  0339  120E               	bcf	14,4	;volatile
  2622                           
  2623                           ;../AD/AD_temp.X/myiic.c: 17:     TRISC3 = 0;
  2624  033A  118E               	bcf	14,3	;volatile
  2625                           
  2626                           ;../AD/AD_temp.X/myiic.c: 19:  WPUC4 = 1;
  2627  033B  0024               	movlb	4	; select bank4
  2628  033C  160E               	bsf	14,4	;volatile
  2629                           
  2630                           ;../AD/AD_temp.X/myiic.c: 20:     WPUC3 = 1;
  2631  033D  158E               	bsf	14,3	;volatile
  2632  033E  0008               	return
  2633  033F                     __end_of_IIC_Init:	
  2634                           
  2635                           	psect	intentry
  2636  0004                     __pintentry:	
  2637 ;; *************** function _ISR *****************
  2638 ;; Defined at:
  2639 ;;		line 159 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    5
  2660 ;; This function calls:
  2661 ;;		___lwmod
  2662 ;;		_receive_decode
  2663 ;;		_update_time
  2664 ;; This function is called by:
  2665 ;;		Interrupt level 1
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669  0004                     _ISR:	
  2670                           
  2671                           ;incstack = 0
  2672  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2673                           
  2674                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2675  0005  3180               	pagesel	$
  2676                           
  2677                           ;main.c: 160:     static u8 history_key = 0;;main.c: 161:     static u16 key_time_cnt = 
      +                          0;;main.c: 164:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && 
      +                          g_data.g_flg_switch == TRUE){
  2678  0006  0027               	movlb	7	; select bank7
  2679  0007  1C99               	btfss	25,1	;volatile
  2680  0008  281A               	goto	i1l74
  2681  0009  0020               	movlb	0	; select bank0
  2682  000A  0821               	movf	_g_data+1,w	;volatile
  2683  000B  1D03               	btfss	3,2
  2684  000C  281A               	goto	i1l74
  2685  000D  0320               	decf	_g_data,w	;volatile
  2686  000E  1D03               	btfss	3,2
  2687  000F  281A               	goto	i1l74
  2688                           
  2689                           ;main.c: 166: ;main.c: 169:         g_data.g_start_read_data = TRUE;
  2690  0010  3001               	movlw	1
  2691  0011  00DA               	movwf	??_ISR
  2692  0012  085A               	movf	??_ISR,w
  2693  0013  00A1               	movwf	_g_data+1	;volatile
  2694                           
  2695                           ;main.c: 170:         g_data.g_flg_switch = FALSE;
  2696  0014  01A0               	clrf	_g_data	;volatile
  2697                           
  2698                           ;main.c: 171:         PORTCbits.RC2 = BPC_PWR_ON;
  2699  0015  110E               	bcf	14,2	;volatile
  2700                           
  2701                           ;main.c: 173:         INTCONbits.IOCIF = FALSE;
  2702  0016  100B               	bcf	11,0	;volatile
  2703                           
  2704                           ;main.c: 174:         IOCCFbits.IOCCF1 = FALSE;
  2705  0017  0027               	movlb	7	; select bank7
  2706  0018  1099               	bcf	25,1	;volatile
  2707                           
  2708                           ;main.c: 175:         return;
  2709  0019  285D               	goto	i1l75
  2710  001A                     i1l74:	
  2711                           ;main.c: 176:     }else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1){
  2712                           
  2713  001A  180B               	btfsc	11,0	;volatile
  2714  001B  281F               	goto	i1l79
  2715  001C  0027               	movlb	7	; select bank7
  2716  001D  1C99               	btfss	25,1	;volatile
  2717  001E  2822               	goto	i1l76
  2718  001F                     i1l79:	
  2719                           
  2720                           ;main.c: 177:         INTCONbits.IOCIF = FALSE;
  2721  001F  100B               	bcf	11,0	;volatile
  2722                           
  2723                           ;main.c: 178:         IOCCFbits.IOCCF1 = FALSE;
  2724  0020  0027               	movlb	7	; select bank7
  2725  0021  1099               	bcf	25,1	;volatile
  2726  0022                     i1l76:	
  2727                           ;main.c: 179:     }
  2728                           
  2729                           
  2730                           ;main.c: 182:     if(INTCONbits.TMR0IF){
  2731  0022  1D0B               	btfss	11,2	;volatile
  2732  0023  285D               	goto	i1l75
  2733                           
  2734                           ;main.c: 183:         update_time();
  2735  0024  3182  2288  3180   	fcall	_update_time
  2736                           
  2737                           ;main.c: 185:         if(g_data.g_start_read_data == TRUE ){
  2738  0027  0020               	movlb	0	; select bank0
  2739  0028  0321               	decf	_g_data+1,w	;volatile
  2740  0029  1D03               	btfss	3,2
  2741  002A  282E               	goto	i1l1814
  2742                           
  2743                           ;main.c: 186:             receive_decode();
  2744  002B  3180  206D  3180   	fcall	_receive_decode
  2745  002E                     i1l1814:	
  2746                           ;main.c: 187:         }
  2747                           
  2748                           
  2749                           ;main.c: 190:         if(key_time_cnt++ % 10 == 0)
  2750  002E  300A               	movlw	10
  2751  002F  00F0               	movwf	___lwmod@divisor
  2752  0030  3000               	movlw	0
  2753  0031  00F1               	movwf	___lwmod@divisor+1
  2754  0032  0020               	movlb	0	; select bank0
  2755  0033  0844               	movf	ISR@key_time_cnt+1,w
  2756  0034  00DB               	movwf	??_ISR+1
  2757  0035  0843               	movf	ISR@key_time_cnt,w
  2758  0036  00DA               	movwf	??_ISR
  2759  0037  0AC3               	incf	ISR@key_time_cnt,f
  2760  0038  1903               	skipnz
  2761  0039  0AC4               	incf	ISR@key_time_cnt+1,f
  2762  003A  085A               	movf	??_ISR,w
  2763  003B  00F2               	movwf	___lwmod@dividend
  2764  003C  085B               	movf	??_ISR+1,w
  2765  003D  00F3               	movwf	___lwmod@dividend+1
  2766  003E  3182  22B7  3180   	fcall	___lwmod
  2767  0041  0870               	movf	?___lwmod,w
  2768  0042  0471               	iorwf	?___lwmod+1,w
  2769  0043  1D03               	btfss	3,2
  2770  0044  2859               	goto	i1l1824
  2771                           
  2772                           ;main.c: 191:         {;main.c: 192:             history_key <<= 1;
  2773  0045  1003               	clrc
  2774  0046  0020               	movlb	0	; select bank0
  2775  0047  0DC6               	rlf	ISR@history_key,f
  2776                           
  2777                           ;main.c: 193:             history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  2778  0048  0E0E               	swapf	14,w	;volatile
  2779  0049  0C89               	rrf	9,f
  2780  004A  3901               	andlw	1
  2781  004B  00DA               	movwf	??_ISR
  2782  004C  085A               	movf	??_ISR,w
  2783  004D  04C6               	iorwf	ISR@history_key,f
  2784                           
  2785                           ;main.c: 194:             if((0x03) == (history_key & (0x0f)) )
  2786  004E  300F               	movlw	15
  2787  004F  0546               	andwf	ISR@history_key,w
  2788  0050  00DA               	movwf	??_ISR
  2789  0051  3003               	movlw	3
  2790  0052  065A               	xorwf	??_ISR,w
  2791  0053  1D03               	btfss	3,2
  2792  0054  2859               	goto	i1l1824
  2793                           
  2794                           ;main.c: 195:             {;main.c: 196:                 g_data.g_flg_switch = TRUE;
  2795  0055  3001               	movlw	1
  2796  0056  00DA               	movwf	??_ISR
  2797  0057  085A               	movf	??_ISR,w
  2798  0058  00A0               	movwf	_g_data	;volatile
  2799  0059                     i1l1824:	
  2800                           ;main.c: 198:         }
  2801                           
  2802                           ;main.c: 197:             }
  2803                           
  2804                           
  2805                           ;main.c: 200:         INTCONbits.TMR0IF = 0;
  2806  0059  110B               	bcf	11,2	;volatile
  2807                           
  2808                           ;main.c: 201:         TMR0 = (217 + 14);
  2809  005A  30E7               	movlw	231
  2810  005B  0020               	movlb	0	; select bank0
  2811  005C  0095               	movwf	21	;volatile
  2812  005D                     i1l75:	
  2813                           ;main.c: 204:     return;
  2814                           
  2815                           ;main.c: 203:     }
  2816                           
  2817                           ;main.c: 202:         return;
  2818                           
  2819  005D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2820  005E  0009               	retfie
  2821  005F                     __end_of_ISR:	
  2822                           
  2823                           	psect	text4
  2824  0288                     __ptext4:	
  2825 ;; *************** function _update_time *****************
  2826 ;; Defined at:
  2827 ;;		line 14 in file "update_time.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;Total ram usage:        1 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    4
  2848 ;; This function calls:
  2849 ;;		_update_display
  2850 ;; This function is called by:
  2851 ;;		_ISR
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _update_time
  2857  0288                     _update_time:	
  2858                           
  2859                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2863  0288  3001               	movlw	1
  2864  0289  00FC               	movwf	??_update_time
  2865  028A  087C               	movf	??_update_time,w
  2866  028B  0020               	banksel	_g_data
  2867  028C  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  2868                           
  2869                           ;update_time.c: 16:     if(g_data.g_time_10ms == 100){
  2870  028D  3064               	movlw	100
  2871  028E  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2872  028F  1D03               	btfss	3,2
  2873  0290  0008               	return
  2874                           
  2875                           ;update_time.c: 18:         g_data.g_time_10ms = 0;
  2876  0291  3000               	movlw	0
  2877  0292  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  2878                           
  2879                           ;update_time.c: 19:         g_data.g_time_s++;
  2880  0293  3001               	movlw	1
  2881  0294  00FC               	movwf	??_update_time
  2882  0295  087C               	movf	??_update_time,w
  2883  0296  0020               	banksel	_g_data
  2884  0297  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  2885                           
  2886                           ;update_time.c: 21:         if(g_data.g_time_s == 60){
  2887  0298  303C               	movlw	60
  2888  0299  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  2889  029A  1D03               	btfss	3,2
  2890  029B  0008               	return
  2891                           
  2892                           ;update_time.c: 22:             g_data.g_time_m++;
  2893  029C  3001               	movlw	1
  2894  029D  00FC               	movwf	??_update_time
  2895  029E  087C               	movf	??_update_time,w
  2896  029F  0020               	banksel	_g_data
  2897  02A0  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  2898                           
  2899                           ;update_time.c: 23:             g_data.g_time_s = 0;
  2900  02A1  3000               	movlw	0
  2901  02A2  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  2902                           
  2903                           ;update_time.c: 25:             if(g_data.g_time_m == 60){
  2904  02A3  303C               	movlw	60
  2905  02A4  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  2906  02A5  1D03               	btfss	3,2
  2907  02A6  2AB4               	goto	i1l1632
  2908                           
  2909                           ;update_time.c: 26:                 g_data.g_time_h++;
  2910  02A7  3001               	movlw	1
  2911  02A8  00FC               	movwf	??_update_time
  2912  02A9  087C               	movf	??_update_time,w
  2913  02AA  0020               	banksel	_g_data
  2914  02AB  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  2915                           
  2916                           ;update_time.c: 27:                 g_data.g_time_m = 0;
  2917  02AC  3000               	movlw	0
  2918  02AD  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2919                           
  2920                           ;update_time.c: 29:                 if(g_data.g_time_h == 24){
  2921  02AE  3018               	movlw	24
  2922  02AF  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  2923  02B0  1D03               	btfss	3,2
  2924  02B1  2AB4               	goto	i1l1632
  2925                           
  2926                           ;update_time.c: 30:                     g_data.g_time_h = 0;
  2927  02B2  3000               	movlw	0
  2928  02B3  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2929  02B4                     i1l1632:	
  2930                           ;update_time.c: 32:             }
  2931                           
  2932                           ;update_time.c: 31:                 }
  2933                           
  2934                           
  2935                           ;update_time.c: 34:             update_display();
  2936  02B4  3183  233F         	fcall	_update_display
  2937                           
  2938                           ;update_time.c: 37:     }
  2939                           
  2940                           ;update_time.c: 35:         }
  2941  02B6  0008               	return
  2942  02B7                     __end_of_update_time:	
  2943                           ;update_time.c: 38:     return;
  2944                           
  2945                           
  2946                           	psect	text5
  2947  006D                     __ptext5:	
  2948 ;; *************** function _receive_decode *****************
  2949 ;; Defined at:
  2950 ;;		line 36 in file "receive_decode.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  i               2   13[BANK0 ] int 
  2955 ;;  i               1   16[BANK0 ] unsigned char 
  2956 ;;  last_time_m     2    7[BANK0 ] unsigned short 
  2957 ;;  last_time_h     2    5[BANK0 ] unsigned short 
  2958 ;;  check           1   17[BANK0 ] unsigned char 
  2959 ;;  read_value      1   15[BANK0 ] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;Total ram usage:       18 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    4
  2976 ;; This function calls:
  2977 ;;		_times2number
  2978 ;;		_update_display
  2979 ;; This function is called by:
  2980 ;;		_ISR
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _receive_decode
  2986  006D                     _receive_decode:	
  2987                           
  2988                           ;receive_decode.c: 38:     if(PORTCbits.RC1 == PIN_HIGH){
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2992  006D  0020               	movlb	0	; select bank0
  2993  006E  1C8E               	btfss	14,1	;volatile
  2994  006F  2875               	goto	i1l115
  2995                           
  2996                           ;receive_decode.c: 39:         g_data.g_high_level_times++;
  2997  0070  3001               	movlw	1
  2998  0071  0020               	banksel	_g_data
  2999  0072  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3000  0073  3000               	movlw	0
  3001  0074  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3002  0075                     i1l115:	
  3003                           ;receive_decode.c: 40:     }
  3004                           
  3005                           
  3006                           ;receive_decode.c: 42:     g_data.g_all_level_times++;
  3007  0075  3001               	movlw	1
  3008  0076  0020               	banksel	_g_data
  3009  0077  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3010  0078  3000               	movlw	0
  3011  0079  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3012                           
  3013                           ;receive_decode.c: 46:     if(g_data.g_all_level_times < 100){
  3014  007A  3000               	movlw	0
  3015  007B  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3016  007C  3064               	movlw	100
  3017  007D  1903               	skipnz
  3018  007E  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3019  007F  1C03               	btfss	3,0
  3020  0080  0008               	return
  3021                           
  3022                           ;receive_decode.c: 50:     u8 read_value = times2number(g_data.g_high_level_times);
  3023                           
  3024                           ;receive_decode.c: 48:     }
  3025                           
  3026                           ;receive_decode.c: 47:         return;
  3027  0081  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3028  0082  00F1               	movwf	times2number@high_level_times+1
  3029  0083  0020               	banksel	_g_data
  3030  0084  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3031  0085  00F0               	movwf	times2number@high_level_times
  3032  0086  3182  223D  3180   	fcall	_times2number
  3033  0089  0020               	movlb	0	; select bank0
  3034  008A  00C8               	movwf	??_receive_decode
  3035  008B  0848               	movf	??_receive_decode,w
  3036  008C  00D7               	movwf	receive_decode@read_value
  3037                           
  3038                           ;receive_decode.c: 51:     g_data.g_all_level_times = 0;
  3039  008D  0020               	banksel	_g_data
  3040  008E  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3041  008F  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3042                           
  3043                           ;receive_decode.c: 52:     g_data.g_high_level_times = 0;
  3044  0090  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3045  0091  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3046                           
  3047                           ;receive_decode.c: 54:     if(read_value == 5){
  3048  0092  3005               	movlw	5
  3049  0093  0020               	movlb	0	; select bank0
  3050  0094  0657               	xorwf	receive_decode@read_value,w
  3051  0095  1D03               	btfss	3,2
  3052  0096  28A1               	goto	i1l1652
  3053                           
  3054                           ;receive_decode.c: 56:         g_data.g_find_recv_start = TRUE;
  3055  0097  3001               	movlw	1
  3056  0098  0020               	banksel	_g_data
  3057  0099  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3058                           
  3059                           ;receive_decode.c: 57:         g_data.g_recv_buf[CODE_P0] = 0;
  3060  009A  3000               	movlw	0
  3061  009B  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3062                           
  3063                           ;receive_decode.c: 58:         g_data.g_recv_count = CODE_P1;
  3064  009C  3000               	movlw	0
  3065  009D  00AC               	movwf	((_g_data+1)& (0+127)+11)	;volatile
  3066  009E  3001               	movlw	1
  3067  009F  00AB               	movwf	(_g_data& (0+127)+11)	;volatile
  3068                           
  3069                           ;receive_decode.c: 59:         return;
  3070  00A0  0008               	return
  3071  00A1                     i1l1652:	
  3072                           ;receive_decode.c: 60:     }
  3073                           
  3074                           
  3075                           ;receive_decode.c: 62:     if(g_data.g_find_recv_start == FALSE || (read_value == 4)){
  3076  00A1  0020               	banksel	_g_data
  3077  00A2  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3078  00A3  1903               	btfsc	3,2
  3079  00A4  0008               	return
  3080  00A5  3004               	movlw	4
  3081  00A6  0020               	movlb	0	; select bank0
  3082  00A7  0657               	xorwf	receive_decode@read_value,w
  3083  00A8  1903               	btfsc	3,2
  3084  00A9  0008               	return
  3085                           
  3086                           ;receive_decode.c: 68:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3087                           
  3088                           ;receive_decode.c: 66:     }
  3089                           
  3090                           ;receive_decode.c: 65:         return;
  3091  00AA  3020               	movlw	low _g_data
  3092  00AB  0086               	movwf	6
  3093  00AC  3000               	movlw	high _g_data
  3094  00AD  0087               	movwf	7
  3095  00AE  314B               	addfsr 1,11
  3096  00AF  302D               	movlw	low (_g_data+13)
  3097  00B0  00C8               	movwf	??_receive_decode
  3098  00B1  3000               	movlw	high (_g_data+13)
  3099  00B2  00C9               	movwf	??_receive_decode+1
  3100  00B3  3F40               	moviw [0]fsr1
  3101  00B4  0748               	addwf	??_receive_decode,w
  3102  00B5  00CA               	movwf	??_receive_decode+2
  3103  00B6  3F41               	moviw [1]fsr1
  3104  00B7  3D49               	addwfc	??_receive_decode+1,w
  3105  00B8  00CB               	movwf	??_receive_decode+3
  3106  00B9  084A               	movf	??_receive_decode+2,w
  3107  00BA  0086               	movwf	6
  3108  00BB  084B               	movf	??_receive_decode+3,w
  3109  00BC  0087               	movwf	7
  3110  00BD  0857               	movf	receive_decode@read_value,w
  3111  00BE  0081               	movwf	1
  3112  00BF  3001               	movlw	1
  3113  00C0  0020               	banksel	_g_data
  3114  00C1  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3115  00C2  3000               	movlw	0
  3116  00C3  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3117                           
  3118                           ;receive_decode.c: 69:     if(g_data.g_recv_count <= CODE_P3){
  3119  00C4  3000               	movlw	0
  3120  00C5  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3121  00C6  300B               	movlw	11
  3122  00C7  1903               	skipnz
  3123  00C8  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3124  00C9  1C03               	btfss	3,0
  3125  00CA  0008               	return
  3126                           
  3127                           ;receive_decode.c: 73:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE_
      +                          P2] != 0){
  3128                           
  3129                           ;receive_decode.c: 71:     }
  3130                           
  3131                           ;receive_decode.c: 70:         return;
  3132  00CB  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3133  00CC  1903               	btfsc	3,2
  3134  00CD  28D8               	goto	i1l1674
  3135  00CE  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3136  00CF  1903               	btfsc	3,2
  3137  00D0  28D8               	goto	i1l1674
  3138                           
  3139                           ;receive_decode.c: 74:         g_data.g_find_recv_start = FALSE;
  3140  00D1  3000               	movlw	0
  3141  00D2  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3142                           
  3143                           ;receive_decode.c: 75:         g_data.g_start_read_data = 0;
  3144  00D3  3000               	movlw	0
  3145  00D4  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3146                           
  3147                           ;receive_decode.c: 76:         g_data.g_recv_count = 0;
  3148  00D5  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3149  00D6  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3150                           
  3151                           ;receive_decode.c: 77:         return;
  3152  00D7  0008               	return
  3153  00D8                     i1l1674:	
  3154                           ;receive_decode.c: 78:     }
  3155                           
  3156                           
  3157                           ;receive_decode.c: 80:     u16 last_time_h = g_data.g_time_h;
  3158  00D8  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3159  00D9  0020               	movlb	0	; select bank0
  3160  00DA  00C8               	movwf	??_receive_decode
  3161  00DB  01C9               	clrf	??_receive_decode+1
  3162  00DC  0848               	movf	??_receive_decode,w
  3163  00DD  00CD               	movwf	receive_decode@last_time_h
  3164  00DE  0849               	movf	??_receive_decode+1,w
  3165  00DF  00CE               	movwf	receive_decode@last_time_h+1
  3166                           
  3167                           ;receive_decode.c: 81:     u16 last_time_m = g_data.g_time_m;
  3168  00E0  0020               	banksel	_g_data
  3169  00E1  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3170  00E2  0020               	movlb	0	; select bank0
  3171  00E3  00C8               	movwf	??_receive_decode
  3172  00E4  01C9               	clrf	??_receive_decode+1
  3173  00E5  0848               	movf	??_receive_decode,w
  3174  00E6  00CF               	movwf	receive_decode@last_time_m
  3175  00E7  0849               	movf	??_receive_decode+1,w
  3176  00E8  00D0               	movwf	receive_decode@last_time_m+1
  3177                           
  3178                           ;receive_decode.c: 82:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g_
      +                          recv_buf[CODE_H_2];
  3179  00E9  0020               	banksel	_g_data
  3180  00EA  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  3181  00EB  0020               	movlb	0	; select bank0
  3182  00EC  00C8               	movwf	??_receive_decode
  3183  00ED  3002               	movlw	2
  3184  00EE                     u112_25:	
  3185  00EE  35C8               	lslf	??_receive_decode,f
  3186  00EF  0B89               	decfsz	9,f
  3187  00F0  28EE               	goto	u112_25
  3188  00F1  0020               	banksel	_g_data
  3189  00F2  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  3190  00F3  0020               	movlb	0	; select bank0
  3191  00F4  0748               	addwf	??_receive_decode,w
  3192  00F5  00C9               	movwf	??_receive_decode+1
  3193  00F6  0849               	movf	??_receive_decode+1,w
  3194  00F7  0020               	banksel	_g_data
  3195  00F8  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3196                           
  3197                           ;receive_decode.c: 83:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.g
      +                          _recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  3198  00F9  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  3199  00FA  0020               	movlb	0	; select bank0
  3200  00FB  00C8               	movwf	??_receive_decode
  3201  00FC  3004               	movlw	4
  3202  00FD                     u113_25:	
  3203  00FD  35C8               	lslf	??_receive_decode,f
  3204  00FE  0B89               	decfsz	9,f
  3205  00FF  28FD               	goto	u113_25
  3206  0100  0020               	banksel	_g_data
  3207  0101  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  3208  0102  0020               	movlb	0	; select bank0
  3209  0103  00C9               	movwf	??_receive_decode+1
  3210  0104  3001               	movlw	1
  3211  0105                     u114_25:	
  3212  0105  35C9               	lslf	??_receive_decode+1,f
  3213  0106  3EFF               	addlw	-1
  3214  0107  1D03               	skipz
  3215  0108  2905               	goto	u114_25
  3216  0109  3549               	lslf	??_receive_decode+1,w
  3217  010A  0748               	addwf	??_receive_decode,w
  3218  010B  00CA               	movwf	??_receive_decode+2
  3219  010C  0020               	banksel	_g_data
  3220  010D  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  3221  010E  0020               	movlb	0	; select bank0
  3222  010F  074A               	addwf	??_receive_decode+2,w
  3223  0110  00CB               	movwf	??_receive_decode+3
  3224  0111  084B               	movf	??_receive_decode+3,w
  3225  0112  0020               	banksel	_g_data
  3226  0113  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3227                           
  3228                           ;receive_decode.c: 84:     u8 check = 0;
  3229  0114  0020               	movlb	0	; select bank0
  3230  0115  01D9               	clrf	receive_decode@check
  3231                           
  3232                           ;receive_decode.c: 85:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  3233  0116  01D8               	clrf	receive_decode@i
  3234  0117  0AD8               	incf	receive_decode@i,f
  3235  0118  300A               	movlw	10
  3236  0119  0258               	subwf	receive_decode@i,w
  3237  011A  1803               	btfsc	3,0
  3238  011B  2935               	goto	i1l1694
  3239  011C                     i1l1688:	
  3240                           
  3241                           ;receive_decode.c: 86:     {;receive_decode.c: 87:         check ^= g_data.g_recv_buf[i]
      +                          ;
  3242  011C  0858               	movf	receive_decode@i,w
  3243  011D  00C8               	movwf	??_receive_decode
  3244  011E  01C9               	clrf	??_receive_decode+1
  3245  011F  302D               	movlw	low (_g_data+13)
  3246  0120  00CA               	movwf	??_receive_decode+2
  3247  0121  3000               	movlw	high (_g_data+13)
  3248  0122  00CB               	movwf	??_receive_decode+3
  3249  0123  0848               	movf	??_receive_decode,w
  3250  0124  074A               	addwf	??_receive_decode+2,w
  3251  0125  0086               	movwf	6
  3252  0126  0849               	movf	??_receive_decode+1,w
  3253  0127  3D4B               	addwfc	??_receive_decode+3,w
  3254  0128  0087               	movwf	7
  3255  0129  0801               	movf	1,w
  3256  012A  00CC               	movwf	??_receive_decode+4
  3257  012B  084C               	movf	??_receive_decode+4,w
  3258  012C  06D9               	xorwf	receive_decode@check,f
  3259                           
  3260                           ;receive_decode.c: 88:     }
  3261  012D  3001               	movlw	1
  3262  012E  00C8               	movwf	??_receive_decode
  3263  012F  0848               	movf	??_receive_decode,w
  3264  0130  07D8               	addwf	receive_decode@i,f
  3265  0131  300A               	movlw	10
  3266  0132  0258               	subwf	receive_decode@i,w
  3267  0133  1C03               	skipc
  3268  0134  291C               	goto	i1l1688
  3269  0135                     i1l1694:	
  3270                           
  3271                           ;receive_decode.c: 89:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[CO
      +                          DE_P3] % 2 == 0) )
  3272  0135  0859               	movf	receive_decode@check,w
  3273  0136  1903               	btfsc	3,2
  3274  0137  293C               	goto	i1l128
  3275  0138  3003               	movlw	3
  3276  0139  0659               	xorwf	receive_decode@check,w
  3277  013A  1D03               	btfss	3,2
  3278  013B  294E               	goto	i1l1706
  3279  013C                     i1l128:	
  3280  013C  0020               	banksel	_g_data
  3281  013D  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  3282  013E  294E               	goto	i1l1706
  3283                           
  3284                           ;receive_decode.c: 90:     {;receive_decode.c: 91:         g_data.g_time_h += (2 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  3285  013F  3002               	movlw	2
  3286  0140  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3287  0141  1903               	btfsc	3,2
  3288  0142  2947               	goto	i1l1702
  3289  0143  0020               	movlb	0	; select bank0
  3290  0144  01D1               	clrf	_receive_decode$520
  3291  0145  01D2               	clrf	_receive_decode$520+1
  3292  0146  294C               	goto	i1l1704
  3293  0147                     i1l1702:	
  3294  0147  300C               	movlw	12
  3295  0148  0020               	movlb	0	; select bank0
  3296  0149  00D1               	movwf	_receive_decode$520
  3297  014A  3000               	movlw	0
  3298  014B  00D2               	movwf	_receive_decode$520+1
  3299  014C                     i1l1704:	
  3300  014C  0851               	movf	_receive_decode$520,w
  3301  014D  296C               	goto	L1
  3302  014E                     i1l1706:	
  3303                           ;receive_decode.c: 92:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_recv
      +                          _buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  3304                           
  3305  014E  0020               	movlb	0	; select bank0
  3306  014F  0359               	decf	receive_decode@check,w
  3307  0150  1903               	btfsc	3,2
  3308  0151  2956               	goto	i1l1710
  3309  0152  3002               	movlw	2
  3310  0153  0659               	xorwf	receive_decode@check,w
  3311  0154  1D03               	btfss	3,2
  3312  0155  2971               	goto	i1l134
  3313  0156                     i1l1710:	
  3314  0156  0020               	banksel	_g_data
  3315  0157  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  3316  0158  1903               	btfsc	3,2
  3317  0159  295E               	goto	i1l1714
  3318  015A  3003               	movlw	3
  3319  015B  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3320  015C  1D03               	btfss	3,2
  3321  015D  2971               	goto	i1l134
  3322  015E                     i1l1714:	
  3323                           
  3324                           ;receive_decode.c: 94:     {;receive_decode.c: 95:         g_data.g_time_h += (3 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  3325  015E  3003               	movlw	3
  3326  015F  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3327  0160  1903               	btfsc	3,2
  3328  0161  2966               	goto	i1l1718
  3329  0162  0020               	movlb	0	; select bank0
  3330  0163  01D3               	clrf	_receive_decode$521
  3331  0164  01D4               	clrf	_receive_decode$521+1
  3332  0165  296B               	goto	i1l1720
  3333  0166                     i1l1718:	
  3334  0166  300C               	movlw	12
  3335  0167  0020               	movlb	0	; select bank0
  3336  0168  00D3               	movwf	_receive_decode$521
  3337  0169  3000               	movlw	0
  3338  016A  00D4               	movwf	_receive_decode$521+1
  3339  016B                     i1l1720:	
  3340  016B  0853               	movf	_receive_decode$521,w
  3341  016C                     L1:	
  3342  016C  00C8               	movwf	??_receive_decode
  3343  016D  0848               	movf	??_receive_decode,w
  3344  016E  0020               	banksel	_g_data
  3345  016F  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  3346                           
  3347                           ;receive_decode.c: 96:     }else{
  3348  0170  2979               	goto	i1l1726
  3349  0171                     i1l134:	
  3350                           
  3351                           ;receive_decode.c: 97:         g_data.g_find_recv_start = FALSE;
  3352  0171  3000               	movlw	0
  3353  0172  0020               	banksel	_g_data
  3354  0173  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3355                           
  3356                           ;receive_decode.c: 98:         g_data.g_start_read_data = 0;
  3357  0174  3000               	movlw	0
  3358  0175  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3359                           
  3360                           ;receive_decode.c: 99:         g_data.g_recv_count = 0;
  3361  0176  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3362  0177  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3363                           
  3364                           ;receive_decode.c: 100:         return;
  3365  0178  0008               	return
  3366  0179                     i1l1726:	
  3367                           ;receive_decode.c: 101:     }
  3368                           
  3369                           
  3370                           ;receive_decode.c: 103:     if(last_time_h != g_data.g_time_h || last_time_m != g_data.g
      +                          _time_m){
  3371  0179  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3372  017A  0020               	movlb	0	; select bank0
  3373  017B  00C8               	movwf	??_receive_decode
  3374  017C  01C9               	clrf	??_receive_decode+1
  3375  017D  084E               	movf	receive_decode@last_time_h+1,w
  3376  017E  0649               	xorwf	??_receive_decode+1,w
  3377  017F  1D03               	skipz
  3378  0180  2983               	goto	u126_25
  3379  0181  084D               	movf	receive_decode@last_time_h,w
  3380  0182  0648               	xorwf	??_receive_decode,w
  3381  0183                     u126_25:	
  3382  0183  1D03               	skipz
  3383  0184  2992               	goto	i1l1730
  3384  0185  0020               	banksel	_g_data
  3385  0186  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3386  0187  0020               	movlb	0	; select bank0
  3387  0188  00C8               	movwf	??_receive_decode
  3388  0189  01C9               	clrf	??_receive_decode+1
  3389  018A  0850               	movf	receive_decode@last_time_m+1,w
  3390  018B  0649               	xorwf	??_receive_decode+1,w
  3391  018C  1D03               	skipz
  3392  018D  2990               	goto	u127_25
  3393  018E  084F               	movf	receive_decode@last_time_m,w
  3394  018F  0648               	xorwf	??_receive_decode,w
  3395  0190                     u127_25:	
  3396  0190  1903               	skipnz
  3397  0191  2995               	goto	i1l1732
  3398  0192                     i1l1730:	
  3399                           
  3400                           ;receive_decode.c: 104:         update_display();
  3401  0192  3183  233F  3180   	fcall	_update_display
  3402  0195                     i1l1732:	
  3403                           ;receive_decode.c: 105:     }
  3404                           
  3405                           
  3406                           ;receive_decode.c: 108:     g_data.g_find_recv_start = FALSE;
  3407  0195  3000               	movlw	0
  3408  0196  0020               	banksel	_g_data
  3409  0197  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3410                           
  3411                           ;receive_decode.c: 109:     PORTCbits.RC2 = BPC_PWR_OFF;
  3412  0198  0020               	movlb	0	; select bank0
  3413  0199  150E               	bsf	14,2	;volatile
  3414                           
  3415                           ;receive_decode.c: 110:     g_data.g_start_read_data = 0;
  3416  019A  3000               	movlw	0
  3417  019B  0020               	banksel	_g_data
  3418  019C  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3419                           
  3420                           ;receive_decode.c: 111:     g_data.g_recv_count = 0;
  3421  019D  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3422  019E  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3423                           
  3424                           ;receive_decode.c: 112:     for(int i = 0;i < 20; i++){
  3425  019F  0020               	movlb	0	; select bank0
  3426  01A0  01D5               	clrf	receive_decode@i_522
  3427  01A1  01D6               	clrf	receive_decode@i_522+1
  3428  01A2                     L2:	
  3429  01A2  0856               	movf	receive_decode@i_522+1,w
  3430  01A3  3A80               	xorlw	128
  3431  01A4  00C8               	movwf	??_receive_decode
  3432  01A5  3080               	movlw	128
  3433  01A6  0248               	subwf	??_receive_decode,w
  3434  01A7  1D03               	skipz
  3435  01A8  29AB               	goto	u128_25
  3436  01A9  3014               	movlw	20
  3437  01AA  0255               	subwf	receive_decode@i_522,w
  3438  01AB                     u128_25:	
  3439  01AB  1803               	btfsc	3,0
  3440  01AC  0008               	return
  3441                           
  3442                           ;receive_decode.c: 113:         g_data.g_recv_buf[i] = 5;
  3443  01AD  302D               	movlw	low (_g_data+13)
  3444  01AE  0020               	movlb	0	; select bank0
  3445  01AF  00C8               	movwf	??_receive_decode
  3446  01B0  3000               	movlw	high (_g_data+13)
  3447  01B1  00C9               	movwf	??_receive_decode+1
  3448  01B2  0855               	movf	receive_decode@i_522,w
  3449  01B3  0748               	addwf	??_receive_decode,w
  3450  01B4  00CA               	movwf	??_receive_decode+2
  3451  01B5  0856               	movf	receive_decode@i_522+1,w
  3452  01B6  3D49               	addwfc	??_receive_decode+1,w
  3453  01B7  00CB               	movwf	??_receive_decode+3
  3454  01B8  084A               	movf	??_receive_decode+2,w
  3455  01B9  0086               	movwf	6
  3456  01BA  084B               	movf	??_receive_decode+3,w
  3457  01BB  0087               	movwf	7
  3458  01BC  3005               	movlw	5
  3459  01BD  0081               	movwf	1
  3460                           
  3461                           ;receive_decode.c: 114:     }
  3462  01BE  3001               	movlw	1
  3463  01BF  07D5               	addwf	receive_decode@i_522,f
  3464  01C0  3000               	movlw	0
  3465  01C1  3DD6               	addwfc	receive_decode@i_522+1,f
  3466  01C2  29A2               	goto	L2
  3467  01C3                     __end_of_receive_decode:	
  3468                           ;receive_decode.c: 115:     return;
  3469                           
  3470                           
  3471                           	psect	text6
  3472  033F                     __ptext6:	
  3473 ;; *************** function _update_display *****************
  3474 ;; Defined at:
  3475 ;;		line 63 in file "update_display.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;Total ram usage:        2 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    3
  3496 ;; This function calls:
  3497 ;;		_write_once
  3498 ;; This function is called by:
  3499 ;;		_receive_decode
  3500 ;;		_update_time
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _update_display
  3506  033F                     _update_display:	
  3507                           
  3508                           ;update_display.c: 74:     write_once(0xff, 0x00, 0xf0, 0x0f);
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  3512  033F  01F6               	clrf	write_once@HR
  3513  0340  30F0               	movlw	240
  3514  0341  00FA               	movwf	??_update_display
  3515  0342  087A               	movf	??_update_display,w
  3516  0343  00F7               	movwf	write_once@ML
  3517  0344  300F               	movlw	15
  3518  0345  00FB               	movwf	??_update_display+1
  3519  0346  087B               	movf	??_update_display+1,w
  3520  0347  00F8               	movwf	write_once@MR
  3521  0348  30FF               	movlw	255
  3522  0349  3183  230A         	fcall	_write_once
  3523  034B  0008               	return
  3524  034C                     __end_of_update_display:	
  3525                           ;update_display.c: 75:     return;
  3526                           
  3527                           
  3528                           	psect	text7
  3529  030A                     __ptext7:	
  3530 ;; *************** function _write_once *****************
  3531 ;; Defined at:
  3532 ;;		line 51 in file "update_display.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  HL              1    wreg     unsigned char 
  3535 ;;  HR              1    6[COMMON] unsigned char 
  3536 ;;  ML              1    7[COMMON] unsigned char 
  3537 ;;  MR              1    8[COMMON] unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  HL              1    9[COMMON] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    2
  3556 ;; This function calls:
  3557 ;;		_control595_delay
  3558 ;;		_write_byte
  3559 ;; This function is called by:
  3560 ;;		_update_display
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function _write_once
  3566  030A                     _write_once:	
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  3570                           ;write_once@HL stored from wreg
  3571  030A  00F9               	movwf	write_once@HL
  3572                           
  3573                           ;update_display.c: 53:     write_byte(HL);
  3574  030B  0879               	movf	write_once@HL,w
  3575  030C  3182  22E3  3183   	fcall	_write_byte
  3576                           
  3577                           ;update_display.c: 54:     write_byte(HR);
  3578  030F  0876               	movf	write_once@HR,w
  3579  0310  3182  22E3  3183   	fcall	_write_byte
  3580                           
  3581                           ;update_display.c: 55:     write_byte(ML);
  3582  0313  0877               	movf	write_once@ML,w
  3583  0314  3182  22E3  3183   	fcall	_write_byte
  3584                           
  3585                           ;update_display.c: 56:     write_byte(MR);
  3586  0317  0878               	movf	write_once@MR,w
  3587  0318  3182  22E3  3183   	fcall	_write_byte
  3588                           
  3589                           ;update_display.c: 58:     PORTBbits.RB1 = PIN_HIGH;
  3590  031B  0020               	movlb	0	; select bank0
  3591  031C  148D               	bsf	13,1	;volatile
  3592                           
  3593                           ;update_display.c: 59:  control595_delay();
  3594  031D  3183  234C         	fcall	_control595_delay
  3595                           
  3596                           ;update_display.c: 60:     PORTBbits.RB1 = PIN_LOW;
  3597  031F  0020               	movlb	0	; select bank0
  3598  0320  108D               	bcf	13,1	;volatile
  3599  0321  0008               	return
  3600  0322                     __end_of_write_once:	
  3601                           
  3602                           	psect	text8
  3603  02E3                     __ptext8:	
  3604 ;; *************** function _write_byte *****************
  3605 ;; Defined at:
  3606 ;;		line 38 in file "update_display.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  data            1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  data            1    4[COMMON] unsigned char 
  3611 ;;  i               1    5[COMMON] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;Total ram usage:        4 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    1
  3628 ;; This function calls:
  3629 ;;		_control595_delay
  3630 ;; This function is called by:
  3631 ;;		_write_once
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _write_byte
  3637  02E3                     _write_byte:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3641                           ;write_byte@data stored from wreg
  3642  02E3  00F4               	movwf	write_byte@data
  3643                           
  3644                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  3645  02E4  01F5               	clrf	write_byte@i
  3646  02E5                     L3:	
  3647  02E5  3008               	movlw	8
  3648  02E6  0275               	subwf	write_byte@i,w
  3649  02E7  1803               	btfsc	3,0
  3650  02E8  0008               	return
  3651                           
  3652                           ;update_display.c: 41:   PORTBbits.RB5 = (data & 0x80) >> 7;
  3653  02E9  0874               	movf	write_byte@data,w
  3654  02EA  00F2               	movwf	??_write_byte
  3655  02EB  3007               	movlw	7
  3656  02EC                     u76_25:	
  3657  02EC  36F2               	lsrf	??_write_byte,f
  3658  02ED  0B89               	decfsz	9,f
  3659  02EE  2AEC               	goto	u76_25
  3660  02EF  0872               	movf	??_write_byte,w
  3661  02F0  3901               	andlw	1
  3662  02F1  00F3               	movwf	??_write_byte+1
  3663  02F2  0EF3               	swapf	??_write_byte+1,f
  3664  02F3  0DF3               	rlf	??_write_byte+1,f
  3665  02F4  0020               	movlb	0	; select bank0
  3666  02F5  080D               	movf	13,w	;volatile
  3667  02F6  0673               	xorwf	??_write_byte+1,w
  3668  02F7  39DF               	andlw	-33
  3669  02F8  0673               	xorwf	??_write_byte+1,w
  3670  02F9  008D               	movwf	13	;volatile
  3671                           
  3672                           ;update_display.c: 42:         PORTBbits.RB0 = PIN_LOW;
  3673  02FA  100D               	bcf	13,0	;volatile
  3674                           
  3675                           ;update_display.c: 43:   control595_delay();
  3676  02FB  3183  234C  3182   	fcall	_control595_delay
  3677                           
  3678                           ;update_display.c: 44:         PORTBbits.RB0 = PIN_HIGH;
  3679  02FE  0020               	movlb	0	; select bank0
  3680  02FF  140D               	bsf	13,0	;volatile
  3681                           
  3682                           ;update_display.c: 45:   control595_delay();
  3683  0300  3183  234C  3182   	fcall	_control595_delay
  3684                           
  3685                           ;update_display.c: 47:         data <<= 1;
  3686  0303  1003               	clrc
  3687  0304  0DF4               	rlf	write_byte@data,f
  3688                           
  3689                           ;update_display.c: 48:     }
  3690  0305  3001               	movlw	1
  3691  0306  00F2               	movwf	??_write_byte
  3692  0307  0872               	movf	??_write_byte,w
  3693  0308  07F5               	addwf	write_byte@i,f
  3694  0309  2AE5               	goto	L3
  3695  030A                     __end_of_write_byte:	
  3696                           
  3697                           	psect	text9
  3698  034C                     __ptext9:	
  3699 ;; *************** function _control595_delay *****************
  3700 ;; Defined at:
  3701 ;;		line 21 in file "update_display.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  times           1    1[COMMON] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_write_byte
  3725 ;;		_write_once
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _control595_delay
  3731  034C                     _control595_delay:	
  3732                           
  3733                           ;update_display.c: 22:    u8 times = 10;
  3734                           
  3735                           ;incstack = 0
  3736                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  3737  034C  300A               	movlw	10
  3738  034D  00F0               	movwf	??_control595_delay
  3739  034E  0870               	movf	??_control595_delay,w
  3740  034F  00F1               	movwf	control595_delay@times
  3741  0350                     i1l172:	
  3742                           ;update_display.c: 26:    }
  3743                           
  3744                           ;update_display.c: 23:    while(times > 0){
  3745                           
  3746                           
  3747                           ;update_display.c: 23:    while(times > 0){
  3748  0350  0871               	movf	control595_delay@times,w
  3749  0351  1903               	btfsc	3,2
  3750  0352  0008               	return
  3751                           
  3752                           ;update_display.c: 24:     __nop();
  3753  0353  0000               	nop
  3754                           
  3755                           ;update_display.c: 25:        times--;
  3756  0354  3001               	movlw	1
  3757  0355  02F1               	subwf	control595_delay@times,f
  3758  0356  2B50               	goto	i1l172
  3759  0357                     __end_of_control595_delay:	
  3760                           
  3761                           	psect	text10
  3762  023D                     __ptext10:	
  3763 ;; *************** function _times2number *****************
  3764 ;; Defined at:
  3765 ;;		line 14 in file "receive_decode.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  high_level_t    2    0[COMMON] unsigned short 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      unsigned char 
  3772 ;; Registers used:
  3773 ;;		wreg
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;Total ram usage:        2 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_receive_decode
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           
  3793                           ;psect for function _times2number
  3794  023D                     _times2number:	
  3795                           
  3796                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  3797                           
  3798                           ;incstack = 0
  3799                           ; Regs used in _times2number: [wreg]
  3800  023D  3000               	movlw	0
  3801  023E  0271               	subwf	times2number@high_level_times+1,w
  3802  023F  3005               	movlw	5
  3803  0240  1903               	skipnz
  3804  0241  0270               	subwf	times2number@high_level_times,w
  3805  0242  1C03               	skipc
  3806  0243  2A4D               	goto	i1l1390
  3807  0244  3000               	movlw	0
  3808  0245  0271               	subwf	times2number@high_level_times+1,w
  3809  0246  300F               	movlw	15
  3810  0247  1903               	skipnz
  3811  0248  0270               	subwf	times2number@high_level_times,w
  3812  0249  1803               	skipnc
  3813  024A  2A4D               	goto	i1l1390
  3814                           
  3815                           ;receive_decode.c: 17:         return 0;
  3816  024B  3000               	movlw	0
  3817                           
  3818                           ;receive_decode.c: 18:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  3819  024C  0008               	return
  3820  024D                     i1l1390:	
  3821  024D  3000               	movlw	0
  3822  024E  0271               	subwf	times2number@high_level_times+1,w
  3823  024F  300F               	movlw	15
  3824  0250  1903               	skipnz
  3825  0251  0270               	subwf	times2number@high_level_times,w
  3826  0252  1C03               	skipc
  3827  0253  2A5D               	goto	i1l1400
  3828  0254  3000               	movlw	0
  3829  0255  0271               	subwf	times2number@high_level_times+1,w
  3830  0256  3019               	movlw	25
  3831  0257  1903               	skipnz
  3832  0258  0270               	subwf	times2number@high_level_times,w
  3833  0259  1803               	skipnc
  3834  025A  2A5D               	goto	i1l1400
  3835                           
  3836                           ;receive_decode.c: 20:         return 1;
  3837  025B  3001               	movlw	1
  3838                           
  3839                           ;receive_decode.c: 21:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  3840  025C  0008               	return
  3841  025D                     i1l1400:	
  3842  025D  3000               	movlw	0
  3843  025E  0271               	subwf	times2number@high_level_times+1,w
  3844  025F  3019               	movlw	25
  3845  0260  1903               	skipnz
  3846  0261  0270               	subwf	times2number@high_level_times,w
  3847  0262  1C03               	skipc
  3848  0263  2A6D               	goto	i1l1410
  3849  0264  3000               	movlw	0
  3850  0265  0271               	subwf	times2number@high_level_times+1,w
  3851  0266  3023               	movlw	35
  3852  0267  1903               	skipnz
  3853  0268  0270               	subwf	times2number@high_level_times,w
  3854  0269  1803               	skipnc
  3855  026A  2A6D               	goto	i1l1410
  3856                           
  3857                           ;receive_decode.c: 23:         return 2;
  3858  026B  3002               	movlw	2
  3859                           
  3860                           ;receive_decode.c: 24:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  3861  026C  0008               	return
  3862  026D                     i1l1410:	
  3863  026D  3000               	movlw	0
  3864  026E  0271               	subwf	times2number@high_level_times+1,w
  3865  026F  3023               	movlw	35
  3866  0270  1903               	skipnz
  3867  0271  0270               	subwf	times2number@high_level_times,w
  3868  0272  1C03               	skipc
  3869  0273  2A7D               	goto	i1l1420
  3870  0274  3000               	movlw	0
  3871  0275  0271               	subwf	times2number@high_level_times+1,w
  3872  0276  302D               	movlw	45
  3873  0277  1903               	skipnz
  3874  0278  0270               	subwf	times2number@high_level_times,w
  3875  0279  1803               	skipnc
  3876  027A  2A7D               	goto	i1l1420
  3877                           
  3878                           ;receive_decode.c: 26:         return 3;
  3879  027B  3003               	movlw	3
  3880                           
  3881                           ;receive_decode.c: 27:     }else if(high_level_times >= 40 + 5){
  3882  027C  0008               	return
  3883  027D                     i1l1420:	
  3884  027D  3000               	movlw	0
  3885  027E  0271               	subwf	times2number@high_level_times+1,w
  3886  027F  302D               	movlw	45
  3887  0280  1903               	skipnz
  3888  0281  0270               	subwf	times2number@high_level_times,w
  3889  0282  1C03               	skipc
  3890  0283  2A86               	goto	i1l1428
  3891                           
  3892                           ;receive_decode.c: 29:         return 4;
  3893  0284  3004               	movlw	4
  3894                           
  3895                           ;receive_decode.c: 30:     }else{
  3896  0285  0008               	return
  3897  0286                     i1l1428:	
  3898                           
  3899                           ;receive_decode.c: 32:         return 5;
  3900  0286  3005               	movlw	5
  3901                           
  3902                           ;receive_decode.c: 33:     }
  3903  0287  0008               	return
  3904  0288                     __end_of_times2number:	
  3905                           
  3906                           	psect	text11
  3907  02B7                     __ptext11:	
  3908 ;; *************** function ___lwmod *****************
  3909 ;; Defined at:
  3910 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  divisor         2    0[COMMON] unsigned int 
  3913 ;;  dividend        2    2[COMMON] unsigned int 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  counter         1    5[COMMON] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2    0[COMMON] unsigned int 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;Total ram usage:        6 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_ISR
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function ___lwmod
  3940  02B7                     ___lwmod:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3944  02B7  0870               	movf	___lwmod@divisor,w
  3945  02B8  0471               	iorwf	___lwmod@divisor+1,w
  3946  02B9  1903               	btfsc	3,2
  3947  02BA  2ADE               	goto	i1l1782
  3948  02BB  01F5               	clrf	___lwmod@counter
  3949  02BC  0AF5               	incf	___lwmod@counter,f
  3950  02BD                     i1l1772:	
  3951  02BD  1BF1               	btfsc	___lwmod@divisor+1,7
  3952  02BE  2AC9               	goto	i1l1774
  3953  02BF  3001               	movlw	1
  3954  02C0                     u132_25:	
  3955  02C0  35F0               	lslf	___lwmod@divisor,f
  3956  02C1  0DF1               	rlf	___lwmod@divisor+1,f
  3957  02C2  0B89               	decfsz	9,f
  3958  02C3  2AC0               	goto	u132_25
  3959  02C4  3001               	movlw	1
  3960  02C5  00F4               	movwf	??___lwmod
  3961  02C6  0874               	movf	??___lwmod,w
  3962  02C7  07F5               	addwf	___lwmod@counter,f
  3963  02C8  2ABD               	goto	i1l1772
  3964  02C9                     i1l1774:	
  3965  02C9  0871               	movf	___lwmod@divisor+1,w
  3966  02CA  0273               	subwf	___lwmod@dividend+1,w
  3967  02CB  1D03               	skipz
  3968  02CC  2ACF               	goto	u134_25
  3969  02CD  0870               	movf	___lwmod@divisor,w
  3970  02CE  0272               	subwf	___lwmod@dividend,w
  3971  02CF                     u134_25:	
  3972  02CF  1C03               	skipc
  3973  02D0  2AD5               	goto	i1l1778
  3974  02D1  0870               	movf	___lwmod@divisor,w
  3975  02D2  02F2               	subwf	___lwmod@dividend,f
  3976  02D3  0871               	movf	___lwmod@divisor+1,w
  3977  02D4  3BF3               	subwfb	___lwmod@dividend+1,f
  3978  02D5                     i1l1778:	
  3979  02D5  3001               	movlw	1
  3980  02D6                     u135_25:	
  3981  02D6  36F1               	lsrf	___lwmod@divisor+1,f
  3982  02D7  0CF0               	rrf	___lwmod@divisor,f
  3983  02D8  0B89               	decfsz	9,f
  3984  02D9  2AD6               	goto	u135_25
  3985  02DA  3001               	movlw	1
  3986  02DB  02F5               	subwf	___lwmod@counter,f
  3987  02DC  1D03               	btfss	3,2
  3988  02DD  2AC9               	goto	i1l1774
  3989  02DE                     i1l1782:	
  3990  02DE  0873               	movf	___lwmod@dividend+1,w
  3991  02DF  00F1               	movwf	?___lwmod+1
  3992  02E0  0872               	movf	___lwmod@dividend,w
  3993  02E1  00F0               	movwf	?___lwmod
  3994  02E2  0008               	return
  3995  02E3                     __end_of___lwmod:	
  3996  007E                     btemp	set	126	;btemp
  3997  007E                     int$flags	set	126
  3998  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      60
    BANK1            80      3       3
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    _main->_init_env

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      99
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      99
                                              0 BANK1      3     3      0
                           _IIC_Init
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    1838
                                             18 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             12 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      18    18      0    1094
                                              0 BANK0     18    18      0
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       2     2      0     433
                                             10 COMMON     2     2      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Mar 30 23:23:47 2019

             ?_receive_decode 0070                   _update_time 0288                   __CFG_CP$OFF 0000  
                          l64 0233                            l88 0360                _update_display 033F  
          _receive_decode$520 0051            _receive_decode$521 0053                   __CFG_LVP$ON 0000  
           ?_control595_delay 0070                           _GIE 005F                           _RC4 0074  
                __CFG_CPD$OFF 0000                           _ISR 0004                  __CFG_BORV$LO 0000  
          ??_control595_delay 0070                           wreg 0009                  __CFG_IESO$ON 0000  
                __CFG_FOSC$HS 0000                          ?_ISR 0070                          l1928 021B  
                        _LATA 010C                          _LATB 010D                          _LATC 010E  
                        _ENUM 0047                          u1475 0219                          u1485 0231  
                        i1l74 001A                          i1l75 005D                          i1l76 0022  
                        i1l79 001F                          _TMR0 0015                          _WPUA 020C  
                        _WPUB 020D                          _WPUC 020E                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _Temp 0041                          _main 035D  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 005F  
               __CFG_MCLRE$ON 0000                         ??_ISR 005A        __end_of_update_display 034C  
            __end_of_IIC_Init 033F                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _LATC3 0873                         _LATC4 0874  
                       _IOCAN 0392                         _IOCAP 0391                         _IOCBN 0395  
                       _IOCBP 0394                         _IOCCN 0398                         _IOCCP 0397  
                       i1l115 0075                         i1l134 0171                         i1l128 013C  
                       i1l172 0350               __end_of___lwmod 02E3                         _TRISA 008C  
                       _TRISB 008D                         _TRISC 008E                         u76_25 02EC  
                       _WPUC3 1073                         _WPUC4 1074                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0061  
                __end_of_main 0361               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 005C                        i1l1400 025D                        i1l1410 026D  
                      i1l1420 027D                        i1l1428 0286                        u112_25 00EE  
                      i1l1390 024D                        i1l1710 0156                        i1l1702 0147  
                      i1l1720 016B                        i1l1704 014C                        i1l1632 02B4  
                      i1l1730 0192                        i1l1714 015E                        i1l1706 014E  
                      i1l1732 0195                        i1l1652 00A1                        u113_25 00FD  
                      i1l1718 0166                        i1l1726 0179                        i1l1814 002E  
                      i1l1824 0059                        i1l1674 00D8                        i1l1772 02BD  
                      u114_25 0105                        i1l1774 02C9                        i1l1782 02DE  
                      i1l1694 0135                        i1l1688 011C                        i1l1778 02D5  
                      u132_25 02C0                        u134_25 02CF                        u126_25 0183  
                      u135_25 02D6                        u127_25 0190                        u128_25 01AB  
                      _TRISC3 0473                        _TRISC4 0474                __CFG_PWRTE$OFF 0000  
                      _g_data 0020                __CFG_STVREN$ON 0000                     ??___lwmod 0074  
            __end_of_init_env 023D                        _temp_h 007D                        _temp_l 0045  
            __end_of_segmcode 0332  times2number@high_level_times 0070       __end_of__initialization 0069  
                   ?_IIC_Init 0070              ??_receive_decode 0048                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                _OPTION_REGbits 0095  
                  __pbssBANK0 0020                    ??_IIC_Init 005C     __size_of_control595_delay 000B  
             __CFG_VCAPEN$OFF 0000                    __pmaintext 035D                    __pintentry 0004  
              ISR@history_key 0046                       _ODCONC3 1473                       _ODCONC4 1474  
         receive_decode@i_522 0055                     ?_init_env 0070           receive_decode@check 0059  
            ??_update_display 007A                       ___lwmod 02B7                       __ptext1 01C3  
                     __ptext2 0332                       __ptext4 0288                       __ptext5 006D  
                     __ptext6 033F                       __ptext7 030A                       __ptext8 02E3  
                     __ptext9 034C                  __size_of_ISR 005B                 ?_times2number 0070  
                   _IOCCFbits 0399                     _IOCCPbits 0397                       clrloop0 0358  
        end_of_initialization 0069                    ??_init_env 00A0          __size_of_update_time 002F  
                   _PORTBbits 000D                     _PORTCbits 000E                ??_times2number 0072  
                   _TRISCbits 008E              _control595_delay 034C             __size_of_IIC_Init 000D  
                write_once@HL 0079                  write_once@HR 0076                  write_once@ML 0077  
                write_once@MR 0078                    _write_byte 02E3                    _write_once 030A  
    receive_decode@read_value 0057           start_initialization 0061                   __end_of_ISR 005F  
             receive_decode@i 0058                   __pbssCOMMON 007D                     ___latbits 0002  
               __pcstackBANK0 0048                 __pcstackBANK1 00A0             __size_of_init_env 007A  
   receive_decode@last_time_h 004D     receive_decode@last_time_m 004F          __end_of_times2number 0288  
                    ?___lwmod 0070       __size_of_receive_decode 0156                   ?_write_byte 0070  
                 ?_write_once 0076               ISR@key_time_cnt 0043                      _IIC_Init 0332  
                   clear_ram0 0357      __end_of_control595_delay 0357                      _WPUCbits 020E  
                 write_byte@i 0075           __size_of_write_byte 0027           __size_of_write_once 0018  
               ??_update_time 007C                     init_env@i 00A1              __size_of___lwmod 002C  
     __size_of_update_display 000D                      __ptext10 023D                      __ptext11 02B7  
       __size_of_times2number 004B                      _init_env 01C3                 __size_of_main 0004  
                    _segmcode 0322                      int$flags 007E                _receive_decode 006D  
         __end_of_update_time 02B7                    _INTCONbits 000B                  _times2number 023D  
                    intlevel1 0000              ___lwmod@dividend 0072             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099        __end_of_receive_decode 01C3                  ??_write_byte 0072  
                ??_write_once 0079                 __pstringtext1 0322               ___lwmod@divisor 0070  
             ___lwmod@counter 0075            __end_of_write_byte 030A            __end_of_write_once 0322  

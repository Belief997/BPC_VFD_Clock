

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 31 17:11:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1786 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011C                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  011F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  028C                     	;# 
   188  028D                     	;# 
   189  028E                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0298                     	;# 
   195  0298                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  030C                     	;# 
   199  030D                     	;# 
   200  030E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  038C                     	;# 
   206  038D                     	;# 
   207  038E                     	;# 
   208  0390                     	;# 
   209  0391                     	;# 
   210  0392                     	;# 
   211  0393                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  0397                     	;# 
   216  0398                     	;# 
   217  0399                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0511                     	;# 
   222  0513                     	;# 
   223  051A                     	;# 
   224  0811                     	;# 
   225  0812                     	;# 
   226  0813                     	;# 
   227  0814                     	;# 
   228  0815                     	;# 
   229  0816                     	;# 
   230  0817                     	;# 
   231  0818                     	;# 
   232  0819                     	;# 
   233  081A                     	;# 
   234  081B                     	;# 
   235  081C                     	;# 
   236  081D                     	;# 
   237  081E                     	;# 
   238  081F                     	;# 
   239  0820                     	;# 
   240  0821                     	;# 
   241  0821                     	;# 
   242  0822                     	;# 
   243  0823                     	;# 
   244  0823                     	;# 
   245  0824                     	;# 
   246  0825                     	;# 
   247  0825                     	;# 
   248  0826                     	;# 
   249  0827                     	;# 
   250  0827                     	;# 
   251  0828                     	;# 
   252  0829                     	;# 
   253  082A                     	;# 
   254  082B                     	;# 
   255  082C                     	;# 
   256  082D                     	;# 
   257  082E                     	;# 
   258  082F                     	;# 
   259  0831                     	;# 
   260  0832                     	;# 
   261  0833                     	;# 
   262  0834                     	;# 
   263  0835                     	;# 
   264  0836                     	;# 
   265  0837                     	;# 
   266  0838                     	;# 
   267  0839                     	;# 
   268  083A                     	;# 
   269  083B                     	;# 
   270  083C                     	;# 
   271  083D                     	;# 
   272  083E                     	;# 
   273  083F                     	;# 
   274  0840                     	;# 
   275  0841                     	;# 
   276  0841                     	;# 
   277  0842                     	;# 
   278  0843                     	;# 
   279  0843                     	;# 
   280  0844                     	;# 
   281  0845                     	;# 
   282  0845                     	;# 
   283  0846                     	;# 
   284  0847                     	;# 
   285  0847                     	;# 
   286  0848                     	;# 
   287  0849                     	;# 
   288  084A                     	;# 
   289  084B                     	;# 
   290  084C                     	;# 
   291  084D                     	;# 
   292  084E                     	;# 
   293  084F                     	;# 
   294  0851                     	;# 
   295  0852                     	;# 
   296  0853                     	;# 
   297  0854                     	;# 
   298  0855                     	;# 
   299  0856                     	;# 
   300  0857                     	;# 
   301  0858                     	;# 
   302  0859                     	;# 
   303  085A                     	;# 
   304  085B                     	;# 
   305  085C                     	;# 
   306  085D                     	;# 
   307  085E                     	;# 
   308  085F                     	;# 
   309  0860                     	;# 
   310  0861                     	;# 
   311  0861                     	;# 
   312  0862                     	;# 
   313  0863                     	;# 
   314  0863                     	;# 
   315  0864                     	;# 
   316  0865                     	;# 
   317  0865                     	;# 
   318  0866                     	;# 
   319  0867                     	;# 
   320  0867                     	;# 
   321  0868                     	;# 
   322  0869                     	;# 
   323  086A                     	;# 
   324  086B                     	;# 
   325  086C                     	;# 
   326  086D                     	;# 
   327  086E                     	;# 
   328  086F                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  0111                     	;# 
   393  0112                     	;# 
   394  0113                     	;# 
   395  0114                     	;# 
   396  0115                     	;# 
   397  0116                     	;# 
   398  0117                     	;# 
   399  0118                     	;# 
   400  0119                     	;# 
   401  011A                     	;# 
   402  011B                     	;# 
   403  011C                     	;# 
   404  011D                     	;# 
   405  011D                     	;# 
   406  011D                     	;# 
   407  011E                     	;# 
   408  011F                     	;# 
   409  018C                     	;# 
   410  018D                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0193                     	;# 
   417  0194                     	;# 
   418  0195                     	;# 
   419  0196                     	;# 
   420  0197                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  019F                     	;# 
   446  020C                     	;# 
   447  020D                     	;# 
   448  020E                     	;# 
   449  0210                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028E                     	;# 
   469  0291                     	;# 
   470  0291                     	;# 
   471  0292                     	;# 
   472  0293                     	;# 
   473  0298                     	;# 
   474  0298                     	;# 
   475  0299                     	;# 
   476  029A                     	;# 
   477  030C                     	;# 
   478  030D                     	;# 
   479  030E                     	;# 
   480  0311                     	;# 
   481  0311                     	;# 
   482  0312                     	;# 
   483  0313                     	;# 
   484  038C                     	;# 
   485  038D                     	;# 
   486  038E                     	;# 
   487  0390                     	;# 
   488  0391                     	;# 
   489  0392                     	;# 
   490  0393                     	;# 
   491  0394                     	;# 
   492  0395                     	;# 
   493  0396                     	;# 
   494  0397                     	;# 
   495  0398                     	;# 
   496  0399                     	;# 
   497  039D                     	;# 
   498  039E                     	;# 
   499  039F                     	;# 
   500  0511                     	;# 
   501  0513                     	;# 
   502  051A                     	;# 
   503  0811                     	;# 
   504  0812                     	;# 
   505  0813                     	;# 
   506  0814                     	;# 
   507  0815                     	;# 
   508  0816                     	;# 
   509  0817                     	;# 
   510  0818                     	;# 
   511  0819                     	;# 
   512  081A                     	;# 
   513  081B                     	;# 
   514  081C                     	;# 
   515  081D                     	;# 
   516  081E                     	;# 
   517  081F                     	;# 
   518  0820                     	;# 
   519  0821                     	;# 
   520  0821                     	;# 
   521  0822                     	;# 
   522  0823                     	;# 
   523  0823                     	;# 
   524  0824                     	;# 
   525  0825                     	;# 
   526  0825                     	;# 
   527  0826                     	;# 
   528  0827                     	;# 
   529  0827                     	;# 
   530  0828                     	;# 
   531  0829                     	;# 
   532  082A                     	;# 
   533  082B                     	;# 
   534  082C                     	;# 
   535  082D                     	;# 
   536  082E                     	;# 
   537  082F                     	;# 
   538  0831                     	;# 
   539  0832                     	;# 
   540  0833                     	;# 
   541  0834                     	;# 
   542  0835                     	;# 
   543  0836                     	;# 
   544  0837                     	;# 
   545  0838                     	;# 
   546  0839                     	;# 
   547  083A                     	;# 
   548  083B                     	;# 
   549  083C                     	;# 
   550  083D                     	;# 
   551  083E                     	;# 
   552  083F                     	;# 
   553  0840                     	;# 
   554  0841                     	;# 
   555  0841                     	;# 
   556  0842                     	;# 
   557  0843                     	;# 
   558  0843                     	;# 
   559  0844                     	;# 
   560  0845                     	;# 
   561  0845                     	;# 
   562  0846                     	;# 
   563  0847                     	;# 
   564  0847                     	;# 
   565  0848                     	;# 
   566  0849                     	;# 
   567  084A                     	;# 
   568  084B                     	;# 
   569  084C                     	;# 
   570  084D                     	;# 
   571  084E                     	;# 
   572  084F                     	;# 
   573  0851                     	;# 
   574  0852                     	;# 
   575  0853                     	;# 
   576  0854                     	;# 
   577  0855                     	;# 
   578  0856                     	;# 
   579  0857                     	;# 
   580  0858                     	;# 
   581  0859                     	;# 
   582  085A                     	;# 
   583  085B                     	;# 
   584  085C                     	;# 
   585  085D                     	;# 
   586  085E                     	;# 
   587  085F                     	;# 
   588  0860                     	;# 
   589  0861                     	;# 
   590  0861                     	;# 
   591  0862                     	;# 
   592  0863                     	;# 
   593  0863                     	;# 
   594  0864                     	;# 
   595  0865                     	;# 
   596  0865                     	;# 
   597  0866                     	;# 
   598  0867                     	;# 
   599  0867                     	;# 
   600  0868                     	;# 
   601  0869                     	;# 
   602  086A                     	;# 
   603  086B                     	;# 
   604  086C                     	;# 
   605  086D                     	;# 
   606  086E                     	;# 
   607  086F                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  0010                     	;# 
   635  0011                     	;# 
   636  0012                     	;# 
   637  0013                     	;# 
   638  0014                     	;# 
   639  0015                     	;# 
   640  0016                     	;# 
   641  0016                     	;# 
   642  0017                     	;# 
   643  0018                     	;# 
   644  0019                     	;# 
   645  001A                     	;# 
   646  001B                     	;# 
   647  001C                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  0090                     	;# 
   652  0091                     	;# 
   653  0092                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  009F                     	;# 
   668  010C                     	;# 
   669  010D                     	;# 
   670  010E                     	;# 
   671  0111                     	;# 
   672  0112                     	;# 
   673  0113                     	;# 
   674  0114                     	;# 
   675  0115                     	;# 
   676  0116                     	;# 
   677  0117                     	;# 
   678  0118                     	;# 
   679  0119                     	;# 
   680  011A                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011D                     	;# 
   686  011E                     	;# 
   687  011F                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  0191                     	;# 
   691  0191                     	;# 
   692  0192                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  0199                     	;# 
   702  0199                     	;# 
   703  019A                     	;# 
   704  019A                     	;# 
   705  019A                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019C                     	;# 
   714  019D                     	;# 
   715  019D                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019E                     	;# 
   719  019E                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  019F                     	;# 
   723  019F                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020D                     	;# 
   727  020E                     	;# 
   728  0210                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  028C                     	;# 
   746  028D                     	;# 
   747  028E                     	;# 
   748  0291                     	;# 
   749  0291                     	;# 
   750  0292                     	;# 
   751  0293                     	;# 
   752  0298                     	;# 
   753  0298                     	;# 
   754  0299                     	;# 
   755  029A                     	;# 
   756  030C                     	;# 
   757  030D                     	;# 
   758  030E                     	;# 
   759  0311                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  038C                     	;# 
   764  038D                     	;# 
   765  038E                     	;# 
   766  0390                     	;# 
   767  0391                     	;# 
   768  0392                     	;# 
   769  0393                     	;# 
   770  0394                     	;# 
   771  0395                     	;# 
   772  0396                     	;# 
   773  0397                     	;# 
   774  0398                     	;# 
   775  0399                     	;# 
   776  039D                     	;# 
   777  039E                     	;# 
   778  039F                     	;# 
   779  0511                     	;# 
   780  0513                     	;# 
   781  051A                     	;# 
   782  0811                     	;# 
   783  0812                     	;# 
   784  0813                     	;# 
   785  0814                     	;# 
   786  0815                     	;# 
   787  0816                     	;# 
   788  0817                     	;# 
   789  0818                     	;# 
   790  0819                     	;# 
   791  081A                     	;# 
   792  081B                     	;# 
   793  081C                     	;# 
   794  081D                     	;# 
   795  081E                     	;# 
   796  081F                     	;# 
   797  0820                     	;# 
   798  0821                     	;# 
   799  0821                     	;# 
   800  0822                     	;# 
   801  0823                     	;# 
   802  0823                     	;# 
   803  0824                     	;# 
   804  0825                     	;# 
   805  0825                     	;# 
   806  0826                     	;# 
   807  0827                     	;# 
   808  0827                     	;# 
   809  0828                     	;# 
   810  0829                     	;# 
   811  082A                     	;# 
   812  082B                     	;# 
   813  082C                     	;# 
   814  082D                     	;# 
   815  082E                     	;# 
   816  082F                     	;# 
   817  0831                     	;# 
   818  0832                     	;# 
   819  0833                     	;# 
   820  0834                     	;# 
   821  0835                     	;# 
   822  0836                     	;# 
   823  0837                     	;# 
   824  0838                     	;# 
   825  0839                     	;# 
   826  083A                     	;# 
   827  083B                     	;# 
   828  083C                     	;# 
   829  083D                     	;# 
   830  083E                     	;# 
   831  083F                     	;# 
   832  0840                     	;# 
   833  0841                     	;# 
   834  0841                     	;# 
   835  0842                     	;# 
   836  0843                     	;# 
   837  0843                     	;# 
   838  0844                     	;# 
   839  0845                     	;# 
   840  0845                     	;# 
   841  0846                     	;# 
   842  0847                     	;# 
   843  0847                     	;# 
   844  0848                     	;# 
   845  0849                     	;# 
   846  084A                     	;# 
   847  084B                     	;# 
   848  084C                     	;# 
   849  084D                     	;# 
   850  084E                     	;# 
   851  084F                     	;# 
   852  0851                     	;# 
   853  0852                     	;# 
   854  0853                     	;# 
   855  0854                     	;# 
   856  0855                     	;# 
   857  0856                     	;# 
   858  0857                     	;# 
   859  0858                     	;# 
   860  0859                     	;# 
   861  085A                     	;# 
   862  085B                     	;# 
   863  085C                     	;# 
   864  085D                     	;# 
   865  085E                     	;# 
   866  085F                     	;# 
   867  0860                     	;# 
   868  0861                     	;# 
   869  0861                     	;# 
   870  0862                     	;# 
   871  0863                     	;# 
   872  0863                     	;# 
   873  0864                     	;# 
   874  0865                     	;# 
   875  0865                     	;# 
   876  0866                     	;# 
   877  0867                     	;# 
   878  0867                     	;# 
   879  0868                     	;# 
   880  0869                     	;# 
   881  086A                     	;# 
   882  086B                     	;# 
   883  086C                     	;# 
   884  086D                     	;# 
   885  086E                     	;# 
   886  086F                     	;# 
   887  0FE4                     	;# 
   888  0FE5                     	;# 
   889  0FE6                     	;# 
   890  0FE7                     	;# 
   891  0FE8                     	;# 
   892  0FE9                     	;# 
   893  0FEA                     	;# 
   894  0FEB                     	;# 
   895  0FED                     	;# 
   896  0FEE                     	;# 
   897  0FEF                     	;# 
   898  0000                     	;# 
   899  0001                     	;# 
   900  0002                     	;# 
   901  0003                     	;# 
   902  0004                     	;# 
   903  0005                     	;# 
   904  0006                     	;# 
   905  0007                     	;# 
   906  0008                     	;# 
   907  0009                     	;# 
   908  000A                     	;# 
   909  000B                     	;# 
   910  000C                     	;# 
   911  000D                     	;# 
   912  000E                     	;# 
   913  0010                     	;# 
   914  0011                     	;# 
   915  0012                     	;# 
   916  0013                     	;# 
   917  0014                     	;# 
   918  0015                     	;# 
   919  0016                     	;# 
   920  0016                     	;# 
   921  0017                     	;# 
   922  0018                     	;# 
   923  0019                     	;# 
   924  001A                     	;# 
   925  001B                     	;# 
   926  001C                     	;# 
   927  008C                     	;# 
   928  008D                     	;# 
   929  008E                     	;# 
   930  0090                     	;# 
   931  0091                     	;# 
   932  0092                     	;# 
   933  0093                     	;# 
   934  0094                     	;# 
   935  0095                     	;# 
   936  0096                     	;# 
   937  0097                     	;# 
   938  0098                     	;# 
   939  0099                     	;# 
   940  009A                     	;# 
   941  009B                     	;# 
   942  009B                     	;# 
   943  009C                     	;# 
   944  009D                     	;# 
   945  009E                     	;# 
   946  009F                     	;# 
   947  010C                     	;# 
   948  010D                     	;# 
   949  010E                     	;# 
   950  0111                     	;# 
   951  0112                     	;# 
   952  0113                     	;# 
   953  0114                     	;# 
   954  0115                     	;# 
   955  0116                     	;# 
   956  0117                     	;# 
   957  0118                     	;# 
   958  0119                     	;# 
   959  011A                     	;# 
   960  011B                     	;# 
   961  011C                     	;# 
   962  011D                     	;# 
   963  011D                     	;# 
   964  011D                     	;# 
   965  011E                     	;# 
   966  011F                     	;# 
   967  018C                     	;# 
   968  018D                     	;# 
   969  0191                     	;# 
   970  0191                     	;# 
   971  0192                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0193                     	;# 
   975  0194                     	;# 
   976  0195                     	;# 
   977  0196                     	;# 
   978  0197                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  0199                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019A                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019B                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019C                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019D                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019E                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  019F                     	;# 
  1004  020C                     	;# 
  1005  020D                     	;# 
  1006  020E                     	;# 
  1007  0210                     	;# 
  1008  0211                     	;# 
  1009  0211                     	;# 
  1010  0212                     	;# 
  1011  0212                     	;# 
  1012  0213                     	;# 
  1013  0213                     	;# 
  1014  0214                     	;# 
  1015  0214                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0216                     	;# 
  1021  0216                     	;# 
  1022  0217                     	;# 
  1023  0217                     	;# 
  1024  028C                     	;# 
  1025  028D                     	;# 
  1026  028E                     	;# 
  1027  0291                     	;# 
  1028  0291                     	;# 
  1029  0292                     	;# 
  1030  0293                     	;# 
  1031  0298                     	;# 
  1032  0298                     	;# 
  1033  0299                     	;# 
  1034  029A                     	;# 
  1035  030C                     	;# 
  1036  030D                     	;# 
  1037  030E                     	;# 
  1038  0311                     	;# 
  1039  0311                     	;# 
  1040  0312                     	;# 
  1041  0313                     	;# 
  1042  038C                     	;# 
  1043  038D                     	;# 
  1044  038E                     	;# 
  1045  0390                     	;# 
  1046  0391                     	;# 
  1047  0392                     	;# 
  1048  0393                     	;# 
  1049  0394                     	;# 
  1050  0395                     	;# 
  1051  0396                     	;# 
  1052  0397                     	;# 
  1053  0398                     	;# 
  1054  0399                     	;# 
  1055  039D                     	;# 
  1056  039E                     	;# 
  1057  039F                     	;# 
  1058  0511                     	;# 
  1059  0513                     	;# 
  1060  051A                     	;# 
  1061  0811                     	;# 
  1062  0812                     	;# 
  1063  0813                     	;# 
  1064  0814                     	;# 
  1065  0815                     	;# 
  1066  0816                     	;# 
  1067  0817                     	;# 
  1068  0818                     	;# 
  1069  0819                     	;# 
  1070  081A                     	;# 
  1071  081B                     	;# 
  1072  081C                     	;# 
  1073  081D                     	;# 
  1074  081E                     	;# 
  1075  081F                     	;# 
  1076  0820                     	;# 
  1077  0821                     	;# 
  1078  0821                     	;# 
  1079  0822                     	;# 
  1080  0823                     	;# 
  1081  0823                     	;# 
  1082  0824                     	;# 
  1083  0825                     	;# 
  1084  0825                     	;# 
  1085  0826                     	;# 
  1086  0827                     	;# 
  1087  0827                     	;# 
  1088  0828                     	;# 
  1089  0829                     	;# 
  1090  082A                     	;# 
  1091  082B                     	;# 
  1092  082C                     	;# 
  1093  082D                     	;# 
  1094  082E                     	;# 
  1095  082F                     	;# 
  1096  0831                     	;# 
  1097  0832                     	;# 
  1098  0833                     	;# 
  1099  0834                     	;# 
  1100  0835                     	;# 
  1101  0836                     	;# 
  1102  0837                     	;# 
  1103  0838                     	;# 
  1104  0839                     	;# 
  1105  083A                     	;# 
  1106  083B                     	;# 
  1107  083C                     	;# 
  1108  083D                     	;# 
  1109  083E                     	;# 
  1110  083F                     	;# 
  1111  0840                     	;# 
  1112  0841                     	;# 
  1113  0841                     	;# 
  1114  0842                     	;# 
  1115  0843                     	;# 
  1116  0843                     	;# 
  1117  0844                     	;# 
  1118  0845                     	;# 
  1119  0845                     	;# 
  1120  0846                     	;# 
  1121  0847                     	;# 
  1122  0847                     	;# 
  1123  0848                     	;# 
  1124  0849                     	;# 
  1125  084A                     	;# 
  1126  084B                     	;# 
  1127  084C                     	;# 
  1128  084D                     	;# 
  1129  084E                     	;# 
  1130  084F                     	;# 
  1131  0851                     	;# 
  1132  0852                     	;# 
  1133  0853                     	;# 
  1134  0854                     	;# 
  1135  0855                     	;# 
  1136  0856                     	;# 
  1137  0857                     	;# 
  1138  0858                     	;# 
  1139  0859                     	;# 
  1140  085A                     	;# 
  1141  085B                     	;# 
  1142  085C                     	;# 
  1143  085D                     	;# 
  1144  085E                     	;# 
  1145  085F                     	;# 
  1146  0860                     	;# 
  1147  0861                     	;# 
  1148  0861                     	;# 
  1149  0862                     	;# 
  1150  0863                     	;# 
  1151  0863                     	;# 
  1152  0864                     	;# 
  1153  0865                     	;# 
  1154  0865                     	;# 
  1155  0866                     	;# 
  1156  0867                     	;# 
  1157  0867                     	;# 
  1158  0868                     	;# 
  1159  0869                     	;# 
  1160  086A                     	;# 
  1161  086B                     	;# 
  1162  086C                     	;# 
  1163  086D                     	;# 
  1164  086E                     	;# 
  1165  086F                     	;# 
  1166  0FE4                     	;# 
  1167  0FE5                     	;# 
  1168  0FE6                     	;# 
  1169  0FE7                     	;# 
  1170  0FE8                     	;# 
  1171  0FE9                     	;# 
  1172  0FEA                     	;# 
  1173  0FEB                     	;# 
  1174  0FED                     	;# 
  1175  0FEE                     	;# 
  1176  0FEF                     	;# 
  1177  0000                     	;# 
  1178  0001                     	;# 
  1179  0002                     	;# 
  1180  0003                     	;# 
  1181  0004                     	;# 
  1182  0005                     	;# 
  1183  0006                     	;# 
  1184  0007                     	;# 
  1185  0008                     	;# 
  1186  0009                     	;# 
  1187  000A                     	;# 
  1188  000B                     	;# 
  1189  000C                     	;# 
  1190  000D                     	;# 
  1191  000E                     	;# 
  1192  0010                     	;# 
  1193  0011                     	;# 
  1194  0012                     	;# 
  1195  0013                     	;# 
  1196  0014                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  008C                     	;# 
  1207  008D                     	;# 
  1208  008E                     	;# 
  1209  0090                     	;# 
  1210  0091                     	;# 
  1211  0092                     	;# 
  1212  0093                     	;# 
  1213  0094                     	;# 
  1214  0095                     	;# 
  1215  0096                     	;# 
  1216  0097                     	;# 
  1217  0098                     	;# 
  1218  0099                     	;# 
  1219  009A                     	;# 
  1220  009B                     	;# 
  1221  009B                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009E                     	;# 
  1225  009F                     	;# 
  1226  010C                     	;# 
  1227  010D                     	;# 
  1228  010E                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011C                     	;# 
  1241  011D                     	;# 
  1242  011D                     	;# 
  1243  011D                     	;# 
  1244  011E                     	;# 
  1245  011F                     	;# 
  1246  018C                     	;# 
  1247  018D                     	;# 
  1248  0191                     	;# 
  1249  0191                     	;# 
  1250  0192                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0193                     	;# 
  1254  0194                     	;# 
  1255  0195                     	;# 
  1256  0196                     	;# 
  1257  0197                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  0199                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019A                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019C                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019D                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019E                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  019F                     	;# 
  1283  020C                     	;# 
  1284  020D                     	;# 
  1285  020E                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0213                     	;# 
  1293  0214                     	;# 
  1294  0214                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0216                     	;# 
  1300  0216                     	;# 
  1301  0217                     	;# 
  1302  0217                     	;# 
  1303  028C                     	;# 
  1304  028D                     	;# 
  1305  028E                     	;# 
  1306  0291                     	;# 
  1307  0291                     	;# 
  1308  0292                     	;# 
  1309  0293                     	;# 
  1310  0298                     	;# 
  1311  0298                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  030C                     	;# 
  1315  030D                     	;# 
  1316  030E                     	;# 
  1317  0311                     	;# 
  1318  0311                     	;# 
  1319  0312                     	;# 
  1320  0313                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  038E                     	;# 
  1324  0390                     	;# 
  1325  0391                     	;# 
  1326  0392                     	;# 
  1327  0393                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  0397                     	;# 
  1332  0398                     	;# 
  1333  0399                     	;# 
  1334  039D                     	;# 
  1335  039E                     	;# 
  1336  039F                     	;# 
  1337  0511                     	;# 
  1338  0513                     	;# 
  1339  051A                     	;# 
  1340  0811                     	;# 
  1341  0812                     	;# 
  1342  0813                     	;# 
  1343  0814                     	;# 
  1344  0815                     	;# 
  1345  0816                     	;# 
  1346  0817                     	;# 
  1347  0818                     	;# 
  1348  0819                     	;# 
  1349  081A                     	;# 
  1350  081B                     	;# 
  1351  081C                     	;# 
  1352  081D                     	;# 
  1353  081E                     	;# 
  1354  081F                     	;# 
  1355  0820                     	;# 
  1356  0821                     	;# 
  1357  0821                     	;# 
  1358  0822                     	;# 
  1359  0823                     	;# 
  1360  0823                     	;# 
  1361  0824                     	;# 
  1362  0825                     	;# 
  1363  0825                     	;# 
  1364  0826                     	;# 
  1365  0827                     	;# 
  1366  0827                     	;# 
  1367  0828                     	;# 
  1368  0829                     	;# 
  1369  082A                     	;# 
  1370  082B                     	;# 
  1371  082C                     	;# 
  1372  082D                     	;# 
  1373  082E                     	;# 
  1374  082F                     	;# 
  1375  0831                     	;# 
  1376  0832                     	;# 
  1377  0833                     	;# 
  1378  0834                     	;# 
  1379  0835                     	;# 
  1380  0836                     	;# 
  1381  0837                     	;# 
  1382  0838                     	;# 
  1383  0839                     	;# 
  1384  083A                     	;# 
  1385  083B                     	;# 
  1386  083C                     	;# 
  1387  083D                     	;# 
  1388  083E                     	;# 
  1389  083F                     	;# 
  1390  0840                     	;# 
  1391  0841                     	;# 
  1392  0841                     	;# 
  1393  0842                     	;# 
  1394  0843                     	;# 
  1395  0843                     	;# 
  1396  0844                     	;# 
  1397  0845                     	;# 
  1398  0845                     	;# 
  1399  0846                     	;# 
  1400  0847                     	;# 
  1401  0847                     	;# 
  1402  0848                     	;# 
  1403  0849                     	;# 
  1404  084A                     	;# 
  1405  084B                     	;# 
  1406  084C                     	;# 
  1407  084D                     	;# 
  1408  084E                     	;# 
  1409  084F                     	;# 
  1410  0851                     	;# 
  1411  0852                     	;# 
  1412  0853                     	;# 
  1413  0854                     	;# 
  1414  0855                     	;# 
  1415  0856                     	;# 
  1416  0857                     	;# 
  1417  0858                     	;# 
  1418  0859                     	;# 
  1419  085A                     	;# 
  1420  085B                     	;# 
  1421  085C                     	;# 
  1422  085D                     	;# 
  1423  085E                     	;# 
  1424  085F                     	;# 
  1425  0860                     	;# 
  1426  0861                     	;# 
  1427  0861                     	;# 
  1428  0862                     	;# 
  1429  0863                     	;# 
  1430  0863                     	;# 
  1431  0864                     	;# 
  1432  0865                     	;# 
  1433  0865                     	;# 
  1434  0866                     	;# 
  1435  0867                     	;# 
  1436  0867                     	;# 
  1437  0868                     	;# 
  1438  0869                     	;# 
  1439  086A                     	;# 
  1440  086B                     	;# 
  1441  086C                     	;# 
  1442  086D                     	;# 
  1443  086E                     	;# 
  1444  086F                     	;# 
  1445  0FE4                     	;# 
  1446  0FE5                     	;# 
  1447  0FE6                     	;# 
  1448  0FE7                     	;# 
  1449  0FE8                     	;# 
  1450  0FE9                     	;# 
  1451  0FEA                     	;# 
  1452  0FEB                     	;# 
  1453  0FED                     	;# 
  1454  0FEE                     	;# 
  1455  0FEF                     	;# 
  1456  0000                     	;# 
  1457  0001                     	;# 
  1458  0002                     	;# 
  1459  0003                     	;# 
  1460  0004                     	;# 
  1461  0005                     	;# 
  1462  0006                     	;# 
  1463  0007                     	;# 
  1464  0008                     	;# 
  1465  0009                     	;# 
  1466  000A                     	;# 
  1467  000B                     	;# 
  1468  000C                     	;# 
  1469  000D                     	;# 
  1470  000E                     	;# 
  1471  0010                     	;# 
  1472  0011                     	;# 
  1473  0012                     	;# 
  1474  0013                     	;# 
  1475  0014                     	;# 
  1476  0015                     	;# 
  1477  0016                     	;# 
  1478  0016                     	;# 
  1479  0017                     	;# 
  1480  0018                     	;# 
  1481  0019                     	;# 
  1482  001A                     	;# 
  1483  001B                     	;# 
  1484  001C                     	;# 
  1485  008C                     	;# 
  1486  008D                     	;# 
  1487  008E                     	;# 
  1488  0090                     	;# 
  1489  0091                     	;# 
  1490  0092                     	;# 
  1491  0093                     	;# 
  1492  0094                     	;# 
  1493  0095                     	;# 
  1494  0096                     	;# 
  1495  0097                     	;# 
  1496  0098                     	;# 
  1497  0099                     	;# 
  1498  009A                     	;# 
  1499  009B                     	;# 
  1500  009B                     	;# 
  1501  009C                     	;# 
  1502  009D                     	;# 
  1503  009E                     	;# 
  1504  009F                     	;# 
  1505  010C                     	;# 
  1506  010D                     	;# 
  1507  010E                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  011A                     	;# 
  1518  011B                     	;# 
  1519  011C                     	;# 
  1520  011D                     	;# 
  1521  011D                     	;# 
  1522  011D                     	;# 
  1523  011E                     	;# 
  1524  011F                     	;# 
  1525  018C                     	;# 
  1526  018D                     	;# 
  1527  0191                     	;# 
  1528  0191                     	;# 
  1529  0192                     	;# 
  1530  0193                     	;# 
  1531  0193                     	;# 
  1532  0193                     	;# 
  1533  0194                     	;# 
  1534  0195                     	;# 
  1535  0196                     	;# 
  1536  0197                     	;# 
  1537  0199                     	;# 
  1538  0199                     	;# 
  1539  0199                     	;# 
  1540  019A                     	;# 
  1541  019A                     	;# 
  1542  019A                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019B                     	;# 
  1548  019C                     	;# 
  1549  019C                     	;# 
  1550  019C                     	;# 
  1551  019D                     	;# 
  1552  019D                     	;# 
  1553  019D                     	;# 
  1554  019E                     	;# 
  1555  019E                     	;# 
  1556  019E                     	;# 
  1557  019F                     	;# 
  1558  019F                     	;# 
  1559  019F                     	;# 
  1560  019F                     	;# 
  1561  019F                     	;# 
  1562  020C                     	;# 
  1563  020D                     	;# 
  1564  020E                     	;# 
  1565  0210                     	;# 
  1566  0211                     	;# 
  1567  0211                     	;# 
  1568  0212                     	;# 
  1569  0212                     	;# 
  1570  0213                     	;# 
  1571  0213                     	;# 
  1572  0214                     	;# 
  1573  0214                     	;# 
  1574  0215                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0215                     	;# 
  1578  0216                     	;# 
  1579  0216                     	;# 
  1580  0217                     	;# 
  1581  0217                     	;# 
  1582  028C                     	;# 
  1583  028D                     	;# 
  1584  028E                     	;# 
  1585  0291                     	;# 
  1586  0291                     	;# 
  1587  0292                     	;# 
  1588  0293                     	;# 
  1589  0298                     	;# 
  1590  0298                     	;# 
  1591  0299                     	;# 
  1592  029A                     	;# 
  1593  030C                     	;# 
  1594  030D                     	;# 
  1595  030E                     	;# 
  1596  0311                     	;# 
  1597  0311                     	;# 
  1598  0312                     	;# 
  1599  0313                     	;# 
  1600  038C                     	;# 
  1601  038D                     	;# 
  1602  038E                     	;# 
  1603  0390                     	;# 
  1604  0391                     	;# 
  1605  0392                     	;# 
  1606  0393                     	;# 
  1607  0394                     	;# 
  1608  0395                     	;# 
  1609  0396                     	;# 
  1610  0397                     	;# 
  1611  0398                     	;# 
  1612  0399                     	;# 
  1613  039D                     	;# 
  1614  039E                     	;# 
  1615  039F                     	;# 
  1616  0511                     	;# 
  1617  0513                     	;# 
  1618  051A                     	;# 
  1619  0811                     	;# 
  1620  0812                     	;# 
  1621  0813                     	;# 
  1622  0814                     	;# 
  1623  0815                     	;# 
  1624  0816                     	;# 
  1625  0817                     	;# 
  1626  0818                     	;# 
  1627  0819                     	;# 
  1628  081A                     	;# 
  1629  081B                     	;# 
  1630  081C                     	;# 
  1631  081D                     	;# 
  1632  081E                     	;# 
  1633  081F                     	;# 
  1634  0820                     	;# 
  1635  0821                     	;# 
  1636  0821                     	;# 
  1637  0822                     	;# 
  1638  0823                     	;# 
  1639  0823                     	;# 
  1640  0824                     	;# 
  1641  0825                     	;# 
  1642  0825                     	;# 
  1643  0826                     	;# 
  1644  0827                     	;# 
  1645  0827                     	;# 
  1646  0828                     	;# 
  1647  0829                     	;# 
  1648  082A                     	;# 
  1649  082B                     	;# 
  1650  082C                     	;# 
  1651  082D                     	;# 
  1652  082E                     	;# 
  1653  082F                     	;# 
  1654  0831                     	;# 
  1655  0832                     	;# 
  1656  0833                     	;# 
  1657  0834                     	;# 
  1658  0835                     	;# 
  1659  0836                     	;# 
  1660  0837                     	;# 
  1661  0838                     	;# 
  1662  0839                     	;# 
  1663  083A                     	;# 
  1664  083B                     	;# 
  1665  083C                     	;# 
  1666  083D                     	;# 
  1667  083E                     	;# 
  1668  083F                     	;# 
  1669  0840                     	;# 
  1670  0841                     	;# 
  1671  0841                     	;# 
  1672  0842                     	;# 
  1673  0843                     	;# 
  1674  0843                     	;# 
  1675  0844                     	;# 
  1676  0845                     	;# 
  1677  0845                     	;# 
  1678  0846                     	;# 
  1679  0847                     	;# 
  1680  0847                     	;# 
  1681  0848                     	;# 
  1682  0849                     	;# 
  1683  084A                     	;# 
  1684  084B                     	;# 
  1685  084C                     	;# 
  1686  084D                     	;# 
  1687  084E                     	;# 
  1688  084F                     	;# 
  1689  0851                     	;# 
  1690  0852                     	;# 
  1691  0853                     	;# 
  1692  0854                     	;# 
  1693  0855                     	;# 
  1694  0856                     	;# 
  1695  0857                     	;# 
  1696  0858                     	;# 
  1697  0859                     	;# 
  1698  085A                     	;# 
  1699  085B                     	;# 
  1700  085C                     	;# 
  1701  085D                     	;# 
  1702  085E                     	;# 
  1703  085F                     	;# 
  1704  0860                     	;# 
  1705  0861                     	;# 
  1706  0861                     	;# 
  1707  0862                     	;# 
  1708  0863                     	;# 
  1709  0863                     	;# 
  1710  0864                     	;# 
  1711  0865                     	;# 
  1712  0865                     	;# 
  1713  0866                     	;# 
  1714  0867                     	;# 
  1715  0867                     	;# 
  1716  0868                     	;# 
  1717  0869                     	;# 
  1718  086A                     	;# 
  1719  086B                     	;# 
  1720  086C                     	;# 
  1721  086D                     	;# 
  1722  086E                     	;# 
  1723  086F                     	;# 
  1724  0FE4                     	;# 
  1725  0FE5                     	;# 
  1726  0FE6                     	;# 
  1727  0FE7                     	;# 
  1728  0FE8                     	;# 
  1729  0FE9                     	;# 
  1730  0FEA                     	;# 
  1731  0FEB                     	;# 
  1732  0FED                     	;# 
  1733  0FEE                     	;# 
  1734  0FEF                     	;# 
  1735  0000                     	;# 
  1736  0001                     	;# 
  1737  0002                     	;# 
  1738  0003                     	;# 
  1739  0004                     	;# 
  1740  0005                     	;# 
  1741  0006                     	;# 
  1742  0007                     	;# 
  1743  0008                     	;# 
  1744  0009                     	;# 
  1745  000A                     	;# 
  1746  000B                     	;# 
  1747  000C                     	;# 
  1748  000D                     	;# 
  1749  000E                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0014                     	;# 
  1755  0015                     	;# 
  1756  0016                     	;# 
  1757  0016                     	;# 
  1758  0017                     	;# 
  1759  0018                     	;# 
  1760  0019                     	;# 
  1761  001A                     	;# 
  1762  001B                     	;# 
  1763  001C                     	;# 
  1764  008C                     	;# 
  1765  008D                     	;# 
  1766  008E                     	;# 
  1767  0090                     	;# 
  1768  0091                     	;# 
  1769  0092                     	;# 
  1770  0093                     	;# 
  1771  0094                     	;# 
  1772  0095                     	;# 
  1773  0096                     	;# 
  1774  0097                     	;# 
  1775  0098                     	;# 
  1776  0099                     	;# 
  1777  009A                     	;# 
  1778  009B                     	;# 
  1779  009B                     	;# 
  1780  009C                     	;# 
  1781  009D                     	;# 
  1782  009E                     	;# 
  1783  009F                     	;# 
  1784  010C                     	;# 
  1785  010D                     	;# 
  1786  010E                     	;# 
  1787  0111                     	;# 
  1788  0112                     	;# 
  1789  0113                     	;# 
  1790  0114                     	;# 
  1791  0115                     	;# 
  1792  0116                     	;# 
  1793  0117                     	;# 
  1794  0118                     	;# 
  1795  0119                     	;# 
  1796  011A                     	;# 
  1797  011B                     	;# 
  1798  011C                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011D                     	;# 
  1802  011E                     	;# 
  1803  011F                     	;# 
  1804  018C                     	;# 
  1805  018D                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0193                     	;# 
  1812  0194                     	;# 
  1813  0195                     	;# 
  1814  0196                     	;# 
  1815  0197                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019A                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019C                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019D                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019E                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  019F                     	;# 
  1841  020C                     	;# 
  1842  020D                     	;# 
  1843  020E                     	;# 
  1844  0210                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  028C                     	;# 
  1862  028D                     	;# 
  1863  028E                     	;# 
  1864  0291                     	;# 
  1865  0291                     	;# 
  1866  0292                     	;# 
  1867  0293                     	;# 
  1868  0298                     	;# 
  1869  0298                     	;# 
  1870  0299                     	;# 
  1871  029A                     	;# 
  1872  030C                     	;# 
  1873  030D                     	;# 
  1874  030E                     	;# 
  1875  0311                     	;# 
  1876  0311                     	;# 
  1877  0312                     	;# 
  1878  0313                     	;# 
  1879  038C                     	;# 
  1880  038D                     	;# 
  1881  038E                     	;# 
  1882  0390                     	;# 
  1883  0391                     	;# 
  1884  0392                     	;# 
  1885  0393                     	;# 
  1886  0394                     	;# 
  1887  0395                     	;# 
  1888  0396                     	;# 
  1889  0397                     	;# 
  1890  0398                     	;# 
  1891  0399                     	;# 
  1892  039D                     	;# 
  1893  039E                     	;# 
  1894  039F                     	;# 
  1895  0511                     	;# 
  1896  0513                     	;# 
  1897  051A                     	;# 
  1898  0811                     	;# 
  1899  0812                     	;# 
  1900  0813                     	;# 
  1901  0814                     	;# 
  1902  0815                     	;# 
  1903  0816                     	;# 
  1904  0817                     	;# 
  1905  0818                     	;# 
  1906  0819                     	;# 
  1907  081A                     	;# 
  1908  081B                     	;# 
  1909  081C                     	;# 
  1910  081D                     	;# 
  1911  081E                     	;# 
  1912  081F                     	;# 
  1913  0820                     	;# 
  1914  0821                     	;# 
  1915  0821                     	;# 
  1916  0822                     	;# 
  1917  0823                     	;# 
  1918  0823                     	;# 
  1919  0824                     	;# 
  1920  0825                     	;# 
  1921  0825                     	;# 
  1922  0826                     	;# 
  1923  0827                     	;# 
  1924  0827                     	;# 
  1925  0828                     	;# 
  1926  0829                     	;# 
  1927  082A                     	;# 
  1928  082B                     	;# 
  1929  082C                     	;# 
  1930  082D                     	;# 
  1931  082E                     	;# 
  1932  082F                     	;# 
  1933  0831                     	;# 
  1934  0832                     	;# 
  1935  0833                     	;# 
  1936  0834                     	;# 
  1937  0835                     	;# 
  1938  0836                     	;# 
  1939  0837                     	;# 
  1940  0838                     	;# 
  1941  0839                     	;# 
  1942  083A                     	;# 
  1943  083B                     	;# 
  1944  083C                     	;# 
  1945  083D                     	;# 
  1946  083E                     	;# 
  1947  083F                     	;# 
  1948  0840                     	;# 
  1949  0841                     	;# 
  1950  0841                     	;# 
  1951  0842                     	;# 
  1952  0843                     	;# 
  1953  0843                     	;# 
  1954  0844                     	;# 
  1955  0845                     	;# 
  1956  0845                     	;# 
  1957  0846                     	;# 
  1958  0847                     	;# 
  1959  0847                     	;# 
  1960  0848                     	;# 
  1961  0849                     	;# 
  1962  084A                     	;# 
  1963  084B                     	;# 
  1964  084C                     	;# 
  1965  084D                     	;# 
  1966  084E                     	;# 
  1967  084F                     	;# 
  1968  0851                     	;# 
  1969  0852                     	;# 
  1970  0853                     	;# 
  1971  0854                     	;# 
  1972  0855                     	;# 
  1973  0856                     	;# 
  1974  0857                     	;# 
  1975  0858                     	;# 
  1976  0859                     	;# 
  1977  085A                     	;# 
  1978  085B                     	;# 
  1979  085C                     	;# 
  1980  085D                     	;# 
  1981  085E                     	;# 
  1982  085F                     	;# 
  1983  0860                     	;# 
  1984  0861                     	;# 
  1985  0861                     	;# 
  1986  0862                     	;# 
  1987  0863                     	;# 
  1988  0863                     	;# 
  1989  0864                     	;# 
  1990  0865                     	;# 
  1991  0865                     	;# 
  1992  0866                     	;# 
  1993  0867                     	;# 
  1994  0867                     	;# 
  1995  0868                     	;# 
  1996  0869                     	;# 
  1997  086A                     	;# 
  1998  086B                     	;# 
  1999  086C                     	;# 
  2000  086D                     	;# 
  2001  086E                     	;# 
  2002  086F                     	;# 
  2003  0FE4                     	;# 
  2004  0FE5                     	;# 
  2005  0FE6                     	;# 
  2006  0FE7                     	;# 
  2007  0FE8                     	;# 
  2008  0FE9                     	;# 
  2009  0FEA                     	;# 
  2010  0FEB                     	;# 
  2011  0FED                     	;# 
  2012  0FEE                     	;# 
  2013  0FEF                     	;# 
  2014                           
  2015                           	psect	stringtext1
  2016  035F                     __pstringtext1:	
  2017  035F                     _segmcode:	
  2018  035F  343F               	retlw	63
  2019  0360  3406               	retlw	6
  2020  0361  345B               	retlw	91
  2021  0362  344F               	retlw	79
  2022  0363  3466               	retlw	102
  2023  0364  346D               	retlw	109
  2024  0365  347D               	retlw	125
  2025  0366  3407               	retlw	7
  2026  0367  347F               	retlw	127
  2027  0368  346F               	retlw	111
  2028  0369  3477               	retlw	119
  2029  036A  347C               	retlw	124
  2030  036B  3439               	retlw	57
  2031  036C  345E               	retlw	94
  2032  036D  3479               	retlw	121
  2033  036E  3471               	retlw	113
  2034  036F                     __end_of_segmcode:	
  2035  000C                     _PORTAbits	set	12
  2036  000E                     _PORTCbits	set	14
  2037  0015                     _TMR0	set	21
  2038  000B                     _INTCONbits	set	11
  2039  005F                     _GIE	set	95
  2040  0074                     _RC4	set	116
  2041  008E                     _TRISCbits	set	142
  2042  008E                     _TRISC	set	142
  2043  008D                     _TRISB	set	141
  2044  008C                     _TRISA	set	140
  2045  0095                     _OPTION_REGbits	set	149
  2046  0099                     _OSCCONbits	set	153
  2047  0473                     _TRISC3	set	1139
  2048  0474                     _TRISC4	set	1140
  2049  010C                     _LATAbits	set	268
  2050  010D                     _LATBbits	set	269
  2051  010E                     _LATC	set	270
  2052  010D                     _LATB	set	269
  2053  010C                     _LATA	set	268
  2054  0874                     _LATC4	set	2164
  2055  0873                     _LATC3	set	2163
  2056  020E                     _WPUCbits	set	526
  2057  020E                     _WPUC	set	526
  2058  020D                     _WPUB	set	525
  2059  020C                     _WPUA	set	524
  2060  1073                     _WPUC3	set	4211
  2061  1074                     _WPUC4	set	4212
  2062  1474                     _ODCONC4	set	5236
  2063  1473                     _ODCONC3	set	5235
  2064  0399                     _IOCCFbits	set	921
  2065  0397                     _IOCCPbits	set	919
  2066  0398                     _IOCCN	set	920
  2067  0397                     _IOCCP	set	919
  2068  0395                     _IOCBN	set	917
  2069  0394                     _IOCBP	set	916
  2070  0392                     _IOCAN	set	914
  2071  0391                     _IOCAP	set	913
  2072                           
  2073                           ; #config settings
  2074  0000                     
  2075                           	psect	cinit
  2076  0061                     start_initialization:	
  2077  0061                     __initialization:	
  2078                           
  2079                           ; Clear objects allocated to COMMON
  2080  0061  01FD               	clrf	__pbssCOMMON& (0+127)
  2081                           
  2082                           ; Clear objects allocated to BANK0
  2083  0062  3020               	movlw	low __pbssBANK0
  2084  0063  0084               	movwf	4
  2085  0064  3000               	movlw	high __pbssBANK0
  2086  0065  0085               	movwf	5
  2087  0066  3028               	movlw	40
  2088  0067  3183  2394         	fcall	clear_ram0
  2089  0069                     end_of_initialization:	
  2090                           ;End of C runtime variable initialization code
  2091                           
  2092  0069                     __end_of__initialization:	
  2093  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2094  006A  0020               	movlb	0
  2095  006B  3183  2B9A         	ljmp	_main	;jump to C main() function
  2096                           
  2097                           	psect	bssCOMMON
  2098  007D                     __pbssCOMMON:	
  2099  007D                     _temp_h:	
  2100  007D                     	ds	1
  2101                           
  2102                           	psect	bssBANK0
  2103  0020                     __pbssBANK0:	
  2104  0020                     _g_data:	
  2105  0020                     	ds	33
  2106  0041                     _Temp:	
  2107  0041                     	ds	2
  2108  0043                     ISR@key_time_cnt:	
  2109  0043                     	ds	2
  2110  0045                     _temp_l:	
  2111  0045                     	ds	1
  2112  0046                     ISR@history_key:	
  2113  0046                     	ds	1
  2114  0047                     _ENUM:	
  2115  0047                     	ds	1
  2116                           
  2117                           	psect	clrtext
  2118  0394                     clear_ram0:	
  2119                           ;	Called with FSR0 containing the base address, and
  2120                           ;	WREG with the size to clear
  2121                           
  2122  0394  0064               	clrwdt	;clear the watchdog before getting into this loop
  2123  0395                     clrloop0:	
  2124  0395  0180               	clrf	0	;clear RAM location pointed to by FSR
  2125  0396  3101               	addfsr 0,1
  2126  0397  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2127  0398  2B95               	goto	clrloop0	;have we reached the end yet?
  2128  0399  3400               	retlw	0	;all done for this memory range, return
  2129                           
  2130                           	psect	cstackBANK1
  2131  00A0                     __pcstackBANK1:	
  2132  00A0                     ??_init_env:	
  2133                           
  2134                           ; 1 bytes @ 0x0
  2135  00A0                     	ds	1
  2136  00A1                     init_env@i:	
  2137                           
  2138                           ; 2 bytes @ 0x1
  2139  00A1                     	ds	2
  2140                           
  2141                           	psect	cstackCOMMON
  2142  0070                     __pcstackCOMMON:	
  2143  0070                     ?_IIC_Init:	
  2144  0070                     ?_update_time:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?_receive_decode:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_update_display:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ?_init_env:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_ISR:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_main:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_times2number:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?_test_get_number:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ??_test_get_number:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?_control595_delay:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ??_control595_delay:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?_write_byte:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?___lwmod:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     test_get_number@get_num:	
  2184                           ; 2 bytes @ 0x0
  2185                           
  2186  0070                     times2number@high_level_times:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ___lwmod@divisor:	
  2190                           ; 2 bytes @ 0x0
  2191                           
  2192                           
  2193                           ; 2 bytes @ 0x0
  2194  0070                     	ds	1
  2195  0071                     control595_delay@times:	
  2196                           
  2197                           ; 1 bytes @ 0x1
  2198  0071                     	ds	1
  2199  0072                     ??_times2number:	
  2200  0072                     ??_write_byte:	
  2201                           ; 1 bytes @ 0x2
  2202                           
  2203  0072                     ___lwmod@dividend:	
  2204                           ; 1 bytes @ 0x2
  2205                           
  2206                           
  2207                           ; 2 bytes @ 0x2
  2208  0072                     	ds	2
  2209  0074                     ??___lwmod:	
  2210  0074                     write_byte@data:	
  2211                           ; 1 bytes @ 0x4
  2212                           
  2213                           
  2214                           ; 1 bytes @ 0x4
  2215  0074                     	ds	1
  2216  0075                     write_byte@i:	
  2217  0075                     ___lwmod@counter:	
  2218                           ; 1 bytes @ 0x5
  2219                           
  2220                           
  2221                           ; 1 bytes @ 0x5
  2222  0075                     	ds	1
  2223  0076                     ?_write_once:	
  2224  0076                     write_once@HR:	
  2225                           ; 1 bytes @ 0x6
  2226                           
  2227                           
  2228                           ; 1 bytes @ 0x6
  2229  0076                     	ds	1
  2230  0077                     write_once@ML:	
  2231                           
  2232                           ; 1 bytes @ 0x7
  2233  0077                     	ds	1
  2234  0078                     write_once@MR:	
  2235                           
  2236                           ; 1 bytes @ 0x8
  2237  0078                     	ds	1
  2238  0079                     ??_write_once:	
  2239  0079                     write_once@HL:	
  2240                           ; 1 bytes @ 0x9
  2241                           
  2242                           
  2243                           ; 1 bytes @ 0x9
  2244  0079                     	ds	1
  2245  007A                     ??_update_display:	
  2246                           
  2247                           ; 1 bytes @ 0xA
  2248  007A                     	ds	2
  2249  007C                     ??_update_time:	
  2250                           
  2251                           ; 1 bytes @ 0xC
  2252  007C                     	ds	1
  2253                           
  2254                           	psect	cstackBANK0
  2255  0048                     __pcstackBANK0:	
  2256  0048                     ??_receive_decode:	
  2257                           
  2258                           ; 1 bytes @ 0x0
  2259  0048                     	ds	5
  2260  004D                     receive_decode@last_time_h:	
  2261                           
  2262                           ; 2 bytes @ 0x5
  2263  004D                     	ds	2
  2264  004F                     receive_decode@last_time_m:	
  2265                           
  2266                           ; 2 bytes @ 0x7
  2267  004F                     	ds	2
  2268  0051                     _receive_decode$591:	
  2269                           
  2270                           ; 2 bytes @ 0x9
  2271  0051                     	ds	2
  2272  0053                     _receive_decode$592:	
  2273                           
  2274                           ; 2 bytes @ 0xB
  2275  0053                     	ds	2
  2276  0055                     receive_decode@i_593:	
  2277                           
  2278                           ; 2 bytes @ 0xD
  2279  0055                     	ds	2
  2280  0057                     receive_decode@i:	
  2281                           
  2282                           ; 1 bytes @ 0xF
  2283  0057                     	ds	1
  2284  0058                     receive_decode@read_value:	
  2285                           
  2286                           ; 1 bytes @ 0x10
  2287  0058                     	ds	1
  2288  0059                     receive_decode@check:	
  2289                           
  2290                           ; 1 bytes @ 0x11
  2291  0059                     	ds	1
  2292  005A                     ??_ISR:	
  2293                           
  2294                           ; 1 bytes @ 0x12
  2295  005A                     	ds	2
  2296  005C                     ??_IIC_Init:	
  2297  005C                     ??_main:	
  2298                           ; 1 bytes @ 0x14
  2299                           
  2300                           
  2301                           	psect	maintext
  2302  039A                     __pmaintext:	
  2303                           ; 1 bytes @ 0x14
  2304 ;;
  2305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2306 ;;
  2307 ;; *************** function _main *****************
  2308 ;; Defined at:
  2309 ;;		line 193 in file "main.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : B1F/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels required when called:    8
  2329 ;; This function calls:
  2330 ;;		_init_env
  2331 ;; This function is called by:
  2332 ;;		Startup code after reset
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _main
  2338  039A                     _main:	
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2342  039A  3181  21BB  3183   	fcall	_init_env
  2343  039D                     l90:	
  2344  039D  2B9D               	goto	l90
  2345  039E                     __end_of_main:	
  2346                           
  2347                           	psect	text1
  2348  01BB                     __ptext1:	
  2349 ;; *************** function _init_env *****************
  2350 ;; Defined at:
  2351 ;;		line 38 in file "main.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  i               2    1[BANK1 ] int 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;Total ram usage:        3 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    7
  2372 ;; This function calls:
  2373 ;;		_IIC_Init
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _init_env
  2381  01BB                     _init_env:	
  2382                           
  2383                           ;main.c: 43:     LATA = 0;
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2387  01BB  178B               	bsf	11,7	;volatile
  2388                           
  2389                           ;main.c: 45:     IOCAP = 0;
  2390  01BC  158B               	bsf	11,3	;volatile
  2391                           
  2392                           ;main.c: 49:     LATB = 0;
  2393  01BD  168B               	bsf	11,5	;volatile
  2394                           
  2395                           ;main.c: 55:     LATC = 0;
  2396  01BE  0021               	movlb	1	; select bank1
  2397  01BF  0819               	movf	25,w	;volatile
  2398  01C0  39FC               	andlw	-4
  2399  01C1  3802               	iorlw	2
  2400  01C2  0099               	movwf	25	;volatile
  2401                           
  2402                           ;main.c: 56:     WPUC = 1;
  2403  01C3  0819               	movf	25,w	;volatile
  2404  01C4  3987               	andlw	-121
  2405  01C5  3850               	iorlw	80
  2406  01C6  0099               	movwf	25	;volatile
  2407                           
  2408                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  2409  01C7  1195               	bcf	21,3	;volatile
  2410                           
  2411                           ;main.c: 65: 
  2412  01C8  1295               	bcf	21,5	;volatile
  2413                           
  2414                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  2415  01C9  0815               	movf	21,w	;volatile
  2416  01CA  39F8               	andlw	-8
  2417  01CB  3804               	iorlw	4
  2418  01CC  0095               	movwf	21	;volatile
  2419                           
  2420                           ;main.c: 67:     WPUCbits.WPUC1 = 1;
  2421  01CD  30E7               	movlw	231
  2422  01CE  0020               	movlb	0	; select bank0
  2423  01CF  0095               	movwf	21	;volatile
  2424                           
  2425                           ;main.c: 75:     g_data.g_time_s = 0;
  2426  01D0  0021               	movlb	1	; select bank1
  2427  01D1  1395               	bcf	21,7	;volatile
  2428                           
  2429                           ;main.c: 77: 
  2430  01D2  018C               	clrf	12	;volatile
  2431                           
  2432                           ;main.c: 78: 
  2433  01D3  0022               	movlb	2	; select bank2
  2434  01D4  018C               	clrf	12	;volatile
  2435                           
  2436                           ;main.c: 79:     g_data.g_flg_switch = FALSE;
  2437  01D5  0024               	movlb	4	; select bank4
  2438  01D6  018C               	clrf	12	;volatile
  2439                           
  2440                           ;main.c: 80:     g_data.g_start_read_data = FALSE;
  2441  01D7  0027               	movlb	7	; select bank7
  2442  01D8  0191               	clrf	17	;volatile
  2443                           
  2444                           ;main.c: 81:     g_data.g_find_recv_start = FALSE;
  2445  01D9  0192               	clrf	18	;volatile
  2446                           
  2447                           ;main.c: 83: 
  2448  01DA  0021               	movlb	1	; select bank1
  2449  01DB  018D               	clrf	13	;volatile
  2450                           
  2451                           ;main.c: 84:     g_data.g_high_level_times = 0;
  2452  01DC  0022               	movlb	2	; select bank2
  2453  01DD  018D               	clrf	13	;volatile
  2454                           
  2455                           ;main.c: 85:     g_data.g_all_level_times = 0;
  2456  01DE  0024               	movlb	4	; select bank4
  2457  01DF  018D               	clrf	13	;volatile
  2458                           
  2459                           ;main.c: 86:     g_data.g_recv_count = 0;
  2460  01E0  0027               	movlb	7	; select bank7
  2461  01E1  0194               	clrf	20	;volatile
  2462                           
  2463                           ;main.c: 87:     for(int i = 0;i < 20; i++){
  2464  01E2  0195               	clrf	21	;volatile
  2465                           
  2466                           ;main.c: 89:     }
  2467  01E3  0021               	movlb	1	; select bank1
  2468  01E4  018E               	clrf	14	;volatile
  2469                           
  2470                           ;main.c: 90: 
  2471  01E5  0022               	movlb	2	; select bank2
  2472  01E6  018E               	clrf	14	;volatile
  2473                           
  2474                           ;main.c: 91: 
  2475  01E7  3001               	movlw	1
  2476  01E8  0024               	movlb	4	; select bank4
  2477  01E9  008E               	movwf	14	;volatile
  2478                           
  2479                           ;main.c: 92: 
  2480  01EA  0027               	movlb	7	; select bank7
  2481  01EB  0197               	clrf	23	;volatile
  2482                           
  2483                           ;main.c: 93: 
  2484  01EC  0198               	clrf	24	;volatile
  2485                           
  2486                           ;main.c: 98: 
  2487  01ED  0021               	movlb	1	; select bank1
  2488  01EE  168E               	bsf	14,5	;volatile
  2489                           
  2490                           ;main.c: 99: 
  2491  01EF  0024               	movlb	4	; select bank4
  2492  01F0  168E               	bsf	14,5	;volatile
  2493                           
  2494                           ;main.c: 101:     WPUCbits.WPUC0 = 1;
  2495  01F1  0021               	movlb	1	; select bank1
  2496  01F2  148E               	bsf	14,1	;volatile
  2497                           
  2498                           ;main.c: 102: 
  2499  01F3  0024               	movlb	4	; select bank4
  2500  01F4  148E               	bsf	14,1	;volatile
  2501                           
  2502                           ;main.c: 103: 
  2503  01F5  0027               	movlb	7	; select bank7
  2504  01F6  1497               	bsf	23,1	;volatile
  2505                           
  2506                           ;main.c: 108: }
  2507  01F7  0020               	movlb	0	; select bank0
  2508  01F8  01A3               	clrf	_g_data+3	;volatile
  2509                           
  2510                           ;main.c: 109: 
  2511  01F9  01A4               	clrf	_g_data+4	;volatile
  2512                           
  2513                           ;main.c: 110: void __attribute__((picinterrupt(("")))) ISR(void){
  2514  01FA  01A5               	clrf	_g_data+5	;volatile
  2515                           
  2516                           ;main.c: 111:     static u8 history_key = 0;
  2517  01FB  01A6               	clrf	_g_data+6	;volatile
  2518                           
  2519                           ;main.c: 114: 
  2520  01FC  01A0               	clrf	_g_data	;volatile
  2521                           
  2522                           ;main.c: 115:     if(IOCCFbits.IOCCF1 == TRUE && g_data.g_start_read_data == FALSE && g_
      +                          data.g_flg_switch == TRUE){
  2523  01FD  01A1               	clrf	_g_data+1	;volatile
  2524                           
  2525                           ;main.c: 116: 
  2526  01FE  01A2               	clrf	_g_data+2	;volatile
  2527                           
  2528                           ;main.c: 119: 
  2529  01FF  01A7               	clrf	_g_data+7	;volatile
  2530  0200  01A8               	clrf	_g_data+8	;volatile
  2531                           
  2532                           ;main.c: 120:         g_data.g_start_read_data = TRUE;
  2533  0201  01A9               	clrf	_g_data+9	;volatile
  2534  0202  01AA               	clrf	_g_data+10	;volatile
  2535                           
  2536                           ;main.c: 121:         g_data.g_flg_switch = FALSE;
  2537  0203  01AB               	clrf	_g_data+11	;volatile
  2538  0204  01AC               	clrf	_g_data+12	;volatile
  2539                           
  2540                           ;main.c: 122:         PORTCbits.RC2 = BPC_PWR_ON;
  2541  0205  0021               	movlb	1	; select bank1
  2542  0206  01A1               	clrf	init_env@i^(0+128)
  2543  0207  01A2               	clrf	(init_env@i+1)^(0+128)
  2544  0208                     l2114:	
  2545                           
  2546                           ;main.c: 123: 
  2547  0208  3005               	movlw	5
  2548  0209  0021               	movlb	1	; select bank1
  2549  020A  00A0               	movwf	??_init_env^(0+128)
  2550  020B  0821               	movf	init_env@i^(0+128),w
  2551  020C  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2552  020D  0086               	movwf	6
  2553  020E  0187               	clrf	7
  2554  020F  0820               	movf	??_init_env^(0+128),w
  2555  0210  0081               	movwf	1
  2556                           
  2557                           ;main.c: 124:         INTCONbits.IOCIF = FALSE;
  2558  0211  3001               	movlw	1
  2559  0212  07A1               	addwf	init_env@i^(0+128),f
  2560  0213  3000               	movlw	0
  2561  0214  3DA2               	addwfc	(init_env@i+1)^(0+128),f
  2562  0215  0822               	movf	(init_env@i+1)^(0+128),w
  2563  0216  3A80               	xorlw	128
  2564  0217  00A0               	movwf	??_init_env^(0+128)
  2565  0218  3080               	movlw	128
  2566  0219  0220               	subwf	??_init_env^(0+128),w
  2567  021A  1D03               	skipz
  2568  021B  2A1E               	goto	u1515
  2569  021C  3014               	movlw	20
  2570  021D  0221               	subwf	init_env@i^(0+128),w
  2571  021E                     u1515:	
  2572  021E  1C03               	skipc
  2573  021F  2A08               	goto	l2114
  2574                           
  2575                           ;main.c: 129:         IOCCFbits.IOCCF1 = FALSE;
  2576  0220  0022               	movlb	2	; select bank2
  2577  0221  110D               	bcf	13,2	;volatile
  2578                           
  2579                           ;main.c: 132: 
  2580  0222  0020               	movlb	0	; select bank0
  2581  0223  110E               	bcf	14,2	;volatile
  2582                           
  2583                           ;main.c: 135: 
  2584  0224  0021               	movlb	1	; select bank1
  2585  0225  140E               	bsf	14,0	;volatile
  2586                           
  2587                           ;main.c: 136:         if(g_data.g_start_read_data == TRUE ){
  2588  0226  0024               	movlb	4	; select bank4
  2589  0227  140E               	bsf	14,0	;volatile
  2590                           
  2591                           ;main.c: 139: 
  2592  0228  3183  236F         	fcall	_IIC_Init
  2593                           
  2594                           ;main.c: 142:         {
  2595  022A  0020               	movlb	0	; select bank0
  2596  022B  140C               	bsf	12,0	;volatile
  2597  022C  0008               	return
  2598  022D                     __end_of_init_env:	
  2599                           
  2600                           	psect	text2
  2601  036F                     __ptext2:	
  2602 ;; *************** function _IIC_Init *****************
  2603 ;; Defined at:
  2604 ;;		line 8 in file "myiic.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		None
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    6
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_init_env
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _IIC_Init
  2634  036F                     _IIC_Init:	
  2635                           
  2636                           ;myiic.c: 10:     LATC3=1;
  2637                           
  2638                           ;incstack = 0
  2639                           ; Regs used in _IIC_Init: []
  2640  036F  0022               	movlb	2	; select bank2
  2641  0370  158E               	bsf	14,3	;volatile
  2642                           
  2643                           ;myiic.c: 11:  LATC4=1;
  2644  0371  160E               	bsf	14,4	;volatile
  2645                           
  2646                           ;myiic.c: 13:     ODCONC3 = 1;
  2647  0372  0025               	movlb	5	; select bank5
  2648  0373  158E               	bsf	14,3	;volatile
  2649                           
  2650                           ;myiic.c: 14:     ODCONC4 = 1;
  2651  0374  160E               	bsf	14,4	;volatile
  2652                           
  2653                           ;myiic.c: 16:     TRISC4 = 0;
  2654  0375  0021               	movlb	1	; select bank1
  2655  0376  120E               	bcf	14,4	;volatile
  2656                           
  2657                           ;myiic.c: 17:     TRISC3 = 0;
  2658  0377  118E               	bcf	14,3	;volatile
  2659                           
  2660                           ;myiic.c: 19:  WPUC4 = 1;
  2661  0378  0024               	movlb	4	; select bank4
  2662  0379  160E               	bsf	14,4	;volatile
  2663                           
  2664                           ;myiic.c: 20:     WPUC3 = 1;
  2665  037A  158E               	bsf	14,3	;volatile
  2666  037B  0008               	return
  2667  037C                     __end_of_IIC_Init:	
  2668                           
  2669                           	psect	intentry
  2670  0004                     __pintentry:	
  2671 ;; *************** function _ISR *****************
  2672 ;; Defined at:
  2673 ;;		line 145 in file "main.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    5
  2694 ;; This function calls:
  2695 ;;		___lwmod
  2696 ;;		_receive_decode
  2697 ;;		_update_time
  2698 ;; This function is called by:
  2699 ;;		Interrupt level 1
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703  0004                     _ISR:	
  2704                           
  2705                           ;incstack = 0
  2706  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2707                           
  2708                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2709  0005  3180               	pagesel	$
  2710                           
  2711                           ;main.c: 146:             {;main.c: 147:                 g_data.g_flg_switch = TRUE;;mai
      +                          n.c: 150: 
  2712  0006  0027               	movlb	7	; select bank7
  2713  0007  1C99               	btfss	25,1	;volatile
  2714  0008  281A               	goto	i1l76
  2715  0009  0020               	movlb	0	; select bank0
  2716  000A  0821               	movf	_g_data+1,w	;volatile
  2717  000B  1D03               	btfss	3,2
  2718  000C  281A               	goto	i1l76
  2719  000D  0320               	decf	_g_data,w	;volatile
  2720  000E  1D03               	btfss	3,2
  2721  000F  281A               	goto	i1l76
  2722                           
  2723                           ;main.c: 152:         TMR0 = (217 + 14);;main.c: 155:     return;
  2724  0010  3001               	movlw	1
  2725  0011  00DA               	movwf	??_ISR
  2726  0012  085A               	movf	??_ISR,w
  2727  0013  00A1               	movwf	_g_data+1	;volatile
  2728                           
  2729                           ;main.c: 156: }
  2730  0014  01A0               	clrf	_g_data	;volatile
  2731                           
  2732                           ;main.c: 157: 
  2733  0015  110E               	bcf	14,2	;volatile
  2734                           
  2735                           ;main.c: 159: 
  2736  0016  100B               	bcf	11,0	;volatile
  2737                           
  2738                           ;main.c: 160:     init_env();
  2739  0017  0027               	movlb	7	; select bank7
  2740  0018  1099               	bcf	25,1	;volatile
  2741  0019  285D               	goto	i1l77
  2742  001A                     i1l76:	
  2743  001A  180B               	btfsc	11,0	;volatile
  2744  001B  281F               	goto	i1l81
  2745  001C  0027               	movlb	7	; select bank7
  2746  001D  1C99               	btfss	25,1	;volatile
  2747  001E  2822               	goto	i1l78
  2748  001F                     i1l81:	
  2749                           
  2750                           ;main.c: 163:     return;
  2751  001F  100B               	bcf	11,0	;volatile
  2752                           
  2753                           ;main.c: 164: }
  2754  0020  0027               	movlb	7	; select bank7
  2755  0021  1099               	bcf	25,1	;volatile
  2756  0022                     i1l78:	
  2757  0022  1D0B               	btfss	11,2	;volatile
  2758  0023  285D               	goto	i1l77
  2759  0024  3182  2278  3180   	fcall	_update_time
  2760  0027  0020               	movlb	0	; select bank0
  2761  0028  0321               	decf	_g_data+1,w	;volatile
  2762  0029  1D03               	btfss	3,2
  2763  002A  282E               	goto	i1l2000
  2764  002B  3180  206D  3180   	fcall	_receive_decode
  2765  002E                     i1l2000:	
  2766  002E  300A               	movlw	10
  2767  002F  00F0               	movwf	___lwmod@divisor
  2768  0030  3000               	movlw	0
  2769  0031  00F1               	movwf	___lwmod@divisor+1
  2770  0032  0020               	movlb	0	; select bank0
  2771  0033  0844               	movf	ISR@key_time_cnt+1,w
  2772  0034  00DB               	movwf	??_ISR+1
  2773  0035  0843               	movf	ISR@key_time_cnt,w
  2774  0036  00DA               	movwf	??_ISR
  2775  0037  0AC3               	incf	ISR@key_time_cnt,f
  2776  0038  1903               	skipnz
  2777  0039  0AC4               	incf	ISR@key_time_cnt+1,f
  2778  003A  085A               	movf	??_ISR,w
  2779  003B  00F2               	movwf	___lwmod@dividend
  2780  003C  085B               	movf	??_ISR+1,w
  2781  003D  00F3               	movwf	___lwmod@dividend+1
  2782  003E  3182  22F4  3180   	fcall	___lwmod
  2783  0041  0870               	movf	?___lwmod,w
  2784  0042  0471               	iorwf	?___lwmod+1,w
  2785  0043  1D03               	btfss	3,2
  2786  0044  2859               	goto	i1l2010
  2787  0045  1003               	clrc
  2788  0046  0020               	movlb	0	; select bank0
  2789  0047  0DC6               	rlf	ISR@history_key,f
  2790  0048  0E0E               	swapf	14,w	;volatile
  2791  0049  0C89               	rrf	9,f
  2792  004A  3901               	andlw	1
  2793  004B  00DA               	movwf	??_ISR
  2794  004C  085A               	movf	??_ISR,w
  2795  004D  04C6               	iorwf	ISR@history_key,f
  2796  004E  300F               	movlw	15
  2797  004F  0546               	andwf	ISR@history_key,w
  2798  0050  00DA               	movwf	??_ISR
  2799  0051  3003               	movlw	3
  2800  0052  065A               	xorwf	??_ISR,w
  2801  0053  1D03               	btfss	3,2
  2802  0054  2859               	goto	i1l2010
  2803  0055  3001               	movlw	1
  2804  0056  00DA               	movwf	??_ISR
  2805  0057  085A               	movf	??_ISR,w
  2806  0058  00A0               	movwf	_g_data	;volatile
  2807  0059                     i1l2010:	
  2808  0059  110B               	bcf	11,2	;volatile
  2809  005A  30E7               	movlw	231
  2810  005B  0020               	movlb	0	; select bank0
  2811  005C  0095               	movwf	21	;volatile
  2812  005D                     i1l77:	
  2813  005D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2814  005E  0009               	retfie
  2815  005F                     __end_of_ISR:	
  2816                           
  2817                           	psect	text4
  2818  0278                     __ptext4:	
  2819 ;; *************** function _update_time *****************
  2820 ;; Defined at:
  2821 ;;		line 14 in file "update_time.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;Total ram usage:        1 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    4
  2842 ;; This function calls:
  2843 ;;		_update_display
  2844 ;; This function is called by:
  2845 ;;		_ISR
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _update_time
  2851  0278                     _update_time:	
  2852                           
  2853                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2857  0278  3001               	movlw	1
  2858  0279  00FC               	movwf	??_update_time
  2859  027A  087C               	movf	??_update_time,w
  2860  027B  0020               	banksel	_g_data
  2861  027C  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  2862                           
  2863                           ;update_time.c: 17:     if( 50 == g_data.g_time_10ms ){
  2864  027D  3032               	movlw	50
  2865  027E  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2866  027F  1D03               	btfss	3,2
  2867  0280  2A84               	goto	i1l1792
  2868                           
  2869                           ;update_time.c: 18:         LATBbits.LATB3 = 1;
  2870  0281  0022               	movlb	2	; select bank2
  2871  0282  158D               	bsf	13,3	;volatile
  2872                           
  2873                           ;update_time.c: 19:     }else if( 100 == g_data.g_time_10ms ){
  2874  0283  2A8A               	goto	i1l1796
  2875  0284                     i1l1792:	
  2876  0284  3064               	movlw	100
  2877  0285  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2878  0286  1D03               	btfss	3,2
  2879  0287  2A8A               	goto	i1l1796
  2880                           
  2881                           ;update_time.c: 20:         LATBbits.LATB3 = 0;
  2882  0288  0022               	movlb	2	; select bank2
  2883  0289  118D               	bcf	13,3	;volatile
  2884  028A                     i1l1796:	
  2885                           
  2886                           ;update_time.c: 23:     if(g_data.g_time_10ms == 100){
  2887  028A  3064               	movlw	100
  2888  028B  0020               	banksel	_g_data
  2889  028C  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2890  028D  1D03               	btfss	3,2
  2891  028E  0008               	return
  2892                           
  2893                           ;update_time.c: 24:         g_data.g_time_10ms = 0;
  2894  028F  3000               	movlw	0
  2895  0290  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  2896                           
  2897                           ;update_time.c: 25:         g_data.g_time_s++;
  2898  0291  3001               	movlw	1
  2899  0292  00FC               	movwf	??_update_time
  2900  0293  087C               	movf	??_update_time,w
  2901  0294  0020               	banksel	_g_data
  2902  0295  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  2903                           
  2904                           ;update_time.c: 26:         update_display();
  2905  0296  3183  237C  3182   	fcall	_update_display
  2906                           
  2907                           ;update_time.c: 27:         if(g_data.g_time_s == 60){
  2908  0299  303C               	movlw	60
  2909  029A  0020               	banksel	_g_data
  2910  029B  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  2911  029C  1D03               	btfss	3,2
  2912  029D  0008               	return
  2913                           
  2914                           ;update_time.c: 28:             g_data.g_time_m++;
  2915  029E  3001               	movlw	1
  2916  029F  00FC               	movwf	??_update_time
  2917  02A0  087C               	movf	??_update_time,w
  2918  02A1  0020               	banksel	_g_data
  2919  02A2  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  2920                           
  2921                           ;update_time.c: 29:             g_data.g_time_s = 0;
  2922  02A3  3000               	movlw	0
  2923  02A4  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  2924                           
  2925                           ;update_time.c: 31:             if(g_data.g_time_m == 60){
  2926  02A5  303C               	movlw	60
  2927  02A6  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  2928  02A7  1D03               	btfss	3,2
  2929  02A8  2AB6               	goto	i1l1816
  2930                           
  2931                           ;update_time.c: 32:                 g_data.g_time_h++;
  2932  02A9  3001               	movlw	1
  2933  02AA  00FC               	movwf	??_update_time
  2934  02AB  087C               	movf	??_update_time,w
  2935  02AC  0020               	banksel	_g_data
  2936  02AD  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  2937                           
  2938                           ;update_time.c: 33:                 g_data.g_time_m = 0;
  2939  02AE  3000               	movlw	0
  2940  02AF  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2941                           
  2942                           ;update_time.c: 35:                 if(g_data.g_time_h == 24){
  2943  02B0  3018               	movlw	24
  2944  02B1  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  2945  02B2  1D03               	btfss	3,2
  2946  02B3  2AB6               	goto	i1l1816
  2947                           
  2948                           ;update_time.c: 36:                     g_data.g_time_h = 0;
  2949  02B4  3000               	movlw	0
  2950  02B5  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2951  02B6                     i1l1816:	
  2952                           
  2953                           ;update_time.c: 40:             update_display();
  2954  02B6  3183  237C         	fcall	_update_display
  2955  02B8  0008               	return
  2956  02B9                     __end_of_update_time:	
  2957                           
  2958                           	psect	text5
  2959  006D                     __ptext5:	
  2960 ;; *************** function _receive_decode *****************
  2961 ;; Defined at:
  2962 ;;		line 71 in file "receive_decode.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  i               2   13[BANK0 ] int 
  2967 ;;  i               1   15[BANK0 ] unsigned char 
  2968 ;;  last_time_m     2    7[BANK0 ] unsigned short 
  2969 ;;  last_time_h     2    5[BANK0 ] unsigned short 
  2970 ;;  check           1   17[BANK0 ] unsigned char 
  2971 ;;  read_value      1   16[BANK0 ] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2982 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;Total ram usage:       18 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    4
  2988 ;; This function calls:
  2989 ;;		_test_get_number
  2990 ;;		_times2number
  2991 ;;		_update_display
  2992 ;; This function is called by:
  2993 ;;		_ISR
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _receive_decode
  2999  006D                     _receive_decode:	
  3000                           
  3001                           ;receive_decode.c: 73:     if(PORTCbits.RC1 == PIN_HIGH){
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3005  006D  0020               	movlb	0	; select bank0
  3006  006E  1C8E               	btfss	14,1	;volatile
  3007  006F  2875               	goto	i1l133
  3008                           
  3009                           ;receive_decode.c: 74:         g_data.g_high_level_times++;
  3010  0070  3001               	movlw	1
  3011  0071  0020               	banksel	_g_data
  3012  0072  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3013  0073  3000               	movlw	0
  3014  0074  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3015  0075                     i1l133:	
  3016                           ;receive_decode.c: 75:     }
  3017                           
  3018                           
  3019                           ;receive_decode.c: 77:     g_data.g_all_level_times++;
  3020  0075  3001               	movlw	1
  3021  0076  0020               	banksel	_g_data
  3022  0077  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3023  0078  3000               	movlw	0
  3024  0079  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3025                           
  3026                           ;receive_decode.c: 81:     if(g_data.g_all_level_times < 100){
  3027  007A  3000               	movlw	0
  3028  007B  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3029  007C  3064               	movlw	100
  3030  007D  1903               	skipnz
  3031  007E  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3032  007F  1C03               	btfss	3,0
  3033  0080  0008               	return
  3034                           
  3035                           ;receive_decode.c: 85:     u8 read_value = times2number(g_data.g_high_level_times);
  3036  0081  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3037  0082  00F1               	movwf	times2number@high_level_times+1
  3038  0083  0020               	banksel	_g_data
  3039  0084  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3040  0085  00F0               	movwf	times2number@high_level_times
  3041  0086  3182  222D  3180   	fcall	_times2number
  3042  0089  0020               	movlb	0	; select bank0
  3043  008A  00C8               	movwf	??_receive_decode
  3044  008B  0848               	movf	??_receive_decode,w
  3045  008C  00D8               	movwf	receive_decode@read_value
  3046                           
  3047                           ;receive_decode.c: 87:     test_get_number(read_value);
  3048  008D  0858               	movf	receive_decode@read_value,w
  3049  008E  3182  22B9  3180   	fcall	_test_get_number
  3050                           
  3051                           ;receive_decode.c: 89:     g_data.g_all_level_times = 0;
  3052  0091  0020               	banksel	_g_data
  3053  0092  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3054  0093  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3055                           
  3056                           ;receive_decode.c: 90:     g_data.g_high_level_times = 0;
  3057  0094  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3058  0095  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3059                           
  3060                           ;receive_decode.c: 92:     if(read_value == 5){
  3061  0096  3005               	movlw	5
  3062  0097  0020               	movlb	0	; select bank0
  3063  0098  0658               	xorwf	receive_decode@read_value,w
  3064  0099  1D03               	btfss	3,2
  3065  009A  28A5               	goto	i1l1838
  3066                           
  3067                           ;receive_decode.c: 94:         g_data.g_find_recv_start = TRUE;
  3068  009B  3001               	movlw	1
  3069  009C  0020               	banksel	_g_data
  3070  009D  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3071                           
  3072                           ;receive_decode.c: 95:         g_data.g_recv_buf[CODE_P0] = 0;
  3073  009E  3000               	movlw	0
  3074  009F  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3075                           
  3076                           ;receive_decode.c: 96:         g_data.g_recv_count = CODE_P1;
  3077  00A0  3000               	movlw	0
  3078  00A1  00AC               	movwf	((_g_data+1)& (0+127)+11)	;volatile
  3079  00A2  3001               	movlw	1
  3080  00A3  00AB               	movwf	(_g_data& (0+127)+11)	;volatile
  3081                           
  3082                           ;receive_decode.c: 97:         return;
  3083  00A4  0008               	return
  3084  00A5                     i1l1838:	
  3085                           
  3086                           ;receive_decode.c: 100:     if(g_data.g_find_recv_start == FALSE || (read_value == 4)){
  3087  00A5  0020               	banksel	_g_data
  3088  00A6  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3089  00A7  1903               	btfsc	3,2
  3090  00A8  0008               	return
  3091  00A9  3004               	movlw	4
  3092  00AA  0020               	movlb	0	; select bank0
  3093  00AB  0658               	xorwf	receive_decode@read_value,w
  3094  00AC  1903               	btfsc	3,2
  3095  00AD  0008               	return
  3096                           
  3097                           ;receive_decode.c: 106:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3098  00AE  3020               	movlw	low _g_data
  3099  00AF  0086               	movwf	6
  3100  00B0  3000               	movlw	high _g_data
  3101  00B1  0087               	movwf	7
  3102  00B2  314B               	addfsr 1,11
  3103  00B3  302D               	movlw	low (_g_data+13)
  3104  00B4  00C8               	movwf	??_receive_decode
  3105  00B5  3000               	movlw	high (_g_data+13)
  3106  00B6  00C9               	movwf	??_receive_decode+1
  3107  00B7  3F40               	moviw [0]fsr1
  3108  00B8  0748               	addwf	??_receive_decode,w
  3109  00B9  00CA               	movwf	??_receive_decode+2
  3110  00BA  3F41               	moviw [1]fsr1
  3111  00BB  3D49               	addwfc	??_receive_decode+1,w
  3112  00BC  00CB               	movwf	??_receive_decode+3
  3113  00BD  084A               	movf	??_receive_decode+2,w
  3114  00BE  0086               	movwf	6
  3115  00BF  084B               	movf	??_receive_decode+3,w
  3116  00C0  0087               	movwf	7
  3117  00C1  0858               	movf	receive_decode@read_value,w
  3118  00C2  0081               	movwf	1
  3119  00C3  3001               	movlw	1
  3120  00C4  0020               	banksel	_g_data
  3121  00C5  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3122  00C6  3000               	movlw	0
  3123  00C7  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3124                           
  3125                           ;receive_decode.c: 107:     if(g_data.g_recv_count <= CODE_P3){
  3126  00C8  3000               	movlw	0
  3127  00C9  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3128  00CA  300B               	movlw	11
  3129  00CB  1903               	skipnz
  3130  00CC  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3131  00CD  1C03               	btfss	3,0
  3132  00CE  0008               	return
  3133                           
  3134                           ;receive_decode.c: 111:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE
      +                          _P2] != 0){
  3135  00CF  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3136  00D0  1903               	btfsc	3,2
  3137  00D1  28DD               	goto	i1l1860
  3138  00D2  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3139  00D3  1903               	btfsc	3,2
  3140  00D4  28DD               	goto	i1l1860
  3141  00D5                     i1l1854:	
  3142                           
  3143                           ;receive_decode.c: 112:         g_data.g_find_recv_start = FALSE;
  3144  00D5  3000               	movlw	0
  3145  00D6  0020               	banksel	_g_data
  3146  00D7  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3147                           
  3148                           ;receive_decode.c: 113:         g_data.g_start_read_data = 0;
  3149  00D8  3000               	movlw	0
  3150  00D9  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3151                           
  3152                           ;receive_decode.c: 114:         g_data.g_recv_count = 0;
  3153  00DA  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3154  00DB  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3155  00DC  0008               	return
  3156  00DD                     i1l1860:	
  3157                           
  3158                           ;receive_decode.c: 118:     u16 last_time_h = g_data.g_time_h;
  3159  00DD  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3160  00DE  0020               	movlb	0	; select bank0
  3161  00DF  00C8               	movwf	??_receive_decode
  3162  00E0  01C9               	clrf	??_receive_decode+1
  3163  00E1  0848               	movf	??_receive_decode,w
  3164  00E2  00CD               	movwf	receive_decode@last_time_h
  3165  00E3  0849               	movf	??_receive_decode+1,w
  3166  00E4  00CE               	movwf	receive_decode@last_time_h+1
  3167                           
  3168                           ;receive_decode.c: 119:     u16 last_time_m = g_data.g_time_m;
  3169  00E5  0020               	banksel	_g_data
  3170  00E6  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3171  00E7  0020               	movlb	0	; select bank0
  3172  00E8  00C8               	movwf	??_receive_decode
  3173  00E9  01C9               	clrf	??_receive_decode+1
  3174  00EA  0848               	movf	??_receive_decode,w
  3175  00EB  00CF               	movwf	receive_decode@last_time_m
  3176  00EC  0849               	movf	??_receive_decode+1,w
  3177  00ED  00D0               	movwf	receive_decode@last_time_m+1
  3178                           
  3179                           ;receive_decode.c: 120:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g
      +                          _recv_buf[CODE_H_2];
  3180  00EE  0020               	banksel	_g_data
  3181  00EF  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  3182  00F0  0020               	movlb	0	; select bank0
  3183  00F1  00C8               	movwf	??_receive_decode
  3184  00F2  3002               	movlw	2
  3185  00F3                     u118_25:	
  3186  00F3  35C8               	lslf	??_receive_decode,f
  3187  00F4  0B89               	decfsz	9,f
  3188  00F5  28F3               	goto	u118_25
  3189  00F6  0020               	banksel	_g_data
  3190  00F7  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  3191  00F8  0020               	movlb	0	; select bank0
  3192  00F9  0748               	addwf	??_receive_decode,w
  3193  00FA  00C9               	movwf	??_receive_decode+1
  3194  00FB  0849               	movf	??_receive_decode+1,w
  3195  00FC  0020               	banksel	_g_data
  3196  00FD  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3197                           
  3198                           ;receive_decode.c: 121:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.
      +                          g_recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  3199  00FE  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  3200  00FF  0020               	movlb	0	; select bank0
  3201  0100  00C8               	movwf	??_receive_decode
  3202  0101  3004               	movlw	4
  3203  0102                     u119_25:	
  3204  0102  35C8               	lslf	??_receive_decode,f
  3205  0103  0B89               	decfsz	9,f
  3206  0104  2902               	goto	u119_25
  3207  0105  0020               	banksel	_g_data
  3208  0106  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  3209  0107  0020               	movlb	0	; select bank0
  3210  0108  00C9               	movwf	??_receive_decode+1
  3211  0109  3001               	movlw	1
  3212  010A                     u120_25:	
  3213  010A  35C9               	lslf	??_receive_decode+1,f
  3214  010B  3EFF               	addlw	-1
  3215  010C  1D03               	skipz
  3216  010D  290A               	goto	u120_25
  3217  010E  3549               	lslf	??_receive_decode+1,w
  3218  010F  0748               	addwf	??_receive_decode,w
  3219  0110  00CA               	movwf	??_receive_decode+2
  3220  0111  0020               	banksel	_g_data
  3221  0112  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  3222  0113  0020               	movlb	0	; select bank0
  3223  0114  074A               	addwf	??_receive_decode+2,w
  3224  0115  00CB               	movwf	??_receive_decode+3
  3225  0116  084B               	movf	??_receive_decode+3,w
  3226  0117  0020               	banksel	_g_data
  3227  0118  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3228                           
  3229                           ;receive_decode.c: 122:     u8 check = 0;
  3230  0119  0020               	movlb	0	; select bank0
  3231  011A  01D9               	clrf	receive_decode@check
  3232                           
  3233                           ;receive_decode.c: 123:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  3234  011B  01D7               	clrf	receive_decode@i
  3235  011C  0AD7               	incf	receive_decode@i,f
  3236  011D                     i1l1874:	
  3237                           
  3238                           ;receive_decode.c: 124:     {;receive_decode.c: 125:         check ^= g_data.g_recv_buf[
      +                          i];
  3239  011D  0857               	movf	receive_decode@i,w
  3240  011E  00C8               	movwf	??_receive_decode
  3241  011F  01C9               	clrf	??_receive_decode+1
  3242  0120  302D               	movlw	low (_g_data+13)
  3243  0121  00CA               	movwf	??_receive_decode+2
  3244  0122  3000               	movlw	high (_g_data+13)
  3245  0123  00CB               	movwf	??_receive_decode+3
  3246  0124  0848               	movf	??_receive_decode,w
  3247  0125  074A               	addwf	??_receive_decode+2,w
  3248  0126  0086               	movwf	6
  3249  0127  0849               	movf	??_receive_decode+1,w
  3250  0128  3D4B               	addwfc	??_receive_decode+3,w
  3251  0129  0087               	movwf	7
  3252  012A  0801               	movf	1,w
  3253  012B  00CC               	movwf	??_receive_decode+4
  3254  012C  084C               	movf	??_receive_decode+4,w
  3255  012D  06D9               	xorwf	receive_decode@check,f
  3256                           
  3257                           ;receive_decode.c: 126:     }
  3258  012E  3001               	movlw	1
  3259  012F  00C8               	movwf	??_receive_decode
  3260  0130  0848               	movf	??_receive_decode,w
  3261  0131  07D7               	addwf	receive_decode@i,f
  3262  0132  300A               	movlw	10
  3263  0133  0257               	subwf	receive_decode@i,w
  3264  0134  1C03               	skipc
  3265  0135  291D               	goto	i1l1874
  3266                           
  3267                           ;receive_decode.c: 127:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[C
      +                          ODE_P3] % 2 == 0) )
  3268  0136  0859               	movf	receive_decode@check,w
  3269  0137  1903               	btfsc	3,2
  3270  0138  293D               	goto	i1l146
  3271  0139  3003               	movlw	3
  3272  013A  0659               	xorwf	receive_decode@check,w
  3273  013B  1D03               	btfss	3,2
  3274  013C  294F               	goto	i1l1892
  3275  013D                     i1l146:	
  3276  013D  0020               	banksel	_g_data
  3277  013E  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  3278  013F  294F               	goto	i1l1892
  3279                           
  3280                           ;receive_decode.c: 128:     {;receive_decode.c: 129:         g_data.g_time_h += (2 ==g_d
      +                          ata.g_recv_buf[CODE_P3])? 12 : 0;
  3281  0140  3002               	movlw	2
  3282  0141  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3283  0142  1903               	btfsc	3,2
  3284  0143  2948               	goto	i1l1888
  3285  0144  0020               	movlb	0	; select bank0
  3286  0145  01D1               	clrf	_receive_decode$591
  3287  0146  01D2               	clrf	_receive_decode$591+1
  3288  0147  294D               	goto	i1l1890
  3289  0148                     i1l1888:	
  3290  0148  300C               	movlw	12
  3291  0149  0020               	movlb	0	; select bank0
  3292  014A  00D1               	movwf	_receive_decode$591
  3293  014B  3000               	movlw	0
  3294  014C  00D2               	movwf	_receive_decode$591+1
  3295  014D                     i1l1890:	
  3296  014D  0851               	movf	_receive_decode$591,w
  3297  014E  296D               	goto	L1
  3298  014F                     i1l1892:	
  3299                           ;receive_decode.c: 130:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_rec
      +                          v_buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  3300                           
  3301  014F  0020               	movlb	0	; select bank0
  3302  0150  0359               	decf	receive_decode@check,w
  3303  0151  1903               	btfsc	3,2
  3304  0152  2957               	goto	i1l1896
  3305  0153  3002               	movlw	2
  3306  0154  0659               	xorwf	receive_decode@check,w
  3307  0155  1D03               	btfss	3,2
  3308  0156  28D5               	goto	i1l1854
  3309  0157                     i1l1896:	
  3310  0157  0020               	banksel	_g_data
  3311  0158  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  3312  0159  1903               	btfsc	3,2
  3313  015A  295F               	goto	i1l1900
  3314  015B  3003               	movlw	3
  3315  015C  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3316  015D  1D03               	btfss	3,2
  3317  015E  28D5               	goto	i1l1854
  3318  015F                     i1l1900:	
  3319                           
  3320                           ;receive_decode.c: 132:     {;receive_decode.c: 133:         g_data.g_time_h += (3 ==g_d
      +                          ata.g_recv_buf[CODE_P3])? 12 : 0;
  3321  015F  3003               	movlw	3
  3322  0160  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  3323  0161  1903               	btfsc	3,2
  3324  0162  2967               	goto	i1l1904
  3325  0163  0020               	movlb	0	; select bank0
  3326  0164  01D3               	clrf	_receive_decode$592
  3327  0165  01D4               	clrf	_receive_decode$592+1
  3328  0166  296C               	goto	i1l1906
  3329  0167                     i1l1904:	
  3330  0167  300C               	movlw	12
  3331  0168  0020               	movlb	0	; select bank0
  3332  0169  00D3               	movwf	_receive_decode$592
  3333  016A  3000               	movlw	0
  3334  016B  00D4               	movwf	_receive_decode$592+1
  3335  016C                     i1l1906:	
  3336  016C  0853               	movf	_receive_decode$592,w
  3337  016D                     L1:	
  3338  016D  00C8               	movwf	??_receive_decode
  3339  016E  0848               	movf	??_receive_decode,w
  3340  016F  0020               	banksel	_g_data
  3341  0170  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  3342                           
  3343                           ;receive_decode.c: 141:     if(last_time_h != g_data.g_time_h || last_time_m != g_data.g
      +                          _time_m){
  3344                           
  3345                           ;receive_decode.c: 134:     }else{
  3346  0171  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3347  0172  0020               	movlb	0	; select bank0
  3348  0173  00C8               	movwf	??_receive_decode
  3349  0174  01C9               	clrf	??_receive_decode+1
  3350  0175  084E               	movf	receive_decode@last_time_h+1,w
  3351  0176  0649               	xorwf	??_receive_decode+1,w
  3352  0177  1D03               	skipz
  3353  0178  297B               	goto	u131_25
  3354  0179  084D               	movf	receive_decode@last_time_h,w
  3355  017A  0648               	xorwf	??_receive_decode,w
  3356  017B                     u131_25:	
  3357  017B  1D03               	skipz
  3358  017C  298A               	goto	i1l1916
  3359  017D  0020               	banksel	_g_data
  3360  017E  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3361  017F  0020               	movlb	0	; select bank0
  3362  0180  00C8               	movwf	??_receive_decode
  3363  0181  01C9               	clrf	??_receive_decode+1
  3364  0182  0850               	movf	receive_decode@last_time_m+1,w
  3365  0183  0649               	xorwf	??_receive_decode+1,w
  3366  0184  1D03               	skipz
  3367  0185  2988               	goto	u132_25
  3368  0186  084F               	movf	receive_decode@last_time_m,w
  3369  0187  0648               	xorwf	??_receive_decode,w
  3370  0188                     u132_25:	
  3371  0188  1903               	skipnz
  3372  0189  298D               	goto	i1l1918
  3373  018A                     i1l1916:	
  3374                           
  3375                           ;receive_decode.c: 142:         update_display();
  3376  018A  3183  237C  3180   	fcall	_update_display
  3377  018D                     i1l1918:	
  3378                           
  3379                           ;receive_decode.c: 146:     g_data.g_find_recv_start = FALSE;
  3380  018D  3000               	movlw	0
  3381  018E  0020               	banksel	_g_data
  3382  018F  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3383                           
  3384                           ;receive_decode.c: 147:     PORTCbits.RC2 = BPC_PWR_OFF;
  3385  0190  0020               	movlb	0	; select bank0
  3386  0191  150E               	bsf	14,2	;volatile
  3387                           
  3388                           ;receive_decode.c: 148:     g_data.g_start_read_data = 0;
  3389  0192  3000               	movlw	0
  3390  0193  0020               	banksel	_g_data
  3391  0194  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3392                           
  3393                           ;receive_decode.c: 149:     g_data.g_recv_count = 0;
  3394  0195  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3395  0196  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3396                           
  3397                           ;receive_decode.c: 150:     for(int i = 0;i < 20; i++){
  3398  0197  0020               	movlb	0	; select bank0
  3399  0198  01D5               	clrf	receive_decode@i_593
  3400  0199  01D6               	clrf	receive_decode@i_593+1
  3401  019A                     i1l1932:	
  3402                           
  3403                           ;receive_decode.c: 151:         g_data.g_recv_buf[i] = 5;
  3404  019A  302D               	movlw	low (_g_data+13)
  3405  019B  0020               	movlb	0	; select bank0
  3406  019C  00C8               	movwf	??_receive_decode
  3407  019D  3000               	movlw	high (_g_data+13)
  3408  019E  00C9               	movwf	??_receive_decode+1
  3409  019F  0855               	movf	receive_decode@i_593,w
  3410  01A0  0748               	addwf	??_receive_decode,w
  3411  01A1  00CA               	movwf	??_receive_decode+2
  3412  01A2  0856               	movf	receive_decode@i_593+1,w
  3413  01A3  3D49               	addwfc	??_receive_decode+1,w
  3414  01A4  00CB               	movwf	??_receive_decode+3
  3415  01A5  084A               	movf	??_receive_decode+2,w
  3416  01A6  0086               	movwf	6
  3417  01A7  084B               	movf	??_receive_decode+3,w
  3418  01A8  0087               	movwf	7
  3419  01A9  3005               	movlw	5
  3420  01AA  0081               	movwf	1
  3421                           
  3422                           ;receive_decode.c: 152:     }
  3423  01AB  3001               	movlw	1
  3424  01AC  07D5               	addwf	receive_decode@i_593,f
  3425  01AD  3000               	movlw	0
  3426  01AE  3DD6               	addwfc	receive_decode@i_593+1,f
  3427  01AF  0856               	movf	receive_decode@i_593+1,w
  3428  01B0  3A80               	xorlw	128
  3429  01B1  00C8               	movwf	??_receive_decode
  3430  01B2  3080               	movlw	128
  3431  01B3  0248               	subwf	??_receive_decode,w
  3432  01B4  1D03               	skipz
  3433  01B5  29B8               	goto	u133_25
  3434  01B6  3014               	movlw	20
  3435  01B7  0255               	subwf	receive_decode@i_593,w
  3436  01B8                     u133_25:	
  3437  01B8  1803               	btfsc	3,0
  3438  01B9  0008               	return
  3439  01BA  299A               	goto	i1l1932
  3440  01BB                     __end_of_receive_decode:	
  3441                           
  3442                           	psect	text6
  3443  037C                     __ptext6:	
  3444 ;; *************** function _update_display *****************
  3445 ;; Defined at:
  3446 ;;		line 62 in file "update_display.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;Total ram usage:        2 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		_write_once
  3469 ;; This function is called by:
  3470 ;;		_receive_decode
  3471 ;;		_update_time
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _update_display
  3477  037C                     _update_display:	
  3478                           
  3479                           ;update_display.c: 73:     write_once(0xff, 0x00, 0xf0, 0x0f);
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  3483  037C  01F6               	clrf	write_once@HR
  3484  037D  30F0               	movlw	240
  3485  037E  00FA               	movwf	??_update_display
  3486  037F  087A               	movf	??_update_display,w
  3487  0380  00F7               	movwf	write_once@ML
  3488  0381  300F               	movlw	15
  3489  0382  00FB               	movwf	??_update_display+1
  3490  0383  087B               	movf	??_update_display+1,w
  3491  0384  00F8               	movwf	write_once@MR
  3492  0385  30FF               	movlw	255
  3493  0386  3183  2347         	fcall	_write_once
  3494  0388  0008               	return
  3495  0389                     __end_of_update_display:	
  3496                           
  3497                           	psect	text7
  3498  0347                     __ptext7:	
  3499 ;; *************** function _write_once *****************
  3500 ;; Defined at:
  3501 ;;		line 50 in file "update_display.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  HL              1    wreg     unsigned char 
  3504 ;;  HR              1    6[COMMON] unsigned char 
  3505 ;;  ML              1    7[COMMON] unsigned char 
  3506 ;;  MR              1    8[COMMON] unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  HL              1    9[COMMON] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3518 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;Total ram usage:        4 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    2
  3525 ;; This function calls:
  3526 ;;		_control595_delay
  3527 ;;		_write_byte
  3528 ;; This function is called by:
  3529 ;;		_update_display
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _write_once
  3535  0347                     _write_once:	
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  3539                           ;write_once@HL stored from wreg
  3540  0347  00F9               	movwf	write_once@HL
  3541                           
  3542                           ;update_display.c: 52:     write_byte(HL);
  3543  0348  0879               	movf	write_once@HL,w
  3544  0349  3183  2320  3183   	fcall	_write_byte
  3545                           
  3546                           ;update_display.c: 53:     write_byte(HR);
  3547  034C  0876               	movf	write_once@HR,w
  3548  034D  3183  2320  3183   	fcall	_write_byte
  3549                           
  3550                           ;update_display.c: 54:     write_byte(ML);
  3551  0350  0877               	movf	write_once@ML,w
  3552  0351  3183  2320  3183   	fcall	_write_byte
  3553                           
  3554                           ;update_display.c: 55:     write_byte(MR);
  3555  0354  0878               	movf	write_once@MR,w
  3556  0355  3183  2320  3183   	fcall	_write_byte
  3557                           
  3558                           ;update_display.c: 57:     LATBbits.LATB1 = PIN_HIGH;
  3559  0358  0022               	movlb	2	; select bank2
  3560  0359  148D               	bsf	13,1	;volatile
  3561                           
  3562                           ;update_display.c: 58:  control595_delay();
  3563  035A  3183  2389         	fcall	_control595_delay
  3564                           
  3565                           ;update_display.c: 59:     LATBbits.LATB1 = PIN_LOW;
  3566  035C  0022               	movlb	2	; select bank2
  3567  035D  108D               	bcf	13,1	;volatile
  3568  035E  0008               	return
  3569  035F                     __end_of_write_once:	
  3570                           
  3571                           	psect	text8
  3572  0320                     __ptext8:	
  3573 ;; *************** function _write_byte *****************
  3574 ;; Defined at:
  3575 ;;		line 38 in file "update_display.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  data            1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  data            1    4[COMMON] unsigned char 
  3580 ;;  i               1    5[COMMON] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;Total ram usage:        4 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    1
  3597 ;; This function calls:
  3598 ;;		_control595_delay
  3599 ;; This function is called by:
  3600 ;;		_write_once
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _write_byte
  3606  0320                     _write_byte:	
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3610                           ;write_byte@data stored from wreg
  3611  0320  00F4               	movwf	write_byte@data
  3612                           
  3613                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  3614  0321  01F5               	clrf	write_byte@i
  3615  0322                     i1l1478:	
  3616                           
  3617                           ;update_display.c: 41:   LATBbits.LATB5 = (data & 0x80) >> 7;
  3618  0322  0874               	movf	write_byte@data,w
  3619  0323  00F2               	movwf	??_write_byte
  3620  0324  3007               	movlw	7
  3621  0325                     u77_25:	
  3622  0325  36F2               	lsrf	??_write_byte,f
  3623  0326  0B89               	decfsz	9,f
  3624  0327  2B25               	goto	u77_25
  3625  0328  0872               	movf	??_write_byte,w
  3626  0329  3901               	andlw	1
  3627  032A  00F3               	movwf	??_write_byte+1
  3628  032B  0EF3               	swapf	??_write_byte+1,f
  3629  032C  0DF3               	rlf	??_write_byte+1,f
  3630  032D  0022               	movlb	2	; select bank2
  3631  032E  080D               	movf	13,w	;volatile
  3632  032F  0673               	xorwf	??_write_byte+1,w
  3633  0330  39DF               	andlw	-33
  3634  0331  0673               	xorwf	??_write_byte+1,w
  3635  0332  008D               	movwf	13	;volatile
  3636                           
  3637                           ;update_display.c: 42:         LATBbits.LATB0 = PIN_LOW;
  3638  0333  100D               	bcf	13,0	;volatile
  3639                           
  3640                           ;update_display.c: 43:   control595_delay();
  3641  0334  3183  2389  3183   	fcall	_control595_delay
  3642                           
  3643                           ;update_display.c: 44:         LATBbits.LATB0 = PIN_HIGH;
  3644  0337  0022               	movlb	2	; select bank2
  3645  0338  140D               	bsf	13,0	;volatile
  3646                           
  3647                           ;update_display.c: 45:   control595_delay();
  3648  0339  3183  2389  3183   	fcall	_control595_delay
  3649                           
  3650                           ;update_display.c: 46:         data <<= 1;
  3651  033C  1003               	clrc
  3652  033D  0DF4               	rlf	write_byte@data,f
  3653                           
  3654                           ;update_display.c: 47:     }
  3655  033E  3001               	movlw	1
  3656  033F  00F2               	movwf	??_write_byte
  3657  0340  0872               	movf	??_write_byte,w
  3658  0341  07F5               	addwf	write_byte@i,f
  3659  0342  3008               	movlw	8
  3660  0343  0275               	subwf	write_byte@i,w
  3661  0344  1803               	btfsc	3,0
  3662  0345  0008               	return
  3663  0346  2B22               	goto	i1l1478
  3664  0347                     __end_of_write_byte:	
  3665                           
  3666                           	psect	text9
  3667  0389                     __ptext9:	
  3668 ;; *************** function _control595_delay *****************
  3669 ;; Defined at:
  3670 ;;		line 21 in file "update_display.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  times           1    1[COMMON] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_write_byte
  3694 ;;		_write_once
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _control595_delay
  3700  0389                     _control595_delay:	
  3701                           
  3702                           ;update_display.c: 22:    u8 times = 10;
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  3706  0389  300A               	movlw	10
  3707  038A  00F0               	movwf	??_control595_delay
  3708  038B  0870               	movf	??_control595_delay,w
  3709  038C  00F1               	movwf	control595_delay@times
  3710  038D                     i1l195:	
  3711                           ;update_display.c: 26:    }
  3712                           
  3713                           ;update_display.c: 23:    while(times > 0){
  3714                           
  3715                           
  3716                           ;update_display.c: 23:    while(times > 0){
  3717  038D  0871               	movf	control595_delay@times,w
  3718  038E  1903               	btfsc	3,2
  3719  038F  0008               	return
  3720                           
  3721                           ;update_display.c: 24:     __nop();
  3722  0390  0000               	nop
  3723                           
  3724                           ;update_display.c: 25:        times--;
  3725  0391  3001               	movlw	1
  3726  0392  02F1               	subwf	control595_delay@times,f
  3727  0393  2B8D               	goto	i1l195
  3728  0394                     __end_of_control595_delay:	
  3729                           
  3730                           	psect	text10
  3731  022D                     __ptext10:	
  3732 ;; *************** function _times2number *****************
  3733 ;; Defined at:
  3734 ;;		line 14 in file "receive_decode.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  high_level_t    2    0[COMMON] unsigned short 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      unsigned char 
  3741 ;; Registers used:
  3742 ;;		wreg
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_receive_decode
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _times2number
  3763  022D                     _times2number:	
  3764                           
  3765                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _times2number: [wreg]
  3769  022D  3000               	movlw	0
  3770  022E  0271               	subwf	times2number@high_level_times+1,w
  3771  022F  3005               	movlw	5
  3772  0230  1903               	skipnz
  3773  0231  0270               	subwf	times2number@high_level_times,w
  3774  0232  1C03               	skipc
  3775  0233  2A3D               	goto	i1l1536
  3776  0234  3000               	movlw	0
  3777  0235  0271               	subwf	times2number@high_level_times+1,w
  3778  0236  300F               	movlw	15
  3779  0237  1903               	skipnz
  3780  0238  0270               	subwf	times2number@high_level_times,w
  3781  0239  1803               	skipnc
  3782  023A  2A3D               	goto	i1l1536
  3783                           
  3784                           ;receive_decode.c: 17:         return 0;
  3785  023B  3000               	movlw	0
  3786  023C  0008               	return
  3787  023D                     i1l1536:	
  3788  023D  3000               	movlw	0
  3789  023E  0271               	subwf	times2number@high_level_times+1,w
  3790  023F  300F               	movlw	15
  3791  0240  1903               	skipnz
  3792  0241  0270               	subwf	times2number@high_level_times,w
  3793  0242  1C03               	skipc
  3794  0243  2A4D               	goto	i1l1546
  3795  0244  3000               	movlw	0
  3796  0245  0271               	subwf	times2number@high_level_times+1,w
  3797  0246  3019               	movlw	25
  3798  0247  1903               	skipnz
  3799  0248  0270               	subwf	times2number@high_level_times,w
  3800  0249  1803               	skipnc
  3801  024A  2A4D               	goto	i1l1546
  3802                           
  3803                           ;receive_decode.c: 20:         return 1;
  3804  024B  3001               	movlw	1
  3805  024C  0008               	return
  3806  024D                     i1l1546:	
  3807  024D  3000               	movlw	0
  3808  024E  0271               	subwf	times2number@high_level_times+1,w
  3809  024F  3019               	movlw	25
  3810  0250  1903               	skipnz
  3811  0251  0270               	subwf	times2number@high_level_times,w
  3812  0252  1C03               	skipc
  3813  0253  2A5D               	goto	i1l1556
  3814  0254  3000               	movlw	0
  3815  0255  0271               	subwf	times2number@high_level_times+1,w
  3816  0256  3023               	movlw	35
  3817  0257  1903               	skipnz
  3818  0258  0270               	subwf	times2number@high_level_times,w
  3819  0259  1803               	skipnc
  3820  025A  2A5D               	goto	i1l1556
  3821                           
  3822                           ;receive_decode.c: 23:         return 2;
  3823  025B  3002               	movlw	2
  3824  025C  0008               	return
  3825  025D                     i1l1556:	
  3826  025D  3000               	movlw	0
  3827  025E  0271               	subwf	times2number@high_level_times+1,w
  3828  025F  3023               	movlw	35
  3829  0260  1903               	skipnz
  3830  0261  0270               	subwf	times2number@high_level_times,w
  3831  0262  1C03               	skipc
  3832  0263  2A6D               	goto	i1l1566
  3833  0264  3000               	movlw	0
  3834  0265  0271               	subwf	times2number@high_level_times+1,w
  3835  0266  302D               	movlw	45
  3836  0267  1903               	skipnz
  3837  0268  0270               	subwf	times2number@high_level_times,w
  3838  0269  1803               	skipnc
  3839  026A  2A6D               	goto	i1l1566
  3840                           
  3841                           ;receive_decode.c: 26:         return 3;
  3842  026B  3003               	movlw	3
  3843  026C  0008               	return
  3844  026D                     i1l1566:	
  3845  026D  3000               	movlw	0
  3846  026E  0271               	subwf	times2number@high_level_times+1,w
  3847  026F  302D               	movlw	45
  3848  0270  1903               	skipnz
  3849  0271  0270               	subwf	times2number@high_level_times,w
  3850  0272  1C03               	skipc
  3851  0273  2A76               	goto	i1l1574
  3852                           
  3853                           ;receive_decode.c: 29:         return 4;
  3854  0274  3004               	movlw	4
  3855  0275  0008               	return
  3856  0276                     i1l1574:	
  3857                           
  3858                           ;receive_decode.c: 32:         return 5;
  3859  0276  3005               	movlw	5
  3860  0277  0008               	return
  3861  0278                     __end_of_times2number:	
  3862                           
  3863                           	psect	text11
  3864  02B9                     __ptext11:	
  3865 ;; *************** function _test_get_number *****************
  3866 ;; Defined at:
  3867 ;;		line 37 in file "receive_decode.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  get_num         1    wreg     unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  get_num         1    0[COMMON] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        1 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_receive_decode
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _test_get_number
  3896  02B9                     _test_get_number:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  3900                           ;test_get_number@get_num stored from wreg
  3901  02B9  00F0               	movwf	test_get_number@get_num
  3902                           
  3903                           ;receive_decode.c: 38:     if(get_num == 0){
  3904  02BA  0870               	movf	test_get_number@get_num,w
  3905  02BB  1D03               	btfss	3,2
  3906  02BC  2AC3               	goto	i1l1582
  3907                           
  3908                           ;receive_decode.c: 39:         LATAbits.LATA2 = 1;
  3909  02BD  0022               	movlb	2	; select bank2
  3910  02BE  150C               	bsf	12,2	;volatile
  3911                           
  3912                           ;receive_decode.c: 40:         LATAbits.LATA3 = 0;
  3913  02BF  118C               	bcf	12,3	;volatile
  3914                           
  3915                           ;receive_decode.c: 41:         LATAbits.LATA4 = 0;
  3916  02C0  120C               	bcf	12,4	;volatile
  3917                           
  3918                           ;receive_decode.c: 42:         LATAbits.LATA5 = 0;
  3919  02C1  128C               	bcf	12,5	;volatile
  3920                           
  3921                           ;receive_decode.c: 43:     }else if(get_num == 1){
  3922  02C2  0008               	return
  3923  02C3                     i1l1582:	
  3924  02C3  0370               	decf	test_get_number@get_num,w
  3925  02C4  1D03               	btfss	3,2
  3926  02C5  2ACC               	goto	i1l1586
  3927                           
  3928                           ;receive_decode.c: 44:         LATAbits.LATA2 = 0;
  3929  02C6  0022               	movlb	2	; select bank2
  3930  02C7  110C               	bcf	12,2	;volatile
  3931                           
  3932                           ;receive_decode.c: 45:         LATAbits.LATA3 = 1;
  3933  02C8  158C               	bsf	12,3	;volatile
  3934                           
  3935                           ;receive_decode.c: 46:         LATAbits.LATA4 = 0;
  3936  02C9  120C               	bcf	12,4	;volatile
  3937                           
  3938                           ;receive_decode.c: 47:         LATAbits.LATA5 = 0;
  3939  02CA  128C               	bcf	12,5	;volatile
  3940                           
  3941                           ;receive_decode.c: 48:     }else if(get_num == 2){
  3942  02CB  0008               	return
  3943  02CC                     i1l1586:	
  3944  02CC  3002               	movlw	2
  3945  02CD  0670               	xorwf	test_get_number@get_num,w
  3946  02CE  1D03               	btfss	3,2
  3947  02CF  2AD6               	goto	i1l1590
  3948                           
  3949                           ;receive_decode.c: 49:         LATAbits.LATA2 = 0;
  3950  02D0  0022               	movlb	2	; select bank2
  3951  02D1  110C               	bcf	12,2	;volatile
  3952                           
  3953                           ;receive_decode.c: 50:         LATAbits.LATA3 = 0;
  3954  02D2  118C               	bcf	12,3	;volatile
  3955                           
  3956                           ;receive_decode.c: 51:         LATAbits.LATA4 = 1;
  3957  02D3  160C               	bsf	12,4	;volatile
  3958                           
  3959                           ;receive_decode.c: 52:         LATAbits.LATA5 = 0;
  3960  02D4  128C               	bcf	12,5	;volatile
  3961                           
  3962                           ;receive_decode.c: 53:     }else if(get_num == 3){
  3963  02D5  0008               	return
  3964  02D6                     i1l1590:	
  3965  02D6  3003               	movlw	3
  3966  02D7  0670               	xorwf	test_get_number@get_num,w
  3967  02D8  1D03               	btfss	3,2
  3968  02D9  2AE0               	goto	i1l1594
  3969                           
  3970                           ;receive_decode.c: 54:         LATAbits.LATA2 = 0;
  3971  02DA  0022               	movlb	2	; select bank2
  3972  02DB  110C               	bcf	12,2	;volatile
  3973                           
  3974                           ;receive_decode.c: 55:         LATAbits.LATA3 = 0;
  3975  02DC  118C               	bcf	12,3	;volatile
  3976                           
  3977                           ;receive_decode.c: 56:         LATAbits.LATA4 = 0;
  3978  02DD  120C               	bcf	12,4	;volatile
  3979                           
  3980                           ;receive_decode.c: 57:         LATAbits.LATA5 = 1;
  3981  02DE  168C               	bsf	12,5	;volatile
  3982                           
  3983                           ;receive_decode.c: 58:     }else if(get_num == 4){
  3984  02DF  0008               	return
  3985  02E0                     i1l1594:	
  3986  02E0  3004               	movlw	4
  3987  02E1  0670               	xorwf	test_get_number@get_num,w
  3988  02E2  1D03               	btfss	3,2
  3989  02E3  2AEA               	goto	i1l1598
  3990                           
  3991                           ;receive_decode.c: 59:         LATAbits.LATA2 = 1;
  3992  02E4  0022               	movlb	2	; select bank2
  3993  02E5  150C               	bsf	12,2	;volatile
  3994                           
  3995                           ;receive_decode.c: 60:         LATAbits.LATA3 = 1;
  3996  02E6  158C               	bsf	12,3	;volatile
  3997                           
  3998                           ;receive_decode.c: 61:         LATAbits.LATA4 = 1;
  3999  02E7  160C               	bsf	12,4	;volatile
  4000                           
  4001                           ;receive_decode.c: 62:         LATAbits.LATA5 = 1;
  4002  02E8  168C               	bsf	12,5	;volatile
  4003                           
  4004                           ;receive_decode.c: 63:     }else if(get_num == 5){
  4005  02E9  0008               	return
  4006  02EA                     i1l1598:	
  4007  02EA  3005               	movlw	5
  4008  02EB  0670               	xorwf	test_get_number@get_num,w
  4009  02EC  1D03               	btfss	3,2
  4010  02ED  0008               	return
  4011                           
  4012                           ;receive_decode.c: 64:         LATAbits.LATA2 = 0;
  4013  02EE  0022               	movlb	2	; select bank2
  4014  02EF  110C               	bcf	12,2	;volatile
  4015                           
  4016                           ;receive_decode.c: 65:         LATAbits.LATA3 = 0;
  4017  02F0  118C               	bcf	12,3	;volatile
  4018                           
  4019                           ;receive_decode.c: 66:         LATAbits.LATA4 = 0;
  4020  02F1  120C               	bcf	12,4	;volatile
  4021                           
  4022                           ;receive_decode.c: 67:         LATAbits.LATA5 = 0;
  4023  02F2  128C               	bcf	12,5	;volatile
  4024  02F3  0008               	return
  4025  02F4                     __end_of_test_get_number:	
  4026                           
  4027                           	psect	text12
  4028  02F4                     __ptext12:	
  4029 ;; *************** function ___lwmod *****************
  4030 ;; Defined at:
  4031 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  divisor         2    0[COMMON] unsigned int 
  4034 ;;  dividend        2    2[COMMON] unsigned int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  counter         1    5[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    0[COMMON] unsigned int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;Total ram usage:        6 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_ISR
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function ___lwmod
  4061  02F4                     ___lwmod:	
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4065  02F4  0870               	movf	___lwmod@divisor,w
  4066  02F5  0471               	iorwf	___lwmod@divisor+1,w
  4067  02F6  1903               	btfsc	3,2
  4068  02F7  2B1B               	goto	i1l1968
  4069  02F8  01F5               	clrf	___lwmod@counter
  4070  02F9  0AF5               	incf	___lwmod@counter,f
  4071  02FA                     i1l1958:	
  4072  02FA  1BF1               	btfsc	___lwmod@divisor+1,7
  4073  02FB  2B06               	goto	i1l1960
  4074  02FC  3001               	movlw	1
  4075  02FD                     u136_25:	
  4076  02FD  35F0               	lslf	___lwmod@divisor,f
  4077  02FE  0DF1               	rlf	___lwmod@divisor+1,f
  4078  02FF  0B89               	decfsz	9,f
  4079  0300  2AFD               	goto	u136_25
  4080  0301  3001               	movlw	1
  4081  0302  00F4               	movwf	??___lwmod
  4082  0303  0874               	movf	??___lwmod,w
  4083  0304  07F5               	addwf	___lwmod@counter,f
  4084  0305  2AFA               	goto	i1l1958
  4085  0306                     i1l1960:	
  4086  0306  0871               	movf	___lwmod@divisor+1,w
  4087  0307  0273               	subwf	___lwmod@dividend+1,w
  4088  0308  1D03               	skipz
  4089  0309  2B0C               	goto	u138_25
  4090  030A  0870               	movf	___lwmod@divisor,w
  4091  030B  0272               	subwf	___lwmod@dividend,w
  4092  030C                     u138_25:	
  4093  030C  1C03               	skipc
  4094  030D  2B12               	goto	i1l1964
  4095  030E  0870               	movf	___lwmod@divisor,w
  4096  030F  02F2               	subwf	___lwmod@dividend,f
  4097  0310  0871               	movf	___lwmod@divisor+1,w
  4098  0311  3BF3               	subwfb	___lwmod@dividend+1,f
  4099  0312                     i1l1964:	
  4100  0312  3001               	movlw	1
  4101  0313                     u139_25:	
  4102  0313  36F1               	lsrf	___lwmod@divisor+1,f
  4103  0314  0CF0               	rrf	___lwmod@divisor,f
  4104  0315  0B89               	decfsz	9,f
  4105  0316  2B13               	goto	u139_25
  4106  0317  3001               	movlw	1
  4107  0318  02F5               	subwf	___lwmod@counter,f
  4108  0319  1D03               	btfss	3,2
  4109  031A  2B06               	goto	i1l1960
  4110  031B                     i1l1968:	
  4111  031B  0873               	movf	___lwmod@dividend+1,w
  4112  031C  00F1               	movwf	?___lwmod+1
  4113  031D  0872               	movf	___lwmod@dividend,w
  4114  031E  00F0               	movwf	?___lwmod
  4115  031F  0008               	return
  4116  0320                     __end_of___lwmod:	
  4117  007E                     btemp	set	126	;btemp
  4118  007E                     int$flags	set	126
  4119  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      60
    BANK1            80      3       3
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    _main->_init_env

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      99
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      99
                                              0 BANK1      3     3      0
                           _IIC_Init
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    1992
                                             18 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             12 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      18    18      0    1248
                                              0 BANK0     18    18      0
                    _test_get_number
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       2     2      0     433
                                             10 COMMON     2     2      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _test_get_number
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 31 17:11:22 2019

             ?_receive_decode 0070                   _update_time 0278                   __CFG_CP$OFF 0000  
                          l90 039D                _update_display 037C            _receive_decode$591 0051  
          _receive_decode$592 0053                   __CFG_LVP$ON 0000             ?_control595_delay 0070  
                         _GIE 005F                           _RC4 0074                  __CFG_CPD$OFF 0000  
                         _ISR 0004                  __CFG_BORV$LO 0000            ??_control595_delay 0070  
                         wreg 0009                  __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000  
                        ?_ISR 0070                          l2114 0208                          _LATA 010C  
                        _LATB 010D                          _LATC 010E                          u1515 021E  
                        _ENUM 0047                          i1l81 001F                          i1l76 001A  
                        i1l77 005D                          i1l78 0022                          _TMR0 0015  
                        _WPUA 020C                          _WPUB 020D                          _WPUC 020E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _Temp 0041  
                        _main 039A                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 005F                 __CFG_MCLRE$ON 0000                         ??_ISR 005A  
      __end_of_update_display 0389              __end_of_IIC_Init 037C                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATC3 0873  
                       _LATC4 0874                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l133 0075                         i1l146 013D  
             __end_of___lwmod 0320                         i1l195 038D                         _TRISA 008C  
                       _TRISB 008D                         _TRISC 008E                         u77_25 0325  
                       _WPUC3 1073                         _WPUC4 1074                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0061  
                __end_of_main 039E               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 005C                        i1l2000 002E                        i1l2010 0059  
                      u120_25 010A                        i1l1536 023D                        i1l1546 024D  
                      i1l1556 025D                        i1l1900 015F                        i1l1590 02D6  
                      i1l1582 02C3                        i1l1574 0276                        i1l1566 026D  
                      i1l1478 0322                        i1l1904 0167                        i1l1816 02B6  
                      i1l1594 02E0                        i1l1586 02CC                        i1l1906 016C  
                      i1l1932 019A                        i1l1916 018A                        i1l1860 00DD  
                      i1l1598 02EA                        i1l1918 018D                        i1l1854 00D5  
                      i1l1838 00A5                        i1l1960 0306                        i1l1792 0284  
                      i1l1890 014D                        i1l1874 011D                        i1l1964 0312  
                      i1l1892 014F                        i1l1796 028A                        u131_25 017B  
                      i1l1958 02FA                        i1l1968 031B                        i1l1896 0157  
                      i1l1888 0148                        u132_25 0188                        u133_25 01B8  
                      u118_25 00F3                        u119_25 0102                        u136_25 02FD  
                      u138_25 030C                        u139_25 0313                        _TRISC3 0473  
                      _TRISC4 0474                __CFG_PWRTE$OFF 0000                        _g_data 0020  
              __CFG_STVREN$ON 0000                     ??___lwmod 0074              __end_of_init_env 022D  
                      _temp_h 007D                        _temp_l 0045              __end_of_segmcode 036F  
times2number@high_level_times 0070      __size_of_test_get_number 003B       __end_of__initialization 0069  
                   ?_IIC_Init 0070              ??_receive_decode 0048                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071                _OPTION_REGbits 0095  
                  __pbssBANK0 0020                    ??_IIC_Init 005C     __size_of_control595_delay 000B  
             __CFG_VCAPEN$OFF 0000                    __pmaintext 039A                    __pintentry 0004  
              ISR@history_key 0046                       _ODCONC3 1473                       _ODCONC4 1474  
         receive_decode@i_593 0055                     ?_init_env 0070           receive_decode@check 0059  
            ??_update_display 007A             ??_test_get_number 0070                       ___lwmod 02F4  
                     __ptext1 01BB                       __ptext2 036F                       __ptext4 0278  
                     __ptext5 006D                       __ptext6 037C                       __ptext7 0347  
                     __ptext8 0320                       __ptext9 0389                  __size_of_ISR 005B  
               ?_times2number 0070                     _IOCCFbits 0399                     _IOCCPbits 0397  
                     clrloop0 0395          end_of_initialization 0069                    ??_init_env 00A0  
        __size_of_update_time 0041                     _PORTAbits 000C                     _PORTCbits 000E  
              ??_times2number 0072                     _TRISCbits 008E              _control595_delay 0389  
           __size_of_IIC_Init 000D                  write_once@HL 0079                  write_once@HR 0076  
                write_once@ML 0077                  write_once@MR 0078                    _write_byte 0320  
                  _write_once 0347      receive_decode@read_value 0058           start_initialization 0061  
                 __end_of_ISR 005F               receive_decode@i 0057                   __pbssCOMMON 007D  
                   ___latbits 0002                 __pcstackBANK0 0048                 __pcstackBANK1 00A0  
             _test_get_number 02B9             __size_of_init_env 0072     receive_decode@last_time_h 004D  
   receive_decode@last_time_m 004F          __end_of_times2number 0278                      ?___lwmod 0070  
     __size_of_receive_decode 014E                   ?_write_byte 0070                   ?_write_once 0076  
             ISR@key_time_cnt 0043                      _IIC_Init 036F                      _LATAbits 010C  
                    _LATBbits 010D                     clear_ram0 0394      __end_of_control595_delay 0394  
     __end_of_test_get_number 02F4                      _WPUCbits 020E                   write_byte@i 0075  
         __size_of_write_byte 0027           __size_of_write_once 0018        test_get_number@get_num 0070  
               ??_update_time 007C                     init_env@i 00A1              __size_of___lwmod 002C  
     __size_of_update_display 000D                      __ptext10 022D                      __ptext11 02B9  
                    __ptext12 02F4         __size_of_times2number 004B                      _init_env 01BB  
               __size_of_main 0004                      _segmcode 035F                      int$flags 007E  
              _receive_decode 006D           __end_of_update_time 02B9              ?_test_get_number 0070  
                  _INTCONbits 000B                  _times2number 022D                      intlevel1 0000  
            ___lwmod@dividend 0072             __CFG_CLKOUTEN$OFF 0000                    _OSCCONbits 0099  
      __end_of_receive_decode 01BB                  ??_write_byte 0072                  ??_write_once 0079  
               __pstringtext1 035F               ___lwmod@divisor 0070               ___lwmod@counter 0075  
          __end_of_write_byte 0347            __end_of_write_once 035F  

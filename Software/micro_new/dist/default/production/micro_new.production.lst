

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun May 12 20:04:25 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.00
    32                           ; Generated 27/05/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1786 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011C                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  011F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020D                     	;# 
   173  020E                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  030E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0390                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  0397                     	;# 
   220  0398                     	;# 
   221  0399                     	;# 
   222  039D                     	;# 
   223  039E                     	;# 
   224  039F                     	;# 
   225  0511                     	;# 
   226  0513                     	;# 
   227  051A                     	;# 
   228  0811                     	;# 
   229  0812                     	;# 
   230  0813                     	;# 
   231  0814                     	;# 
   232  0815                     	;# 
   233  0816                     	;# 
   234  0817                     	;# 
   235  0818                     	;# 
   236  0819                     	;# 
   237  081A                     	;# 
   238  081B                     	;# 
   239  081C                     	;# 
   240  081D                     	;# 
   241  081E                     	;# 
   242  081F                     	;# 
   243  0820                     	;# 
   244  0821                     	;# 
   245  0821                     	;# 
   246  0822                     	;# 
   247  0823                     	;# 
   248  0823                     	;# 
   249  0824                     	;# 
   250  0825                     	;# 
   251  0825                     	;# 
   252  0826                     	;# 
   253  0827                     	;# 
   254  0827                     	;# 
   255  0828                     	;# 
   256  0829                     	;# 
   257  082A                     	;# 
   258  082B                     	;# 
   259  082C                     	;# 
   260  082D                     	;# 
   261  082E                     	;# 
   262  082F                     	;# 
   263  0831                     	;# 
   264  0832                     	;# 
   265  0833                     	;# 
   266  0834                     	;# 
   267  0835                     	;# 
   268  0836                     	;# 
   269  0837                     	;# 
   270  0838                     	;# 
   271  0839                     	;# 
   272  083A                     	;# 
   273  083B                     	;# 
   274  083C                     	;# 
   275  083D                     	;# 
   276  083E                     	;# 
   277  083F                     	;# 
   278  0840                     	;# 
   279  0841                     	;# 
   280  0841                     	;# 
   281  0842                     	;# 
   282  0843                     	;# 
   283  0843                     	;# 
   284  0844                     	;# 
   285  0845                     	;# 
   286  0845                     	;# 
   287  0846                     	;# 
   288  0847                     	;# 
   289  0847                     	;# 
   290  0848                     	;# 
   291  0849                     	;# 
   292  084A                     	;# 
   293  084B                     	;# 
   294  084C                     	;# 
   295  084D                     	;# 
   296  084E                     	;# 
   297  084F                     	;# 
   298  0851                     	;# 
   299  0852                     	;# 
   300  0853                     	;# 
   301  0854                     	;# 
   302  0855                     	;# 
   303  0856                     	;# 
   304  0857                     	;# 
   305  0858                     	;# 
   306  0859                     	;# 
   307  085A                     	;# 
   308  085B                     	;# 
   309  085C                     	;# 
   310  085D                     	;# 
   311  085E                     	;# 
   312  085F                     	;# 
   313  0860                     	;# 
   314  0861                     	;# 
   315  0861                     	;# 
   316  0862                     	;# 
   317  0863                     	;# 
   318  0863                     	;# 
   319  0864                     	;# 
   320  0865                     	;# 
   321  0865                     	;# 
   322  0866                     	;# 
   323  0867                     	;# 
   324  0867                     	;# 
   325  0868                     	;# 
   326  0869                     	;# 
   327  086A                     	;# 
   328  086B                     	;# 
   329  086C                     	;# 
   330  086D                     	;# 
   331  086E                     	;# 
   332  086F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  008C                     	;# 
   374  008D                     	;# 
   375  008E                     	;# 
   376  0090                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009B                     	;# 
   389  009C                     	;# 
   390  009D                     	;# 
   391  009E                     	;# 
   392  009F                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  0111                     	;# 
   397  0112                     	;# 
   398  0113                     	;# 
   399  0114                     	;# 
   400  0115                     	;# 
   401  0116                     	;# 
   402  0117                     	;# 
   403  0118                     	;# 
   404  0119                     	;# 
   405  011A                     	;# 
   406  011B                     	;# 
   407  011C                     	;# 
   408  011D                     	;# 
   409  011D                     	;# 
   410  011D                     	;# 
   411  011E                     	;# 
   412  011F                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0191                     	;# 
   416  0191                     	;# 
   417  0192                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0194                     	;# 
   422  0195                     	;# 
   423  0196                     	;# 
   424  0197                     	;# 
   425  0199                     	;# 
   426  0199                     	;# 
   427  0199                     	;# 
   428  019A                     	;# 
   429  019A                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019D                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019E                     	;# 
   444  019E                     	;# 
   445  019F                     	;# 
   446  019F                     	;# 
   447  019F                     	;# 
   448  019F                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  020E                     	;# 
   453  0210                     	;# 
   454  0211                     	;# 
   455  0211                     	;# 
   456  0212                     	;# 
   457  0212                     	;# 
   458  0213                     	;# 
   459  0213                     	;# 
   460  0214                     	;# 
   461  0214                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0216                     	;# 
   467  0216                     	;# 
   468  0217                     	;# 
   469  0217                     	;# 
   470  028C                     	;# 
   471  028D                     	;# 
   472  028E                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  030C                     	;# 
   482  030D                     	;# 
   483  030E                     	;# 
   484  0311                     	;# 
   485  0311                     	;# 
   486  0312                     	;# 
   487  0313                     	;# 
   488  038C                     	;# 
   489  038D                     	;# 
   490  038E                     	;# 
   491  0390                     	;# 
   492  0391                     	;# 
   493  0392                     	;# 
   494  0393                     	;# 
   495  0394                     	;# 
   496  0395                     	;# 
   497  0396                     	;# 
   498  0397                     	;# 
   499  0398                     	;# 
   500  0399                     	;# 
   501  039D                     	;# 
   502  039E                     	;# 
   503  039F                     	;# 
   504  0511                     	;# 
   505  0513                     	;# 
   506  051A                     	;# 
   507  0811                     	;# 
   508  0812                     	;# 
   509  0813                     	;# 
   510  0814                     	;# 
   511  0815                     	;# 
   512  0816                     	;# 
   513  0817                     	;# 
   514  0818                     	;# 
   515  0819                     	;# 
   516  081A                     	;# 
   517  081B                     	;# 
   518  081C                     	;# 
   519  081D                     	;# 
   520  081E                     	;# 
   521  081F                     	;# 
   522  0820                     	;# 
   523  0821                     	;# 
   524  0821                     	;# 
   525  0822                     	;# 
   526  0823                     	;# 
   527  0823                     	;# 
   528  0824                     	;# 
   529  0825                     	;# 
   530  0825                     	;# 
   531  0826                     	;# 
   532  0827                     	;# 
   533  0827                     	;# 
   534  0828                     	;# 
   535  0829                     	;# 
   536  082A                     	;# 
   537  082B                     	;# 
   538  082C                     	;# 
   539  082D                     	;# 
   540  082E                     	;# 
   541  082F                     	;# 
   542  0831                     	;# 
   543  0832                     	;# 
   544  0833                     	;# 
   545  0834                     	;# 
   546  0835                     	;# 
   547  0836                     	;# 
   548  0837                     	;# 
   549  0838                     	;# 
   550  0839                     	;# 
   551  083A                     	;# 
   552  083B                     	;# 
   553  083C                     	;# 
   554  083D                     	;# 
   555  083E                     	;# 
   556  083F                     	;# 
   557  0840                     	;# 
   558  0841                     	;# 
   559  0841                     	;# 
   560  0842                     	;# 
   561  0843                     	;# 
   562  0843                     	;# 
   563  0844                     	;# 
   564  0845                     	;# 
   565  0845                     	;# 
   566  0846                     	;# 
   567  0847                     	;# 
   568  0847                     	;# 
   569  0848                     	;# 
   570  0849                     	;# 
   571  084A                     	;# 
   572  084B                     	;# 
   573  084C                     	;# 
   574  084D                     	;# 
   575  084E                     	;# 
   576  084F                     	;# 
   577  0851                     	;# 
   578  0852                     	;# 
   579  0853                     	;# 
   580  0854                     	;# 
   581  0855                     	;# 
   582  0856                     	;# 
   583  0857                     	;# 
   584  0858                     	;# 
   585  0859                     	;# 
   586  085A                     	;# 
   587  085B                     	;# 
   588  085C                     	;# 
   589  085D                     	;# 
   590  085E                     	;# 
   591  085F                     	;# 
   592  0860                     	;# 
   593  0861                     	;# 
   594  0861                     	;# 
   595  0862                     	;# 
   596  0863                     	;# 
   597  0863                     	;# 
   598  0864                     	;# 
   599  0865                     	;# 
   600  0865                     	;# 
   601  0866                     	;# 
   602  0867                     	;# 
   603  0867                     	;# 
   604  0868                     	;# 
   605  0869                     	;# 
   606  086A                     	;# 
   607  086B                     	;# 
   608  086C                     	;# 
   609  086D                     	;# 
   610  086E                     	;# 
   611  086F                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0014                     	;# 
   643  0015                     	;# 
   644  0016                     	;# 
   645  0016                     	;# 
   646  0017                     	;# 
   647  0018                     	;# 
   648  0019                     	;# 
   649  001A                     	;# 
   650  001B                     	;# 
   651  001C                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009B                     	;# 
   668  009C                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  009F                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0118                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011C                     	;# 
   687  011D                     	;# 
   688  011D                     	;# 
   689  011D                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  018C                     	;# 
   693  018D                     	;# 
   694  0191                     	;# 
   695  0191                     	;# 
   696  0192                     	;# 
   697  0193                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0194                     	;# 
   701  0195                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0199                     	;# 
   705  0199                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019A                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019C                     	;# 
   717  019C                     	;# 
   718  019D                     	;# 
   719  019D                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019E                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  019F                     	;# 
   726  019F                     	;# 
   727  019F                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  0210                     	;# 
   733  0211                     	;# 
   734  0211                     	;# 
   735  0212                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0213                     	;# 
   739  0214                     	;# 
   740  0214                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028E                     	;# 
   752  0291                     	;# 
   753  0291                     	;# 
   754  0292                     	;# 
   755  0293                     	;# 
   756  0298                     	;# 
   757  0298                     	;# 
   758  0299                     	;# 
   759  029A                     	;# 
   760  030C                     	;# 
   761  030D                     	;# 
   762  030E                     	;# 
   763  0311                     	;# 
   764  0311                     	;# 
   765  0312                     	;# 
   766  0313                     	;# 
   767  038C                     	;# 
   768  038D                     	;# 
   769  038E                     	;# 
   770  0390                     	;# 
   771  0391                     	;# 
   772  0392                     	;# 
   773  0393                     	;# 
   774  0394                     	;# 
   775  0395                     	;# 
   776  0396                     	;# 
   777  0397                     	;# 
   778  0398                     	;# 
   779  0399                     	;# 
   780  039D                     	;# 
   781  039E                     	;# 
   782  039F                     	;# 
   783  0511                     	;# 
   784  0513                     	;# 
   785  051A                     	;# 
   786  0811                     	;# 
   787  0812                     	;# 
   788  0813                     	;# 
   789  0814                     	;# 
   790  0815                     	;# 
   791  0816                     	;# 
   792  0817                     	;# 
   793  0818                     	;# 
   794  0819                     	;# 
   795  081A                     	;# 
   796  081B                     	;# 
   797  081C                     	;# 
   798  081D                     	;# 
   799  081E                     	;# 
   800  081F                     	;# 
   801  0820                     	;# 
   802  0821                     	;# 
   803  0821                     	;# 
   804  0822                     	;# 
   805  0823                     	;# 
   806  0823                     	;# 
   807  0824                     	;# 
   808  0825                     	;# 
   809  0825                     	;# 
   810  0826                     	;# 
   811  0827                     	;# 
   812  0827                     	;# 
   813  0828                     	;# 
   814  0829                     	;# 
   815  082A                     	;# 
   816  082B                     	;# 
   817  082C                     	;# 
   818  082D                     	;# 
   819  082E                     	;# 
   820  082F                     	;# 
   821  0831                     	;# 
   822  0832                     	;# 
   823  0833                     	;# 
   824  0834                     	;# 
   825  0835                     	;# 
   826  0836                     	;# 
   827  0837                     	;# 
   828  0838                     	;# 
   829  0839                     	;# 
   830  083A                     	;# 
   831  083B                     	;# 
   832  083C                     	;# 
   833  083D                     	;# 
   834  083E                     	;# 
   835  083F                     	;# 
   836  0840                     	;# 
   837  0841                     	;# 
   838  0841                     	;# 
   839  0842                     	;# 
   840  0843                     	;# 
   841  0843                     	;# 
   842  0844                     	;# 
   843  0845                     	;# 
   844  0845                     	;# 
   845  0846                     	;# 
   846  0847                     	;# 
   847  0847                     	;# 
   848  0848                     	;# 
   849  0849                     	;# 
   850  084A                     	;# 
   851  084B                     	;# 
   852  084C                     	;# 
   853  084D                     	;# 
   854  084E                     	;# 
   855  084F                     	;# 
   856  0851                     	;# 
   857  0852                     	;# 
   858  0853                     	;# 
   859  0854                     	;# 
   860  0855                     	;# 
   861  0856                     	;# 
   862  0857                     	;# 
   863  0858                     	;# 
   864  0859                     	;# 
   865  085A                     	;# 
   866  085B                     	;# 
   867  085C                     	;# 
   868  085D                     	;# 
   869  085E                     	;# 
   870  085F                     	;# 
   871  0860                     	;# 
   872  0861                     	;# 
   873  0861                     	;# 
   874  0862                     	;# 
   875  0863                     	;# 
   876  0863                     	;# 
   877  0864                     	;# 
   878  0865                     	;# 
   879  0865                     	;# 
   880  0866                     	;# 
   881  0867                     	;# 
   882  0867                     	;# 
   883  0868                     	;# 
   884  0869                     	;# 
   885  086A                     	;# 
   886  086B                     	;# 
   887  086C                     	;# 
   888  086D                     	;# 
   889  086E                     	;# 
   890  086F                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;# 
   902  0000                     	;# 
   903  0001                     	;# 
   904  0002                     	;# 
   905  0003                     	;# 
   906  0004                     	;# 
   907  0005                     	;# 
   908  0006                     	;# 
   909  0007                     	;# 
   910  0008                     	;# 
   911  0009                     	;# 
   912  000A                     	;# 
   913  000B                     	;# 
   914  000C                     	;# 
   915  000D                     	;# 
   916  000E                     	;# 
   917  0010                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  008E                     	;# 
   934  0090                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  009F                     	;# 
   951  010C                     	;# 
   952  010D                     	;# 
   953  010E                     	;# 
   954  0111                     	;# 
   955  0112                     	;# 
   956  0113                     	;# 
   957  0114                     	;# 
   958  0115                     	;# 
   959  0116                     	;# 
   960  0117                     	;# 
   961  0118                     	;# 
   962  0119                     	;# 
   963  011A                     	;# 
   964  011B                     	;# 
   965  011C                     	;# 
   966  011D                     	;# 
   967  011D                     	;# 
   968  011D                     	;# 
   969  011E                     	;# 
   970  011F                     	;# 
   971  018C                     	;# 
   972  018D                     	;# 
   973  0191                     	;# 
   974  0191                     	;# 
   975  0192                     	;# 
   976  0193                     	;# 
   977  0193                     	;# 
   978  0193                     	;# 
   979  0194                     	;# 
   980  0195                     	;# 
   981  0196                     	;# 
   982  0197                     	;# 
   983  0199                     	;# 
   984  0199                     	;# 
   985  0199                     	;# 
   986  019A                     	;# 
   987  019A                     	;# 
   988  019A                     	;# 
   989  019B                     	;# 
   990  019B                     	;# 
   991  019B                     	;# 
   992  019B                     	;# 
   993  019B                     	;# 
   994  019C                     	;# 
   995  019C                     	;# 
   996  019C                     	;# 
   997  019D                     	;# 
   998  019D                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019E                     	;# 
  1002  019E                     	;# 
  1003  019F                     	;# 
  1004  019F                     	;# 
  1005  019F                     	;# 
  1006  019F                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020D                     	;# 
  1010  020E                     	;# 
  1011  0210                     	;# 
  1012  0211                     	;# 
  1013  0211                     	;# 
  1014  0212                     	;# 
  1015  0212                     	;# 
  1016  0213                     	;# 
  1017  0213                     	;# 
  1018  0214                     	;# 
  1019  0214                     	;# 
  1020  0215                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0215                     	;# 
  1024  0216                     	;# 
  1025  0216                     	;# 
  1026  0217                     	;# 
  1027  0217                     	;# 
  1028  028C                     	;# 
  1029  028D                     	;# 
  1030  028E                     	;# 
  1031  0291                     	;# 
  1032  0291                     	;# 
  1033  0292                     	;# 
  1034  0293                     	;# 
  1035  0298                     	;# 
  1036  0298                     	;# 
  1037  0299                     	;# 
  1038  029A                     	;# 
  1039  030C                     	;# 
  1040  030D                     	;# 
  1041  030E                     	;# 
  1042  0311                     	;# 
  1043  0311                     	;# 
  1044  0312                     	;# 
  1045  0313                     	;# 
  1046  038C                     	;# 
  1047  038D                     	;# 
  1048  038E                     	;# 
  1049  0390                     	;# 
  1050  0391                     	;# 
  1051  0392                     	;# 
  1052  0393                     	;# 
  1053  0394                     	;# 
  1054  0395                     	;# 
  1055  0396                     	;# 
  1056  0397                     	;# 
  1057  0398                     	;# 
  1058  0399                     	;# 
  1059  039D                     	;# 
  1060  039E                     	;# 
  1061  039F                     	;# 
  1062  0511                     	;# 
  1063  0513                     	;# 
  1064  051A                     	;# 
  1065  0811                     	;# 
  1066  0812                     	;# 
  1067  0813                     	;# 
  1068  0814                     	;# 
  1069  0815                     	;# 
  1070  0816                     	;# 
  1071  0817                     	;# 
  1072  0818                     	;# 
  1073  0819                     	;# 
  1074  081A                     	;# 
  1075  081B                     	;# 
  1076  081C                     	;# 
  1077  081D                     	;# 
  1078  081E                     	;# 
  1079  081F                     	;# 
  1080  0820                     	;# 
  1081  0821                     	;# 
  1082  0821                     	;# 
  1083  0822                     	;# 
  1084  0823                     	;# 
  1085  0823                     	;# 
  1086  0824                     	;# 
  1087  0825                     	;# 
  1088  0825                     	;# 
  1089  0826                     	;# 
  1090  0827                     	;# 
  1091  0827                     	;# 
  1092  0828                     	;# 
  1093  0829                     	;# 
  1094  082A                     	;# 
  1095  082B                     	;# 
  1096  082C                     	;# 
  1097  082D                     	;# 
  1098  082E                     	;# 
  1099  082F                     	;# 
  1100  0831                     	;# 
  1101  0832                     	;# 
  1102  0833                     	;# 
  1103  0834                     	;# 
  1104  0835                     	;# 
  1105  0836                     	;# 
  1106  0837                     	;# 
  1107  0838                     	;# 
  1108  0839                     	;# 
  1109  083A                     	;# 
  1110  083B                     	;# 
  1111  083C                     	;# 
  1112  083D                     	;# 
  1113  083E                     	;# 
  1114  083F                     	;# 
  1115  0840                     	;# 
  1116  0841                     	;# 
  1117  0841                     	;# 
  1118  0842                     	;# 
  1119  0843                     	;# 
  1120  0843                     	;# 
  1121  0844                     	;# 
  1122  0845                     	;# 
  1123  0845                     	;# 
  1124  0846                     	;# 
  1125  0847                     	;# 
  1126  0847                     	;# 
  1127  0848                     	;# 
  1128  0849                     	;# 
  1129  084A                     	;# 
  1130  084B                     	;# 
  1131  084C                     	;# 
  1132  084D                     	;# 
  1133  084E                     	;# 
  1134  084F                     	;# 
  1135  0851                     	;# 
  1136  0852                     	;# 
  1137  0853                     	;# 
  1138  0854                     	;# 
  1139  0855                     	;# 
  1140  0856                     	;# 
  1141  0857                     	;# 
  1142  0858                     	;# 
  1143  0859                     	;# 
  1144  085A                     	;# 
  1145  085B                     	;# 
  1146  085C                     	;# 
  1147  085D                     	;# 
  1148  085E                     	;# 
  1149  085F                     	;# 
  1150  0860                     	;# 
  1151  0861                     	;# 
  1152  0861                     	;# 
  1153  0862                     	;# 
  1154  0863                     	;# 
  1155  0863                     	;# 
  1156  0864                     	;# 
  1157  0865                     	;# 
  1158  0865                     	;# 
  1159  0866                     	;# 
  1160  0867                     	;# 
  1161  0867                     	;# 
  1162  0868                     	;# 
  1163  0869                     	;# 
  1164  086A                     	;# 
  1165  086B                     	;# 
  1166  086C                     	;# 
  1167  086D                     	;# 
  1168  086E                     	;# 
  1169  086F                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  0090                     	;# 
  1214  0091                     	;# 
  1215  0092                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  009F                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010E                     	;# 
  1233  0111                     	;# 
  1234  0112                     	;# 
  1235  0113                     	;# 
  1236  0114                     	;# 
  1237  0115                     	;# 
  1238  0116                     	;# 
  1239  0117                     	;# 
  1240  0118                     	;# 
  1241  0119                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011C                     	;# 
  1245  011D                     	;# 
  1246  011D                     	;# 
  1247  011D                     	;# 
  1248  011E                     	;# 
  1249  011F                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0197                     	;# 
  1262  0199                     	;# 
  1263  0199                     	;# 
  1264  0199                     	;# 
  1265  019A                     	;# 
  1266  019A                     	;# 
  1267  019A                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019C                     	;# 
  1276  019D                     	;# 
  1277  019D                     	;# 
  1278  019D                     	;# 
  1279  019E                     	;# 
  1280  019E                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  019F                     	;# 
  1284  019F                     	;# 
  1285  019F                     	;# 
  1286  019F                     	;# 
  1287  020C                     	;# 
  1288  020D                     	;# 
  1289  020E                     	;# 
  1290  0210                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0212                     	;# 
  1295  0213                     	;# 
  1296  0213                     	;# 
  1297  0214                     	;# 
  1298  0214                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0216                     	;# 
  1304  0216                     	;# 
  1305  0217                     	;# 
  1306  0217                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028E                     	;# 
  1310  0291                     	;# 
  1311  0291                     	;# 
  1312  0292                     	;# 
  1313  0293                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  030C                     	;# 
  1319  030D                     	;# 
  1320  030E                     	;# 
  1321  0311                     	;# 
  1322  0311                     	;# 
  1323  0312                     	;# 
  1324  0313                     	;# 
  1325  038C                     	;# 
  1326  038D                     	;# 
  1327  038E                     	;# 
  1328  0390                     	;# 
  1329  0391                     	;# 
  1330  0392                     	;# 
  1331  0393                     	;# 
  1332  0394                     	;# 
  1333  0395                     	;# 
  1334  0396                     	;# 
  1335  0397                     	;# 
  1336  0398                     	;# 
  1337  0399                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0511                     	;# 
  1342  0513                     	;# 
  1343  051A                     	;# 
  1344  0811                     	;# 
  1345  0812                     	;# 
  1346  0813                     	;# 
  1347  0814                     	;# 
  1348  0815                     	;# 
  1349  0816                     	;# 
  1350  0817                     	;# 
  1351  0818                     	;# 
  1352  0819                     	;# 
  1353  081A                     	;# 
  1354  081B                     	;# 
  1355  081C                     	;# 
  1356  081D                     	;# 
  1357  081E                     	;# 
  1358  081F                     	;# 
  1359  0820                     	;# 
  1360  0821                     	;# 
  1361  0821                     	;# 
  1362  0822                     	;# 
  1363  0823                     	;# 
  1364  0823                     	;# 
  1365  0824                     	;# 
  1366  0825                     	;# 
  1367  0825                     	;# 
  1368  0826                     	;# 
  1369  0827                     	;# 
  1370  0827                     	;# 
  1371  0828                     	;# 
  1372  0829                     	;# 
  1373  082A                     	;# 
  1374  082B                     	;# 
  1375  082C                     	;# 
  1376  082D                     	;# 
  1377  082E                     	;# 
  1378  082F                     	;# 
  1379  0831                     	;# 
  1380  0832                     	;# 
  1381  0833                     	;# 
  1382  0834                     	;# 
  1383  0835                     	;# 
  1384  0836                     	;# 
  1385  0837                     	;# 
  1386  0838                     	;# 
  1387  0839                     	;# 
  1388  083A                     	;# 
  1389  083B                     	;# 
  1390  083C                     	;# 
  1391  083D                     	;# 
  1392  083E                     	;# 
  1393  083F                     	;# 
  1394  0840                     	;# 
  1395  0841                     	;# 
  1396  0841                     	;# 
  1397  0842                     	;# 
  1398  0843                     	;# 
  1399  0843                     	;# 
  1400  0844                     	;# 
  1401  0845                     	;# 
  1402  0845                     	;# 
  1403  0846                     	;# 
  1404  0847                     	;# 
  1405  0847                     	;# 
  1406  0848                     	;# 
  1407  0849                     	;# 
  1408  084A                     	;# 
  1409  084B                     	;# 
  1410  084C                     	;# 
  1411  084D                     	;# 
  1412  084E                     	;# 
  1413  084F                     	;# 
  1414  0851                     	;# 
  1415  0852                     	;# 
  1416  0853                     	;# 
  1417  0854                     	;# 
  1418  0855                     	;# 
  1419  0856                     	;# 
  1420  0857                     	;# 
  1421  0858                     	;# 
  1422  0859                     	;# 
  1423  085A                     	;# 
  1424  085B                     	;# 
  1425  085C                     	;# 
  1426  085D                     	;# 
  1427  085E                     	;# 
  1428  085F                     	;# 
  1429  0860                     	;# 
  1430  0861                     	;# 
  1431  0861                     	;# 
  1432  0862                     	;# 
  1433  0863                     	;# 
  1434  0863                     	;# 
  1435  0864                     	;# 
  1436  0865                     	;# 
  1437  0865                     	;# 
  1438  0866                     	;# 
  1439  0867                     	;# 
  1440  0867                     	;# 
  1441  0868                     	;# 
  1442  0869                     	;# 
  1443  086A                     	;# 
  1444  086B                     	;# 
  1445  086C                     	;# 
  1446  086D                     	;# 
  1447  086E                     	;# 
  1448  086F                     	;# 
  1449  0FE4                     	;# 
  1450  0FE5                     	;# 
  1451  0FE6                     	;# 
  1452  0FE7                     	;# 
  1453  0FE8                     	;# 
  1454  0FE9                     	;# 
  1455  0FEA                     	;# 
  1456  0FEB                     	;# 
  1457  0FED                     	;# 
  1458  0FEE                     	;# 
  1459  0FEF                     	;# 
  1460  0000                     	;# 
  1461  0001                     	;# 
  1462  0002                     	;# 
  1463  0003                     	;# 
  1464  0004                     	;# 
  1465  0005                     	;# 
  1466  0006                     	;# 
  1467  0007                     	;# 
  1468  0008                     	;# 
  1469  0009                     	;# 
  1470  000A                     	;# 
  1471  000B                     	;# 
  1472  000C                     	;# 
  1473  000D                     	;# 
  1474  000E                     	;# 
  1475  0010                     	;# 
  1476  0011                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0014                     	;# 
  1480  0015                     	;# 
  1481  0016                     	;# 
  1482  0016                     	;# 
  1483  0017                     	;# 
  1484  0018                     	;# 
  1485  0019                     	;# 
  1486  001A                     	;# 
  1487  001B                     	;# 
  1488  001C                     	;# 
  1489  008C                     	;# 
  1490  008D                     	;# 
  1491  008E                     	;# 
  1492  0090                     	;# 
  1493  0091                     	;# 
  1494  0092                     	;# 
  1495  0093                     	;# 
  1496  0094                     	;# 
  1497  0095                     	;# 
  1498  0096                     	;# 
  1499  0097                     	;# 
  1500  0098                     	;# 
  1501  0099                     	;# 
  1502  009A                     	;# 
  1503  009B                     	;# 
  1504  009B                     	;# 
  1505  009C                     	;# 
  1506  009D                     	;# 
  1507  009E                     	;# 
  1508  009F                     	;# 
  1509  010C                     	;# 
  1510  010D                     	;# 
  1511  010E                     	;# 
  1512  0111                     	;# 
  1513  0112                     	;# 
  1514  0113                     	;# 
  1515  0114                     	;# 
  1516  0115                     	;# 
  1517  0116                     	;# 
  1518  0117                     	;# 
  1519  0118                     	;# 
  1520  0119                     	;# 
  1521  011A                     	;# 
  1522  011B                     	;# 
  1523  011C                     	;# 
  1524  011D                     	;# 
  1525  011D                     	;# 
  1526  011D                     	;# 
  1527  011E                     	;# 
  1528  011F                     	;# 
  1529  018C                     	;# 
  1530  018D                     	;# 
  1531  0191                     	;# 
  1532  0191                     	;# 
  1533  0192                     	;# 
  1534  0193                     	;# 
  1535  0193                     	;# 
  1536  0193                     	;# 
  1537  0194                     	;# 
  1538  0195                     	;# 
  1539  0196                     	;# 
  1540  0197                     	;# 
  1541  0199                     	;# 
  1542  0199                     	;# 
  1543  0199                     	;# 
  1544  019A                     	;# 
  1545  019A                     	;# 
  1546  019A                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019C                     	;# 
  1553  019C                     	;# 
  1554  019C                     	;# 
  1555  019D                     	;# 
  1556  019D                     	;# 
  1557  019D                     	;# 
  1558  019E                     	;# 
  1559  019E                     	;# 
  1560  019E                     	;# 
  1561  019F                     	;# 
  1562  019F                     	;# 
  1563  019F                     	;# 
  1564  019F                     	;# 
  1565  019F                     	;# 
  1566  020C                     	;# 
  1567  020D                     	;# 
  1568  020E                     	;# 
  1569  0210                     	;# 
  1570  0211                     	;# 
  1571  0211                     	;# 
  1572  0212                     	;# 
  1573  0212                     	;# 
  1574  0213                     	;# 
  1575  0213                     	;# 
  1576  0214                     	;# 
  1577  0214                     	;# 
  1578  0215                     	;# 
  1579  0215                     	;# 
  1580  0215                     	;# 
  1581  0215                     	;# 
  1582  0216                     	;# 
  1583  0216                     	;# 
  1584  0217                     	;# 
  1585  0217                     	;# 
  1586  028C                     	;# 
  1587  028D                     	;# 
  1588  028E                     	;# 
  1589  0291                     	;# 
  1590  0291                     	;# 
  1591  0292                     	;# 
  1592  0293                     	;# 
  1593  0298                     	;# 
  1594  0298                     	;# 
  1595  0299                     	;# 
  1596  029A                     	;# 
  1597  030C                     	;# 
  1598  030D                     	;# 
  1599  030E                     	;# 
  1600  0311                     	;# 
  1601  0311                     	;# 
  1602  0312                     	;# 
  1603  0313                     	;# 
  1604  038C                     	;# 
  1605  038D                     	;# 
  1606  038E                     	;# 
  1607  0390                     	;# 
  1608  0391                     	;# 
  1609  0392                     	;# 
  1610  0393                     	;# 
  1611  0394                     	;# 
  1612  0395                     	;# 
  1613  0396                     	;# 
  1614  0397                     	;# 
  1615  0398                     	;# 
  1616  0399                     	;# 
  1617  039D                     	;# 
  1618  039E                     	;# 
  1619  039F                     	;# 
  1620  0511                     	;# 
  1621  0513                     	;# 
  1622  051A                     	;# 
  1623  0811                     	;# 
  1624  0812                     	;# 
  1625  0813                     	;# 
  1626  0814                     	;# 
  1627  0815                     	;# 
  1628  0816                     	;# 
  1629  0817                     	;# 
  1630  0818                     	;# 
  1631  0819                     	;# 
  1632  081A                     	;# 
  1633  081B                     	;# 
  1634  081C                     	;# 
  1635  081D                     	;# 
  1636  081E                     	;# 
  1637  081F                     	;# 
  1638  0820                     	;# 
  1639  0821                     	;# 
  1640  0821                     	;# 
  1641  0822                     	;# 
  1642  0823                     	;# 
  1643  0823                     	;# 
  1644  0824                     	;# 
  1645  0825                     	;# 
  1646  0825                     	;# 
  1647  0826                     	;# 
  1648  0827                     	;# 
  1649  0827                     	;# 
  1650  0828                     	;# 
  1651  0829                     	;# 
  1652  082A                     	;# 
  1653  082B                     	;# 
  1654  082C                     	;# 
  1655  082D                     	;# 
  1656  082E                     	;# 
  1657  082F                     	;# 
  1658  0831                     	;# 
  1659  0832                     	;# 
  1660  0833                     	;# 
  1661  0834                     	;# 
  1662  0835                     	;# 
  1663  0836                     	;# 
  1664  0837                     	;# 
  1665  0838                     	;# 
  1666  0839                     	;# 
  1667  083A                     	;# 
  1668  083B                     	;# 
  1669  083C                     	;# 
  1670  083D                     	;# 
  1671  083E                     	;# 
  1672  083F                     	;# 
  1673  0840                     	;# 
  1674  0841                     	;# 
  1675  0841                     	;# 
  1676  0842                     	;# 
  1677  0843                     	;# 
  1678  0843                     	;# 
  1679  0844                     	;# 
  1680  0845                     	;# 
  1681  0845                     	;# 
  1682  0846                     	;# 
  1683  0847                     	;# 
  1684  0847                     	;# 
  1685  0848                     	;# 
  1686  0849                     	;# 
  1687  084A                     	;# 
  1688  084B                     	;# 
  1689  084C                     	;# 
  1690  084D                     	;# 
  1691  084E                     	;# 
  1692  084F                     	;# 
  1693  0851                     	;# 
  1694  0852                     	;# 
  1695  0853                     	;# 
  1696  0854                     	;# 
  1697  0855                     	;# 
  1698  0856                     	;# 
  1699  0857                     	;# 
  1700  0858                     	;# 
  1701  0859                     	;# 
  1702  085A                     	;# 
  1703  085B                     	;# 
  1704  085C                     	;# 
  1705  085D                     	;# 
  1706  085E                     	;# 
  1707  085F                     	;# 
  1708  0860                     	;# 
  1709  0861                     	;# 
  1710  0861                     	;# 
  1711  0862                     	;# 
  1712  0863                     	;# 
  1713  0863                     	;# 
  1714  0864                     	;# 
  1715  0865                     	;# 
  1716  0865                     	;# 
  1717  0866                     	;# 
  1718  0867                     	;# 
  1719  0867                     	;# 
  1720  0868                     	;# 
  1721  0869                     	;# 
  1722  086A                     	;# 
  1723  086B                     	;# 
  1724  086C                     	;# 
  1725  086D                     	;# 
  1726  086E                     	;# 
  1727  086F                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  0010                     	;# 
  1755  0011                     	;# 
  1756  0012                     	;# 
  1757  0013                     	;# 
  1758  0014                     	;# 
  1759  0015                     	;# 
  1760  0016                     	;# 
  1761  0016                     	;# 
  1762  0017                     	;# 
  1763  0018                     	;# 
  1764  0019                     	;# 
  1765  001A                     	;# 
  1766  001B                     	;# 
  1767  001C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0092                     	;# 
  1774  0093                     	;# 
  1775  0094                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  009F                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  0111                     	;# 
  1792  0112                     	;# 
  1793  0113                     	;# 
  1794  0114                     	;# 
  1795  0115                     	;# 
  1796  0116                     	;# 
  1797  0117                     	;# 
  1798  0118                     	;# 
  1799  0119                     	;# 
  1800  011A                     	;# 
  1801  011B                     	;# 
  1802  011C                     	;# 
  1803  011D                     	;# 
  1804  011D                     	;# 
  1805  011D                     	;# 
  1806  011E                     	;# 
  1807  011F                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  0191                     	;# 
  1811  0191                     	;# 
  1812  0192                     	;# 
  1813  0193                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0214                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0216                     	;# 
  1862  0216                     	;# 
  1863  0217                     	;# 
  1864  0217                     	;# 
  1865  028C                     	;# 
  1866  028D                     	;# 
  1867  028E                     	;# 
  1868  0291                     	;# 
  1869  0291                     	;# 
  1870  0292                     	;# 
  1871  0293                     	;# 
  1872  0298                     	;# 
  1873  0298                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  030C                     	;# 
  1877  030D                     	;# 
  1878  030E                     	;# 
  1879  0311                     	;# 
  1880  0311                     	;# 
  1881  0312                     	;# 
  1882  0313                     	;# 
  1883  038C                     	;# 
  1884  038D                     	;# 
  1885  038E                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0511                     	;# 
  1900  0513                     	;# 
  1901  051A                     	;# 
  1902  0811                     	;# 
  1903  0812                     	;# 
  1904  0813                     	;# 
  1905  0814                     	;# 
  1906  0815                     	;# 
  1907  0816                     	;# 
  1908  0817                     	;# 
  1909  0818                     	;# 
  1910  0819                     	;# 
  1911  081A                     	;# 
  1912  081B                     	;# 
  1913  081C                     	;# 
  1914  081D                     	;# 
  1915  081E                     	;# 
  1916  081F                     	;# 
  1917  0820                     	;# 
  1918  0821                     	;# 
  1919  0821                     	;# 
  1920  0822                     	;# 
  1921  0823                     	;# 
  1922  0823                     	;# 
  1923  0824                     	;# 
  1924  0825                     	;# 
  1925  0825                     	;# 
  1926  0826                     	;# 
  1927  0827                     	;# 
  1928  0827                     	;# 
  1929  0828                     	;# 
  1930  0829                     	;# 
  1931  082A                     	;# 
  1932  082B                     	;# 
  1933  082C                     	;# 
  1934  082D                     	;# 
  1935  082E                     	;# 
  1936  082F                     	;# 
  1937  0831                     	;# 
  1938  0832                     	;# 
  1939  0833                     	;# 
  1940  0834                     	;# 
  1941  0835                     	;# 
  1942  0836                     	;# 
  1943  0837                     	;# 
  1944  0838                     	;# 
  1945  0839                     	;# 
  1946  083A                     	;# 
  1947  083B                     	;# 
  1948  083C                     	;# 
  1949  083D                     	;# 
  1950  083E                     	;# 
  1951  083F                     	;# 
  1952  0840                     	;# 
  1953  0841                     	;# 
  1954  0841                     	;# 
  1955  0842                     	;# 
  1956  0843                     	;# 
  1957  0843                     	;# 
  1958  0844                     	;# 
  1959  0845                     	;# 
  1960  0845                     	;# 
  1961  0846                     	;# 
  1962  0847                     	;# 
  1963  0847                     	;# 
  1964  0848                     	;# 
  1965  0849                     	;# 
  1966  084A                     	;# 
  1967  084B                     	;# 
  1968  084C                     	;# 
  1969  084D                     	;# 
  1970  084E                     	;# 
  1971  084F                     	;# 
  1972  0851                     	;# 
  1973  0852                     	;# 
  1974  0853                     	;# 
  1975  0854                     	;# 
  1976  0855                     	;# 
  1977  0856                     	;# 
  1978  0857                     	;# 
  1979  0858                     	;# 
  1980  0859                     	;# 
  1981  085A                     	;# 
  1982  085B                     	;# 
  1983  085C                     	;# 
  1984  085D                     	;# 
  1985  085E                     	;# 
  1986  085F                     	;# 
  1987  0860                     	;# 
  1988  0861                     	;# 
  1989  0861                     	;# 
  1990  0862                     	;# 
  1991  0863                     	;# 
  1992  0863                     	;# 
  1993  0864                     	;# 
  1994  0865                     	;# 
  1995  0865                     	;# 
  1996  0866                     	;# 
  1997  0867                     	;# 
  1998  0867                     	;# 
  1999  0868                     	;# 
  2000  0869                     	;# 
  2001  086A                     	;# 
  2002  086B                     	;# 
  2003  086C                     	;# 
  2004  086D                     	;# 
  2005  086E                     	;# 
  2006  086F                     	;# 
  2007  0FE4                     	;# 
  2008  0FE5                     	;# 
  2009  0FE6                     	;# 
  2010  0FE7                     	;# 
  2011  0FE8                     	;# 
  2012  0FE9                     	;# 
  2013  0FEA                     	;# 
  2014  0FEB                     	;# 
  2015  0FED                     	;# 
  2016  0FEE                     	;# 
  2017  0FEF                     	;# 
  2018  0000                     	;# 
  2019  0001                     	;# 
  2020  0002                     	;# 
  2021  0003                     	;# 
  2022  0004                     	;# 
  2023  0005                     	;# 
  2024  0006                     	;# 
  2025  0007                     	;# 
  2026  0008                     	;# 
  2027  0009                     	;# 
  2028  000A                     	;# 
  2029  000B                     	;# 
  2030  000C                     	;# 
  2031  000D                     	;# 
  2032  000E                     	;# 
  2033  0010                     	;# 
  2034  0011                     	;# 
  2035  0012                     	;# 
  2036  0013                     	;# 
  2037  0014                     	;# 
  2038  0015                     	;# 
  2039  0016                     	;# 
  2040  0016                     	;# 
  2041  0017                     	;# 
  2042  0018                     	;# 
  2043  0019                     	;# 
  2044  001A                     	;# 
  2045  001B                     	;# 
  2046  001C                     	;# 
  2047  008C                     	;# 
  2048  008D                     	;# 
  2049  008E                     	;# 
  2050  0090                     	;# 
  2051  0091                     	;# 
  2052  0092                     	;# 
  2053  0093                     	;# 
  2054  0094                     	;# 
  2055  0095                     	;# 
  2056  0096                     	;# 
  2057  0097                     	;# 
  2058  0098                     	;# 
  2059  0099                     	;# 
  2060  009A                     	;# 
  2061  009B                     	;# 
  2062  009B                     	;# 
  2063  009C                     	;# 
  2064  009D                     	;# 
  2065  009E                     	;# 
  2066  009F                     	;# 
  2067  010C                     	;# 
  2068  010D                     	;# 
  2069  010E                     	;# 
  2070  0111                     	;# 
  2071  0112                     	;# 
  2072  0113                     	;# 
  2073  0114                     	;# 
  2074  0115                     	;# 
  2075  0116                     	;# 
  2076  0117                     	;# 
  2077  0118                     	;# 
  2078  0119                     	;# 
  2079  011A                     	;# 
  2080  011B                     	;# 
  2081  011C                     	;# 
  2082  011D                     	;# 
  2083  011D                     	;# 
  2084  011D                     	;# 
  2085  011E                     	;# 
  2086  011F                     	;# 
  2087  018C                     	;# 
  2088  018D                     	;# 
  2089  0191                     	;# 
  2090  0191                     	;# 
  2091  0192                     	;# 
  2092  0193                     	;# 
  2093  0193                     	;# 
  2094  0193                     	;# 
  2095  0194                     	;# 
  2096  0195                     	;# 
  2097  0196                     	;# 
  2098  0197                     	;# 
  2099  0199                     	;# 
  2100  0199                     	;# 
  2101  0199                     	;# 
  2102  019A                     	;# 
  2103  019A                     	;# 
  2104  019A                     	;# 
  2105  019B                     	;# 
  2106  019B                     	;# 
  2107  019B                     	;# 
  2108  019B                     	;# 
  2109  019B                     	;# 
  2110  019C                     	;# 
  2111  019C                     	;# 
  2112  019C                     	;# 
  2113  019D                     	;# 
  2114  019D                     	;# 
  2115  019D                     	;# 
  2116  019E                     	;# 
  2117  019E                     	;# 
  2118  019E                     	;# 
  2119  019F                     	;# 
  2120  019F                     	;# 
  2121  019F                     	;# 
  2122  019F                     	;# 
  2123  019F                     	;# 
  2124  020C                     	;# 
  2125  020D                     	;# 
  2126  020E                     	;# 
  2127  0210                     	;# 
  2128  0211                     	;# 
  2129  0211                     	;# 
  2130  0212                     	;# 
  2131  0212                     	;# 
  2132  0213                     	;# 
  2133  0213                     	;# 
  2134  0214                     	;# 
  2135  0214                     	;# 
  2136  0215                     	;# 
  2137  0215                     	;# 
  2138  0215                     	;# 
  2139  0215                     	;# 
  2140  0216                     	;# 
  2141  0216                     	;# 
  2142  0217                     	;# 
  2143  0217                     	;# 
  2144  028C                     	;# 
  2145  028D                     	;# 
  2146  028E                     	;# 
  2147  0291                     	;# 
  2148  0291                     	;# 
  2149  0292                     	;# 
  2150  0293                     	;# 
  2151  0298                     	;# 
  2152  0298                     	;# 
  2153  0299                     	;# 
  2154  029A                     	;# 
  2155  030C                     	;# 
  2156  030D                     	;# 
  2157  030E                     	;# 
  2158  0311                     	;# 
  2159  0311                     	;# 
  2160  0312                     	;# 
  2161  0313                     	;# 
  2162  038C                     	;# 
  2163  038D                     	;# 
  2164  038E                     	;# 
  2165  0390                     	;# 
  2166  0391                     	;# 
  2167  0392                     	;# 
  2168  0393                     	;# 
  2169  0394                     	;# 
  2170  0395                     	;# 
  2171  0396                     	;# 
  2172  0397                     	;# 
  2173  0398                     	;# 
  2174  0399                     	;# 
  2175  039D                     	;# 
  2176  039E                     	;# 
  2177  039F                     	;# 
  2178  0511                     	;# 
  2179  0513                     	;# 
  2180  051A                     	;# 
  2181  0811                     	;# 
  2182  0812                     	;# 
  2183  0813                     	;# 
  2184  0814                     	;# 
  2185  0815                     	;# 
  2186  0816                     	;# 
  2187  0817                     	;# 
  2188  0818                     	;# 
  2189  0819                     	;# 
  2190  081A                     	;# 
  2191  081B                     	;# 
  2192  081C                     	;# 
  2193  081D                     	;# 
  2194  081E                     	;# 
  2195  081F                     	;# 
  2196  0820                     	;# 
  2197  0821                     	;# 
  2198  0821                     	;# 
  2199  0822                     	;# 
  2200  0823                     	;# 
  2201  0823                     	;# 
  2202  0824                     	;# 
  2203  0825                     	;# 
  2204  0825                     	;# 
  2205  0826                     	;# 
  2206  0827                     	;# 
  2207  0827                     	;# 
  2208  0828                     	;# 
  2209  0829                     	;# 
  2210  082A                     	;# 
  2211  082B                     	;# 
  2212  082C                     	;# 
  2213  082D                     	;# 
  2214  082E                     	;# 
  2215  082F                     	;# 
  2216  0831                     	;# 
  2217  0832                     	;# 
  2218  0833                     	;# 
  2219  0834                     	;# 
  2220  0835                     	;# 
  2221  0836                     	;# 
  2222  0837                     	;# 
  2223  0838                     	;# 
  2224  0839                     	;# 
  2225  083A                     	;# 
  2226  083B                     	;# 
  2227  083C                     	;# 
  2228  083D                     	;# 
  2229  083E                     	;# 
  2230  083F                     	;# 
  2231  0840                     	;# 
  2232  0841                     	;# 
  2233  0841                     	;# 
  2234  0842                     	;# 
  2235  0843                     	;# 
  2236  0843                     	;# 
  2237  0844                     	;# 
  2238  0845                     	;# 
  2239  0845                     	;# 
  2240  0846                     	;# 
  2241  0847                     	;# 
  2242  0847                     	;# 
  2243  0848                     	;# 
  2244  0849                     	;# 
  2245  084A                     	;# 
  2246  084B                     	;# 
  2247  084C                     	;# 
  2248  084D                     	;# 
  2249  084E                     	;# 
  2250  084F                     	;# 
  2251  0851                     	;# 
  2252  0852                     	;# 
  2253  0853                     	;# 
  2254  0854                     	;# 
  2255  0855                     	;# 
  2256  0856                     	;# 
  2257  0857                     	;# 
  2258  0858                     	;# 
  2259  0859                     	;# 
  2260  085A                     	;# 
  2261  085B                     	;# 
  2262  085C                     	;# 
  2263  085D                     	;# 
  2264  085E                     	;# 
  2265  085F                     	;# 
  2266  0860                     	;# 
  2267  0861                     	;# 
  2268  0861                     	;# 
  2269  0862                     	;# 
  2270  0863                     	;# 
  2271  0863                     	;# 
  2272  0864                     	;# 
  2273  0865                     	;# 
  2274  0865                     	;# 
  2275  0866                     	;# 
  2276  0867                     	;# 
  2277  0867                     	;# 
  2278  0868                     	;# 
  2279  0869                     	;# 
  2280  086A                     	;# 
  2281  086B                     	;# 
  2282  086C                     	;# 
  2283  086D                     	;# 
  2284  086E                     	;# 
  2285  086F                     	;# 
  2286  0FE4                     	;# 
  2287  0FE5                     	;# 
  2288  0FE6                     	;# 
  2289  0FE7                     	;# 
  2290  0FE8                     	;# 
  2291  0FE9                     	;# 
  2292  0FEA                     	;# 
  2293  0FEB                     	;# 
  2294  0FED                     	;# 
  2295  0FEE                     	;# 
  2296  0FEF                     	;# 
  2297                           
  2298                           	psect	stringtext1
  2299  03B4                     __pstringtext1:	
  2300  03B4                     _segmcode:	
  2301  03B4  343F               	retlw	63
  2302  03B5  3406               	retlw	6
  2303  03B6  345B               	retlw	91
  2304  03B7  344F               	retlw	79
  2305  03B8  3466               	retlw	102
  2306  03B9  346D               	retlw	109
  2307  03BA  347D               	retlw	125
  2308  03BB  3407               	retlw	7
  2309  03BC  347F               	retlw	127
  2310  03BD  346F               	retlw	111
  2311  03BE  3477               	retlw	119
  2312  03BF  347C               	retlw	124
  2313  03C0  3439               	retlw	57
  2314  03C1  345E               	retlw	94
  2315  03C2  3479               	retlw	121
  2316  03C3  3471               	retlw	113
  2317  03C4                     __end_of_segmcode:	
  2318  0015                     _TMR0	set	21
  2319  000C                     _PORTAbits	set	12
  2320  000E                     _PORTCbits	set	14
  2321  000B                     _INTCONbits	set	11
  2322  005F                     _GIE	set	95
  2323  0074                     _RC4	set	116
  2324  008E                     _TRISCbits	set	142
  2325  008E                     _TRISC	set	142
  2326  008D                     _TRISB	set	141
  2327  008C                     _TRISA	set	140
  2328  0095                     _OPTION_REGbits	set	149
  2329  0099                     _OSCCONbits	set	153
  2330  0473                     _TRISC3	set	1139
  2331  0474                     _TRISC4	set	1140
  2332  010C                     _LATAbits	set	268
  2333  010D                     _LATBbits	set	269
  2334  010E                     _LATC	set	270
  2335  010D                     _LATB	set	269
  2336  010C                     _LATA	set	268
  2337  0874                     _LATC4	set	2164
  2338  0873                     _LATC3	set	2163
  2339  020E                     _WPUCbits	set	526
  2340  020E                     _WPUC	set	526
  2341  020D                     _WPUB	set	525
  2342  020C                     _WPUA	set	524
  2343  1073                     _WPUC3	set	4211
  2344  1074                     _WPUC4	set	4212
  2345  1474                     _ODCONC4	set	5236
  2346  1473                     _ODCONC3	set	5235
  2347  0399                     _IOCCFbits	set	921
  2348  0397                     _IOCCPbits	set	919
  2349  0398                     _IOCCN	set	920
  2350  0397                     _IOCCP	set	919
  2351  0395                     _IOCBN	set	917
  2352  0394                     _IOCBP	set	916
  2353  0392                     _IOCAN	set	914
  2354  0391                     _IOCAP	set	913
  2355                           
  2356                           ; #config settings
  2357  0000                     
  2358                           	psect	cinit
  2359  0089                     start_initialization:	
  2360  0089                     __initialization:	
  2361                           
  2362                           ; Clear objects allocated to BANK0
  2363  0089  3020               	movlw	low __pbssBANK0
  2364  008A  0084               	movwf	4
  2365  008B  3000               	movlw	high __pbssBANK0
  2366  008C  0085               	movwf	5
  2367  008D  302C               	movlw	44
  2368  008E  3184  2400         	fcall	clear_ram0
  2369  0090                     end_of_initialization:	
  2370                           ;End of C runtime variable initialization code
  2371                           
  2372  0090                     __end_of__initialization:	
  2373  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2374  0091  0020               	movlb	0
  2375  0092  3183  2BF9         	ljmp	_main	;jump to C main() function
  2376                           
  2377                           	psect	bssBANK0
  2378  0020                     __pbssBANK0:	
  2379  0020                     _g_data:	
  2380  0020                     	ds	35
  2381  0043                     _Temp:	
  2382  0043                     	ds	2
  2383  0045                     ISR@key_time_cnt:	
  2384  0045                     	ds	2
  2385  0047                     _temp_l:	
  2386  0047                     	ds	1
  2387  0048                     _temp_h:	
  2388  0048                     	ds	1
  2389  0049                     receive_decode@cnt_low:	
  2390  0049                     	ds	1
  2391  004A                     ISR@history_key:	
  2392  004A                     	ds	1
  2393  004B                     _ENUM:	
  2394  004B                     	ds	1
  2395                           
  2396                           	psect	clrtext
  2397  0400                     clear_ram0:	
  2398                           ;	Called with FSR0 containing the base address, and
  2399                           ;	WREG with the size to clear
  2400                           
  2401  0400  0064               	clrwdt	;clear the watchdog before getting into this loop
  2402  0401                     clrloop0:	
  2403  0401  0180               	clrf	0	;clear RAM location pointed to by FSR
  2404  0402  3101               	addfsr 0,1
  2405  0403  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2406  0404  2C01               	goto	clrloop0	;have we reached the end yet?
  2407  0405  3400               	retlw	0	;all done for this memory range, return
  2408                           
  2409                           	psect	cstackCOMMON
  2410  0070                     __pcstackCOMMON:	
  2411  0070                     ?_timer_init:	
  2412  0070                     ?_IIC_Init:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_timer_start:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_receive_decode:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_update_time:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_timer_reset:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ?_update_display:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ?_init_env:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ?_ISR:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?_main:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ?_times2number:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_test_get_number:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ??_test_get_number:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ?_control595_delay:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ??_control595_delay:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ?_write_byte:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?i1_timer_reset:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ??i1_timer_reset:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ?i1_timer_start:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ??i1_timer_start:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ?_check_err:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ?___lwmod:	
  2473                           ; 2 bytes @ 0x0
  2474                           
  2475  0070                     test_get_number@get_num:	
  2476                           ; 2 bytes @ 0x0
  2477                           
  2478  0070                     times2number@high_level_times:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ___lwmod@divisor:	
  2482                           ; 2 bytes @ 0x0
  2483                           
  2484                           
  2485                           ; 2 bytes @ 0x0
  2486  0070                     	ds	1
  2487  0071                     control595_delay@times:	
  2488                           
  2489                           ; 1 bytes @ 0x1
  2490  0071                     	ds	1
  2491  0072                     ??_times2number:	
  2492  0072                     ??_check_err:	
  2493                           ; 1 bytes @ 0x2
  2494                           
  2495  0072                     ??_write_byte:	
  2496                           ; 1 bytes @ 0x2
  2497                           
  2498  0072                     ___lwmod@dividend:	
  2499                           ; 1 bytes @ 0x2
  2500                           
  2501                           
  2502                           ; 2 bytes @ 0x2
  2503  0072                     	ds	2
  2504  0074                     ??___lwmod:	
  2505  0074                     write_byte@data:	
  2506                           ; 1 bytes @ 0x4
  2507                           
  2508                           
  2509                           ; 1 bytes @ 0x4
  2510  0074                     	ds	1
  2511  0075                     write_byte@i:	
  2512  0075                     ___lwmod@counter:	
  2513                           ; 1 bytes @ 0x5
  2514                           
  2515                           
  2516                           ; 1 bytes @ 0x5
  2517  0075                     	ds	1
  2518  0076                     ?_write_once:	
  2519  0076                     write_once@HR:	
  2520                           ; 1 bytes @ 0x6
  2521                           
  2522                           
  2523                           ; 1 bytes @ 0x6
  2524  0076                     	ds	1
  2525  0077                     write_once@ML:	
  2526  0077                     _check_err$597:	
  2527                           ; 1 bytes @ 0x7
  2528                           
  2529                           
  2530                           ; 2 bytes @ 0x7
  2531  0077                     	ds	1
  2532  0078                     write_once@MR:	
  2533                           
  2534                           ; 1 bytes @ 0x8
  2535  0078                     	ds	1
  2536  0079                     ??_write_once:	
  2537  0079                     write_once@HL:	
  2538                           ; 1 bytes @ 0x9
  2539                           
  2540  0079                     _check_err$598:	
  2541                           ; 1 bytes @ 0x9
  2542                           
  2543                           
  2544                           ; 2 bytes @ 0x9
  2545  0079                     	ds	1
  2546  007A                     ??_update_display:	
  2547                           
  2548                           ; 1 bytes @ 0xA
  2549  007A                     	ds	1
  2550  007B                     check_err@i:	
  2551                           
  2552                           ; 1 bytes @ 0xB
  2553  007B                     	ds	1
  2554  007C                     check_err@check:	
  2555                           
  2556                           ; 1 bytes @ 0xC
  2557  007C                     	ds	1
  2558  007D                     ??_update_time:	
  2559                           
  2560                           ; 1 bytes @ 0xD
  2561  007D                     	ds	1
  2562                           
  2563                           	psect	cstackBANK0
  2564  004C                     __pcstackBANK0:	
  2565  004C                     ??_receive_decode:	
  2566                           
  2567                           ; 1 bytes @ 0x0
  2568  004C                     	ds	4
  2569  0050                     receive_decode@last_time_h:	
  2570                           
  2571                           ; 2 bytes @ 0x4
  2572  0050                     	ds	2
  2573  0052                     receive_decode@last_time_m:	
  2574                           
  2575                           ; 2 bytes @ 0x6
  2576  0052                     	ds	2
  2577  0054                     receive_decode@i:	
  2578                           
  2579                           ; 2 bytes @ 0x8
  2580  0054                     	ds	2
  2581  0056                     receive_decode@read_value:	
  2582                           
  2583                           ; 1 bytes @ 0xA
  2584  0056                     	ds	1
  2585  0057                     ??_ISR:	
  2586                           
  2587                           ; 1 bytes @ 0xB
  2588  0057                     	ds	2
  2589  0059                     ??_timer_init:	
  2590  0059                     ??_IIC_Init:	
  2591                           ; 1 bytes @ 0xD
  2592                           
  2593  0059                     ??_timer_start:	
  2594                           ; 1 bytes @ 0xD
  2595                           
  2596  0059                     ??_timer_reset:	
  2597                           ; 1 bytes @ 0xD
  2598                           
  2599  0059                     ??_init_env:	
  2600                           ; 1 bytes @ 0xD
  2601                           
  2602                           
  2603                           ; 1 bytes @ 0xD
  2604  0059                     	ds	1
  2605  005A                     init_env@i:	
  2606                           
  2607                           ; 2 bytes @ 0xE
  2608  005A                     	ds	2
  2609  005C                     ??_main:	
  2610                           
  2611                           	psect	maintext
  2612  03F9                     __pmaintext:	
  2613                           ; 1 bytes @ 0x10
  2614 ;;
  2615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2616 ;;
  2617 ;; *************** function _main *****************
  2618 ;; Defined at:
  2619 ;;		line 182 in file "main.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : B1F/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels required when called:    8
  2639 ;; This function calls:
  2640 ;;		_init_env
  2641 ;;		_timer_start
  2642 ;; This function is called by:
  2643 ;;		Startup code after reset
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _main
  2649  03F9                     _main:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2653  03F9  3182  2219  3183   	fcall	_init_env
  2654  03FC  3184  2410  3183   	fcall	_timer_start
  2655  03FF                     l101:	
  2656  03FF  2BFF               	goto	l101
  2657  0400                     __end_of_main:	
  2658                           
  2659                           	psect	text1
  2660  0410                     __ptext1:	
  2661 ;; *************** function _timer_start *****************
  2662 ;; Defined at:
  2663 ;;		line 27 in file "timer.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    7
  2684 ;; This function calls:
  2685 ;;		_timer_reset
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _timer_start
  2693  0410                     _timer_start:	
  2694                           
  2695                           ;timer.c: 29:     timer_reset();
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _timer_start: [wreg+status,2+status,0+pclath+cstack]
  2699  0410  3184  2406         	fcall	_timer_reset
  2700                           
  2701                           ;timer.c: 30:     INTCONbits.TMR0IE = 0b0;
  2702  0412  128B               	bcf	11,5	;volatile
  2703  0413  0008               	return
  2704  0414                     __end_of_timer_start:	
  2705                           
  2706                           	psect	text2
  2707  0406                     __ptext2:	
  2708 ;; *************** function _timer_reset *****************
  2709 ;; Defined at:
  2710 ;;		line 22 in file "timer.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    6
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_timer_start
  2735 ;;		_timer_stop
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _timer_reset
  2741  0406                     _timer_reset:	
  2742                           
  2743                           ;timer.c: 24:     INTCONbits.TMR0IF = 0;
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _timer_reset: [wreg]
  2747  0406  110B               	bcf	11,2	;volatile
  2748                           
  2749                           ;timer.c: 25:     TMR0 = (217 + 14);
  2750  0407  30E7               	movlw	231
  2751  0408  0020               	movlb	0	; select bank0
  2752  0409  0095               	movwf	21	;volatile
  2753  040A  0008               	return
  2754  040B                     __end_of_timer_reset:	
  2755                           
  2756                           	psect	text3
  2757  0219                     __ptext3:	
  2758 ;; *************** function _init_env *****************
  2759 ;; Defined at:
  2760 ;;		line 39 in file "main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  i               2   14[BANK0 ] int 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;Total ram usage:        3 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    7
  2781 ;; This function calls:
  2782 ;;		_IIC_Init
  2783 ;;		_timer_init
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _init_env
  2791  0219                     _init_env:	
  2792                           
  2793                           ;main.c: 44:     IOCCP = 0;
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2797  0219  178B               	bsf	11,7	;volatile
  2798                           
  2799                           ;main.c: 46: 
  2800  021A  158B               	bsf	11,3	;volatile
  2801                           
  2802                           ;main.c: 52: 
  2803  021B  0021               	movlb	1	; select bank1
  2804  021C  0819               	movf	25,w	;volatile
  2805  021D  39FC               	andlw	-4
  2806  021E  3802               	iorlw	2
  2807  021F  0099               	movwf	25	;volatile
  2808                           
  2809                           ;main.c: 53:     TRISCbits.TRISC1 = 1;
  2810  0220  0819               	movf	25,w	;volatile
  2811  0221  3987               	andlw	-121
  2812  0222  3850               	iorlw	80
  2813  0223  0099               	movwf	25	;volatile
  2814                           
  2815                           ;main.c: 55:     IOCCPbits.IOCCP1 = 1;
  2816  0224  3183  23D4  3182   	fcall	_timer_init
  2817                           
  2818                           ;main.c: 63: 
  2819  0227  0021               	movlb	1	; select bank1
  2820  0228  1395               	bcf	21,7	;volatile
  2821                           
  2822                           ;main.c: 65:     LATBbits.LATB2 = PIN_LOW;
  2823  0229  018C               	clrf	12	;volatile
  2824                           
  2825                           ;main.c: 66: 
  2826  022A  0022               	movlb	2	; select bank2
  2827  022B  018C               	clrf	12	;volatile
  2828                           
  2829                           ;main.c: 67: 
  2830  022C  0024               	movlb	4	; select bank4
  2831  022D  018C               	clrf	12	;volatile
  2832                           
  2833                           ;main.c: 68:     PORTCbits.RC2 = BPC_PWR_ON;
  2834  022E  0027               	movlb	7	; select bank7
  2835  022F  0191               	clrf	17	;volatile
  2836                           
  2837                           ;main.c: 69: 
  2838  0230  0192               	clrf	18	;volatile
  2839                           
  2840                           ;main.c: 71:     TRISCbits.TRISC0 = 1;
  2841  0231  0021               	movlb	1	; select bank1
  2842  0232  018D               	clrf	13	;volatile
  2843                           
  2844                           ;main.c: 72:     WPUCbits.WPUC0 = 1;
  2845  0233  0022               	movlb	2	; select bank2
  2846  0234  018D               	clrf	13	;volatile
  2847                           
  2848                           ;main.c: 73: 
  2849  0235  0024               	movlb	4	; select bank4
  2850  0236  018D               	clrf	13	;volatile
  2851                           
  2852                           ;main.c: 74: 
  2853  0237  0027               	movlb	7	; select bank7
  2854  0238  0194               	clrf	20	;volatile
  2855                           
  2856                           ;main.c: 75:     IIC_Init();
  2857  0239  0195               	clrf	21	;volatile
  2858                           
  2859                           ;main.c: 77: 
  2860  023A  0021               	movlb	1	; select bank1
  2861  023B  018E               	clrf	14	;volatile
  2862                           
  2863                           ;main.c: 78:     PORTAbits.RA0 = 1;
  2864  023C  0022               	movlb	2	; select bank2
  2865  023D  018E               	clrf	14	;volatile
  2866                           
  2867                           ;main.c: 79: }
  2868  023E  3001               	movlw	1
  2869  023F  0024               	movlb	4	; select bank4
  2870  0240  008E               	movwf	14	;volatile
  2871                           
  2872                           ;main.c: 80: 
  2873  0241  0027               	movlb	7	; select bank7
  2874  0242  0197               	clrf	23	;volatile
  2875                           
  2876                           ;main.c: 81: void __attribute__((picinterrupt(""))) ISR(void)
  2877  0243  0198               	clrf	24	;volatile
  2878                           
  2879                           ;main.c: 86: 
  2880  0244  0021               	movlb	1	; select bank1
  2881  0245  168E               	bsf	14,5	;volatile
  2882                           
  2883                           ;main.c: 87: 
  2884  0246  0024               	movlb	4	; select bank4
  2885  0247  168E               	bsf	14,5	;volatile
  2886                           
  2887                           ;main.c: 89: 
  2888  0248  0021               	movlb	1	; select bank1
  2889  0249  148E               	bsf	14,1	;volatile
  2890                           
  2891                           ;main.c: 90:     {
  2892  024A  0024               	movlb	4	; select bank4
  2893  024B  108E               	bcf	14,1	;volatile
  2894                           
  2895                           ;main.c: 91: 
  2896  024C  0027               	movlb	7	; select bank7
  2897  024D  1497               	bsf	23,1	;volatile
  2898                           
  2899                           ;main.c: 94:         g_data.g_flg_switch = FALSE;
  2900  024E  0020               	movlb	0	; select bank0
  2901  024F  01DA               	clrf	init_env@i
  2902  0250  01DB               	clrf	init_env@i+1
  2903  0251  085B               	movf	init_env@i+1,w
  2904  0252  3A80               	xorlw	128
  2905  0253  00D9               	movwf	??_init_env
  2906  0254  3080               	movlw	128
  2907  0255  0259               	subwf	??_init_env,w
  2908  0256  1D03               	skipz
  2909  0257  2A5A               	goto	u1405
  2910  0258  3014               	movlw	20
  2911  0259  025A               	subwf	init_env@i,w
  2912  025A                     u1405:	
  2913  025A  1803               	btfsc	3,0
  2914  025B  2A74               	goto	l70
  2915  025C                     l1855:	
  2916                           
  2917                           ;main.c: 95:         g_data.cnt_update = 0;
  2918  025C  3005               	movlw	5
  2919  025D  0020               	movlb	0	; select bank0
  2920  025E  00D9               	movwf	??_init_env
  2921  025F  085A               	movf	init_env@i,w
  2922  0260  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2923  0261  0086               	movwf	6
  2924  0262  0187               	clrf	7
  2925  0263  0859               	movf	??_init_env,w
  2926  0264  0081               	movwf	1
  2927                           
  2928                           ;main.c: 96:         g_data.g_recv_count = CODE_P0;
  2929  0265  3001               	movlw	1
  2930  0266  07DA               	addwf	init_env@i,f
  2931  0267  3000               	movlw	0
  2932  0268  3DDB               	addwfc	init_env@i+1,f
  2933  0269  085B               	movf	init_env@i+1,w
  2934  026A  3A80               	xorlw	128
  2935  026B  00D9               	movwf	??_init_env
  2936  026C  3080               	movlw	128
  2937  026D  0259               	subwf	??_init_env,w
  2938  026E  1D03               	skipz
  2939  026F  2A72               	goto	u1415
  2940  0270  3014               	movlw	20
  2941  0271  025A               	subwf	init_env@i,w
  2942  0272                     u1415:	
  2943  0272  1C03               	skipc
  2944  0273  2A5C               	goto	l1855
  2945  0274                     l70:	
  2946                           
  2947                           ;main.c: 101:         return;
  2948  0274  0022               	movlb	2	; select bank2
  2949  0275  110D               	bcf	13,2	;volatile
  2950                           
  2951                           ;main.c: 104:     {
  2952  0276  0020               	movlb	0	; select bank0
  2953  0277  110E               	bcf	14,2	;volatile
  2954                           
  2955                           ;main.c: 107:             g_data.g_recv_count = CODE_P1;
  2956  0278  0021               	movlb	1	; select bank1
  2957  0279  140E               	bsf	14,0	;volatile
  2958                           
  2959                           ;main.c: 108:         }
  2960  027A  0024               	movlb	4	; select bank4
  2961  027B  140E               	bsf	14,0	;volatile
  2962                           
  2963                           ;main.c: 111:     else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1)
  2964  027C  3183  23E1         	fcall	_IIC_Init
  2965                           
  2966                           ;main.c: 114:         IOCCFbits.IOCCF1 = FALSE;
  2967  027E  0020               	movlb	0	; select bank0
  2968  027F  140C               	bsf	12,0	;volatile
  2969  0280  0008               	return
  2970  0281                     __end_of_init_env:	
  2971                           
  2972                           	psect	text4
  2973  03D4                     __ptext4:	
  2974 ;; *************** function _timer_init *****************
  2975 ;; Defined at:
  2976 ;;		line 6 in file "timer.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    6
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_init_env
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _timer_init
  3006  03D4                     _timer_init:	
  3007                           
  3008                           ;timer.c: 9:     INTCONbits.GIE = 0b1;
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _timer_init: [wreg+status,2+status,0]
  3012  03D4  178B               	bsf	11,7	;volatile
  3013                           
  3014                           ;timer.c: 12:     INTCONbits.TMR0IE = 0b0;
  3015  03D5  128B               	bcf	11,5	;volatile
  3016                           
  3017                           ;timer.c: 17:     OPTION_REGbits.PSA = 0;
  3018  03D6  0021               	movlb	1	; select bank1
  3019  03D7  1195               	bcf	21,3	;volatile
  3020                           
  3021                           ;timer.c: 18:     OPTION_REGbits.TMR0CS = 0;
  3022  03D8  1295               	bcf	21,5	;volatile
  3023                           
  3024                           ;timer.c: 19:     OPTION_REGbits.PS = 4;
  3025  03D9  0815               	movf	21,w	;volatile
  3026  03DA  39F8               	andlw	-8
  3027  03DB  3804               	iorlw	4
  3028  03DC  0095               	movwf	21	;volatile
  3029                           
  3030                           ;timer.c: 20:     TMR0 = (217 + 14);
  3031  03DD  30E7               	movlw	231
  3032  03DE  0020               	movlb	0	; select bank0
  3033  03DF  0095               	movwf	21	;volatile
  3034  03E0  0008               	return
  3035  03E1                     __end_of_timer_init:	
  3036                           
  3037                           	psect	text5
  3038  03E1                     __ptext5:	
  3039 ;; *************** function _IIC_Init *****************
  3040 ;; Defined at:
  3041 ;;		line 8 in file "myiic.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		None
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    6
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_init_env
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _IIC_Init
  3071  03E1                     _IIC_Init:	
  3072                           
  3073                           ;myiic.c: 10:     LATC3=1;
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _IIC_Init: []
  3077  03E1  0022               	movlb	2	; select bank2
  3078  03E2  158E               	bsf	14,3	;volatile
  3079                           
  3080                           ;myiic.c: 11:  LATC4=1;
  3081  03E3  160E               	bsf	14,4	;volatile
  3082                           
  3083                           ;myiic.c: 13:     ODCONC3 = 1;
  3084  03E4  0025               	movlb	5	; select bank5
  3085  03E5  158E               	bsf	14,3	;volatile
  3086                           
  3087                           ;myiic.c: 14:     ODCONC4 = 1;
  3088  03E6  160E               	bsf	14,4	;volatile
  3089                           
  3090                           ;myiic.c: 16:     TRISC4 = 0;
  3091  03E7  0021               	movlb	1	; select bank1
  3092  03E8  120E               	bcf	14,4	;volatile
  3093                           
  3094                           ;myiic.c: 17:     TRISC3 = 0;
  3095  03E9  118E               	bcf	14,3	;volatile
  3096                           
  3097                           ;myiic.c: 19:  WPUC4 = 1;
  3098  03EA  0024               	movlb	4	; select bank4
  3099  03EB  160E               	bsf	14,4	;volatile
  3100                           
  3101                           ;myiic.c: 20:     WPUC3 = 1;
  3102  03EC  158E               	bsf	14,3	;volatile
  3103  03ED  0008               	return
  3104  03EE                     __end_of_IIC_Init:	
  3105                           
  3106                           	psect	intentry
  3107  0004                     __pintentry:	
  3108 ;; *************** function _ISR *****************
  3109 ;; Defined at:
  3110 ;;		line 117 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;Total ram usage:        2 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    5
  3131 ;; This function calls:
  3132 ;;		___lwmod
  3133 ;;		_receive_decode
  3134 ;;		_update_time
  3135 ;;		i1_timer_reset
  3136 ;;		i1_timer_start
  3137 ;; This function is called by:
  3138 ;;		Interrupt level 1
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142  0004                     _ISR:	
  3143                           
  3144                           ;incstack = 0
  3145  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3146                           
  3147                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3148  0005  3180               	pagesel	$
  3149                           
  3150                           ;main.c: 119:     {;main.c: 120: ;main.c: 124:             receive_decode();
  3151  0006  0020               	movlb	0	; select bank0
  3152  0007  0821               	movf	_g_data+1,w	;volatile
  3153  0008  1D03               	btfss	3,2
  3154  0009  2823               	goto	i1l2065
  3155  000A  0320               	decf	_g_data,w	;volatile
  3156  000B  1903               	btfsc	3,2
  3157  000C  2814               	goto	i1l2045
  3158  000D  3000               	movlw	0
  3159  000E  0242               	subwf	_g_data+34,w	;volatile
  3160  000F  301E               	movlw	30
  3161  0010  1903               	skipnz
  3162  0011  0241               	subwf	_g_data+33,w	;volatile
  3163  0012  1C03               	skipc
  3164  0013  2823               	goto	i1l2065
  3165  0014                     i1l2045:	
  3166                           
  3167                           ;main.c: 126: ;main.c: 128: 
  3168  0014  01A2               	clrf	_g_data+2	;volatile
  3169                           
  3170                           ;main.c: 129:         if(key_time_cnt++ % 10 == 0)
  3171  0015  3001               	movlw	1
  3172  0016  00D7               	movwf	??_ISR
  3173  0017  0857               	movf	??_ISR,w
  3174  0018  00A1               	movwf	_g_data+1	;volatile
  3175                           
  3176                           ;main.c: 130:         {
  3177  0019  01A0               	clrf	_g_data	;volatile
  3178                           
  3179                           ;main.c: 131:             history_key <<= 1;
  3180  001A  01C1               	clrf	_g_data+33	;volatile
  3181  001B  01C2               	clrf	_g_data+34	;volatile
  3182                           
  3183                           ;main.c: 132:             history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  3184  001C  01AB               	clrf	_g_data+11	;volatile
  3185  001D  01AC               	clrf	_g_data+12	;volatile
  3186                           
  3187                           ;main.c: 133: 
  3188  001E  110E               	bcf	14,2	;volatile
  3189                           
  3190                           ;main.c: 135:             {
  3191  001F  100B               	bcf	11,0	;volatile
  3192                           
  3193                           ;main.c: 136:                 g_data.g_flg_switch = TRUE;
  3194  0020  0027               	movlb	7	; select bank7
  3195  0021  1099               	bcf	25,1	;volatile
  3196                           
  3197                           ;main.c: 137:             }
  3198  0022  2885               	goto	i1l83
  3199  0023                     i1l2065:	
  3200                           ;main.c: 139: 
  3201                           
  3202                           ;main.c: 138:         }
  3203                           
  3204  0023  0020               	movlb	0	; select bank0
  3205  0024  0321               	decf	_g_data+1,w	;volatile
  3206  0025  1D03               	btfss	3,2
  3207  0026  283A               	goto	i1l85
  3208  0027  0027               	movlb	7	; select bank7
  3209  0028  1C99               	btfss	25,1	;volatile
  3210  0029  283A               	goto	i1l85
  3211  002A  0020               	movlb	0	; select bank0
  3212  002B  0322               	decf	_g_data+2,w	;volatile
  3213  002C  1D03               	btfss	3,2
  3214  002D  283A               	goto	i1l85
  3215                           
  3216                           ;main.c: 140:         timer_reset();;main.c: 141:         return;
  3217  002E  082B               	movf	_g_data+11,w	;volatile
  3218  002F  042C               	iorwf	_g_data+12,w	;volatile
  3219  0030  1D03               	btfss	3,2
  3220  0031  2836               	goto	i1l2075
  3221                           
  3222                           ;main.c: 142:     };main.c: 143:     return;
  3223  0032  3000               	movlw	0
  3224  0033  00AC               	movwf	_g_data+12	;volatile
  3225  0034  3001               	movlw	1
  3226  0035  00AB               	movwf	_g_data+11	;volatile
  3227  0036                     i1l2075:	
  3228                           ;main.c: 144: }
  3229                           
  3230                           
  3231                           ;main.c: 145: 
  3232  0036  3184  2414  3180   	fcall	i1_timer_start
  3233                           
  3234                           ;main.c: 146: void main(void)
  3235  0039  2842               	goto	i1l84
  3236  003A                     i1l85:	
  3237                           ;main.c: 147: {
  3238                           
  3239  003A  180B               	btfsc	11,0	;volatile
  3240  003B  283F               	goto	i1l90
  3241  003C  0027               	movlb	7	; select bank7
  3242  003D  1C99               	btfss	25,1	;volatile
  3243  003E  2842               	goto	i1l84
  3244  003F                     i1l90:	
  3245                           
  3246                           ;main.c: 148: ;main.c: 149:     init_env();
  3247  003F  100B               	bcf	11,0	;volatile
  3248                           
  3249                           ;main.c: 150:     timer_start();
  3250  0040  0027               	movlb	7	; select bank7
  3251  0041  1099               	bcf	25,1	;volatile
  3252  0042                     i1l84:	
  3253                           ;main.c: 151: 
  3254                           
  3255                           
  3256                           ;main.c: 154: }
  3257  0042  1D0B               	btfss	11,2	;volatile
  3258  0043  2885               	goto	i1l83
  3259  0044  0020               	movlb	0	; select bank0
  3260  0045  0321               	decf	_g_data+1,w	;volatile
  3261  0046  1D03               	btfss	3,2
  3262  0047  2852               	goto	i1l2087
  3263  0048  0822               	movf	_g_data+2,w	;volatile
  3264  0049  1903               	btfsc	3,2
  3265  004A  284F               	goto	i1l2085
  3266  004B  082B               	movf	_g_data+11,w	;volatile
  3267  004C  042C               	iorwf	_g_data+12,w	;volatile
  3268  004D  1903               	btfsc	3,2
  3269  004E  2852               	goto	i1l2087
  3270  004F                     i1l2085:	
  3271  004F  3180  2094  3180   	fcall	_receive_decode
  3272  0052                     i1l2087:	
  3273  0052  3182  22CC  3180   	fcall	_update_time
  3274  0055  300A               	movlw	10
  3275  0056  00F0               	movwf	___lwmod@divisor
  3276  0057  3000               	movlw	0
  3277  0058  00F1               	movwf	___lwmod@divisor+1
  3278  0059  0020               	movlb	0	; select bank0
  3279  005A  0846               	movf	ISR@key_time_cnt+1,w
  3280  005B  00D8               	movwf	??_ISR+1
  3281  005C  0845               	movf	ISR@key_time_cnt,w
  3282  005D  00D7               	movwf	??_ISR
  3283  005E  0AC5               	incf	ISR@key_time_cnt,f
  3284  005F  1903               	skipnz
  3285  0060  0AC6               	incf	ISR@key_time_cnt+1,f
  3286  0061  0857               	movf	??_ISR,w
  3287  0062  00F2               	movwf	___lwmod@dividend
  3288  0063  0858               	movf	??_ISR+1,w
  3289  0064  00F3               	movwf	___lwmod@dividend+1
  3290  0065  3183  2349  3180   	fcall	___lwmod
  3291  0068  0870               	movf	?___lwmod,w
  3292  0069  0471               	iorwf	?___lwmod+1,w
  3293  006A  1D03               	btfss	3,2
  3294  006B  2883               	goto	i1l2101
  3295  006C  1003               	clrc
  3296  006D  0020               	movlb	0	; select bank0
  3297  006E  0DCA               	rlf	ISR@history_key,f
  3298  006F  0E0E               	swapf	14,w	;volatile
  3299  0070  0C89               	rrf	9,f
  3300  0071  3901               	andlw	1
  3301  0072  00D7               	movwf	??_ISR
  3302  0073  0857               	movf	??_ISR,w
  3303  0074  04CA               	iorwf	ISR@history_key,f
  3304  0075  300F               	movlw	15
  3305  0076  054A               	andwf	ISR@history_key,w
  3306  0077  00D7               	movwf	??_ISR
  3307  0078  3003               	movlw	3
  3308  0079  0657               	xorwf	??_ISR,w
  3309  007A  1D03               	btfss	3,2
  3310  007B  2883               	goto	i1l2101
  3311  007C  0820               	movf	_g_data,w	;volatile
  3312  007D  1D03               	btfss	3,2
  3313  007E  2883               	goto	i1l2101
  3314  007F  3001               	movlw	1
  3315  0080  00D7               	movwf	??_ISR
  3316  0081  0857               	movf	??_ISR,w
  3317  0082  00A0               	movwf	_g_data	;volatile
  3318  0083                     i1l2101:	
  3319  0083  3184  240B         	fcall	i1_timer_reset
  3320  0085                     i1l83:	
  3321  0085  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3322  0086  0009               	retfie
  3323  0087                     __end_of_ISR:	
  3324                           
  3325                           	psect	text7
  3326  0414                     __ptext7:	
  3327 ;; *************** function i1_timer_start *****************
  3328 ;; Defined at:
  3329 ;;		line 27 in file "timer.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    1
  3350 ;; This function calls:
  3351 ;;		i1_timer_reset
  3352 ;; This function is called by:
  3353 ;;		_ISR
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function i1_timer_start
  3359  0414                     i1_timer_start:	
  3360                           
  3361                           ;timer.c: 29:     timer_reset();
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in i1_timer_start: [wreg+status,2+status,0+pclath+cstack]
  3365  0414  3184  240B         	fcall	i1_timer_reset
  3366                           
  3367                           ;timer.c: 30:     INTCONbits.TMR0IE = 0b0;
  3368  0416  128B               	bcf	11,5	;volatile
  3369  0417  0008               	return
  3370  0418                     __end_ofi1_timer_start:	
  3371                           
  3372                           	psect	text8
  3373  040B                     __ptext8:	
  3374 ;; *************** function i1_timer_reset *****************
  3375 ;; Defined at:
  3376 ;;		line 22 in file "timer.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_ISR
  3400 ;;		i1_timer_start
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function i1_timer_reset
  3406  040B                     i1_timer_reset:	
  3407                           
  3408                           ;timer.c: 24:     INTCONbits.TMR0IF = 0;
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in i1_timer_reset: [wreg]
  3412  040B  110B               	bcf	11,2	;volatile
  3413                           
  3414                           ;timer.c: 25:     TMR0 = (217 + 14);
  3415  040C  30E7               	movlw	231
  3416  040D  0020               	movlb	0	; select bank0
  3417  040E  0095               	movwf	21	;volatile
  3418  040F  0008               	return
  3419  0410                     __end_ofi1_timer_reset:	
  3420                           
  3421                           	psect	text9
  3422  02CC                     __ptext9:	
  3423 ;; *************** function _update_time *****************
  3424 ;; Defined at:
  3425 ;;		line 14 in file "update_time.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    4
  3446 ;; This function calls:
  3447 ;;		_update_display
  3448 ;; This function is called by:
  3449 ;;		_ISR
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _update_time
  3455  02CC                     _update_time:	
  3456                           
  3457                           ;update_time.c: 15:     g_data.g_time_10ms++;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  3461  02CC  3001               	movlw	1
  3462  02CD  00FD               	movwf	??_update_time
  3463  02CE  087D               	movf	??_update_time,w
  3464  02CF  0020               	banksel	_g_data
  3465  02D0  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  3466                           
  3467                           ;update_time.c: 17:     if( 50 == g_data.g_time_10ms ){
  3468  02D1  3032               	movlw	50
  3469  02D2  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3470  02D3  1D03               	btfss	3,2
  3471  02D4  2AD8               	goto	i1l1973
  3472                           
  3473                           ;update_time.c: 18:         LATBbits.LATB3 = 1;
  3474  02D5  0022               	movlb	2	; select bank2
  3475  02D6  158D               	bsf	13,3	;volatile
  3476                           
  3477                           ;update_time.c: 19:     }else if( 100 == g_data.g_time_10ms ){
  3478  02D7  2ADF               	goto	i1l1977
  3479  02D8                     i1l1973:	
  3480  02D8  3064               	movlw	100
  3481  02D9  0020               	banksel	_g_data
  3482  02DA  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3483  02DB  1D03               	btfss	3,2
  3484  02DC  2ADF               	goto	i1l1977
  3485                           
  3486                           ;update_time.c: 20:         LATBbits.LATB3 = 0;
  3487  02DD  0022               	movlb	2	; select bank2
  3488  02DE  118D               	bcf	13,3	;volatile
  3489  02DF                     i1l1977:	
  3490                           ;update_time.c: 21:     }
  3491                           
  3492                           
  3493                           ;update_time.c: 23:     if(g_data.g_time_10ms == 100)
  3494  02DF  3064               	movlw	100
  3495  02E0  0020               	banksel	_g_data
  3496  02E1  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3497  02E2  1D03               	btfss	3,2
  3498  02E3  0008               	return
  3499                           
  3500                           ;update_time.c: 24:     {;update_time.c: 25:         g_data.g_time_10ms = 0;
  3501  02E4  3000               	movlw	0
  3502  02E5  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  3503                           
  3504                           ;update_time.c: 26:         g_data.g_time_s++;
  3505  02E6  3001               	movlw	1
  3506  02E7  00FD               	movwf	??_update_time
  3507  02E8  087D               	movf	??_update_time,w
  3508  02E9  0020               	banksel	_g_data
  3509  02EA  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  3510                           
  3511                           ;update_time.c: 28:         if(g_data.g_time_s == 60)
  3512  02EB  303C               	movlw	60
  3513  02EC  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  3514  02ED  1D03               	btfss	3,2
  3515  02EE  0008               	return
  3516                           
  3517                           ;update_time.c: 29:         {;update_time.c: 30:             g_data.g_time_m++;
  3518  02EF  3001               	movlw	1
  3519  02F0  00FD               	movwf	??_update_time
  3520  02F1  087D               	movf	??_update_time,w
  3521  02F2  0020               	banksel	_g_data
  3522  02F3  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  3523                           
  3524                           ;update_time.c: 31:             g_data.g_time_s = 0;
  3525  02F4  3000               	movlw	0
  3526  02F5  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  3527                           
  3528                           ;update_time.c: 32:             g_data.cnt_update++;
  3529  02F6  3001               	movlw	1
  3530  02F7  07C1               	addwf	(_g_data& (0+127)+33),f	;volatile
  3531  02F8  3000               	movlw	0
  3532  02F9  3DC2               	addwfc	((_g_data+1)& (0+127)+33),f	;volatile
  3533                           
  3534                           ;update_time.c: 33:             if(g_data.g_time_m == 60)
  3535  02FA  303C               	movlw	60
  3536  02FB  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  3537  02FC  1D03               	btfss	3,2
  3538  02FD  2B0B               	goto	i1l1997
  3539                           
  3540                           ;update_time.c: 34:             {;update_time.c: 35:                 g_data.g_time_h++;
  3541  02FE  3001               	movlw	1
  3542  02FF  00FD               	movwf	??_update_time
  3543  0300  087D               	movf	??_update_time,w
  3544  0301  0020               	banksel	_g_data
  3545  0302  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  3546                           
  3547                           ;update_time.c: 36:                 g_data.g_time_m = 0;
  3548  0303  3000               	movlw	0
  3549  0304  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3550                           
  3551                           ;update_time.c: 38:                 if(g_data.g_time_h == 24)
  3552  0305  3018               	movlw	24
  3553  0306  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  3554  0307  1D03               	btfss	3,2
  3555  0308  2B0B               	goto	i1l1997
  3556                           
  3557                           ;update_time.c: 39:                 {;update_time.c: 40:                     g_data.g_ti
      +                          me_h = 0;
  3558  0309  3000               	movlw	0
  3559  030A  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3560  030B                     i1l1997:	
  3561                           ;update_time.c: 42:             }
  3562                           
  3563                           ;update_time.c: 41:                 }
  3564                           
  3565                           
  3566                           ;update_time.c: 44:             update_display();
  3567  030B  3183  23C4         	fcall	_update_display
  3568                           
  3569                           ;update_time.c: 46:     }
  3570                           
  3571                           ;update_time.c: 45:         }
  3572  030D  0008               	return
  3573  030E                     __end_of_update_time:	
  3574                           ;update_time.c: 47:     return;
  3575                           
  3576                           
  3577                           	psect	text10
  3578  0094                     __ptext10:	
  3579 ;; *************** function _receive_decode *****************
  3580 ;; Defined at:
  3581 ;;		line 100 in file "receive_decode.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  i               2    8[BANK0 ] int 
  3586 ;;  last_time_m     2    6[BANK0 ] unsigned short 
  3587 ;;  last_time_h     2    4[BANK0 ] unsigned short 
  3588 ;;  read_value      1   10[BANK0 ] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;Total ram usage:       11 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    4
  3605 ;; This function calls:
  3606 ;;		_check_err
  3607 ;;		_test_get_number
  3608 ;;		_times2number
  3609 ;;		_update_display
  3610 ;; This function is called by:
  3611 ;;		_ISR
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _receive_decode
  3617  0094                     _receive_decode:	
  3618                           
  3619                           ;receive_decode.c: 102:     static u8 cnt_low = 0;;receive_decode.c: 105:     if(g_data.
      +                          g_find_recv_start == FALSE && PORTCbits.RC1 == PIN_HIGH)
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3623  0094  0020               	banksel	_g_data
  3624  0095  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3625  0096  1D03               	btfss	3,2
  3626  0097  28A1               	goto	i1l169
  3627  0098  0020               	movlb	0	; select bank0
  3628  0099  1C8E               	btfss	14,1	;volatile
  3629  009A  28A1               	goto	i1l169
  3630                           
  3631                           ;receive_decode.c: 106:     {;receive_decode.c: 107:         g_data.g_high_level_times =
      +                           0;
  3632  009B  0020               	banksel	_g_data
  3633  009C  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3634  009D  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3635                           
  3636                           ;receive_decode.c: 108:         g_data.g_all_level_times = 0;
  3637  009E  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3638  009F  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3639                           
  3640                           ;receive_decode.c: 109:         return;
  3641  00A0  0008               	return
  3642  00A1                     i1l169:	
  3643                           ;receive_decode.c: 110:     }
  3644                           
  3645                           
  3646                           ;receive_decode.c: 114:     if(PORTCbits.RC1 == PIN_HIGH)
  3647  00A1  0020               	movlb	0	; select bank0
  3648  00A2  1C8E               	btfss	14,1	;volatile
  3649  00A3  28AC               	goto	i1l1881
  3650                           
  3651                           ;receive_decode.c: 115:     {;receive_decode.c: 116:         g_data.g_high_level_times++
      +                          ;
  3652  00A4  3001               	movlw	1
  3653  00A5  0020               	banksel	_g_data
  3654  00A6  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3655  00A7  3000               	movlw	0
  3656  00A8  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3657                           
  3658                           ;receive_decode.c: 118:         cnt_low = 0;
  3659  00A9  0020               	movlb	0	; select bank0
  3660  00AA  01C9               	clrf	receive_decode@cnt_low
  3661                           
  3662                           ;receive_decode.c: 119:     }
  3663  00AB  28B0               	goto	i1l1883
  3664  00AC                     i1l1881:	
  3665                           ;receive_decode.c: 120:     else
  3666                           
  3667                           
  3668                           ;receive_decode.c: 121:     {;receive_decode.c: 122:         cnt_low++;
  3669  00AC  3001               	movlw	1
  3670  00AD  00CC               	movwf	??_receive_decode
  3671  00AE  084C               	movf	??_receive_decode,w
  3672  00AF  07C9               	addwf	receive_decode@cnt_low,f
  3673  00B0                     i1l1883:	
  3674                           ;receive_decode.c: 123:     }
  3675                           
  3676                           
  3677                           ;receive_decode.c: 125:     g_data.g_all_level_times++;
  3678  00B0  3001               	movlw	1
  3679  00B1  0020               	banksel	_g_data
  3680  00B2  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3681  00B3  3000               	movlw	0
  3682  00B4  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3683                           
  3684                           ;receive_decode.c: 129:     if((g_data.g_all_level_times < 100) && (FALSE == g_data.g_fi
      +                          nd_recv_start))
  3685  00B5  3000               	movlw	0
  3686  00B6  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3687  00B7  3064               	movlw	100
  3688  00B8  1903               	skipnz
  3689  00B9  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3690  00BA  1803               	skipnc
  3691  00BB  28BF               	goto	i1l1893
  3692  00BC  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3693  00BD  1903               	btfsc	3,2
  3694  00BE  0008               	return
  3695  00BF                     i1l1893:	
  3696                           ;receive_decode.c: 133:     else if( (cnt_low < 5) && (TRUE == g_data.g_find_recv_start)
      +                           )
  3697                           
  3698                           ;receive_decode.c: 132:     }
  3699                           
  3700                           ;receive_decode.c: 130:     {;receive_decode.c: 131:         return;
  3701                           
  3702  00BF  3005               	movlw	5
  3703  00C0  0020               	movlb	0	; select bank0
  3704  00C1  0249               	subwf	receive_decode@cnt_low,w
  3705  00C2  1803               	skipnc
  3706  00C3  28C8               	goto	i1l1899
  3707  00C4  0020               	banksel	_g_data
  3708  00C5  0322               	decf	(_g_data& (0+127)+2),w	;volatile
  3709  00C6  1903               	btfsc	3,2
  3710  00C7  0008               	return
  3711  00C8                     i1l1899:	
  3712                           ;receive_decode.c: 136:     }
  3713                           
  3714                           ;receive_decode.c: 134:     {;receive_decode.c: 135:         return ;
  3715                           
  3716                           
  3717                           ;receive_decode.c: 138:     u8 read_value = times2number(g_data.g_high_level_times);
  3718  00C8  0020               	banksel	_g_data
  3719  00C9  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3720  00CA  00F1               	movwf	times2number@high_level_times+1
  3721  00CB  0020               	banksel	_g_data
  3722  00CC  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3723  00CD  00F0               	movwf	times2number@high_level_times
  3724  00CE  3182  2281  3180   	fcall	_times2number
  3725  00D1  0020               	movlb	0	; select bank0
  3726  00D2  00CC               	movwf	??_receive_decode
  3727  00D3  084C               	movf	??_receive_decode,w
  3728  00D4  00D6               	movwf	receive_decode@read_value
  3729                           
  3730                           ;receive_decode.c: 140:     test_get_number(read_value);
  3731  00D5  0856               	movf	receive_decode@read_value,w
  3732  00D6  3183  230E  3180   	fcall	_test_get_number
  3733                           
  3734                           ;receive_decode.c: 142:     cnt_low = 0;
  3735  00D9  0020               	movlb	0	; select bank0
  3736  00DA  01C9               	clrf	receive_decode@cnt_low
  3737                           
  3738                           ;receive_decode.c: 143:     g_data.g_all_level_times = 0;
  3739  00DB  0020               	banksel	_g_data
  3740  00DC  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3741  00DD  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3742                           
  3743                           ;receive_decode.c: 144:     g_data.g_high_level_times = 0;
  3744  00DE  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3745  00DF  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3746                           
  3747                           ;receive_decode.c: 146:     if(FALSE == g_data.g_find_recv_start)
  3748  00E0  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3749  00E1  1D03               	btfss	3,2
  3750  00E2  28EE               	goto	i1l1917
  3751                           
  3752                           ;receive_decode.c: 147:     {;receive_decode.c: 149:         if(read_value == 5)
  3753  00E3  3005               	movlw	5
  3754  00E4  0020               	movlb	0	; select bank0
  3755  00E5  0656               	xorwf	receive_decode@read_value,w
  3756  00E6  1D03               	btfss	3,2
  3757  00E7  0008               	return
  3758                           
  3759                           ;receive_decode.c: 150:         {;receive_decode.c: 152:             g_data.g_find_recv_
      +                          start = TRUE;
  3760  00E8  3001               	movlw	1
  3761  00E9  0020               	banksel	_g_data
  3762  00EA  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3763                           
  3764                           ;receive_decode.c: 153:             g_data.g_recv_buf[CODE_P0] = 0;
  3765  00EB  3000               	movlw	0
  3766  00EC  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3767                           
  3768                           ;receive_decode.c: 156:             return;
  3769  00ED  0008               	return
  3770  00EE                     i1l1917:	
  3771                           ;receive_decode.c: 163:     }
  3772                           
  3773                           ;receive_decode.c: 162:         }
  3774                           
  3775                           ;receive_decode.c: 159:         {;receive_decode.c: 161:             return;
  3776                           
  3777                           ;receive_decode.c: 158:         else
  3778                           
  3779                           ;receive_decode.c: 157:         }
  3780                           
  3781                           
  3782                           ;receive_decode.c: 166:     if(g_data.g_find_recv_start == FALSE || (read_value == 4))
  3783  00EE  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3784  00EF  1903               	btfsc	3,2
  3785  00F0  0008               	return
  3786  00F1  3004               	movlw	4
  3787  00F2  0020               	movlb	0	; select bank0
  3788  00F3  0656               	xorwf	receive_decode@read_value,w
  3789  00F4  1903               	btfsc	3,2
  3790  00F5  0008               	return
  3791                           
  3792                           ;receive_decode.c: 173:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3793                           
  3794                           ;receive_decode.c: 171:     }
  3795                           
  3796                           ;receive_decode.c: 167:     {;receive_decode.c: 170:         return;
  3797  00F6  3020               	movlw	low _g_data
  3798  00F7  0086               	movwf	6
  3799  00F8  3000               	movlw	high _g_data
  3800  00F9  0087               	movwf	7
  3801  00FA  314B               	addfsr 1,11
  3802  00FB  302D               	movlw	low (_g_data+13)
  3803  00FC  00CC               	movwf	??_receive_decode
  3804  00FD  3000               	movlw	high (_g_data+13)
  3805  00FE  00CD               	movwf	??_receive_decode+1
  3806  00FF  3F40               	moviw [0]fsr1
  3807  0100  074C               	addwf	??_receive_decode,w
  3808  0101  00CE               	movwf	??_receive_decode+2
  3809  0102  3F41               	moviw [1]fsr1
  3810  0103  3D4D               	addwfc	??_receive_decode+1,w
  3811  0104  00CF               	movwf	??_receive_decode+3
  3812  0105  084E               	movf	??_receive_decode+2,w
  3813  0106  0086               	movwf	6
  3814  0107  084F               	movf	??_receive_decode+3,w
  3815  0108  0087               	movwf	7
  3816  0109  0856               	movf	receive_decode@read_value,w
  3817  010A  0081               	movwf	1
  3818  010B  3001               	movlw	1
  3819  010C  0020               	banksel	_g_data
  3820  010D  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3821  010E  3000               	movlw	0
  3822  010F  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3823                           
  3824                           ;receive_decode.c: 174:     if(g_data.g_recv_count <= CODE_P3)
  3825  0110  3000               	movlw	0
  3826  0111  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3827  0112  300B               	movlw	11
  3828  0113  1903               	skipnz
  3829  0114  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3830  0115  1C03               	btfss	3,0
  3831  0116  0008               	return
  3832                           
  3833                           ;receive_decode.c: 179:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE
      +                          _P2] != 0)
  3834                           
  3835                           ;receive_decode.c: 177:     }
  3836                           
  3837                           ;receive_decode.c: 175:     {;receive_decode.c: 176:         return;
  3838  0117  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3839  0118  1903               	btfsc	3,2
  3840  0119  2924               	goto	i1l1939
  3841  011A  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3842  011B  1903               	btfsc	3,2
  3843  011C  2924               	goto	i1l1939
  3844                           
  3845                           ;receive_decode.c: 180:     {;receive_decode.c: 181:         g_data.g_find_recv_start = 
      +                          FALSE;
  3846  011D  3000               	movlw	0
  3847  011E  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3848                           
  3849                           ;receive_decode.c: 182:         g_data.g_isDecoding = 0;
  3850  011F  3000               	movlw	0
  3851  0120  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3852                           
  3853                           ;receive_decode.c: 183:         g_data.g_recv_count = 0;
  3854  0121  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3855  0122  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3856                           
  3857                           ;receive_decode.c: 184:         return;
  3858  0123  0008               	return
  3859  0124                     i1l1939:	
  3860                           ;receive_decode.c: 185:     }
  3861                           
  3862                           
  3863                           ;receive_decode.c: 187:     u16 last_time_h = g_data.g_time_h;
  3864  0124  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3865  0125  0020               	movlb	0	; select bank0
  3866  0126  00CC               	movwf	??_receive_decode
  3867  0127  01CD               	clrf	??_receive_decode+1
  3868  0128  084C               	movf	??_receive_decode,w
  3869  0129  00D0               	movwf	receive_decode@last_time_h
  3870  012A  084D               	movf	??_receive_decode+1,w
  3871  012B  00D1               	movwf	receive_decode@last_time_h+1
  3872                           
  3873                           ;receive_decode.c: 188:     u16 last_time_m = g_data.g_time_m;
  3874  012C  0020               	banksel	_g_data
  3875  012D  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3876  012E  0020               	movlb	0	; select bank0
  3877  012F  00CC               	movwf	??_receive_decode
  3878  0130  01CD               	clrf	??_receive_decode+1
  3879  0131  084C               	movf	??_receive_decode,w
  3880  0132  00D2               	movwf	receive_decode@last_time_m
  3881  0133  084D               	movf	??_receive_decode+1,w
  3882  0134  00D3               	movwf	receive_decode@last_time_m+1
  3883                           
  3884                           ;receive_decode.c: 191:         if(check_err())
  3885                           
  3886                           ;receive_decode.c: 190:     do{
  3887  0135  3181  218D  3180   	fcall	_check_err
  3888  0138  0870               	movf	?_check_err,w
  3889  0139  0471               	iorwf	?_check_err+1,w
  3890  013A  1903               	btfsc	3,2
  3891  013B  2945               	goto	i1l1945
  3892                           
  3893                           ;receive_decode.c: 192:         {;receive_decode.c: 194:             g_data.g_time_h = l
      +                          ast_time_h;
  3894  013C  0020               	movlb	0	; select bank0
  3895  013D  0850               	movf	receive_decode@last_time_h,w
  3896  013E  0020               	banksel	_g_data
  3897  013F  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3898                           
  3899                           ;receive_decode.c: 195:             g_data.g_time_m = last_time_m;
  3900  0140  0020               	movlb	0	; select bank0
  3901  0141  0852               	movf	receive_decode@last_time_m,w
  3902  0142  0020               	banksel	_g_data
  3903  0143  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3904                           
  3905                           ;receive_decode.c: 196:             break;
  3906  0144  2962               	goto	i1l1951
  3907  0145                     i1l1945:	
  3908                           ;receive_decode.c: 197:         }
  3909                           
  3910                           
  3911                           ;receive_decode.c: 200:         if(last_time_h != g_data.g_time_h || last_time_m != g_da
      +                          ta.g_time_m)
  3912  0145  0020               	banksel	_g_data
  3913  0146  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3914  0147  0020               	movlb	0	; select bank0
  3915  0148  00CC               	movwf	??_receive_decode
  3916  0149  01CD               	clrf	??_receive_decode+1
  3917  014A  0851               	movf	receive_decode@last_time_h+1,w
  3918  014B  064D               	xorwf	??_receive_decode+1,w
  3919  014C  1D03               	skipz
  3920  014D  2950               	goto	u157_25
  3921  014E  0850               	movf	receive_decode@last_time_h,w
  3922  014F  064C               	xorwf	??_receive_decode,w
  3923  0150                     u157_25:	
  3924  0150  1D03               	skipz
  3925  0151  295F               	goto	i1l1949
  3926  0152  0020               	banksel	_g_data
  3927  0153  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3928  0154  0020               	movlb	0	; select bank0
  3929  0155  00CC               	movwf	??_receive_decode
  3930  0156  01CD               	clrf	??_receive_decode+1
  3931  0157  0853               	movf	receive_decode@last_time_m+1,w
  3932  0158  064D               	xorwf	??_receive_decode+1,w
  3933  0159  1D03               	skipz
  3934  015A  295D               	goto	u158_25
  3935  015B  0852               	movf	receive_decode@last_time_m,w
  3936  015C  064C               	xorwf	??_receive_decode,w
  3937  015D                     u158_25:	
  3938  015D  1903               	skipnz
  3939  015E  2962               	goto	i1l1951
  3940  015F                     i1l1949:	
  3941                           
  3942                           ;receive_decode.c: 201:         {;receive_decode.c: 202:             update_display();
  3943  015F  3183  23C4  3180   	fcall	_update_display
  3944  0162                     i1l1951:	
  3945                           ;receive_decode.c: 204:     }while(0);
  3946                           
  3947                           ;receive_decode.c: 203:         }
  3948                           
  3949                           
  3950                           ;receive_decode.c: 208:     g_data.g_find_recv_start = FALSE;
  3951  0162  3000               	movlw	0
  3952  0163  0020               	banksel	_g_data
  3953  0164  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3954                           
  3955                           ;receive_decode.c: 210:     g_data.g_isDecoding = FALSE;
  3956  0165  3000               	movlw	0
  3957  0166  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3958                           
  3959                           ;receive_decode.c: 211:     g_data.g_recv_count = CODE_P0;
  3960  0167  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3961  0168  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3962                           
  3963                           ;receive_decode.c: 212:     for(int i = 0;i < 20; i++)
  3964  0169  0020               	movlb	0	; select bank0
  3965  016A  01D4               	clrf	receive_decode@i
  3966  016B  01D5               	clrf	receive_decode@i+1
  3967  016C                     L1:	
  3968  016C  0855               	movf	receive_decode@i+1,w
  3969  016D  3A80               	xorlw	128
  3970  016E  00CC               	movwf	??_receive_decode
  3971  016F  3080               	movlw	128
  3972  0170  024C               	subwf	??_receive_decode,w
  3973  0171  1D03               	skipz
  3974  0172  2975               	goto	u159_25
  3975  0173  3014               	movlw	20
  3976  0174  0254               	subwf	receive_decode@i,w
  3977  0175                     u159_25:	
  3978  0175  1803               	btfsc	3,0
  3979  0176  0008               	return
  3980                           
  3981                           ;receive_decode.c: 213:     {;receive_decode.c: 214:         g_data.g_recv_buf[i] = 5;
  3982  0177  302D               	movlw	low (_g_data+13)
  3983  0178  0020               	movlb	0	; select bank0
  3984  0179  00CC               	movwf	??_receive_decode
  3985  017A  3000               	movlw	high (_g_data+13)
  3986  017B  00CD               	movwf	??_receive_decode+1
  3987  017C  0854               	movf	receive_decode@i,w
  3988  017D  074C               	addwf	??_receive_decode,w
  3989  017E  00CE               	movwf	??_receive_decode+2
  3990  017F  0855               	movf	receive_decode@i+1,w
  3991  0180  3D4D               	addwfc	??_receive_decode+1,w
  3992  0181  00CF               	movwf	??_receive_decode+3
  3993  0182  084E               	movf	??_receive_decode+2,w
  3994  0183  0086               	movwf	6
  3995  0184  084F               	movf	??_receive_decode+3,w
  3996  0185  0087               	movwf	7
  3997  0186  3005               	movlw	5
  3998  0187  0081               	movwf	1
  3999                           
  4000                           ;receive_decode.c: 215:     }
  4001  0188  3001               	movlw	1
  4002  0189  07D4               	addwf	receive_decode@i,f
  4003  018A  3000               	movlw	0
  4004  018B  3DD5               	addwfc	receive_decode@i+1,f
  4005  018C  296C               	goto	L1
  4006  018D                     __end_of_receive_decode:	
  4007                           ;receive_decode.c: 216:     return;
  4008                           
  4009                           
  4010                           	psect	text11
  4011  03C4                     __ptext11:	
  4012 ;; *************** function _update_display *****************
  4013 ;; Defined at:
  4014 ;;		line 62 in file "update_display.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;Total ram usage:        3 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		_write_once
  4037 ;; This function is called by:
  4038 ;;		_receive_decode
  4039 ;;		_update_time
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _update_display
  4045  03C4                     _update_display:	
  4046                           
  4047                           ;update_display.c: 73:     write_once(0xa5, 0x5a, 0xa5, 0x5a);
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  4051  03C4  305A               	movlw	90
  4052  03C5  00FA               	movwf	??_update_display
  4053  03C6  087A               	movf	??_update_display,w
  4054  03C7  00F6               	movwf	write_once@HR
  4055  03C8  30A5               	movlw	165
  4056  03C9  00FB               	movwf	??_update_display+1
  4057  03CA  087B               	movf	??_update_display+1,w
  4058  03CB  00F7               	movwf	write_once@ML
  4059  03CC  305A               	movlw	90
  4060  03CD  00FC               	movwf	??_update_display+2
  4061  03CE  087C               	movf	??_update_display+2,w
  4062  03CF  00F8               	movwf	write_once@MR
  4063  03D0  30A5               	movlw	165
  4064  03D1  3183  239C         	fcall	_write_once
  4065  03D3  0008               	return
  4066  03D4                     __end_of_update_display:	
  4067                           ;update_display.c: 74:     return;
  4068                           
  4069                           
  4070                           	psect	text12
  4071  039C                     __ptext12:	
  4072 ;; *************** function _write_once *****************
  4073 ;; Defined at:
  4074 ;;		line 50 in file "update_display.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  HL              1    wreg     unsigned char 
  4077 ;;  HR              1    6[COMMON] unsigned char 
  4078 ;;  ML              1    7[COMMON] unsigned char 
  4079 ;;  MR              1    8[COMMON] unsigned char 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  HL              1    9[COMMON] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;Total ram usage:        4 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    2
  4098 ;; This function calls:
  4099 ;;		_control595_delay
  4100 ;;		_write_byte
  4101 ;; This function is called by:
  4102 ;;		_update_display
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function _write_once
  4108  039C                     _write_once:	
  4109                           
  4110                           ;incstack = 0
  4111                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  4112                           ;write_once@HL stored from wreg
  4113  039C  00F9               	movwf	write_once@HL
  4114                           
  4115                           ;update_display.c: 52:     write_byte(HL);
  4116  039D  0879               	movf	write_once@HL,w
  4117  039E  3183  2375  3183   	fcall	_write_byte
  4118                           
  4119                           ;update_display.c: 53:     write_byte(HR);
  4120  03A1  0876               	movf	write_once@HR,w
  4121  03A2  3183  2375  3183   	fcall	_write_byte
  4122                           
  4123                           ;update_display.c: 54:     write_byte(ML);
  4124  03A5  0877               	movf	write_once@ML,w
  4125  03A6  3183  2375  3183   	fcall	_write_byte
  4126                           
  4127                           ;update_display.c: 55:     write_byte(MR);
  4128  03A9  0878               	movf	write_once@MR,w
  4129  03AA  3183  2375  3183   	fcall	_write_byte
  4130                           
  4131                           ;update_display.c: 57:     LATBbits.LATB1 = PIN_HIGH;
  4132  03AD  0022               	movlb	2	; select bank2
  4133  03AE  148D               	bsf	13,1	;volatile
  4134                           
  4135                           ;update_display.c: 58:  control595_delay();
  4136  03AF  3183  23EE         	fcall	_control595_delay
  4137                           
  4138                           ;update_display.c: 59:     LATBbits.LATB1 = PIN_LOW;
  4139  03B1  0022               	movlb	2	; select bank2
  4140  03B2  108D               	bcf	13,1	;volatile
  4141  03B3  0008               	return
  4142  03B4                     __end_of_write_once:	
  4143                           
  4144                           	psect	text13
  4145  0375                     __ptext13:	
  4146 ;; *************** function _write_byte *****************
  4147 ;; Defined at:
  4148 ;;		line 38 in file "update_display.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  data            1    wreg     unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  data            1    4[COMMON] unsigned char 
  4153 ;;  i               1    5[COMMON] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;Total ram usage:        4 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    1
  4170 ;; This function calls:
  4171 ;;		_control595_delay
  4172 ;; This function is called by:
  4173 ;;		_write_once
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function _write_byte
  4179  0375                     _write_byte:	
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4183                           ;write_byte@data stored from wreg
  4184  0375  00F4               	movwf	write_byte@data
  4185                           
  4186                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  4187  0376  01F5               	clrf	write_byte@i
  4188  0377                     L2:	
  4189  0377  3008               	movlw	8
  4190  0378  0275               	subwf	write_byte@i,w
  4191  0379  1803               	btfsc	3,0
  4192  037A  0008               	return
  4193                           
  4194                           ;update_display.c: 41:   LATBbits.LATB5 = (data & 0x80) >> 7;
  4195  037B  0874               	movf	write_byte@data,w
  4196  037C  00F2               	movwf	??_write_byte
  4197  037D  3007               	movlw	7
  4198  037E                     u98_25:	
  4199  037E  36F2               	lsrf	??_write_byte,f
  4200  037F  0B89               	decfsz	9,f
  4201  0380  2B7E               	goto	u98_25
  4202  0381  0872               	movf	??_write_byte,w
  4203  0382  3901               	andlw	1
  4204  0383  00F3               	movwf	??_write_byte+1
  4205  0384  0EF3               	swapf	??_write_byte+1,f
  4206  0385  0DF3               	rlf	??_write_byte+1,f
  4207  0386  0022               	movlb	2	; select bank2
  4208  0387  080D               	movf	13,w	;volatile
  4209  0388  0673               	xorwf	??_write_byte+1,w
  4210  0389  39DF               	andlw	-33
  4211  038A  0673               	xorwf	??_write_byte+1,w
  4212  038B  008D               	movwf	13	;volatile
  4213                           
  4214                           ;update_display.c: 42:         LATBbits.LATB0 = PIN_LOW;
  4215  038C  100D               	bcf	13,0	;volatile
  4216                           
  4217                           ;update_display.c: 43:   control595_delay();
  4218  038D  3183  23EE  3183   	fcall	_control595_delay
  4219                           
  4220                           ;update_display.c: 44:         LATBbits.LATB0 = PIN_HIGH;
  4221  0390  0022               	movlb	2	; select bank2
  4222  0391  140D               	bsf	13,0	;volatile
  4223                           
  4224                           ;update_display.c: 45:   control595_delay();
  4225  0392  3183  23EE  3183   	fcall	_control595_delay
  4226                           
  4227                           ;update_display.c: 46:         data <<= 1;
  4228  0395  1003               	clrc
  4229  0396  0DF4               	rlf	write_byte@data,f
  4230                           
  4231                           ;update_display.c: 47:     }
  4232  0397  3001               	movlw	1
  4233  0398  00F2               	movwf	??_write_byte
  4234  0399  0872               	movf	??_write_byte,w
  4235  039A  07F5               	addwf	write_byte@i,f
  4236  039B  2B77               	goto	L2
  4237  039C                     __end_of_write_byte:	
  4238                           
  4239                           	psect	text14
  4240  03EE                     __ptext14:	
  4241 ;; *************** function _control595_delay *****************
  4242 ;; Defined at:
  4243 ;;		line 21 in file "update_display.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  times           1    1[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_write_byte
  4267 ;;		_write_once
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _control595_delay
  4273  03EE                     _control595_delay:	
  4274                           
  4275                           ;update_display.c: 22:    u8 times = 10;
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  4279  03EE  300A               	movlw	10
  4280  03EF  00F0               	movwf	??_control595_delay
  4281  03F0  0870               	movf	??_control595_delay,w
  4282  03F1  00F1               	movwf	control595_delay@times
  4283  03F2                     i1l220:	
  4284                           ;update_display.c: 26:    }
  4285                           
  4286                           ;update_display.c: 23:    while(times > 0){
  4287                           
  4288                           
  4289                           ;update_display.c: 23:    while(times > 0){
  4290  03F2  0871               	movf	control595_delay@times,w
  4291  03F3  1903               	btfsc	3,2
  4292  03F4  0008               	return
  4293                           
  4294                           ;update_display.c: 24:     __nop();
  4295  03F5  0000               	nop
  4296                           
  4297                           ;update_display.c: 25:        times--;
  4298  03F6  3001               	movlw	1
  4299  03F7  02F1               	subwf	control595_delay@times,f
  4300  03F8  2BF2               	goto	i1l220
  4301  03F9                     __end_of_control595_delay:	
  4302                           
  4303                           	psect	text15
  4304  0281                     __ptext15:	
  4305 ;; *************** function _times2number *****************
  4306 ;; Defined at:
  4307 ;;		line 15 in file "receive_decode.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  high_level_t    2    0[COMMON] unsigned short 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_receive_decode
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           
  4335                           ;psect for function _times2number
  4336  0281                     _times2number:	
  4337                           
  4338                           ;receive_decode.c: 16:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in _times2number: [wreg]
  4342  0281  3000               	movlw	0
  4343  0282  0271               	subwf	times2number@high_level_times+1,w
  4344  0283  3005               	movlw	5
  4345  0284  1903               	skipnz
  4346  0285  0270               	subwf	times2number@high_level_times,w
  4347  0286  1C03               	skipc
  4348  0287  2A91               	goto	i1l1579
  4349  0288  3000               	movlw	0
  4350  0289  0271               	subwf	times2number@high_level_times+1,w
  4351  028A  300F               	movlw	15
  4352  028B  1903               	skipnz
  4353  028C  0270               	subwf	times2number@high_level_times,w
  4354  028D  1803               	skipnc
  4355  028E  2A91               	goto	i1l1579
  4356                           
  4357                           ;receive_decode.c: 18:         return 0;
  4358  028F  3000               	movlw	0
  4359                           
  4360                           ;receive_decode.c: 19:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  4361  0290  0008               	return
  4362  0291                     i1l1579:	
  4363  0291  3000               	movlw	0
  4364  0292  0271               	subwf	times2number@high_level_times+1,w
  4365  0293  300F               	movlw	15
  4366  0294  1903               	skipnz
  4367  0295  0270               	subwf	times2number@high_level_times,w
  4368  0296  1C03               	skipc
  4369  0297  2AA1               	goto	i1l1589
  4370  0298  3000               	movlw	0
  4371  0299  0271               	subwf	times2number@high_level_times+1,w
  4372  029A  3019               	movlw	25
  4373  029B  1903               	skipnz
  4374  029C  0270               	subwf	times2number@high_level_times,w
  4375  029D  1803               	skipnc
  4376  029E  2AA1               	goto	i1l1589
  4377                           
  4378                           ;receive_decode.c: 21:         return 1;
  4379  029F  3001               	movlw	1
  4380                           
  4381                           ;receive_decode.c: 22:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  4382  02A0  0008               	return
  4383  02A1                     i1l1589:	
  4384  02A1  3000               	movlw	0
  4385  02A2  0271               	subwf	times2number@high_level_times+1,w
  4386  02A3  3019               	movlw	25
  4387  02A4  1903               	skipnz
  4388  02A5  0270               	subwf	times2number@high_level_times,w
  4389  02A6  1C03               	skipc
  4390  02A7  2AB1               	goto	i1l1599
  4391  02A8  3000               	movlw	0
  4392  02A9  0271               	subwf	times2number@high_level_times+1,w
  4393  02AA  3023               	movlw	35
  4394  02AB  1903               	skipnz
  4395  02AC  0270               	subwf	times2number@high_level_times,w
  4396  02AD  1803               	skipnc
  4397  02AE  2AB1               	goto	i1l1599
  4398                           
  4399                           ;receive_decode.c: 24:         return 2;
  4400  02AF  3002               	movlw	2
  4401                           
  4402                           ;receive_decode.c: 25:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  4403  02B0  0008               	return
  4404  02B1                     i1l1599:	
  4405  02B1  3000               	movlw	0
  4406  02B2  0271               	subwf	times2number@high_level_times+1,w
  4407  02B3  3023               	movlw	35
  4408  02B4  1903               	skipnz
  4409  02B5  0270               	subwf	times2number@high_level_times,w
  4410  02B6  1C03               	skipc
  4411  02B7  2AC1               	goto	i1l1609
  4412  02B8  3000               	movlw	0
  4413  02B9  0271               	subwf	times2number@high_level_times+1,w
  4414  02BA  302D               	movlw	45
  4415  02BB  1903               	skipnz
  4416  02BC  0270               	subwf	times2number@high_level_times,w
  4417  02BD  1803               	skipnc
  4418  02BE  2AC1               	goto	i1l1609
  4419                           
  4420                           ;receive_decode.c: 27:         return 3;
  4421  02BF  3003               	movlw	3
  4422                           
  4423                           ;receive_decode.c: 28:     }else if(high_level_times >= 40 + 5){
  4424  02C0  0008               	return
  4425  02C1                     i1l1609:	
  4426  02C1  3000               	movlw	0
  4427  02C2  0271               	subwf	times2number@high_level_times+1,w
  4428  02C3  302D               	movlw	45
  4429  02C4  1903               	skipnz
  4430  02C5  0270               	subwf	times2number@high_level_times,w
  4431  02C6  1C03               	skipc
  4432  02C7  2ACA               	goto	i1l1617
  4433                           
  4434                           ;receive_decode.c: 30:         return 4;
  4435  02C8  3004               	movlw	4
  4436                           
  4437                           ;receive_decode.c: 31:     }else{
  4438  02C9  0008               	return
  4439  02CA                     i1l1617:	
  4440                           
  4441                           ;receive_decode.c: 33:         return 5;
  4442  02CA  3005               	movlw	5
  4443                           
  4444                           ;receive_decode.c: 34:     }
  4445  02CB  0008               	return
  4446  02CC                     __end_of_times2number:	
  4447                           
  4448                           	psect	text16
  4449  030E                     __ptext16:	
  4450 ;; *************** function _test_get_number *****************
  4451 ;; Defined at:
  4452 ;;		line 38 in file "receive_decode.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  get_num         1    wreg     unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  get_num         1    0[COMMON] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;Total ram usage:        1 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_receive_decode
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _test_get_number
  4481  030E                     _test_get_number:	
  4482                           
  4483                           ;incstack = 0
  4484                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  4485                           ;test_get_number@get_num stored from wreg
  4486  030E  00F0               	movwf	test_get_number@get_num
  4487                           
  4488                           ;receive_decode.c: 39:     if(get_num == 0){
  4489  030F  0870               	movf	test_get_number@get_num,w
  4490  0310  1D03               	btfss	3,2
  4491  0311  2B18               	goto	i1l1625
  4492                           
  4493                           ;receive_decode.c: 40:         LATAbits.LATA2 = 1;
  4494  0312  0022               	movlb	2	; select bank2
  4495  0313  150C               	bsf	12,2	;volatile
  4496                           
  4497                           ;receive_decode.c: 41:         LATAbits.LATA3 = 0;
  4498  0314  118C               	bcf	12,3	;volatile
  4499                           
  4500                           ;receive_decode.c: 42:         LATAbits.LATA4 = 0;
  4501  0315  120C               	bcf	12,4	;volatile
  4502                           
  4503                           ;receive_decode.c: 43:         LATAbits.LATA5 = 0;
  4504  0316  128C               	bcf	12,5	;volatile
  4505                           
  4506                           ;receive_decode.c: 44:     }else if(get_num == 1){
  4507  0317  0008               	return
  4508  0318                     i1l1625:	
  4509  0318  0370               	decf	test_get_number@get_num,w
  4510  0319  1D03               	btfss	3,2
  4511  031A  2B21               	goto	i1l1629
  4512                           
  4513                           ;receive_decode.c: 45:         LATAbits.LATA2 = 0;
  4514  031B  0022               	movlb	2	; select bank2
  4515  031C  110C               	bcf	12,2	;volatile
  4516                           
  4517                           ;receive_decode.c: 46:         LATAbits.LATA3 = 1;
  4518  031D  158C               	bsf	12,3	;volatile
  4519                           
  4520                           ;receive_decode.c: 47:         LATAbits.LATA4 = 0;
  4521  031E  120C               	bcf	12,4	;volatile
  4522                           
  4523                           ;receive_decode.c: 48:         LATAbits.LATA5 = 0;
  4524  031F  128C               	bcf	12,5	;volatile
  4525                           
  4526                           ;receive_decode.c: 49:     }else if(get_num == 2){
  4527  0320  0008               	return
  4528  0321                     i1l1629:	
  4529  0321  3002               	movlw	2
  4530  0322  0670               	xorwf	test_get_number@get_num,w
  4531  0323  1D03               	btfss	3,2
  4532  0324  2B2B               	goto	i1l1633
  4533                           
  4534                           ;receive_decode.c: 50:         LATAbits.LATA2 = 0;
  4535  0325  0022               	movlb	2	; select bank2
  4536  0326  110C               	bcf	12,2	;volatile
  4537                           
  4538                           ;receive_decode.c: 51:         LATAbits.LATA3 = 0;
  4539  0327  118C               	bcf	12,3	;volatile
  4540                           
  4541                           ;receive_decode.c: 52:         LATAbits.LATA4 = 1;
  4542  0328  160C               	bsf	12,4	;volatile
  4543                           
  4544                           ;receive_decode.c: 53:         LATAbits.LATA5 = 0;
  4545  0329  128C               	bcf	12,5	;volatile
  4546                           
  4547                           ;receive_decode.c: 54:     }else if(get_num == 3){
  4548  032A  0008               	return
  4549  032B                     i1l1633:	
  4550  032B  3003               	movlw	3
  4551  032C  0670               	xorwf	test_get_number@get_num,w
  4552  032D  1D03               	btfss	3,2
  4553  032E  2B35               	goto	i1l1637
  4554                           
  4555                           ;receive_decode.c: 55:         LATAbits.LATA2 = 0;
  4556  032F  0022               	movlb	2	; select bank2
  4557  0330  110C               	bcf	12,2	;volatile
  4558                           
  4559                           ;receive_decode.c: 56:         LATAbits.LATA3 = 0;
  4560  0331  118C               	bcf	12,3	;volatile
  4561                           
  4562                           ;receive_decode.c: 57:         LATAbits.LATA4 = 0;
  4563  0332  120C               	bcf	12,4	;volatile
  4564                           
  4565                           ;receive_decode.c: 58:         LATAbits.LATA5 = 1;
  4566  0333  168C               	bsf	12,5	;volatile
  4567                           
  4568                           ;receive_decode.c: 59:     }else if(get_num == 4){
  4569  0334  0008               	return
  4570  0335                     i1l1637:	
  4571  0335  3004               	movlw	4
  4572  0336  0670               	xorwf	test_get_number@get_num,w
  4573  0337  1D03               	btfss	3,2
  4574  0338  2B3F               	goto	i1l1641
  4575                           
  4576                           ;receive_decode.c: 60:         LATAbits.LATA2 = 1;
  4577  0339  0022               	movlb	2	; select bank2
  4578  033A  150C               	bsf	12,2	;volatile
  4579                           
  4580                           ;receive_decode.c: 61:         LATAbits.LATA3 = 1;
  4581  033B  158C               	bsf	12,3	;volatile
  4582                           
  4583                           ;receive_decode.c: 62:         LATAbits.LATA4 = 1;
  4584  033C  160C               	bsf	12,4	;volatile
  4585                           
  4586                           ;receive_decode.c: 63:         LATAbits.LATA5 = 1;
  4587  033D  168C               	bsf	12,5	;volatile
  4588                           
  4589                           ;receive_decode.c: 64:     }else if(get_num == 5){
  4590  033E  0008               	return
  4591  033F                     i1l1641:	
  4592  033F  3005               	movlw	5
  4593  0340  0670               	xorwf	test_get_number@get_num,w
  4594  0341  1D03               	btfss	3,2
  4595  0342  0008               	return
  4596                           
  4597                           ;receive_decode.c: 65:         LATAbits.LATA2 = 0;
  4598  0343  0022               	movlb	2	; select bank2
  4599  0344  110C               	bcf	12,2	;volatile
  4600                           
  4601                           ;receive_decode.c: 66:         LATAbits.LATA3 = 0;
  4602  0345  118C               	bcf	12,3	;volatile
  4603                           
  4604                           ;receive_decode.c: 67:         LATAbits.LATA4 = 0;
  4605  0346  120C               	bcf	12,4	;volatile
  4606                           
  4607                           ;receive_decode.c: 68:         LATAbits.LATA5 = 0;
  4608  0347  128C               	bcf	12,5	;volatile
  4609                           
  4610                           ;receive_decode.c: 69:     }
  4611  0348  0008               	return
  4612  0349                     __end_of_test_get_number:	
  4613                           
  4614                           	psect	text17
  4615  018D                     __ptext17:	
  4616 ;; *************** function _check_err *****************
  4617 ;; Defined at:
  4618 ;;		line 73 in file "receive_decode.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  i               1   11[COMMON] unsigned char 
  4623 ;;  check           1   12[COMMON] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  2    0[COMMON] int 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;Total ram usage:       13 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_receive_decode
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _check_err
  4648  018D                     _check_err:	
  4649                           
  4650                           ;receive_decode.c: 75:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g_
      +                          recv_buf[CODE_H_2];
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _check_err: [wreg+fsr1l+fsr1h+status,2+status,0]
  4654  018D  0020               	banksel	_g_data
  4655  018E  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  4656  018F  00F2               	movwf	??_check_err
  4657  0190  3002               	movlw	2
  4658  0191                     u115_25:	
  4659  0191  35F2               	lslf	??_check_err,f
  4660  0192  0B89               	decfsz	9,f
  4661  0193  2991               	goto	u115_25
  4662  0194  0020               	banksel	_g_data
  4663  0195  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  4664  0196  0772               	addwf	??_check_err,w
  4665  0197  00F3               	movwf	??_check_err+1
  4666  0198  0873               	movf	??_check_err+1,w
  4667  0199  0020               	banksel	_g_data
  4668  019A  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  4669                           
  4670                           ;receive_decode.c: 76:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.g
      +                          _recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  4671  019B  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  4672  019C  00F2               	movwf	??_check_err
  4673  019D  3004               	movlw	4
  4674  019E                     u116_25:	
  4675  019E  35F2               	lslf	??_check_err,f
  4676  019F  0B89               	decfsz	9,f
  4677  01A0  299E               	goto	u116_25
  4678  01A1  0020               	banksel	_g_data
  4679  01A2  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  4680  01A3  00F3               	movwf	??_check_err+1
  4681  01A4  3001               	movlw	1
  4682  01A5                     u117_25:	
  4683  01A5  35F3               	lslf	??_check_err+1,f
  4684  01A6  3EFF               	addlw	-1
  4685  01A7  1D03               	skipz
  4686  01A8  29A5               	goto	u117_25
  4687  01A9  3573               	lslf	??_check_err+1,w
  4688  01AA  0772               	addwf	??_check_err,w
  4689  01AB  00F4               	movwf	??_check_err+2
  4690  01AC  0020               	banksel	_g_data
  4691  01AD  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  4692  01AE  0774               	addwf	??_check_err+2,w
  4693  01AF  00F5               	movwf	??_check_err+3
  4694  01B0  0875               	movf	??_check_err+3,w
  4695  01B1  0020               	banksel	_g_data
  4696  01B2  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  4697                           
  4698                           ;receive_decode.c: 77:     u8 check = 0;
  4699  01B3  01FC               	clrf	check_err@check
  4700                           
  4701                           ;receive_decode.c: 78:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  4702  01B4  01FB               	clrf	check_err@i
  4703  01B5  0AFB               	incf	check_err@i,f
  4704  01B6  300A               	movlw	10
  4705  01B7  027B               	subwf	check_err@i,w
  4706  01B8  1803               	btfsc	3,0
  4707  01B9  29D3               	goto	i1l1661
  4708  01BA                     i1l1655:	
  4709                           
  4710                           ;receive_decode.c: 79:     {;receive_decode.c: 80:         check ^= g_data.g_recv_buf[i]
      +                          ;
  4711  01BA  087B               	movf	check_err@i,w
  4712  01BB  00F2               	movwf	??_check_err
  4713  01BC  01F3               	clrf	??_check_err+1
  4714  01BD  302D               	movlw	low (_g_data+13)
  4715  01BE  00F4               	movwf	??_check_err+2
  4716  01BF  3000               	movlw	high (_g_data+13)
  4717  01C0  00F5               	movwf	??_check_err+3
  4718  01C1  0872               	movf	??_check_err,w
  4719  01C2  0774               	addwf	??_check_err+2,w
  4720  01C3  0086               	movwf	6
  4721  01C4  0873               	movf	??_check_err+1,w
  4722  01C5  3D75               	addwfc	??_check_err+3,w
  4723  01C6  0087               	movwf	7
  4724  01C7  0801               	movf	1,w
  4725  01C8  00F6               	movwf	??_check_err+4
  4726  01C9  0876               	movf	??_check_err+4,w
  4727  01CA  06FC               	xorwf	check_err@check,f
  4728                           
  4729                           ;receive_decode.c: 81:     }
  4730  01CB  3001               	movlw	1
  4731  01CC  00F2               	movwf	??_check_err
  4732  01CD  0872               	movf	??_check_err,w
  4733  01CE  07FB               	addwf	check_err@i,f
  4734  01CF  300A               	movlw	10
  4735  01D0  027B               	subwf	check_err@i,w
  4736  01D1  1C03               	skipc
  4737  01D2  29BA               	goto	i1l1655
  4738  01D3                     i1l1661:	
  4739                           
  4740                           ;receive_decode.c: 82:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[CO
      +                          DE_P3] % 2 == 0) )
  4741  01D3  087C               	movf	check_err@check,w
  4742  01D4  1903               	btfsc	3,2
  4743  01D5  29DA               	goto	i1l148
  4744  01D6  3003               	movlw	3
  4745  01D7  067C               	xorwf	check_err@check,w
  4746  01D8  1D03               	btfss	3,2
  4747  01D9  29EA               	goto	i1l1673
  4748  01DA                     i1l148:	
  4749  01DA  0020               	banksel	_g_data
  4750  01DB  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  4751  01DC  29EA               	goto	i1l1673
  4752                           
  4753                           ;receive_decode.c: 83:     {;receive_decode.c: 84:         g_data.g_time_h += (2 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4754  01DD  3002               	movlw	2
  4755  01DE  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4756  01DF  1903               	btfsc	3,2
  4757  01E0  29E4               	goto	i1l1669
  4758  01E1  01F7               	clrf	_check_err$597
  4759  01E2  01F8               	clrf	_check_err$597+1
  4760  01E3  29E8               	goto	i1l1671
  4761  01E4                     i1l1669:	
  4762  01E4  300C               	movlw	12
  4763  01E5  00F7               	movwf	_check_err$597
  4764  01E6  3000               	movlw	0
  4765  01E7  00F8               	movwf	_check_err$597+1
  4766  01E8                     i1l1671:	
  4767  01E8  0877               	movf	_check_err$597,w
  4768  01E9  2A05               	goto	L3
  4769  01EA                     i1l1673:	
  4770                           ;receive_decode.c: 85:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_recv
      +                          _buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  4771                           
  4772  01EA  037C               	decf	check_err@check,w
  4773  01EB  1903               	btfsc	3,2
  4774  01EC  29F1               	goto	i1l1677
  4775  01ED  3002               	movlw	2
  4776  01EE  067C               	xorwf	check_err@check,w
  4777  01EF  1D03               	btfss	3,2
  4778  01F0  2A0A               	goto	i1l154
  4779  01F1                     i1l1677:	
  4780  01F1  0020               	banksel	_g_data
  4781  01F2  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  4782  01F3  1903               	btfsc	3,2
  4783  01F4  29F9               	goto	i1l1681
  4784  01F5  3003               	movlw	3
  4785  01F6  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4786  01F7  1D03               	btfss	3,2
  4787  01F8  2A0A               	goto	i1l154
  4788  01F9                     i1l1681:	
  4789                           
  4790                           ;receive_decode.c: 87:     {;receive_decode.c: 88:         g_data.g_time_h += (3 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4791  01F9  3003               	movlw	3
  4792  01FA  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4793  01FB  1903               	btfsc	3,2
  4794  01FC  2A00               	goto	i1l1685
  4795  01FD  01F9               	clrf	_check_err$598
  4796  01FE  01FA               	clrf	_check_err$598+1
  4797  01FF  2A04               	goto	i1l1687
  4798  0200                     i1l1685:	
  4799  0200  300C               	movlw	12
  4800  0201  00F9               	movwf	_check_err$598
  4801  0202  3000               	movlw	0
  4802  0203  00FA               	movwf	_check_err$598+1
  4803  0204                     i1l1687:	
  4804  0204  0879               	movf	_check_err$598,w
  4805  0205                     L3:	
  4806  0205  00F2               	movwf	??_check_err
  4807  0206  0872               	movf	??_check_err,w
  4808  0207  0020               	banksel	_g_data
  4809  0208  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  4810                           
  4811                           ;receive_decode.c: 89:     }
  4812  0209  2A16               	goto	i1l1695
  4813  020A                     i1l154:	
  4814                           ;receive_decode.c: 90:     else
  4815                           
  4816                           
  4817                           ;receive_decode.c: 91:     {;receive_decode.c: 92:         g_data.g_find_recv_start = FA
      +                          LSE;
  4818  020A  3000               	movlw	0
  4819  020B  0020               	banksel	_g_data
  4820  020C  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  4821                           
  4822                           ;receive_decode.c: 93:         g_data.g_isDecoding = 0;
  4823  020D  3000               	movlw	0
  4824  020E  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  4825                           
  4826                           ;receive_decode.c: 94:         g_data.g_recv_count = 0;
  4827  020F  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  4828  0210  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  4829                           
  4830                           ;receive_decode.c: 95:         return -1;
  4831  0211  30FF               	movlw	255
  4832  0212  00F0               	movwf	?_check_err
  4833  0213  30FF               	movlw	255
  4834  0214  00F1               	movwf	?_check_err+1
  4835  0215  0008               	return
  4836  0216                     i1l1695:	
  4837                           ;receive_decode.c: 96:     }
  4838                           
  4839                           
  4840                           ;receive_decode.c: 97:     return 0;
  4841  0216  01F0               	clrf	?_check_err
  4842  0217  01F1               	clrf	?_check_err+1
  4843  0218  0008               	return
  4844  0219                     __end_of_check_err:	
  4845                           
  4846                           	psect	text18
  4847  0349                     __ptext18:	
  4848 ;; *************** function ___lwmod *****************
  4849 ;; Defined at:
  4850 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  divisor         2    0[COMMON] unsigned int 
  4853 ;;  dividend        2    2[COMMON] unsigned int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  counter         1    5[COMMON] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  2    0[COMMON] unsigned int 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;Total ram usage:        6 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_ISR
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function ___lwmod
  4880  0349                     ___lwmod:	
  4881                           
  4882                           ;incstack = 0
  4883                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4884  0349  0870               	movf	___lwmod@divisor,w
  4885  034A  0471               	iorwf	___lwmod@divisor+1,w
  4886  034B  1903               	btfsc	3,2
  4887  034C  2B70               	goto	i1l2031
  4888  034D  01F5               	clrf	___lwmod@counter
  4889  034E  0AF5               	incf	___lwmod@counter,f
  4890  034F                     i1l2021:	
  4891  034F  1BF1               	btfsc	___lwmod@divisor+1,7
  4892  0350  2B5B               	goto	i1l2023
  4893  0351  3001               	movlw	1
  4894  0352                     u169_25:	
  4895  0352  35F0               	lslf	___lwmod@divisor,f
  4896  0353  0DF1               	rlf	___lwmod@divisor+1,f
  4897  0354  0B89               	decfsz	9,f
  4898  0355  2B52               	goto	u169_25
  4899  0356  3001               	movlw	1
  4900  0357  00F4               	movwf	??___lwmod
  4901  0358  0874               	movf	??___lwmod,w
  4902  0359  07F5               	addwf	___lwmod@counter,f
  4903  035A  2B4F               	goto	i1l2021
  4904  035B                     i1l2023:	
  4905  035B  0871               	movf	___lwmod@divisor+1,w
  4906  035C  0273               	subwf	___lwmod@dividend+1,w
  4907  035D  1D03               	skipz
  4908  035E  2B61               	goto	u171_25
  4909  035F  0870               	movf	___lwmod@divisor,w
  4910  0360  0272               	subwf	___lwmod@dividend,w
  4911  0361                     u171_25:	
  4912  0361  1C03               	skipc
  4913  0362  2B67               	goto	i1l2027
  4914  0363  0870               	movf	___lwmod@divisor,w
  4915  0364  02F2               	subwf	___lwmod@dividend,f
  4916  0365  0871               	movf	___lwmod@divisor+1,w
  4917  0366  3BF3               	subwfb	___lwmod@dividend+1,f
  4918  0367                     i1l2027:	
  4919  0367  3001               	movlw	1
  4920  0368                     u172_25:	
  4921  0368  36F1               	lsrf	___lwmod@divisor+1,f
  4922  0369  0CF0               	rrf	___lwmod@divisor,f
  4923  036A  0B89               	decfsz	9,f
  4924  036B  2B68               	goto	u172_25
  4925  036C  3001               	movlw	1
  4926  036D  02F5               	subwf	___lwmod@counter,f
  4927  036E  1D03               	btfss	3,2
  4928  036F  2B5B               	goto	i1l2023
  4929  0370                     i1l2031:	
  4930  0370  0873               	movf	___lwmod@dividend+1,w
  4931  0371  00F1               	movwf	?___lwmod+1
  4932  0372  0872               	movf	___lwmod@dividend,w
  4933  0373  00F0               	movwf	?___lwmod
  4934  0374  0008               	return
  4935  0375                     __end_of___lwmod:	
  4936  007E                     btemp	set	126	;btemp
  4937  007E                     int$flags	set	126
  4938  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      60
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_check_err
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
                        _timer_start
 ---------------------------------------------------------------------------------
 (1) _timer_start                                          0     0      0       0
                        _timer_reset
 ---------------------------------------------------------------------------------
 (2) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                             13 BANK0      3     3      0
                           _IIC_Init
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    2036
                                             11 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
                      i1_timer_reset
                      i1_timer_start
 ---------------------------------------------------------------------------------
 (4) i1_timer_start                                        0     0      0       0
                      i1_timer_reset
 ---------------------------------------------------------------------------------
 (5) i1_timer_reset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             13 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      11    11      0    1292
                                              0 BANK0     11    11      0
                          _check_err
                    _test_get_number
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       3     3      0     433
                                             10 COMMON     3     3      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _check_err                                           13    11      2     206
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init
     _timer_init
   _timer_start
     _timer_reset

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _check_err
     _test_get_number
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   i1_timer_reset
   i1_timer_start
     i1_timer_reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun May 12 20:04:25 2019

             ?_receive_decode 0070                   _update_time 02CC                   __CFG_CP$OFF 0000  
                          l70 0274                _update_display 03C4                   __CFG_LVP$ON 0000  
                         l101 03FF             ?_control595_delay 0070                           _GIE 005F  
                         _RC4 0074                  __CFG_CPD$OFF 0000                           _ISR 0004  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000         __end_ofi1_timer_reset 0410  
                        ?_ISR 0070         __end_ofi1_timer_start 0418                          l1855 025C  
                        u1405 025A                          _LATA 010C                          _LATB 010D  
                        u1415 0272                          _LATC 010E                          _ENUM 004B  
                        i1l90 003F                          i1l83 0085                          i1l84 0042  
                        i1l85 003A                          _TMR0 0015                          _WPUA 020C  
                        _WPUB 020D                          _WPUC 020E                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _Temp 0043                          _main 03F9  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 0087  
               __CFG_MCLRE$ON 0000                         ??_ISR 0057        __end_of_update_display 03D4  
            __end_of_IIC_Init 03EE                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _LATC3 0873                         _LATC4 0874  
                       _IOCAN 0392                         _IOCAP 0391                         _IOCBN 0395  
                       _IOCBP 0394                         _IOCCN 0398                         _IOCCP 0397  
                       i1l220 03F2                         i1l154 020A                         i1l148 01DA  
             __end_of___lwmod 0375                         i1l169 00A1                         _TRISA 008C  
                       _TRISB 008D                         _TRISC 008E                         _WPUC3 1073  
                       _WPUC4 1074                         u98_25 037E                write_byte@data 0074  
                       status 0003                         wtemp0 007E               __initialization 0089  
                __end_of_main 0400               ?_update_display 0070                __CFG_LPBOR$OFF 0000  
                      ??_main 005C                        i1l2021 034F                        i1l2101 0083  
                      i1l2023 035B                        i1l2031 0370                        i1l2027 0367  
                      i1l2045 0014                        i1l2065 0023                        i1l2075 0036  
                      i1l2085 004F                        i1l2087 0052                        i1l1641 033F  
                      i1l1633 032B                        i1l1625 0318                        i1l1617 02CA  
                      i1l1609 02C1                        i1l1661 01D3                        i1l1637 0335  
                      i1l1629 0321                        i1l1671 01E8                        i1l1655 01BA  
                      i1l1681 01F9                        i1l1673 01EA                        i1l1579 0291  
                      i1l1685 0200                        i1l1677 01F1                        i1l1669 01E4  
                      i1l1589 02A1                        i1l1917 00EE                        i1l1687 0204  
                      i1l1695 0216                        i1l1599 02B1                        i1l1951 0162  
                      i1l1945 0145                        i1l1881 00AC                        i1l1939 0124  
                      i1l1883 00B0                        u115_25 0191                        i1l1949 015F  
                      i1l1893 00BF                        i1l1973 02D8                        i1l1977 02DF  
                      i1l1899 00C8                        u116_25 019E                        i1l1997 030B  
                      u117_25 01A5                        u171_25 0361                        u172_25 0368  
                      u157_25 0150                        u158_25 015D                        u159_25 0175  
                      u169_25 0352                        _TRISC3 0473                        _TRISC4 0474  
              __CFG_PWRTE$OFF 0000                        _g_data 0020                __CFG_STVREN$ON 0000  
                   ??___lwmod 0074              __end_of_init_env 0281                        _temp_h 0048  
                      _temp_l 0047              __end_of_segmcode 03C4  times2number@high_level_times 0070  
                ?_timer_reset 0070                  ?_timer_start 0070      __size_of_test_get_number 003B  
     __end_of__initialization 0090                     ?_IIC_Init 0070              ??_receive_decode 004C  
              __pcstackCOMMON 0070                  ?_update_time 0070         control595_delay@times 0071  
          __size_of_check_err 008C                _OPTION_REGbits 0095                    __pbssBANK0 0020  
                  ??_IIC_Init 0059     __size_of_control595_delay 000B               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 03F9                    __pintentry 0004                ISR@history_key 004A  
                     _ODCONC3 1473                       _ODCONC4 1474             __end_of_check_err 0219  
                   ?_init_env 0070              ??_update_display 007A             ??_test_get_number 0070  
                     ___lwmod 0349        __size_ofi1_timer_reset 0005                    check_err@i 007B  
      __size_ofi1_timer_start 0004                       __ptext1 0410                       __ptext2 0406  
                     __ptext3 0219                       __ptext4 03D4                       __ptext5 03E1  
                     __ptext7 0414                       __ptext8 040B                       __ptext9 02CC  
                __size_of_ISR 0083                 ?_times2number 0070                     _IOCCFbits 0399  
                   _IOCCPbits 0397                       clrloop0 0401          end_of_initialization 0090  
        __size_of_timer_reset 0005          __size_of_timer_start 0004                    ??_init_env 0059  
        __size_of_update_time 0042                    _timer_init 03D4                     _PORTAbits 000C  
                   _PORTCbits 000E                ??_times2number 0072                     _TRISCbits 008E  
               _check_err$597 0077                 _check_err$598 0079                 i1_timer_reset 040B  
               i1_timer_start 0414              _control595_delay 03EE             __size_of_IIC_Init 000D  
                write_once@HL 0079                  write_once@HR 0076                  write_once@ML 0077  
                write_once@MR 0078                    _write_byte 0375                    _write_once 039C  
    receive_decode@read_value 0056           start_initialization 0089         receive_decode@cnt_low 0049  
                 __end_of_ISR 0087                ?i1_timer_reset 0070                ?i1_timer_start 0070  
              check_err@check 007C               receive_decode@i 0054                   ?_timer_init 0070  
                   ___latbits 0002                 __pcstackBANK0 004C               _test_get_number 030E  
                   _check_err 018D             __size_of_init_env 0068     receive_decode@last_time_h 0050  
   receive_decode@last_time_m 0052          __end_of_times2number 02CC                      ?___lwmod 0070  
     __size_of_receive_decode 00F9                   ?_write_byte 0070                   ?_write_once 0076  
             ISR@key_time_cnt 0045               ??i1_timer_reset 0070               ??i1_timer_start 0070  
                    _IIC_Init 03E1                      _LATAbits 010C                      _LATBbits 010D  
         __size_of_timer_init 000D                    ?_check_err 0070                     clear_ram0 0400  
    __end_of_control595_delay 03F9       __end_of_test_get_number 0349                      _WPUCbits 020E  
                 write_byte@i 0075                 ??_timer_reset 0059                 ??_timer_start 0059  
         __size_of_write_byte 0027           __size_of_write_once 0018        test_get_number@get_num 0070  
               ??_update_time 007D                     init_env@i 005A              __size_of___lwmod 002C  
     __size_of_update_display 0010                      __ptext10 0094                      __ptext11 03C4  
                    __ptext12 039C                      __ptext13 0375                      __ptext14 03EE  
                    __ptext15 0281                      __ptext16 030E                      __ptext17 018D  
                    __ptext18 0349         __size_of_times2number 004B                      _init_env 0219  
               __size_of_main 0007           __end_of_timer_reset 040B           __end_of_timer_start 0414  
                 ??_check_err 0072                      _segmcode 03B4                      int$flags 007E  
              _receive_decode 0094                  ??_timer_init 0059           __end_of_update_time 030E  
            ?_test_get_number 0070                    _INTCONbits 000B                  _times2number 0281  
                    intlevel1 0000              ___lwmod@dividend 0072             __CFG_CLKOUTEN$OFF 0000  
          __end_of_timer_init 03E1                    _OSCCONbits 0099        __end_of_receive_decode 018D  
                ??_write_byte 0072                  ??_write_once 0079                 __pstringtext1 03B4  
             ___lwmod@divisor 0070               ___lwmod@counter 0075                   _timer_reset 0406  
                 _timer_start 0410            __end_of_write_byte 039C            __end_of_write_once 03B4  

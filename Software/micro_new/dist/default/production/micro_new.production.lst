

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri May 03 15:57:55 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.00
    27                           ; Generated 27/05/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1786 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  038C                     	;# 
   205  038D                     	;# 
   206  038E                     	;# 
   207  0390                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0511                     	;# 
   221  0513                     	;# 
   222  051A                     	;# 
   223  0811                     	;# 
   224  0812                     	;# 
   225  0813                     	;# 
   226  0814                     	;# 
   227  0815                     	;# 
   228  0816                     	;# 
   229  0817                     	;# 
   230  0818                     	;# 
   231  0819                     	;# 
   232  081A                     	;# 
   233  081B                     	;# 
   234  081C                     	;# 
   235  081D                     	;# 
   236  081E                     	;# 
   237  081F                     	;# 
   238  0820                     	;# 
   239  0821                     	;# 
   240  0821                     	;# 
   241  0822                     	;# 
   242  0823                     	;# 
   243  0823                     	;# 
   244  0824                     	;# 
   245  0825                     	;# 
   246  0825                     	;# 
   247  0826                     	;# 
   248  0827                     	;# 
   249  0827                     	;# 
   250  0828                     	;# 
   251  0829                     	;# 
   252  082A                     	;# 
   253  082B                     	;# 
   254  082C                     	;# 
   255  082D                     	;# 
   256  082E                     	;# 
   257  082F                     	;# 
   258  0831                     	;# 
   259  0832                     	;# 
   260  0833                     	;# 
   261  0834                     	;# 
   262  0835                     	;# 
   263  0836                     	;# 
   264  0837                     	;# 
   265  0838                     	;# 
   266  0839                     	;# 
   267  083A                     	;# 
   268  083B                     	;# 
   269  083C                     	;# 
   270  083D                     	;# 
   271  083E                     	;# 
   272  083F                     	;# 
   273  0840                     	;# 
   274  0841                     	;# 
   275  0841                     	;# 
   276  0842                     	;# 
   277  0843                     	;# 
   278  0843                     	;# 
   279  0844                     	;# 
   280  0845                     	;# 
   281  0845                     	;# 
   282  0846                     	;# 
   283  0847                     	;# 
   284  0847                     	;# 
   285  0848                     	;# 
   286  0849                     	;# 
   287  084A                     	;# 
   288  084B                     	;# 
   289  084C                     	;# 
   290  084D                     	;# 
   291  084E                     	;# 
   292  084F                     	;# 
   293  0851                     	;# 
   294  0852                     	;# 
   295  0853                     	;# 
   296  0854                     	;# 
   297  0855                     	;# 
   298  0856                     	;# 
   299  0857                     	;# 
   300  0858                     	;# 
   301  0859                     	;# 
   302  085A                     	;# 
   303  085B                     	;# 
   304  085C                     	;# 
   305  085D                     	;# 
   306  085E                     	;# 
   307  085F                     	;# 
   308  0860                     	;# 
   309  0861                     	;# 
   310  0861                     	;# 
   311  0862                     	;# 
   312  0863                     	;# 
   313  0863                     	;# 
   314  0864                     	;# 
   315  0865                     	;# 
   316  0865                     	;# 
   317  0866                     	;# 
   318  0867                     	;# 
   319  0867                     	;# 
   320  0868                     	;# 
   321  0869                     	;# 
   322  086A                     	;# 
   323  086B                     	;# 
   324  086C                     	;# 
   325  086D                     	;# 
   326  086E                     	;# 
   327  086F                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011C                     	;# 
   403  011D                     	;# 
   404  011D                     	;# 
   405  011D                     	;# 
   406  011E                     	;# 
   407  011F                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  028C                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  0291                     	;# 
   469  0291                     	;# 
   470  0292                     	;# 
   471  0293                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  030C                     	;# 
   477  030D                     	;# 
   478  030E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  0390                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  0397                     	;# 
   494  0398                     	;# 
   495  0399                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0511                     	;# 
   500  0513                     	;# 
   501  051A                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  0815                     	;# 
   507  0816                     	;# 
   508  0817                     	;# 
   509  0818                     	;# 
   510  0819                     	;# 
   511  081A                     	;# 
   512  081B                     	;# 
   513  081C                     	;# 
   514  081D                     	;# 
   515  081E                     	;# 
   516  081F                     	;# 
   517  0820                     	;# 
   518  0821                     	;# 
   519  0821                     	;# 
   520  0822                     	;# 
   521  0823                     	;# 
   522  0823                     	;# 
   523  0824                     	;# 
   524  0825                     	;# 
   525  0825                     	;# 
   526  0826                     	;# 
   527  0827                     	;# 
   528  0827                     	;# 
   529  0828                     	;# 
   530  0829                     	;# 
   531  082A                     	;# 
   532  082B                     	;# 
   533  082C                     	;# 
   534  082D                     	;# 
   535  082E                     	;# 
   536  082F                     	;# 
   537  0831                     	;# 
   538  0832                     	;# 
   539  0833                     	;# 
   540  0834                     	;# 
   541  0835                     	;# 
   542  0836                     	;# 
   543  0837                     	;# 
   544  0838                     	;# 
   545  0839                     	;# 
   546  083A                     	;# 
   547  083B                     	;# 
   548  083C                     	;# 
   549  083D                     	;# 
   550  083E                     	;# 
   551  083F                     	;# 
   552  0840                     	;# 
   553  0841                     	;# 
   554  0841                     	;# 
   555  0842                     	;# 
   556  0843                     	;# 
   557  0843                     	;# 
   558  0844                     	;# 
   559  0845                     	;# 
   560  0845                     	;# 
   561  0846                     	;# 
   562  0847                     	;# 
   563  0847                     	;# 
   564  0848                     	;# 
   565  0849                     	;# 
   566  084A                     	;# 
   567  084B                     	;# 
   568  084C                     	;# 
   569  084D                     	;# 
   570  084E                     	;# 
   571  084F                     	;# 
   572  0851                     	;# 
   573  0852                     	;# 
   574  0853                     	;# 
   575  0854                     	;# 
   576  0855                     	;# 
   577  0856                     	;# 
   578  0857                     	;# 
   579  0858                     	;# 
   580  0859                     	;# 
   581  085A                     	;# 
   582  085B                     	;# 
   583  085C                     	;# 
   584  085D                     	;# 
   585  085E                     	;# 
   586  085F                     	;# 
   587  0860                     	;# 
   588  0861                     	;# 
   589  0861                     	;# 
   590  0862                     	;# 
   591  0863                     	;# 
   592  0863                     	;# 
   593  0864                     	;# 
   594  0865                     	;# 
   595  0865                     	;# 
   596  0866                     	;# 
   597  0867                     	;# 
   598  0867                     	;# 
   599  0868                     	;# 
   600  0869                     	;# 
   601  086A                     	;# 
   602  086B                     	;# 
   603  086C                     	;# 
   604  086D                     	;# 
   605  086E                     	;# 
   606  086F                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0016                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  0090                     	;# 
   651  0091                     	;# 
   652  0092                     	;# 
   653  0093                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0115                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0118                     	;# 
   678  0119                     	;# 
   679  011A                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0191                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0193                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0199                     	;# 
   700  0199                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019A                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019D                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019E                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  019F                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  030C                     	;# 
   756  030D                     	;# 
   757  030E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  0393                     	;# 
   769  0394                     	;# 
   770  0395                     	;# 
   771  0396                     	;# 
   772  0397                     	;# 
   773  0398                     	;# 
   774  0399                     	;# 
   775  039D                     	;# 
   776  039E                     	;# 
   777  039F                     	;# 
   778  0511                     	;# 
   779  0513                     	;# 
   780  051A                     	;# 
   781  0811                     	;# 
   782  0812                     	;# 
   783  0813                     	;# 
   784  0814                     	;# 
   785  0815                     	;# 
   786  0816                     	;# 
   787  0817                     	;# 
   788  0818                     	;# 
   789  0819                     	;# 
   790  081A                     	;# 
   791  081B                     	;# 
   792  081C                     	;# 
   793  081D                     	;# 
   794  081E                     	;# 
   795  081F                     	;# 
   796  0820                     	;# 
   797  0821                     	;# 
   798  0821                     	;# 
   799  0822                     	;# 
   800  0823                     	;# 
   801  0823                     	;# 
   802  0824                     	;# 
   803  0825                     	;# 
   804  0825                     	;# 
   805  0826                     	;# 
   806  0827                     	;# 
   807  0827                     	;# 
   808  0828                     	;# 
   809  0829                     	;# 
   810  082A                     	;# 
   811  082B                     	;# 
   812  082C                     	;# 
   813  082D                     	;# 
   814  082E                     	;# 
   815  082F                     	;# 
   816  0831                     	;# 
   817  0832                     	;# 
   818  0833                     	;# 
   819  0834                     	;# 
   820  0835                     	;# 
   821  0836                     	;# 
   822  0837                     	;# 
   823  0838                     	;# 
   824  0839                     	;# 
   825  083A                     	;# 
   826  083B                     	;# 
   827  083C                     	;# 
   828  083D                     	;# 
   829  083E                     	;# 
   830  083F                     	;# 
   831  0840                     	;# 
   832  0841                     	;# 
   833  0841                     	;# 
   834  0842                     	;# 
   835  0843                     	;# 
   836  0843                     	;# 
   837  0844                     	;# 
   838  0845                     	;# 
   839  0845                     	;# 
   840  0846                     	;# 
   841  0847                     	;# 
   842  0847                     	;# 
   843  0848                     	;# 
   844  0849                     	;# 
   845  084A                     	;# 
   846  084B                     	;# 
   847  084C                     	;# 
   848  084D                     	;# 
   849  084E                     	;# 
   850  084F                     	;# 
   851  0851                     	;# 
   852  0852                     	;# 
   853  0853                     	;# 
   854  0854                     	;# 
   855  0855                     	;# 
   856  0856                     	;# 
   857  0857                     	;# 
   858  0858                     	;# 
   859  0859                     	;# 
   860  085A                     	;# 
   861  085B                     	;# 
   862  085C                     	;# 
   863  085D                     	;# 
   864  085E                     	;# 
   865  085F                     	;# 
   866  0860                     	;# 
   867  0861                     	;# 
   868  0861                     	;# 
   869  0862                     	;# 
   870  0863                     	;# 
   871  0863                     	;# 
   872  0864                     	;# 
   873  0865                     	;# 
   874  0865                     	;# 
   875  0866                     	;# 
   876  0867                     	;# 
   877  0867                     	;# 
   878  0868                     	;# 
   879  0869                     	;# 
   880  086A                     	;# 
   881  086B                     	;# 
   882  086C                     	;# 
   883  086D                     	;# 
   884  086E                     	;# 
   885  086F                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  000E                     	;# 
   912  0010                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0013                     	;# 
   916  0014                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  008E                     	;# 
   929  0090                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0093                     	;# 
   933  0094                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  010D                     	;# 
   948  010E                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011C                     	;# 
   961  011D                     	;# 
   962  011D                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  011F                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0197                     	;# 
   978  0199                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019C                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019D                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019E                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019F                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  020C                     	;# 
  1004  020D                     	;# 
  1005  020E                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0298                     	;# 
  1031  0298                     	;# 
  1032  0299                     	;# 
  1033  029A                     	;# 
  1034  030C                     	;# 
  1035  030D                     	;# 
  1036  030E                     	;# 
  1037  0311                     	;# 
  1038  0311                     	;# 
  1039  0312                     	;# 
  1040  0313                     	;# 
  1041  038C                     	;# 
  1042  038D                     	;# 
  1043  038E                     	;# 
  1044  0390                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0397                     	;# 
  1052  0398                     	;# 
  1053  0399                     	;# 
  1054  039D                     	;# 
  1055  039E                     	;# 
  1056  039F                     	;# 
  1057  0511                     	;# 
  1058  0513                     	;# 
  1059  051A                     	;# 
  1060  0811                     	;# 
  1061  0812                     	;# 
  1062  0813                     	;# 
  1063  0814                     	;# 
  1064  0815                     	;# 
  1065  0816                     	;# 
  1066  0817                     	;# 
  1067  0818                     	;# 
  1068  0819                     	;# 
  1069  081A                     	;# 
  1070  081B                     	;# 
  1071  081C                     	;# 
  1072  081D                     	;# 
  1073  081E                     	;# 
  1074  081F                     	;# 
  1075  0820                     	;# 
  1076  0821                     	;# 
  1077  0821                     	;# 
  1078  0822                     	;# 
  1079  0823                     	;# 
  1080  0823                     	;# 
  1081  0824                     	;# 
  1082  0825                     	;# 
  1083  0825                     	;# 
  1084  0826                     	;# 
  1085  0827                     	;# 
  1086  0827                     	;# 
  1087  0828                     	;# 
  1088  0829                     	;# 
  1089  082A                     	;# 
  1090  082B                     	;# 
  1091  082C                     	;# 
  1092  082D                     	;# 
  1093  082E                     	;# 
  1094  082F                     	;# 
  1095  0831                     	;# 
  1096  0832                     	;# 
  1097  0833                     	;# 
  1098  0834                     	;# 
  1099  0835                     	;# 
  1100  0836                     	;# 
  1101  0837                     	;# 
  1102  0838                     	;# 
  1103  0839                     	;# 
  1104  083A                     	;# 
  1105  083B                     	;# 
  1106  083C                     	;# 
  1107  083D                     	;# 
  1108  083E                     	;# 
  1109  083F                     	;# 
  1110  0840                     	;# 
  1111  0841                     	;# 
  1112  0841                     	;# 
  1113  0842                     	;# 
  1114  0843                     	;# 
  1115  0843                     	;# 
  1116  0844                     	;# 
  1117  0845                     	;# 
  1118  0845                     	;# 
  1119  0846                     	;# 
  1120  0847                     	;# 
  1121  0847                     	;# 
  1122  0848                     	;# 
  1123  0849                     	;# 
  1124  084A                     	;# 
  1125  084B                     	;# 
  1126  084C                     	;# 
  1127  084D                     	;# 
  1128  084E                     	;# 
  1129  084F                     	;# 
  1130  0851                     	;# 
  1131  0852                     	;# 
  1132  0853                     	;# 
  1133  0854                     	;# 
  1134  0855                     	;# 
  1135  0856                     	;# 
  1136  0857                     	;# 
  1137  0858                     	;# 
  1138  0859                     	;# 
  1139  085A                     	;# 
  1140  085B                     	;# 
  1141  085C                     	;# 
  1142  085D                     	;# 
  1143  085E                     	;# 
  1144  085F                     	;# 
  1145  0860                     	;# 
  1146  0861                     	;# 
  1147  0861                     	;# 
  1148  0862                     	;# 
  1149  0863                     	;# 
  1150  0863                     	;# 
  1151  0864                     	;# 
  1152  0865                     	;# 
  1153  0865                     	;# 
  1154  0866                     	;# 
  1155  0867                     	;# 
  1156  0867                     	;# 
  1157  0868                     	;# 
  1158  0869                     	;# 
  1159  086A                     	;# 
  1160  086B                     	;# 
  1161  086C                     	;# 
  1162  086D                     	;# 
  1163  086E                     	;# 
  1164  086F                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  0010                     	;# 
  1192  0011                     	;# 
  1193  0012                     	;# 
  1194  0013                     	;# 
  1195  0014                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  009F                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  011A                     	;# 
  1238  011B                     	;# 
  1239  011C                     	;# 
  1240  011D                     	;# 
  1241  011D                     	;# 
  1242  011D                     	;# 
  1243  011E                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  0210                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  028C                     	;# 
  1303  028D                     	;# 
  1304  028E                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  030C                     	;# 
  1314  030D                     	;# 
  1315  030E                     	;# 
  1316  0311                     	;# 
  1317  0311                     	;# 
  1318  0312                     	;# 
  1319  0313                     	;# 
  1320  038C                     	;# 
  1321  038D                     	;# 
  1322  038E                     	;# 
  1323  0390                     	;# 
  1324  0391                     	;# 
  1325  0392                     	;# 
  1326  0393                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0397                     	;# 
  1331  0398                     	;# 
  1332  0399                     	;# 
  1333  039D                     	;# 
  1334  039E                     	;# 
  1335  039F                     	;# 
  1336  0511                     	;# 
  1337  0513                     	;# 
  1338  051A                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  0815                     	;# 
  1344  0816                     	;# 
  1345  0817                     	;# 
  1346  0818                     	;# 
  1347  0819                     	;# 
  1348  081A                     	;# 
  1349  081B                     	;# 
  1350  081C                     	;# 
  1351  081D                     	;# 
  1352  081E                     	;# 
  1353  081F                     	;# 
  1354  0820                     	;# 
  1355  0821                     	;# 
  1356  0821                     	;# 
  1357  0822                     	;# 
  1358  0823                     	;# 
  1359  0823                     	;# 
  1360  0824                     	;# 
  1361  0825                     	;# 
  1362  0825                     	;# 
  1363  0826                     	;# 
  1364  0827                     	;# 
  1365  0827                     	;# 
  1366  0828                     	;# 
  1367  0829                     	;# 
  1368  082A                     	;# 
  1369  082B                     	;# 
  1370  082C                     	;# 
  1371  082D                     	;# 
  1372  082E                     	;# 
  1373  082F                     	;# 
  1374  0831                     	;# 
  1375  0832                     	;# 
  1376  0833                     	;# 
  1377  0834                     	;# 
  1378  0835                     	;# 
  1379  0836                     	;# 
  1380  0837                     	;# 
  1381  0838                     	;# 
  1382  0839                     	;# 
  1383  083A                     	;# 
  1384  083B                     	;# 
  1385  083C                     	;# 
  1386  083D                     	;# 
  1387  083E                     	;# 
  1388  083F                     	;# 
  1389  0840                     	;# 
  1390  0841                     	;# 
  1391  0841                     	;# 
  1392  0842                     	;# 
  1393  0843                     	;# 
  1394  0843                     	;# 
  1395  0844                     	;# 
  1396  0845                     	;# 
  1397  0845                     	;# 
  1398  0846                     	;# 
  1399  0847                     	;# 
  1400  0847                     	;# 
  1401  0848                     	;# 
  1402  0849                     	;# 
  1403  084A                     	;# 
  1404  084B                     	;# 
  1405  084C                     	;# 
  1406  084D                     	;# 
  1407  084E                     	;# 
  1408  084F                     	;# 
  1409  0851                     	;# 
  1410  0852                     	;# 
  1411  0853                     	;# 
  1412  0854                     	;# 
  1413  0855                     	;# 
  1414  0856                     	;# 
  1415  0857                     	;# 
  1416  0858                     	;# 
  1417  0859                     	;# 
  1418  085A                     	;# 
  1419  085B                     	;# 
  1420  085C                     	;# 
  1421  085D                     	;# 
  1422  085E                     	;# 
  1423  085F                     	;# 
  1424  0860                     	;# 
  1425  0861                     	;# 
  1426  0861                     	;# 
  1427  0862                     	;# 
  1428  0863                     	;# 
  1429  0863                     	;# 
  1430  0864                     	;# 
  1431  0865                     	;# 
  1432  0865                     	;# 
  1433  0866                     	;# 
  1434  0867                     	;# 
  1435  0867                     	;# 
  1436  0868                     	;# 
  1437  0869                     	;# 
  1438  086A                     	;# 
  1439  086B                     	;# 
  1440  086C                     	;# 
  1441  086D                     	;# 
  1442  086E                     	;# 
  1443  086F                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455  0000                     	;# 
  1456  0001                     	;# 
  1457  0002                     	;# 
  1458  0003                     	;# 
  1459  0004                     	;# 
  1460  0005                     	;# 
  1461  0006                     	;# 
  1462  0007                     	;# 
  1463  0008                     	;# 
  1464  0009                     	;# 
  1465  000A                     	;# 
  1466  000B                     	;# 
  1467  000C                     	;# 
  1468  000D                     	;# 
  1469  000E                     	;# 
  1470  0010                     	;# 
  1471  0011                     	;# 
  1472  0012                     	;# 
  1473  0013                     	;# 
  1474  0014                     	;# 
  1475  0015                     	;# 
  1476  0016                     	;# 
  1477  0016                     	;# 
  1478  0017                     	;# 
  1479  0018                     	;# 
  1480  0019                     	;# 
  1481  001A                     	;# 
  1482  001B                     	;# 
  1483  001C                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  0090                     	;# 
  1488  0091                     	;# 
  1489  0092                     	;# 
  1490  0093                     	;# 
  1491  0094                     	;# 
  1492  0095                     	;# 
  1493  0096                     	;# 
  1494  0097                     	;# 
  1495  0098                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0111                     	;# 
  1508  0112                     	;# 
  1509  0113                     	;# 
  1510  0114                     	;# 
  1511  0115                     	;# 
  1512  0116                     	;# 
  1513  0117                     	;# 
  1514  0118                     	;# 
  1515  0119                     	;# 
  1516  011A                     	;# 
  1517  011B                     	;# 
  1518  011C                     	;# 
  1519  011D                     	;# 
  1520  011D                     	;# 
  1521  011D                     	;# 
  1522  011E                     	;# 
  1523  011F                     	;# 
  1524  018C                     	;# 
  1525  018D                     	;# 
  1526  0191                     	;# 
  1527  0191                     	;# 
  1528  0192                     	;# 
  1529  0193                     	;# 
  1530  0193                     	;# 
  1531  0193                     	;# 
  1532  0194                     	;# 
  1533  0195                     	;# 
  1534  0196                     	;# 
  1535  0197                     	;# 
  1536  0199                     	;# 
  1537  0199                     	;# 
  1538  0199                     	;# 
  1539  019A                     	;# 
  1540  019A                     	;# 
  1541  019A                     	;# 
  1542  019B                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019C                     	;# 
  1548  019C                     	;# 
  1549  019C                     	;# 
  1550  019D                     	;# 
  1551  019D                     	;# 
  1552  019D                     	;# 
  1553  019E                     	;# 
  1554  019E                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  019F                     	;# 
  1558  019F                     	;# 
  1559  019F                     	;# 
  1560  019F                     	;# 
  1561  020C                     	;# 
  1562  020D                     	;# 
  1563  020E                     	;# 
  1564  0210                     	;# 
  1565  0211                     	;# 
  1566  0211                     	;# 
  1567  0212                     	;# 
  1568  0212                     	;# 
  1569  0213                     	;# 
  1570  0213                     	;# 
  1571  0214                     	;# 
  1572  0214                     	;# 
  1573  0215                     	;# 
  1574  0215                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0216                     	;# 
  1578  0216                     	;# 
  1579  0217                     	;# 
  1580  0217                     	;# 
  1581  028C                     	;# 
  1582  028D                     	;# 
  1583  028E                     	;# 
  1584  0291                     	;# 
  1585  0291                     	;# 
  1586  0292                     	;# 
  1587  0293                     	;# 
  1588  0298                     	;# 
  1589  0298                     	;# 
  1590  0299                     	;# 
  1591  029A                     	;# 
  1592  030C                     	;# 
  1593  030D                     	;# 
  1594  030E                     	;# 
  1595  0311                     	;# 
  1596  0311                     	;# 
  1597  0312                     	;# 
  1598  0313                     	;# 
  1599  038C                     	;# 
  1600  038D                     	;# 
  1601  038E                     	;# 
  1602  0390                     	;# 
  1603  0391                     	;# 
  1604  0392                     	;# 
  1605  0393                     	;# 
  1606  0394                     	;# 
  1607  0395                     	;# 
  1608  0396                     	;# 
  1609  0397                     	;# 
  1610  0398                     	;# 
  1611  0399                     	;# 
  1612  039D                     	;# 
  1613  039E                     	;# 
  1614  039F                     	;# 
  1615  0511                     	;# 
  1616  0513                     	;# 
  1617  051A                     	;# 
  1618  0811                     	;# 
  1619  0812                     	;# 
  1620  0813                     	;# 
  1621  0814                     	;# 
  1622  0815                     	;# 
  1623  0816                     	;# 
  1624  0817                     	;# 
  1625  0818                     	;# 
  1626  0819                     	;# 
  1627  081A                     	;# 
  1628  081B                     	;# 
  1629  081C                     	;# 
  1630  081D                     	;# 
  1631  081E                     	;# 
  1632  081F                     	;# 
  1633  0820                     	;# 
  1634  0821                     	;# 
  1635  0821                     	;# 
  1636  0822                     	;# 
  1637  0823                     	;# 
  1638  0823                     	;# 
  1639  0824                     	;# 
  1640  0825                     	;# 
  1641  0825                     	;# 
  1642  0826                     	;# 
  1643  0827                     	;# 
  1644  0827                     	;# 
  1645  0828                     	;# 
  1646  0829                     	;# 
  1647  082A                     	;# 
  1648  082B                     	;# 
  1649  082C                     	;# 
  1650  082D                     	;# 
  1651  082E                     	;# 
  1652  082F                     	;# 
  1653  0831                     	;# 
  1654  0832                     	;# 
  1655  0833                     	;# 
  1656  0834                     	;# 
  1657  0835                     	;# 
  1658  0836                     	;# 
  1659  0837                     	;# 
  1660  0838                     	;# 
  1661  0839                     	;# 
  1662  083A                     	;# 
  1663  083B                     	;# 
  1664  083C                     	;# 
  1665  083D                     	;# 
  1666  083E                     	;# 
  1667  083F                     	;# 
  1668  0840                     	;# 
  1669  0841                     	;# 
  1670  0841                     	;# 
  1671  0842                     	;# 
  1672  0843                     	;# 
  1673  0843                     	;# 
  1674  0844                     	;# 
  1675  0845                     	;# 
  1676  0845                     	;# 
  1677  0846                     	;# 
  1678  0847                     	;# 
  1679  0847                     	;# 
  1680  0848                     	;# 
  1681  0849                     	;# 
  1682  084A                     	;# 
  1683  084B                     	;# 
  1684  084C                     	;# 
  1685  084D                     	;# 
  1686  084E                     	;# 
  1687  084F                     	;# 
  1688  0851                     	;# 
  1689  0852                     	;# 
  1690  0853                     	;# 
  1691  0854                     	;# 
  1692  0855                     	;# 
  1693  0856                     	;# 
  1694  0857                     	;# 
  1695  0858                     	;# 
  1696  0859                     	;# 
  1697  085A                     	;# 
  1698  085B                     	;# 
  1699  085C                     	;# 
  1700  085D                     	;# 
  1701  085E                     	;# 
  1702  085F                     	;# 
  1703  0860                     	;# 
  1704  0861                     	;# 
  1705  0861                     	;# 
  1706  0862                     	;# 
  1707  0863                     	;# 
  1708  0863                     	;# 
  1709  0864                     	;# 
  1710  0865                     	;# 
  1711  0865                     	;# 
  1712  0866                     	;# 
  1713  0867                     	;# 
  1714  0867                     	;# 
  1715  0868                     	;# 
  1716  0869                     	;# 
  1717  086A                     	;# 
  1718  086B                     	;# 
  1719  086C                     	;# 
  1720  086D                     	;# 
  1721  086E                     	;# 
  1722  086F                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  0010                     	;# 
  1750  0011                     	;# 
  1751  0012                     	;# 
  1752  0013                     	;# 
  1753  0014                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  0090                     	;# 
  1767  0091                     	;# 
  1768  0092                     	;# 
  1769  0093                     	;# 
  1770  0094                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  0111                     	;# 
  1787  0112                     	;# 
  1788  0113                     	;# 
  1789  0114                     	;# 
  1790  0115                     	;# 
  1791  0116                     	;# 
  1792  0117                     	;# 
  1793  0118                     	;# 
  1794  0119                     	;# 
  1795  011A                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  018C                     	;# 
  1804  018D                     	;# 
  1805  0191                     	;# 
  1806  0191                     	;# 
  1807  0192                     	;# 
  1808  0193                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  0210                     	;# 
  1844  0211                     	;# 
  1845  0211                     	;# 
  1846  0212                     	;# 
  1847  0212                     	;# 
  1848  0213                     	;# 
  1849  0213                     	;# 
  1850  0214                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0216                     	;# 
  1857  0216                     	;# 
  1858  0217                     	;# 
  1859  0217                     	;# 
  1860  028C                     	;# 
  1861  028D                     	;# 
  1862  028E                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0298                     	;# 
  1868  0298                     	;# 
  1869  0299                     	;# 
  1870  029A                     	;# 
  1871  030C                     	;# 
  1872  030D                     	;# 
  1873  030E                     	;# 
  1874  0311                     	;# 
  1875  0311                     	;# 
  1876  0312                     	;# 
  1877  0313                     	;# 
  1878  038C                     	;# 
  1879  038D                     	;# 
  1880  038E                     	;# 
  1881  0390                     	;# 
  1882  0391                     	;# 
  1883  0392                     	;# 
  1884  0393                     	;# 
  1885  0394                     	;# 
  1886  0395                     	;# 
  1887  0396                     	;# 
  1888  0397                     	;# 
  1889  0398                     	;# 
  1890  0399                     	;# 
  1891  039D                     	;# 
  1892  039E                     	;# 
  1893  039F                     	;# 
  1894  0511                     	;# 
  1895  0513                     	;# 
  1896  051A                     	;# 
  1897  0811                     	;# 
  1898  0812                     	;# 
  1899  0813                     	;# 
  1900  0814                     	;# 
  1901  0815                     	;# 
  1902  0816                     	;# 
  1903  0817                     	;# 
  1904  0818                     	;# 
  1905  0819                     	;# 
  1906  081A                     	;# 
  1907  081B                     	;# 
  1908  081C                     	;# 
  1909  081D                     	;# 
  1910  081E                     	;# 
  1911  081F                     	;# 
  1912  0820                     	;# 
  1913  0821                     	;# 
  1914  0821                     	;# 
  1915  0822                     	;# 
  1916  0823                     	;# 
  1917  0823                     	;# 
  1918  0824                     	;# 
  1919  0825                     	;# 
  1920  0825                     	;# 
  1921  0826                     	;# 
  1922  0827                     	;# 
  1923  0827                     	;# 
  1924  0828                     	;# 
  1925  0829                     	;# 
  1926  082A                     	;# 
  1927  082B                     	;# 
  1928  082C                     	;# 
  1929  082D                     	;# 
  1930  082E                     	;# 
  1931  082F                     	;# 
  1932  0831                     	;# 
  1933  0832                     	;# 
  1934  0833                     	;# 
  1935  0834                     	;# 
  1936  0835                     	;# 
  1937  0836                     	;# 
  1938  0837                     	;# 
  1939  0838                     	;# 
  1940  0839                     	;# 
  1941  083A                     	;# 
  1942  083B                     	;# 
  1943  083C                     	;# 
  1944  083D                     	;# 
  1945  083E                     	;# 
  1946  083F                     	;# 
  1947  0840                     	;# 
  1948  0841                     	;# 
  1949  0841                     	;# 
  1950  0842                     	;# 
  1951  0843                     	;# 
  1952  0843                     	;# 
  1953  0844                     	;# 
  1954  0845                     	;# 
  1955  0845                     	;# 
  1956  0846                     	;# 
  1957  0847                     	;# 
  1958  0847                     	;# 
  1959  0848                     	;# 
  1960  0849                     	;# 
  1961  084A                     	;# 
  1962  084B                     	;# 
  1963  084C                     	;# 
  1964  084D                     	;# 
  1965  084E                     	;# 
  1966  084F                     	;# 
  1967  0851                     	;# 
  1968  0852                     	;# 
  1969  0853                     	;# 
  1970  0854                     	;# 
  1971  0855                     	;# 
  1972  0856                     	;# 
  1973  0857                     	;# 
  1974  0858                     	;# 
  1975  0859                     	;# 
  1976  085A                     	;# 
  1977  085B                     	;# 
  1978  085C                     	;# 
  1979  085D                     	;# 
  1980  085E                     	;# 
  1981  085F                     	;# 
  1982  0860                     	;# 
  1983  0861                     	;# 
  1984  0861                     	;# 
  1985  0862                     	;# 
  1986  0863                     	;# 
  1987  0863                     	;# 
  1988  0864                     	;# 
  1989  0865                     	;# 
  1990  0865                     	;# 
  1991  0866                     	;# 
  1992  0867                     	;# 
  1993  0867                     	;# 
  1994  0868                     	;# 
  1995  0869                     	;# 
  1996  086A                     	;# 
  1997  086B                     	;# 
  1998  086C                     	;# 
  1999  086D                     	;# 
  2000  086E                     	;# 
  2001  086F                     	;# 
  2002  0FE4                     	;# 
  2003  0FE5                     	;# 
  2004  0FE6                     	;# 
  2005  0FE7                     	;# 
  2006  0FE8                     	;# 
  2007  0FE9                     	;# 
  2008  0FEA                     	;# 
  2009  0FEB                     	;# 
  2010  0FED                     	;# 
  2011  0FEE                     	;# 
  2012  0FEF                     	;# 
  2013                           
  2014                           	psect	stringtext1
  2015  0371                     __pstringtext1:	
  2016  0371                     _segmcode:	
  2017  0371  343F               	retlw	63
  2018  0372  3406               	retlw	6
  2019  0373  345B               	retlw	91
  2020  0374  344F               	retlw	79
  2021  0375  3466               	retlw	102
  2022  0376  346D               	retlw	109
  2023  0377  347D               	retlw	125
  2024  0378  3407               	retlw	7
  2025  0379  347F               	retlw	127
  2026  037A  346F               	retlw	111
  2027  037B  3477               	retlw	119
  2028  037C  347C               	retlw	124
  2029  037D  3439               	retlw	57
  2030  037E  345E               	retlw	94
  2031  037F  3479               	retlw	121
  2032  0380  3471               	retlw	113
  2033  0381                     __end_of_segmcode:	
  2034  000C                     _PORTAbits	set	12
  2035  000E                     _PORTCbits	set	14
  2036  0015                     _TMR0	set	21
  2037  000B                     _INTCONbits	set	11
  2038  005F                     _GIE	set	95
  2039  0074                     _RC4	set	116
  2040  008E                     _TRISCbits	set	142
  2041  008E                     _TRISC	set	142
  2042  008D                     _TRISB	set	141
  2043  008C                     _TRISA	set	140
  2044  0095                     _OPTION_REGbits	set	149
  2045  0099                     _OSCCONbits	set	153
  2046  0473                     _TRISC3	set	1139
  2047  0474                     _TRISC4	set	1140
  2048  010C                     _LATAbits	set	268
  2049  010D                     _LATBbits	set	269
  2050  010E                     _LATC	set	270
  2051  010D                     _LATB	set	269
  2052  010C                     _LATA	set	268
  2053  0874                     _LATC4	set	2164
  2054  0873                     _LATC3	set	2163
  2055  020E                     _WPUCbits	set	526
  2056  020E                     _WPUC	set	526
  2057  020D                     _WPUB	set	525
  2058  020C                     _WPUA	set	524
  2059  1073                     _WPUC3	set	4211
  2060  1074                     _WPUC4	set	4212
  2061  1474                     _ODCONC4	set	5236
  2062  1473                     _ODCONC3	set	5235
  2063  0399                     _IOCCFbits	set	921
  2064  0397                     _IOCCPbits	set	919
  2065  0398                     _IOCCN	set	920
  2066  0397                     _IOCCP	set	919
  2067  0395                     _IOCBN	set	917
  2068  0394                     _IOCBP	set	916
  2069  0392                     _IOCAN	set	914
  2070  0391                     _IOCAP	set	913
  2071                           
  2072                           ; #config settings
  2073  0000                     
  2074                           	psect	cinit
  2075  0064                     start_initialization:	
  2076  0064                     __initialization:	
  2077                           
  2078                           ; Clear objects allocated to BANK0
  2079  0064  3020               	movlw	low __pbssBANK0
  2080  0065  0084               	movwf	4
  2081  0066  3000               	movlw	high __pbssBANK0
  2082  0067  0085               	movwf	5
  2083  0068  3029               	movlw	41
  2084  0069  3183  23A9         	fcall	clear_ram0
  2085  006B                     end_of_initialization:	
  2086                           ;End of C runtime variable initialization code
  2087                           
  2088  006B                     __end_of__initialization:	
  2089  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2090  006C  0020               	movlb	0
  2091  006D  3183  2BAF         	ljmp	_main	;jump to C main() function
  2092                           
  2093                           	psect	bssBANK0
  2094  0020                     __pbssBANK0:	
  2095  0020                     _g_data:	
  2096  0020                     	ds	33
  2097  0041                     _Temp:	
  2098  0041                     	ds	2
  2099  0043                     ISR@key_time_cnt:	
  2100  0043                     	ds	2
  2101  0045                     _temp_l:	
  2102  0045                     	ds	1
  2103  0046                     _temp_h:	
  2104  0046                     	ds	1
  2105  0047                     ISR@history_key:	
  2106  0047                     	ds	1
  2107  0048                     _ENUM:	
  2108  0048                     	ds	1
  2109                           
  2110                           	psect	clrtext
  2111  03A9                     clear_ram0:	
  2112                           ;	Called with FSR0 containing the base address, and
  2113                           ;	WREG with the size to clear
  2114                           
  2115  03A9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2116  03AA                     clrloop0:	
  2117  03AA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2118  03AB  3101               	addfsr 0,1
  2119  03AC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2120  03AD  2BAA               	goto	clrloop0	;have we reached the end yet?
  2121  03AE  3400               	retlw	0	;all done for this memory range, return
  2122                           
  2123                           	psect	cstackCOMMON
  2124  0070                     __pcstackCOMMON:	
  2125  0070                     ?_IIC_Init:	
  2126  0070                     ?_update_time:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ?_receive_decode:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?_update_display:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?_init_env:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?_ISR:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ?_main:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?_times2number:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?_test_get_number:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ??_test_get_number:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ?_control595_delay:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ??_control595_delay:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_write_byte:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_check_err:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?___lwmod:	
  2166                           ; 2 bytes @ 0x0
  2167                           
  2168  0070                     test_get_number@get_num:	
  2169                           ; 2 bytes @ 0x0
  2170                           
  2171  0070                     times2number@high_level_times:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ___lwmod@divisor:	
  2175                           ; 2 bytes @ 0x0
  2176                           
  2177                           
  2178                           ; 2 bytes @ 0x0
  2179  0070                     	ds	1
  2180  0071                     control595_delay@times:	
  2181                           
  2182                           ; 1 bytes @ 0x1
  2183  0071                     	ds	1
  2184  0072                     ??_times2number:	
  2185  0072                     ??_check_err:	
  2186                           ; 1 bytes @ 0x2
  2187                           
  2188  0072                     ??_write_byte:	
  2189                           ; 1 bytes @ 0x2
  2190                           
  2191  0072                     ___lwmod@dividend:	
  2192                           ; 1 bytes @ 0x2
  2193                           
  2194                           
  2195                           ; 2 bytes @ 0x2
  2196  0072                     	ds	2
  2197  0074                     ??___lwmod:	
  2198  0074                     write_byte@data:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x4
  2203  0074                     	ds	1
  2204  0075                     write_byte@i:	
  2205  0075                     ___lwmod@counter:	
  2206                           ; 1 bytes @ 0x5
  2207                           
  2208                           
  2209                           ; 1 bytes @ 0x5
  2210  0075                     	ds	1
  2211  0076                     ?_write_once:	
  2212  0076                     write_once@HR:	
  2213                           ; 1 bytes @ 0x6
  2214                           
  2215                           
  2216                           ; 1 bytes @ 0x6
  2217  0076                     	ds	1
  2218  0077                     write_once@ML:	
  2219  0077                     _check_err$586:	
  2220                           ; 1 bytes @ 0x7
  2221                           
  2222                           
  2223                           ; 2 bytes @ 0x7
  2224  0077                     	ds	1
  2225  0078                     write_once@MR:	
  2226                           
  2227                           ; 1 bytes @ 0x8
  2228  0078                     	ds	1
  2229  0079                     ??_write_once:	
  2230  0079                     write_once@HL:	
  2231                           ; 1 bytes @ 0x9
  2232                           
  2233  0079                     _check_err$587:	
  2234                           ; 1 bytes @ 0x9
  2235                           
  2236                           
  2237                           ; 2 bytes @ 0x9
  2238  0079                     	ds	1
  2239  007A                     ??_update_display:	
  2240                           
  2241                           ; 1 bytes @ 0xA
  2242  007A                     	ds	1
  2243  007B                     check_err@i:	
  2244                           
  2245                           ; 1 bytes @ 0xB
  2246  007B                     	ds	1
  2247  007C                     check_err@check:	
  2248                           
  2249                           ; 1 bytes @ 0xC
  2250  007C                     	ds	1
  2251  007D                     ??_update_time:	
  2252                           
  2253                           ; 1 bytes @ 0xD
  2254  007D                     	ds	1
  2255                           
  2256                           	psect	cstackBANK0
  2257  0049                     __pcstackBANK0:	
  2258  0049                     ??_receive_decode:	
  2259                           
  2260                           ; 1 bytes @ 0x0
  2261  0049                     	ds	4
  2262  004D                     receive_decode@last_time_h:	
  2263                           
  2264                           ; 2 bytes @ 0x4
  2265  004D                     	ds	2
  2266  004F                     receive_decode@last_time_m:	
  2267                           
  2268                           ; 2 bytes @ 0x6
  2269  004F                     	ds	2
  2270  0051                     receive_decode@i:	
  2271                           
  2272                           ; 2 bytes @ 0x8
  2273  0051                     	ds	2
  2274  0053                     receive_decode@read_value:	
  2275                           
  2276                           ; 1 bytes @ 0xA
  2277  0053                     	ds	1
  2278  0054                     ??_ISR:	
  2279                           
  2280                           ; 1 bytes @ 0xB
  2281  0054                     	ds	2
  2282  0056                     ??_IIC_Init:	
  2283  0056                     ??_init_env:	
  2284                           ; 1 bytes @ 0xD
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0xD
  2288  0056                     	ds	1
  2289  0057                     init_env@i:	
  2290                           
  2291                           ; 2 bytes @ 0xE
  2292  0057                     	ds	2
  2293  0059                     ??_main:	
  2294                           
  2295                           	psect	maintext
  2296  03AF                     __pmaintext:	
  2297                           ; 1 bytes @ 0x10
  2298 ;;
  2299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2300 ;;
  2301 ;; *************** function _main *****************
  2302 ;; Defined at:
  2303 ;;		line 183 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : B1F/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels required when called:    8
  2323 ;; This function calls:
  2324 ;;		_init_env
  2325 ;; This function is called by:
  2326 ;;		Startup code after reset
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _main
  2332  03AF                     _main:	
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2336  03AF  3181  21D3  3183   	fcall	_init_env
  2337  03B2                     l90:	
  2338  03B2  2BB2               	goto	l90
  2339  03B3                     __end_of_main:	
  2340                           
  2341                           	psect	text1
  2342  01D3                     __ptext1:	
  2343 ;; *************** function _init_env *****************
  2344 ;; Defined at:
  2345 ;;		line 38 in file "main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  i               2   14[BANK0 ] int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    7
  2366 ;; This function calls:
  2367 ;;		_IIC_Init
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _init_env
  2375  01D3                     _init_env:	
  2376                           
  2377                           ;main.c: 43:     LATA = 0;
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2381  01D3  178B               	bsf	11,7	;volatile
  2382                           
  2383                           ;main.c: 45:     IOCAP = 0;
  2384  01D4  158B               	bsf	11,3	;volatile
  2385                           
  2386                           ;main.c: 49:     LATB = 0;
  2387  01D5  168B               	bsf	11,5	;volatile
  2388                           
  2389                           ;main.c: 55:     LATC = 0;
  2390  01D6  0021               	movlb	1	; select bank1
  2391  01D7  0819               	movf	25,w	;volatile
  2392  01D8  39FC               	andlw	-4
  2393  01D9  3802               	iorlw	2
  2394  01DA  0099               	movwf	25	;volatile
  2395                           
  2396                           ;main.c: 56:     WPUC = 1;
  2397  01DB  0819               	movf	25,w	;volatile
  2398  01DC  3987               	andlw	-121
  2399  01DD  3850               	iorlw	80
  2400  01DE  0099               	movwf	25	;volatile
  2401                           
  2402                           ;main.c: 64:     WPUCbits.WPUC5 = 1;
  2403  01DF  1195               	bcf	21,3	;volatile
  2404                           
  2405                           ;main.c: 65: 
  2406  01E0  1295               	bcf	21,5	;volatile
  2407                           
  2408                           ;main.c: 66:     TRISCbits.TRISC1 = 1;
  2409  01E1  0815               	movf	21,w	;volatile
  2410  01E2  39F8               	andlw	-8
  2411  01E3  3804               	iorlw	4
  2412  01E4  0095               	movwf	21	;volatile
  2413                           
  2414                           ;main.c: 67:     WPUCbits.WPUC1 = 1;
  2415  01E5  30E7               	movlw	231
  2416  01E6  0020               	movlb	0	; select bank0
  2417  01E7  0095               	movwf	21	;volatile
  2418                           
  2419                           ;main.c: 75: 
  2420  01E8  0021               	movlb	1	; select bank1
  2421  01E9  1395               	bcf	21,7	;volatile
  2422                           
  2423                           ;main.c: 77: 
  2424  01EA  018C               	clrf	12	;volatile
  2425                           
  2426                           ;main.c: 78:     LATBbits.LATB2 = PIN_LOW;
  2427  01EB  0022               	movlb	2	; select bank2
  2428  01EC  018C               	clrf	12	;volatile
  2429                           
  2430                           ;main.c: 79: 
  2431  01ED  0024               	movlb	4	; select bank4
  2432  01EE  018C               	clrf	12	;volatile
  2433                           
  2434                           ;main.c: 80: 
  2435  01EF  0027               	movlb	7	; select bank7
  2436  01F0  0191               	clrf	17	;volatile
  2437                           
  2438                           ;main.c: 81:     PORTCbits.RC2 = BPC_PWR_ON;
  2439  01F1  0192               	clrf	18	;volatile
  2440                           
  2441                           ;main.c: 83: 
  2442  01F2  0021               	movlb	1	; select bank1
  2443  01F3  018D               	clrf	13	;volatile
  2444                           
  2445                           ;main.c: 84:     TRISCbits.TRISC0 = 1;
  2446  01F4  0022               	movlb	2	; select bank2
  2447  01F5  018D               	clrf	13	;volatile
  2448                           
  2449                           ;main.c: 85:     WPUCbits.WPUC0 = 1;
  2450  01F6  0024               	movlb	4	; select bank4
  2451  01F7  018D               	clrf	13	;volatile
  2452                           
  2453                           ;main.c: 86: 
  2454  01F8  0027               	movlb	7	; select bank7
  2455  01F9  0194               	clrf	20	;volatile
  2456                           
  2457                           ;main.c: 87: 
  2458  01FA  0195               	clrf	21	;volatile
  2459                           
  2460                           ;main.c: 89: 
  2461  01FB  0021               	movlb	1	; select bank1
  2462  01FC  018E               	clrf	14	;volatile
  2463                           
  2464                           ;main.c: 90: 
  2465  01FD  0022               	movlb	2	; select bank2
  2466  01FE  018E               	clrf	14	;volatile
  2467                           
  2468                           ;main.c: 91:     PORTAbits.RA0 = 1;
  2469  01FF  3001               	movlw	1
  2470  0200  0024               	movlb	4	; select bank4
  2471  0201  008E               	movwf	14	;volatile
  2472                           
  2473                           ;main.c: 92: }
  2474  0202  0027               	movlb	7	; select bank7
  2475  0203  0197               	clrf	23	;volatile
  2476                           
  2477                           ;main.c: 93: 
  2478  0204  0198               	clrf	24	;volatile
  2479                           
  2480                           ;main.c: 98: 
  2481  0205  0021               	movlb	1	; select bank1
  2482  0206  168E               	bsf	14,5	;volatile
  2483                           
  2484                           ;main.c: 99: 
  2485  0207  0024               	movlb	4	; select bank4
  2486  0208  168E               	bsf	14,5	;volatile
  2487                           
  2488                           ;main.c: 101: 
  2489  0209  0021               	movlb	1	; select bank1
  2490  020A  148E               	bsf	14,1	;volatile
  2491                           
  2492                           ;main.c: 102: 
  2493  020B  0024               	movlb	4	; select bank4
  2494  020C  148E               	bsf	14,1	;volatile
  2495                           
  2496                           ;main.c: 103:     {
  2497  020D  0027               	movlb	7	; select bank7
  2498  020E  1497               	bsf	23,1	;volatile
  2499                           
  2500                           ;main.c: 106:         g_data.g_flg_switch = FALSE;
  2501  020F  0020               	movlb	0	; select bank0
  2502  0210  01D7               	clrf	init_env@i
  2503  0211  01D8               	clrf	init_env@i+1
  2504  0212  0858               	movf	init_env@i+1,w
  2505  0213  3A80               	xorlw	128
  2506  0214  00D6               	movwf	??_init_env
  2507  0215  3080               	movlw	128
  2508  0216  0256               	subwf	??_init_env,w
  2509  0217  1D03               	skipz
  2510  0218  2A1B               	goto	u1285
  2511  0219  3014               	movlw	20
  2512  021A  0257               	subwf	init_env@i,w
  2513  021B                     u1285:	
  2514  021B  1803               	btfsc	3,0
  2515  021C  2A35               	goto	l66
  2516  021D                     l1719:	
  2517                           
  2518                           ;main.c: 107:         PORTCbits.RC2 = BPC_PWR_ON;
  2519  021D  3005               	movlw	5
  2520  021E  0020               	movlb	0	; select bank0
  2521  021F  00D6               	movwf	??_init_env
  2522  0220  0857               	movf	init_env@i,w
  2523  0221  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2524  0222  0086               	movwf	6
  2525  0223  0187               	clrf	7
  2526  0224  0856               	movf	??_init_env,w
  2527  0225  0081               	movwf	1
  2528                           
  2529                           ;main.c: 108: 
  2530  0226  3001               	movlw	1
  2531  0227  07D7               	addwf	init_env@i,f
  2532  0228  3000               	movlw	0
  2533  0229  3DD8               	addwfc	init_env@i+1,f
  2534  022A  0858               	movf	init_env@i+1,w
  2535  022B  3A80               	xorlw	128
  2536  022C  00D6               	movwf	??_init_env
  2537  022D  3080               	movlw	128
  2538  022E  0256               	subwf	??_init_env,w
  2539  022F  1D03               	skipz
  2540  0230  2A33               	goto	u1295
  2541  0231  3014               	movlw	20
  2542  0232  0257               	subwf	init_env@i,w
  2543  0233                     u1295:	
  2544  0233  1C03               	skipc
  2545  0234  2A1D               	goto	l1719
  2546  0235                     l66:	
  2547                           
  2548                           ;main.c: 113:     else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1)
  2549  0235  0022               	movlb	2	; select bank2
  2550  0236  110D               	bcf	13,2	;volatile
  2551                           
  2552                           ;main.c: 116:         IOCCFbits.IOCCF1 = FALSE;
  2553  0237  0020               	movlb	0	; select bank0
  2554  0238  110E               	bcf	14,2	;volatile
  2555                           
  2556                           ;main.c: 119: 
  2557  0239  0021               	movlb	1	; select bank1
  2558  023A  140E               	bsf	14,0	;volatile
  2559                           
  2560                           ;main.c: 120:     if(INTCONbits.TMR0IF)
  2561  023B  0024               	movlb	4	; select bank4
  2562  023C  140E               	bsf	14,0	;volatile
  2563                           
  2564                           ;main.c: 123: 
  2565  023D  3183  2391         	fcall	_IIC_Init
  2566                           
  2567                           ;main.c: 126:             receive_decode();
  2568  023F  0020               	movlb	0	; select bank0
  2569  0240  140C               	bsf	12,0	;volatile
  2570  0241  0008               	return
  2571  0242                     __end_of_init_env:	
  2572                           
  2573                           	psect	text2
  2574  0391                     __ptext2:	
  2575 ;; *************** function _IIC_Init *****************
  2576 ;; Defined at:
  2577 ;;		line 8 in file "myiic.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		None
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    6
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_init_env
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _IIC_Init
  2607  0391                     _IIC_Init:	
  2608                           
  2609                           ;myiic.c: 10:     LATC3=1;
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _IIC_Init: []
  2613  0391  0022               	movlb	2	; select bank2
  2614  0392  158E               	bsf	14,3	;volatile
  2615                           
  2616                           ;myiic.c: 11:  LATC4=1;
  2617  0393  160E               	bsf	14,4	;volatile
  2618                           
  2619                           ;myiic.c: 13:     ODCONC3 = 1;
  2620  0394  0025               	movlb	5	; select bank5
  2621  0395  158E               	bsf	14,3	;volatile
  2622                           
  2623                           ;myiic.c: 14:     ODCONC4 = 1;
  2624  0396  160E               	bsf	14,4	;volatile
  2625                           
  2626                           ;myiic.c: 16:     TRISC4 = 0;
  2627  0397  0021               	movlb	1	; select bank1
  2628  0398  120E               	bcf	14,4	;volatile
  2629                           
  2630                           ;myiic.c: 17:     TRISC3 = 0;
  2631  0399  118E               	bcf	14,3	;volatile
  2632                           
  2633                           ;myiic.c: 19:  WPUC4 = 1;
  2634  039A  0024               	movlb	4	; select bank4
  2635  039B  160E               	bsf	14,4	;volatile
  2636                           
  2637                           ;myiic.c: 20:     WPUC3 = 1;
  2638  039C  158E               	bsf	14,3	;volatile
  2639  039D  0008               	return
  2640  039E                     __end_of_IIC_Init:	
  2641                           
  2642                           	psect	intentry
  2643  0004                     __pintentry:	
  2644 ;; *************** function _ISR *****************
  2645 ;; Defined at:
  2646 ;;		line 129 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    5
  2667 ;; This function calls:
  2668 ;;		___lwmod
  2669 ;;		_receive_decode
  2670 ;;		_update_time
  2671 ;; This function is called by:
  2672 ;;		Interrupt level 1
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676  0004                     _ISR:	
  2677                           
  2678                           ;incstack = 0
  2679  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2680                           
  2681                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2682  0005  3180               	pagesel	$
  2683                           
  2684                           ;main.c: 131:         {;main.c: 132:             history_key <<= 1;;main.c: 135:        
      +                               if(((0x03) == (history_key & (0x0f))) && (FALSE == g_data.g_flg_switch))
  2685  0006  0027               	movlb	7	; select bank7
  2686  0007  1C99               	btfss	25,1	;volatile
  2687  0008  281A               	goto	i1l76
  2688  0009  0020               	movlb	0	; select bank0
  2689  000A  0821               	movf	_g_data+1,w	;volatile
  2690  000B  1D03               	btfss	3,2
  2691  000C  281A               	goto	i1l76
  2692  000D  0320               	decf	_g_data,w	;volatile
  2693  000E  1D03               	btfss	3,2
  2694  000F  281A               	goto	i1l76
  2695                           
  2696                           ;main.c: 138:             };main.c: 140: 
  2697  0010  3001               	movlw	1
  2698  0011  00D4               	movwf	??_ISR
  2699  0012  0854               	movf	??_ISR,w
  2700  0013  00A1               	movwf	_g_data+1	;volatile
  2701                           
  2702                           ;main.c: 141:         INTCONbits.TMR0IF = 0;
  2703  0014  01A0               	clrf	_g_data	;volatile
  2704                           
  2705                           ;main.c: 142:         TMR0 = (217 + 14);
  2706  0015  110E               	bcf	14,2	;volatile
  2707                           
  2708                           ;main.c: 144:     }
  2709  0016  100B               	bcf	11,0	;volatile
  2710                           
  2711                           ;main.c: 145:     return;
  2712  0017  0027               	movlb	7	; select bank7
  2713  0018  1099               	bcf	25,1	;volatile
  2714                           
  2715                           ;main.c: 146: }
  2716  0019  2860               	goto	i1l77
  2717  001A                     i1l76:	
  2718                           ;main.c: 148: void main(void)
  2719                           
  2720                           ;main.c: 147: 
  2721                           
  2722  001A  180B               	btfsc	11,0	;volatile
  2723  001B  281F               	goto	i1l81
  2724  001C  0027               	movlb	7	; select bank7
  2725  001D  1C99               	btfss	25,1	;volatile
  2726  001E  2822               	goto	i1l78
  2727  001F                     i1l81:	
  2728                           
  2729                           ;main.c: 149: {;main.c: 150: 
  2730  001F  100B               	bcf	11,0	;volatile
  2731                           
  2732                           ;main.c: 151:     init_env();
  2733  0020  0027               	movlb	7	; select bank7
  2734  0021  1099               	bcf	25,1	;volatile
  2735  0022                     i1l78:	
  2736                           ;main.c: 152: 
  2737                           
  2738                           
  2739                           ;main.c: 155: }
  2740  0022  1D0B               	btfss	11,2	;volatile
  2741  0023  2860               	goto	i1l77
  2742  0024  3182  228D  3180   	fcall	_update_time
  2743  0027  0020               	movlb	0	; select bank0
  2744  0028  0321               	decf	_g_data+1,w	;volatile
  2745  0029  1D03               	btfss	3,2
  2746  002A  282E               	goto	i1l1889
  2747  002B  3180  206F  3180   	fcall	_receive_decode
  2748  002E                     i1l1889:	
  2749  002E  300A               	movlw	10
  2750  002F  00F0               	movwf	___lwmod@divisor
  2751  0030  3000               	movlw	0
  2752  0031  00F1               	movwf	___lwmod@divisor+1
  2753  0032  0020               	movlb	0	; select bank0
  2754  0033  0844               	movf	ISR@key_time_cnt+1,w
  2755  0034  00D5               	movwf	??_ISR+1
  2756  0035  0843               	movf	ISR@key_time_cnt,w
  2757  0036  00D4               	movwf	??_ISR
  2758  0037  0AC3               	incf	ISR@key_time_cnt,f
  2759  0038  1903               	skipnz
  2760  0039  0AC4               	incf	ISR@key_time_cnt+1,f
  2761  003A  0854               	movf	??_ISR,w
  2762  003B  00F2               	movwf	___lwmod@dividend
  2763  003C  0855               	movf	??_ISR+1,w
  2764  003D  00F3               	movwf	___lwmod@dividend+1
  2765  003E  3183  2306  3180   	fcall	___lwmod
  2766  0041  0870               	movf	?___lwmod,w
  2767  0042  0471               	iorwf	?___lwmod+1,w
  2768  0043  1D03               	btfss	3,2
  2769  0044  285C               	goto	i1l1901
  2770  0045  1003               	clrc
  2771  0046  0020               	movlb	0	; select bank0
  2772  0047  0DC7               	rlf	ISR@history_key,f
  2773  0048  0E0E               	swapf	14,w	;volatile
  2774  0049  0C89               	rrf	9,f
  2775  004A  3901               	andlw	1
  2776  004B  00D4               	movwf	??_ISR
  2777  004C  0854               	movf	??_ISR,w
  2778  004D  04C7               	iorwf	ISR@history_key,f
  2779  004E  300F               	movlw	15
  2780  004F  0547               	andwf	ISR@history_key,w
  2781  0050  00D4               	movwf	??_ISR
  2782  0051  3003               	movlw	3
  2783  0052  0654               	xorwf	??_ISR,w
  2784  0053  1D03               	btfss	3,2
  2785  0054  285C               	goto	i1l1901
  2786  0055  0820               	movf	_g_data,w	;volatile
  2787  0056  1D03               	btfss	3,2
  2788  0057  285C               	goto	i1l1901
  2789  0058  3001               	movlw	1
  2790  0059  00D4               	movwf	??_ISR
  2791  005A  0854               	movf	??_ISR,w
  2792  005B  00A0               	movwf	_g_data	;volatile
  2793  005C                     i1l1901:	
  2794  005C  110B               	bcf	11,2	;volatile
  2795  005D  30E7               	movlw	231
  2796  005E  0020               	movlb	0	; select bank0
  2797  005F  0095               	movwf	21	;volatile
  2798  0060                     i1l77:	
  2799  0060  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2800  0061  0009               	retfie
  2801  0062                     __end_of_ISR:	
  2802                           
  2803                           	psect	text4
  2804  028D                     __ptext4:	
  2805 ;; *************** function _update_time *****************
  2806 ;; Defined at:
  2807 ;;		line 14 in file "update_time.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    4
  2828 ;; This function calls:
  2829 ;;		_update_display
  2830 ;; This function is called by:
  2831 ;;		_ISR
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _update_time
  2837  028D                     _update_time:	
  2838                           
  2839                           ;update_time.c: 15:     g_data.g_time_10ms++;
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  2843  028D  3001               	movlw	1
  2844  028E  00FD               	movwf	??_update_time
  2845  028F  087D               	movf	??_update_time,w
  2846  0290  0020               	banksel	_g_data
  2847  0291  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  2848                           
  2849                           ;update_time.c: 17:     if( 50 == g_data.g_time_10ms ){
  2850  0292  3032               	movlw	50
  2851  0293  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2852  0294  1D03               	btfss	3,2
  2853  0295  2A99               	goto	i1l1733
  2854                           
  2855                           ;update_time.c: 18:         LATBbits.LATB3 = 1;
  2856  0296  0022               	movlb	2	; select bank2
  2857  0297  158D               	bsf	13,3	;volatile
  2858                           
  2859                           ;update_time.c: 19:     }else if( 100 == g_data.g_time_10ms ){
  2860  0298  2AA0               	goto	i1l1737
  2861  0299                     i1l1733:	
  2862  0299  3064               	movlw	100
  2863  029A  0020               	banksel	_g_data
  2864  029B  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2865  029C  1D03               	btfss	3,2
  2866  029D  2AA0               	goto	i1l1737
  2867                           
  2868                           ;update_time.c: 20:         LATBbits.LATB3 = 0;
  2869  029E  0022               	movlb	2	; select bank2
  2870  029F  118D               	bcf	13,3	;volatile
  2871  02A0                     i1l1737:	
  2872                           ;update_time.c: 21:     }
  2873                           
  2874                           
  2875                           ;update_time.c: 23:     if(g_data.g_time_10ms == 100)
  2876  02A0  3064               	movlw	100
  2877  02A1  0020               	banksel	_g_data
  2878  02A2  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  2879  02A3  1D03               	btfss	3,2
  2880  02A4  0008               	return
  2881                           
  2882                           ;update_time.c: 24:     {;update_time.c: 25:         g_data.g_time_10ms = 0;
  2883  02A5  3000               	movlw	0
  2884  02A6  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  2885                           
  2886                           ;update_time.c: 26:         g_data.g_time_s++;
  2887  02A7  3001               	movlw	1
  2888  02A8  00FD               	movwf	??_update_time
  2889  02A9  087D               	movf	??_update_time,w
  2890  02AA  0020               	banksel	_g_data
  2891  02AB  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  2892                           
  2893                           ;update_time.c: 28:         if(g_data.g_time_s == 60)
  2894  02AC  303C               	movlw	60
  2895  02AD  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  2896  02AE  1D03               	btfss	3,2
  2897  02AF  0008               	return
  2898                           
  2899                           ;update_time.c: 29:         {;update_time.c: 30:             g_data.g_time_m++;
  2900  02B0  3001               	movlw	1
  2901  02B1  00FD               	movwf	??_update_time
  2902  02B2  087D               	movf	??_update_time,w
  2903  02B3  0020               	banksel	_g_data
  2904  02B4  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  2905                           
  2906                           ;update_time.c: 31:             g_data.g_time_s = 0;
  2907  02B5  3000               	movlw	0
  2908  02B6  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  2909                           
  2910                           ;update_time.c: 33:             if(g_data.g_time_m == 60)
  2911  02B7  303C               	movlw	60
  2912  02B8  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  2913  02B9  1D03               	btfss	3,2
  2914  02BA  2AC8               	goto	i1l1753
  2915                           
  2916                           ;update_time.c: 34:             {;update_time.c: 35:                 g_data.g_time_h++;
  2917  02BB  3001               	movlw	1
  2918  02BC  00FD               	movwf	??_update_time
  2919  02BD  087D               	movf	??_update_time,w
  2920  02BE  0020               	banksel	_g_data
  2921  02BF  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  2922                           
  2923                           ;update_time.c: 36:                 g_data.g_time_m = 0;
  2924  02C0  3000               	movlw	0
  2925  02C1  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  2926                           
  2927                           ;update_time.c: 38:                 if(g_data.g_time_h == 24)
  2928  02C2  3018               	movlw	24
  2929  02C3  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  2930  02C4  1D03               	btfss	3,2
  2931  02C5  2AC8               	goto	i1l1753
  2932                           
  2933                           ;update_time.c: 39:                 {;update_time.c: 40:                     g_data.g_ti
      +                          me_h = 0;
  2934  02C6  3000               	movlw	0
  2935  02C7  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  2936  02C8                     i1l1753:	
  2937                           ;update_time.c: 42:             }
  2938                           
  2939                           ;update_time.c: 41:                 }
  2940                           
  2941                           
  2942                           ;update_time.c: 44:             update_display();
  2943  02C8  3183  2381         	fcall	_update_display
  2944                           
  2945                           ;update_time.c: 46:     }
  2946                           
  2947                           ;update_time.c: 45:         }
  2948  02CA  0008               	return
  2949  02CB                     __end_of_update_time:	
  2950                           ;update_time.c: 47:     return;
  2951                           
  2952                           
  2953                           	psect	text5
  2954  006F                     __ptext5:	
  2955 ;; *************** function _receive_decode *****************
  2956 ;; Defined at:
  2957 ;;		line 99 in file "receive_decode.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  i               2    8[BANK0 ] int 
  2962 ;;  last_time_m     2    6[BANK0 ] unsigned short 
  2963 ;;  last_time_h     2    4[BANK0 ] unsigned short 
  2964 ;;  read_value      1   10[BANK0 ] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;Total ram usage:       11 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    4
  2981 ;; This function calls:
  2982 ;;		_check_err
  2983 ;;		_test_get_number
  2984 ;;		_times2number
  2985 ;;		_update_display
  2986 ;; This function is called by:
  2987 ;;		_ISR
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _receive_decode
  2993  006F                     _receive_decode:	
  2994                           
  2995                           ;receive_decode.c: 101:     if(PORTCbits.RC1 == PIN_HIGH)
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2999  006F  0020               	movlb	0	; select bank0
  3000  0070  1C8E               	btfss	14,1	;volatile
  3001  0071  2877               	goto	i1l156
  3002                           
  3003                           ;receive_decode.c: 102:     {;receive_decode.c: 103:         g_data.g_high_level_times++
      +                          ;
  3004  0072  3001               	movlw	1
  3005  0073  0020               	banksel	_g_data
  3006  0074  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3007  0075  3000               	movlw	0
  3008  0076  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3009  0077                     i1l156:	
  3010                           ;receive_decode.c: 104:     }
  3011                           
  3012                           
  3013                           ;receive_decode.c: 106:     g_data.g_all_level_times++;
  3014  0077  3001               	movlw	1
  3015  0078  0020               	banksel	_g_data
  3016  0079  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3017  007A  3000               	movlw	0
  3018  007B  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3019                           
  3020                           ;receive_decode.c: 110:     if(g_data.g_all_level_times < 100)
  3021  007C  3000               	movlw	0
  3022  007D  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3023  007E  3064               	movlw	100
  3024  007F  1903               	skipnz
  3025  0080  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3026  0081  1C03               	btfss	3,0
  3027  0082  0008               	return
  3028                           
  3029                           ;receive_decode.c: 115:     u8 read_value = times2number(g_data.g_high_level_times);
  3030                           
  3031                           ;receive_decode.c: 113:     }
  3032                           
  3033                           ;receive_decode.c: 111:     {;receive_decode.c: 112:         return;
  3034  0083  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3035  0084  00F1               	movwf	times2number@high_level_times+1
  3036  0085  0020               	banksel	_g_data
  3037  0086  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3038  0087  00F0               	movwf	times2number@high_level_times
  3039  0088  3182  2242  3180   	fcall	_times2number
  3040  008B  0020               	movlb	0	; select bank0
  3041  008C  00C9               	movwf	??_receive_decode
  3042  008D  0849               	movf	??_receive_decode,w
  3043  008E  00D3               	movwf	receive_decode@read_value
  3044                           
  3045                           ;receive_decode.c: 117:     test_get_number(read_value);
  3046  008F  0853               	movf	receive_decode@read_value,w
  3047  0090  3182  22CB  3180   	fcall	_test_get_number
  3048                           
  3049                           ;receive_decode.c: 119:     g_data.g_all_level_times = 0;
  3050  0093  0020               	banksel	_g_data
  3051  0094  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3052  0095  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3053                           
  3054                           ;receive_decode.c: 120:     g_data.g_high_level_times = 0;
  3055  0096  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3056  0097  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3057                           
  3058                           ;receive_decode.c: 122:     if(read_value == 5)
  3059  0098  3005               	movlw	5
  3060  0099  0020               	movlb	0	; select bank0
  3061  009A  0653               	xorwf	receive_decode@read_value,w
  3062  009B  1D03               	btfss	3,2
  3063  009C  28A7               	goto	i1l1775
  3064                           
  3065                           ;receive_decode.c: 123:     {;receive_decode.c: 125:         g_data.g_find_recv_start = 
      +                          TRUE;
  3066  009D  3001               	movlw	1
  3067  009E  0020               	banksel	_g_data
  3068  009F  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3069                           
  3070                           ;receive_decode.c: 126:         g_data.g_recv_buf[CODE_P0] = 0;
  3071  00A0  3000               	movlw	0
  3072  00A1  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3073                           
  3074                           ;receive_decode.c: 127:         g_data.g_recv_count = CODE_P1;
  3075  00A2  3000               	movlw	0
  3076  00A3  00AC               	movwf	((_g_data+1)& (0+127)+11)	;volatile
  3077  00A4  3001               	movlw	1
  3078  00A5  00AB               	movwf	(_g_data& (0+127)+11)	;volatile
  3079                           
  3080                           ;receive_decode.c: 128:         return;
  3081  00A6  0008               	return
  3082  00A7                     i1l1775:	
  3083                           ;receive_decode.c: 129:     }
  3084                           
  3085                           
  3086                           ;receive_decode.c: 131:     if(g_data.g_find_recv_start == FALSE || (read_value == 4))
  3087  00A7  0020               	banksel	_g_data
  3088  00A8  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3089  00A9  1903               	btfsc	3,2
  3090  00AA  0008               	return
  3091  00AB  3004               	movlw	4
  3092  00AC  0020               	movlb	0	; select bank0
  3093  00AD  0653               	xorwf	receive_decode@read_value,w
  3094  00AE  1903               	btfsc	3,2
  3095  00AF  0008               	return
  3096                           
  3097                           ;receive_decode.c: 138:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3098                           
  3099                           ;receive_decode.c: 136:     }
  3100                           
  3101                           ;receive_decode.c: 132:     {;receive_decode.c: 135:         return;
  3102  00B0  3020               	movlw	low _g_data
  3103  00B1  0086               	movwf	6
  3104  00B2  3000               	movlw	high _g_data
  3105  00B3  0087               	movwf	7
  3106  00B4  314B               	addfsr 1,11
  3107  00B5  302D               	movlw	low (_g_data+13)
  3108  00B6  00C9               	movwf	??_receive_decode
  3109  00B7  3000               	movlw	high (_g_data+13)
  3110  00B8  00CA               	movwf	??_receive_decode+1
  3111  00B9  3F40               	moviw [0]fsr1
  3112  00BA  0749               	addwf	??_receive_decode,w
  3113  00BB  00CB               	movwf	??_receive_decode+2
  3114  00BC  3F41               	moviw [1]fsr1
  3115  00BD  3D4A               	addwfc	??_receive_decode+1,w
  3116  00BE  00CC               	movwf	??_receive_decode+3
  3117  00BF  084B               	movf	??_receive_decode+2,w
  3118  00C0  0086               	movwf	6
  3119  00C1  084C               	movf	??_receive_decode+3,w
  3120  00C2  0087               	movwf	7
  3121  00C3  0853               	movf	receive_decode@read_value,w
  3122  00C4  0081               	movwf	1
  3123  00C5  3001               	movlw	1
  3124  00C6  0020               	banksel	_g_data
  3125  00C7  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3126  00C8  3000               	movlw	0
  3127  00C9  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3128                           
  3129                           ;receive_decode.c: 139:     if(g_data.g_recv_count <= CODE_P3)
  3130  00CA  3000               	movlw	0
  3131  00CB  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3132  00CC  300B               	movlw	11
  3133  00CD  1903               	skipnz
  3134  00CE  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3135  00CF  1C03               	btfss	3,0
  3136  00D0  0008               	return
  3137                           
  3138                           ;receive_decode.c: 144:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE
      +                          _P2] != 0)
  3139                           
  3140                           ;receive_decode.c: 142:     }
  3141                           
  3142                           ;receive_decode.c: 140:     {;receive_decode.c: 141:         return;
  3143  00D1  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3144  00D2  1903               	btfsc	3,2
  3145  00D3  28DE               	goto	i1l1797
  3146  00D4  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3147  00D5  1903               	btfsc	3,2
  3148  00D6  28DE               	goto	i1l1797
  3149                           
  3150                           ;receive_decode.c: 145:     {;receive_decode.c: 146:         g_data.g_find_recv_start = 
      +                          FALSE;
  3151  00D7  3000               	movlw	0
  3152  00D8  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3153                           
  3154                           ;receive_decode.c: 147:         g_data.g_isDecoding = 0;
  3155  00D9  3000               	movlw	0
  3156  00DA  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3157                           
  3158                           ;receive_decode.c: 148:         g_data.g_recv_count = 0;
  3159  00DB  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3160  00DC  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3161                           
  3162                           ;receive_decode.c: 149:         return;
  3163  00DD  0008               	return
  3164  00DE                     i1l1797:	
  3165                           ;receive_decode.c: 150:     }
  3166                           
  3167                           
  3168                           ;receive_decode.c: 152:     u16 last_time_h = g_data.g_time_h;
  3169  00DE  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3170  00DF  0020               	movlb	0	; select bank0
  3171  00E0  00C9               	movwf	??_receive_decode
  3172  00E1  01CA               	clrf	??_receive_decode+1
  3173  00E2  0849               	movf	??_receive_decode,w
  3174  00E3  00CD               	movwf	receive_decode@last_time_h
  3175  00E4  084A               	movf	??_receive_decode+1,w
  3176  00E5  00CE               	movwf	receive_decode@last_time_h+1
  3177                           
  3178                           ;receive_decode.c: 153:     u16 last_time_m = g_data.g_time_m;
  3179  00E6  0020               	banksel	_g_data
  3180  00E7  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3181  00E8  0020               	movlb	0	; select bank0
  3182  00E9  00C9               	movwf	??_receive_decode
  3183  00EA  01CA               	clrf	??_receive_decode+1
  3184  00EB  0849               	movf	??_receive_decode,w
  3185  00EC  00CF               	movwf	receive_decode@last_time_m
  3186  00ED  084A               	movf	??_receive_decode+1,w
  3187  00EE  00D0               	movwf	receive_decode@last_time_m+1
  3188                           
  3189                           ;receive_decode.c: 156:         if(check_err())
  3190                           
  3191                           ;receive_decode.c: 155:     do{
  3192  00EF  3181  2147  3180   	fcall	_check_err
  3193  00F2  0870               	movf	?_check_err,w
  3194  00F3  0471               	iorwf	?_check_err+1,w
  3195  00F4  1903               	btfsc	3,2
  3196  00F5  28FF               	goto	i1l1803
  3197                           
  3198                           ;receive_decode.c: 157:         {;receive_decode.c: 159:             g_data.g_time_h = l
      +                          ast_time_h;
  3199  00F6  0020               	movlb	0	; select bank0
  3200  00F7  084D               	movf	receive_decode@last_time_h,w
  3201  00F8  0020               	banksel	_g_data
  3202  00F9  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3203                           
  3204                           ;receive_decode.c: 160:             g_data.g_time_m = last_time_m;
  3205  00FA  0020               	movlb	0	; select bank0
  3206  00FB  084F               	movf	receive_decode@last_time_m,w
  3207  00FC  0020               	banksel	_g_data
  3208  00FD  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3209                           
  3210                           ;receive_decode.c: 161:             break;
  3211  00FE  291C               	goto	i1l1809
  3212  00FF                     i1l1803:	
  3213                           ;receive_decode.c: 162:         }
  3214                           
  3215                           
  3216                           ;receive_decode.c: 165:         if(last_time_h != g_data.g_time_h || last_time_m != g_da
      +                          ta.g_time_m)
  3217  00FF  0020               	banksel	_g_data
  3218  0100  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3219  0101  0020               	movlb	0	; select bank0
  3220  0102  00C9               	movwf	??_receive_decode
  3221  0103  01CA               	clrf	??_receive_decode+1
  3222  0104  084E               	movf	receive_decode@last_time_h+1,w
  3223  0105  064A               	xorwf	??_receive_decode+1,w
  3224  0106  1D03               	skipz
  3225  0107  290A               	goto	u145_25
  3226  0108  084D               	movf	receive_decode@last_time_h,w
  3227  0109  0649               	xorwf	??_receive_decode,w
  3228  010A                     u145_25:	
  3229  010A  1D03               	skipz
  3230  010B  2919               	goto	i1l1807
  3231  010C  0020               	banksel	_g_data
  3232  010D  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3233  010E  0020               	movlb	0	; select bank0
  3234  010F  00C9               	movwf	??_receive_decode
  3235  0110  01CA               	clrf	??_receive_decode+1
  3236  0111  0850               	movf	receive_decode@last_time_m+1,w
  3237  0112  064A               	xorwf	??_receive_decode+1,w
  3238  0113  1D03               	skipz
  3239  0114  2917               	goto	u146_25
  3240  0115  084F               	movf	receive_decode@last_time_m,w
  3241  0116  0649               	xorwf	??_receive_decode,w
  3242  0117                     u146_25:	
  3243  0117  1903               	skipnz
  3244  0118  291C               	goto	i1l1809
  3245  0119                     i1l1807:	
  3246                           
  3247                           ;receive_decode.c: 166:         {;receive_decode.c: 167:             update_display();
  3248  0119  3183  2381  3180   	fcall	_update_display
  3249  011C                     i1l1809:	
  3250                           ;receive_decode.c: 169:     }while(0);
  3251                           
  3252                           ;receive_decode.c: 168:         }
  3253                           
  3254                           
  3255                           ;receive_decode.c: 173:     g_data.g_find_recv_start = FALSE;
  3256  011C  3000               	movlw	0
  3257  011D  0020               	banksel	_g_data
  3258  011E  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3259                           
  3260                           ;receive_decode.c: 175:     g_data.g_isDecoding = 0;
  3261  011F  3000               	movlw	0
  3262  0120  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3263                           
  3264                           ;receive_decode.c: 176:     g_data.g_recv_count = 0;
  3265  0121  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3266  0122  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3267                           
  3268                           ;receive_decode.c: 177:     for(int i = 0;i < 20; i++)
  3269  0123  0020               	movlb	0	; select bank0
  3270  0124  01D1               	clrf	receive_decode@i
  3271  0125  01D2               	clrf	receive_decode@i+1
  3272  0126                     L1:	
  3273  0126  0852               	movf	receive_decode@i+1,w
  3274  0127  3A80               	xorlw	128
  3275  0128  00C9               	movwf	??_receive_decode
  3276  0129  3080               	movlw	128
  3277  012A  0249               	subwf	??_receive_decode,w
  3278  012B  1D03               	skipz
  3279  012C  292F               	goto	u147_25
  3280  012D  3014               	movlw	20
  3281  012E  0251               	subwf	receive_decode@i,w
  3282  012F                     u147_25:	
  3283  012F  1803               	btfsc	3,0
  3284  0130  0008               	return
  3285                           
  3286                           ;receive_decode.c: 178:     {;receive_decode.c: 179:         g_data.g_recv_buf[i] = 5;
  3287  0131  302D               	movlw	low (_g_data+13)
  3288  0132  0020               	movlb	0	; select bank0
  3289  0133  00C9               	movwf	??_receive_decode
  3290  0134  3000               	movlw	high (_g_data+13)
  3291  0135  00CA               	movwf	??_receive_decode+1
  3292  0136  0851               	movf	receive_decode@i,w
  3293  0137  0749               	addwf	??_receive_decode,w
  3294  0138  00CB               	movwf	??_receive_decode+2
  3295  0139  0852               	movf	receive_decode@i+1,w
  3296  013A  3D4A               	addwfc	??_receive_decode+1,w
  3297  013B  00CC               	movwf	??_receive_decode+3
  3298  013C  084B               	movf	??_receive_decode+2,w
  3299  013D  0086               	movwf	6
  3300  013E  084C               	movf	??_receive_decode+3,w
  3301  013F  0087               	movwf	7
  3302  0140  3005               	movlw	5
  3303  0141  0081               	movwf	1
  3304                           
  3305                           ;receive_decode.c: 180:     }
  3306  0142  3001               	movlw	1
  3307  0143  07D1               	addwf	receive_decode@i,f
  3308  0144  3000               	movlw	0
  3309  0145  3DD2               	addwfc	receive_decode@i+1,f
  3310  0146  2926               	goto	L1
  3311  0147                     __end_of_receive_decode:	
  3312                           ;receive_decode.c: 181:     return;
  3313                           
  3314                           
  3315                           	psect	text6
  3316  0381                     __ptext6:	
  3317 ;; *************** function _update_display *****************
  3318 ;; Defined at:
  3319 ;;		line 62 in file "update_display.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;Total ram usage:        3 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    3
  3340 ;; This function calls:
  3341 ;;		_write_once
  3342 ;; This function is called by:
  3343 ;;		_receive_decode
  3344 ;;		_update_time
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function _update_display
  3350  0381                     _update_display:	
  3351                           
  3352                           ;update_display.c: 73:     write_once(0xa5, 0x5a, 0xa5, 0x5a);
  3353                           
  3354                           ;incstack = 0
  3355                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  3356  0381  305A               	movlw	90
  3357  0382  00FA               	movwf	??_update_display
  3358  0383  087A               	movf	??_update_display,w
  3359  0384  00F6               	movwf	write_once@HR
  3360  0385  30A5               	movlw	165
  3361  0386  00FB               	movwf	??_update_display+1
  3362  0387  087B               	movf	??_update_display+1,w
  3363  0388  00F7               	movwf	write_once@ML
  3364  0389  305A               	movlw	90
  3365  038A  00FC               	movwf	??_update_display+2
  3366  038B  087C               	movf	??_update_display+2,w
  3367  038C  00F8               	movwf	write_once@MR
  3368  038D  30A5               	movlw	165
  3369  038E  3183  2359         	fcall	_write_once
  3370  0390  0008               	return
  3371  0391                     __end_of_update_display:	
  3372                           ;update_display.c: 74:     return;
  3373                           
  3374                           
  3375                           	psect	text7
  3376  0359                     __ptext7:	
  3377 ;; *************** function _write_once *****************
  3378 ;; Defined at:
  3379 ;;		line 50 in file "update_display.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  HL              1    wreg     unsigned char 
  3382 ;;  HR              1    6[COMMON] unsigned char 
  3383 ;;  ML              1    7[COMMON] unsigned char 
  3384 ;;  MR              1    8[COMMON] unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  HL              1    9[COMMON] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3396 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;Total ram usage:        4 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    2
  3403 ;; This function calls:
  3404 ;;		_control595_delay
  3405 ;;		_write_byte
  3406 ;; This function is called by:
  3407 ;;		_update_display
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _write_once
  3413  0359                     _write_once:	
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  3417                           ;write_once@HL stored from wreg
  3418  0359  00F9               	movwf	write_once@HL
  3419                           
  3420                           ;update_display.c: 52:     write_byte(HL);
  3421  035A  0879               	movf	write_once@HL,w
  3422  035B  3183  2332  3183   	fcall	_write_byte
  3423                           
  3424                           ;update_display.c: 53:     write_byte(HR);
  3425  035E  0876               	movf	write_once@HR,w
  3426  035F  3183  2332  3183   	fcall	_write_byte
  3427                           
  3428                           ;update_display.c: 54:     write_byte(ML);
  3429  0362  0877               	movf	write_once@ML,w
  3430  0363  3183  2332  3183   	fcall	_write_byte
  3431                           
  3432                           ;update_display.c: 55:     write_byte(MR);
  3433  0366  0878               	movf	write_once@MR,w
  3434  0367  3183  2332  3183   	fcall	_write_byte
  3435                           
  3436                           ;update_display.c: 57:     LATBbits.LATB1 = PIN_HIGH;
  3437  036A  0022               	movlb	2	; select bank2
  3438  036B  148D               	bsf	13,1	;volatile
  3439                           
  3440                           ;update_display.c: 58:  control595_delay();
  3441  036C  3183  239E         	fcall	_control595_delay
  3442                           
  3443                           ;update_display.c: 59:     LATBbits.LATB1 = PIN_LOW;
  3444  036E  0022               	movlb	2	; select bank2
  3445  036F  108D               	bcf	13,1	;volatile
  3446  0370  0008               	return
  3447  0371                     __end_of_write_once:	
  3448                           
  3449                           	psect	text8
  3450  0332                     __ptext8:	
  3451 ;; *************** function _write_byte *****************
  3452 ;; Defined at:
  3453 ;;		line 38 in file "update_display.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  data            1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  data            1    4[COMMON] unsigned char 
  3458 ;;  i               1    5[COMMON] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:        4 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    1
  3475 ;; This function calls:
  3476 ;;		_control595_delay
  3477 ;; This function is called by:
  3478 ;;		_write_once
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           
  3483                           ;psect for function _write_byte
  3484  0332                     _write_byte:	
  3485                           
  3486                           ;incstack = 0
  3487                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3488                           ;write_byte@data stored from wreg
  3489  0332  00F4               	movwf	write_byte@data
  3490                           
  3491                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  3492  0333  01F5               	clrf	write_byte@i
  3493  0334                     L2:	
  3494  0334  3008               	movlw	8
  3495  0335  0275               	subwf	write_byte@i,w
  3496  0336  1803               	btfsc	3,0
  3497  0337  0008               	return
  3498                           
  3499                           ;update_display.c: 41:   LATBbits.LATB5 = (data & 0x80) >> 7;
  3500  0338  0874               	movf	write_byte@data,w
  3501  0339  00F2               	movwf	??_write_byte
  3502  033A  3007               	movlw	7
  3503  033B                     u86_25:	
  3504  033B  36F2               	lsrf	??_write_byte,f
  3505  033C  0B89               	decfsz	9,f
  3506  033D  2B3B               	goto	u86_25
  3507  033E  0872               	movf	??_write_byte,w
  3508  033F  3901               	andlw	1
  3509  0340  00F3               	movwf	??_write_byte+1
  3510  0341  0EF3               	swapf	??_write_byte+1,f
  3511  0342  0DF3               	rlf	??_write_byte+1,f
  3512  0343  0022               	movlb	2	; select bank2
  3513  0344  080D               	movf	13,w	;volatile
  3514  0345  0673               	xorwf	??_write_byte+1,w
  3515  0346  39DF               	andlw	-33
  3516  0347  0673               	xorwf	??_write_byte+1,w
  3517  0348  008D               	movwf	13	;volatile
  3518                           
  3519                           ;update_display.c: 42:         LATBbits.LATB0 = PIN_LOW;
  3520  0349  100D               	bcf	13,0	;volatile
  3521                           
  3522                           ;update_display.c: 43:   control595_delay();
  3523  034A  3183  239E  3183   	fcall	_control595_delay
  3524                           
  3525                           ;update_display.c: 44:         LATBbits.LATB0 = PIN_HIGH;
  3526  034D  0022               	movlb	2	; select bank2
  3527  034E  140D               	bsf	13,0	;volatile
  3528                           
  3529                           ;update_display.c: 45:   control595_delay();
  3530  034F  3183  239E  3183   	fcall	_control595_delay
  3531                           
  3532                           ;update_display.c: 46:         data <<= 1;
  3533  0352  1003               	clrc
  3534  0353  0DF4               	rlf	write_byte@data,f
  3535                           
  3536                           ;update_display.c: 47:     }
  3537  0354  3001               	movlw	1
  3538  0355  00F2               	movwf	??_write_byte
  3539  0356  0872               	movf	??_write_byte,w
  3540  0357  07F5               	addwf	write_byte@i,f
  3541  0358  2B34               	goto	L2
  3542  0359                     __end_of_write_byte:	
  3543                           
  3544                           	psect	text9
  3545  039E                     __ptext9:	
  3546 ;; *************** function _control595_delay *****************
  3547 ;; Defined at:
  3548 ;;		line 21 in file "update_display.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  times           1    1[COMMON] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3566 ;;Total ram usage:        2 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_write_byte
  3572 ;;		_write_once
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _control595_delay
  3578  039E                     _control595_delay:	
  3579                           
  3580                           ;update_display.c: 22:    u8 times = 10;
  3581                           
  3582                           ;incstack = 0
  3583                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  3584  039E  300A               	movlw	10
  3585  039F  00F0               	movwf	??_control595_delay
  3586  03A0  0870               	movf	??_control595_delay,w
  3587  03A1  00F1               	movwf	control595_delay@times
  3588  03A2                     i1l201:	
  3589                           ;update_display.c: 26:    }
  3590                           
  3591                           ;update_display.c: 23:    while(times > 0){
  3592                           
  3593                           
  3594                           ;update_display.c: 23:    while(times > 0){
  3595  03A2  0871               	movf	control595_delay@times,w
  3596  03A3  1903               	btfsc	3,2
  3597  03A4  0008               	return
  3598                           
  3599                           ;update_display.c: 24:     __nop();
  3600  03A5  0000               	nop
  3601                           
  3602                           ;update_display.c: 25:        times--;
  3603  03A6  3001               	movlw	1
  3604  03A7  02F1               	subwf	control595_delay@times,f
  3605  03A8  2BA2               	goto	i1l201
  3606  03A9                     __end_of_control595_delay:	
  3607                           
  3608                           	psect	text10
  3609  0242                     __ptext10:	
  3610 ;; *************** function _times2number *****************
  3611 ;; Defined at:
  3612 ;;		line 14 in file "receive_decode.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  high_level_t    2    0[COMMON] unsigned short 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      unsigned char 
  3619 ;; Registers used:
  3620 ;;		wreg
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_receive_decode
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _times2number
  3641  0242                     _times2number:	
  3642                           
  3643                           ;receive_decode.c: 15:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  3644                           
  3645                           ;incstack = 0
  3646                           ; Regs used in _times2number: [wreg]
  3647  0242  3000               	movlw	0
  3648  0243  0271               	subwf	times2number@high_level_times+1,w
  3649  0244  3005               	movlw	5
  3650  0245  1903               	skipnz
  3651  0246  0270               	subwf	times2number@high_level_times,w
  3652  0247  1C03               	skipc
  3653  0248  2A52               	goto	i1l1443
  3654  0249  3000               	movlw	0
  3655  024A  0271               	subwf	times2number@high_level_times+1,w
  3656  024B  300F               	movlw	15
  3657  024C  1903               	skipnz
  3658  024D  0270               	subwf	times2number@high_level_times,w
  3659  024E  1803               	skipnc
  3660  024F  2A52               	goto	i1l1443
  3661                           
  3662                           ;receive_decode.c: 17:         return 0;
  3663  0250  3000               	movlw	0
  3664                           
  3665                           ;receive_decode.c: 18:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  3666  0251  0008               	return
  3667  0252                     i1l1443:	
  3668  0252  3000               	movlw	0
  3669  0253  0271               	subwf	times2number@high_level_times+1,w
  3670  0254  300F               	movlw	15
  3671  0255  1903               	skipnz
  3672  0256  0270               	subwf	times2number@high_level_times,w
  3673  0257  1C03               	skipc
  3674  0258  2A62               	goto	i1l1453
  3675  0259  3000               	movlw	0
  3676  025A  0271               	subwf	times2number@high_level_times+1,w
  3677  025B  3019               	movlw	25
  3678  025C  1903               	skipnz
  3679  025D  0270               	subwf	times2number@high_level_times,w
  3680  025E  1803               	skipnc
  3681  025F  2A62               	goto	i1l1453
  3682                           
  3683                           ;receive_decode.c: 20:         return 1;
  3684  0260  3001               	movlw	1
  3685                           
  3686                           ;receive_decode.c: 21:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  3687  0261  0008               	return
  3688  0262                     i1l1453:	
  3689  0262  3000               	movlw	0
  3690  0263  0271               	subwf	times2number@high_level_times+1,w
  3691  0264  3019               	movlw	25
  3692  0265  1903               	skipnz
  3693  0266  0270               	subwf	times2number@high_level_times,w
  3694  0267  1C03               	skipc
  3695  0268  2A72               	goto	i1l1463
  3696  0269  3000               	movlw	0
  3697  026A  0271               	subwf	times2number@high_level_times+1,w
  3698  026B  3023               	movlw	35
  3699  026C  1903               	skipnz
  3700  026D  0270               	subwf	times2number@high_level_times,w
  3701  026E  1803               	skipnc
  3702  026F  2A72               	goto	i1l1463
  3703                           
  3704                           ;receive_decode.c: 23:         return 2;
  3705  0270  3002               	movlw	2
  3706                           
  3707                           ;receive_decode.c: 24:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  3708  0271  0008               	return
  3709  0272                     i1l1463:	
  3710  0272  3000               	movlw	0
  3711  0273  0271               	subwf	times2number@high_level_times+1,w
  3712  0274  3023               	movlw	35
  3713  0275  1903               	skipnz
  3714  0276  0270               	subwf	times2number@high_level_times,w
  3715  0277  1C03               	skipc
  3716  0278  2A82               	goto	i1l1473
  3717  0279  3000               	movlw	0
  3718  027A  0271               	subwf	times2number@high_level_times+1,w
  3719  027B  302D               	movlw	45
  3720  027C  1903               	skipnz
  3721  027D  0270               	subwf	times2number@high_level_times,w
  3722  027E  1803               	skipnc
  3723  027F  2A82               	goto	i1l1473
  3724                           
  3725                           ;receive_decode.c: 26:         return 3;
  3726  0280  3003               	movlw	3
  3727                           
  3728                           ;receive_decode.c: 27:     }else if(high_level_times >= 40 + 5){
  3729  0281  0008               	return
  3730  0282                     i1l1473:	
  3731  0282  3000               	movlw	0
  3732  0283  0271               	subwf	times2number@high_level_times+1,w
  3733  0284  302D               	movlw	45
  3734  0285  1903               	skipnz
  3735  0286  0270               	subwf	times2number@high_level_times,w
  3736  0287  1C03               	skipc
  3737  0288  2A8B               	goto	i1l1481
  3738                           
  3739                           ;receive_decode.c: 29:         return 4;
  3740  0289  3004               	movlw	4
  3741                           
  3742                           ;receive_decode.c: 30:     }else{
  3743  028A  0008               	return
  3744  028B                     i1l1481:	
  3745                           
  3746                           ;receive_decode.c: 32:         return 5;
  3747  028B  3005               	movlw	5
  3748                           
  3749                           ;receive_decode.c: 33:     }
  3750  028C  0008               	return
  3751  028D                     __end_of_times2number:	
  3752                           
  3753                           	psect	text11
  3754  02CB                     __ptext11:	
  3755 ;; *************** function _test_get_number *****************
  3756 ;; Defined at:
  3757 ;;		line 37 in file "receive_decode.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  get_num         1    wreg     unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  get_num         1    0[COMMON] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_receive_decode
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _test_get_number
  3786  02CB                     _test_get_number:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  3790                           ;test_get_number@get_num stored from wreg
  3791  02CB  00F0               	movwf	test_get_number@get_num
  3792                           
  3793                           ;receive_decode.c: 38:     if(get_num == 0){
  3794  02CC  0870               	movf	test_get_number@get_num,w
  3795  02CD  1D03               	btfss	3,2
  3796  02CE  2AD5               	goto	i1l1489
  3797                           
  3798                           ;receive_decode.c: 39:         LATAbits.LATA2 = 1;
  3799  02CF  0022               	movlb	2	; select bank2
  3800  02D0  150C               	bsf	12,2	;volatile
  3801                           
  3802                           ;receive_decode.c: 40:         LATAbits.LATA3 = 0;
  3803  02D1  118C               	bcf	12,3	;volatile
  3804                           
  3805                           ;receive_decode.c: 41:         LATAbits.LATA4 = 0;
  3806  02D2  120C               	bcf	12,4	;volatile
  3807                           
  3808                           ;receive_decode.c: 42:         LATAbits.LATA5 = 0;
  3809  02D3  128C               	bcf	12,5	;volatile
  3810                           
  3811                           ;receive_decode.c: 43:     }else if(get_num == 1){
  3812  02D4  0008               	return
  3813  02D5                     i1l1489:	
  3814  02D5  0370               	decf	test_get_number@get_num,w
  3815  02D6  1D03               	btfss	3,2
  3816  02D7  2ADE               	goto	i1l1493
  3817                           
  3818                           ;receive_decode.c: 44:         LATAbits.LATA2 = 0;
  3819  02D8  0022               	movlb	2	; select bank2
  3820  02D9  110C               	bcf	12,2	;volatile
  3821                           
  3822                           ;receive_decode.c: 45:         LATAbits.LATA3 = 1;
  3823  02DA  158C               	bsf	12,3	;volatile
  3824                           
  3825                           ;receive_decode.c: 46:         LATAbits.LATA4 = 0;
  3826  02DB  120C               	bcf	12,4	;volatile
  3827                           
  3828                           ;receive_decode.c: 47:         LATAbits.LATA5 = 0;
  3829  02DC  128C               	bcf	12,5	;volatile
  3830                           
  3831                           ;receive_decode.c: 48:     }else if(get_num == 2){
  3832  02DD  0008               	return
  3833  02DE                     i1l1493:	
  3834  02DE  3002               	movlw	2
  3835  02DF  0670               	xorwf	test_get_number@get_num,w
  3836  02E0  1D03               	btfss	3,2
  3837  02E1  2AE8               	goto	i1l1497
  3838                           
  3839                           ;receive_decode.c: 49:         LATAbits.LATA2 = 0;
  3840  02E2  0022               	movlb	2	; select bank2
  3841  02E3  110C               	bcf	12,2	;volatile
  3842                           
  3843                           ;receive_decode.c: 50:         LATAbits.LATA3 = 0;
  3844  02E4  118C               	bcf	12,3	;volatile
  3845                           
  3846                           ;receive_decode.c: 51:         LATAbits.LATA4 = 1;
  3847  02E5  160C               	bsf	12,4	;volatile
  3848                           
  3849                           ;receive_decode.c: 52:         LATAbits.LATA5 = 0;
  3850  02E6  128C               	bcf	12,5	;volatile
  3851                           
  3852                           ;receive_decode.c: 53:     }else if(get_num == 3){
  3853  02E7  0008               	return
  3854  02E8                     i1l1497:	
  3855  02E8  3003               	movlw	3
  3856  02E9  0670               	xorwf	test_get_number@get_num,w
  3857  02EA  1D03               	btfss	3,2
  3858  02EB  2AF2               	goto	i1l1501
  3859                           
  3860                           ;receive_decode.c: 54:         LATAbits.LATA2 = 0;
  3861  02EC  0022               	movlb	2	; select bank2
  3862  02ED  110C               	bcf	12,2	;volatile
  3863                           
  3864                           ;receive_decode.c: 55:         LATAbits.LATA3 = 0;
  3865  02EE  118C               	bcf	12,3	;volatile
  3866                           
  3867                           ;receive_decode.c: 56:         LATAbits.LATA4 = 0;
  3868  02EF  120C               	bcf	12,4	;volatile
  3869                           
  3870                           ;receive_decode.c: 57:         LATAbits.LATA5 = 1;
  3871  02F0  168C               	bsf	12,5	;volatile
  3872                           
  3873                           ;receive_decode.c: 58:     }else if(get_num == 4){
  3874  02F1  0008               	return
  3875  02F2                     i1l1501:	
  3876  02F2  3004               	movlw	4
  3877  02F3  0670               	xorwf	test_get_number@get_num,w
  3878  02F4  1D03               	btfss	3,2
  3879  02F5  2AFC               	goto	i1l1505
  3880                           
  3881                           ;receive_decode.c: 59:         LATAbits.LATA2 = 1;
  3882  02F6  0022               	movlb	2	; select bank2
  3883  02F7  150C               	bsf	12,2	;volatile
  3884                           
  3885                           ;receive_decode.c: 60:         LATAbits.LATA3 = 1;
  3886  02F8  158C               	bsf	12,3	;volatile
  3887                           
  3888                           ;receive_decode.c: 61:         LATAbits.LATA4 = 1;
  3889  02F9  160C               	bsf	12,4	;volatile
  3890                           
  3891                           ;receive_decode.c: 62:         LATAbits.LATA5 = 1;
  3892  02FA  168C               	bsf	12,5	;volatile
  3893                           
  3894                           ;receive_decode.c: 63:     }else if(get_num == 5){
  3895  02FB  0008               	return
  3896  02FC                     i1l1505:	
  3897  02FC  3005               	movlw	5
  3898  02FD  0670               	xorwf	test_get_number@get_num,w
  3899  02FE  1D03               	btfss	3,2
  3900  02FF  0008               	return
  3901                           
  3902                           ;receive_decode.c: 64:         LATAbits.LATA2 = 0;
  3903  0300  0022               	movlb	2	; select bank2
  3904  0301  110C               	bcf	12,2	;volatile
  3905                           
  3906                           ;receive_decode.c: 65:         LATAbits.LATA3 = 0;
  3907  0302  118C               	bcf	12,3	;volatile
  3908                           
  3909                           ;receive_decode.c: 66:         LATAbits.LATA4 = 0;
  3910  0303  120C               	bcf	12,4	;volatile
  3911                           
  3912                           ;receive_decode.c: 67:         LATAbits.LATA5 = 0;
  3913  0304  128C               	bcf	12,5	;volatile
  3914                           
  3915                           ;receive_decode.c: 68:     }
  3916  0305  0008               	return
  3917  0306                     __end_of_test_get_number:	
  3918                           
  3919                           	psect	text12
  3920  0147                     __ptext12:	
  3921 ;; *************** function _check_err *****************
  3922 ;; Defined at:
  3923 ;;		line 72 in file "receive_decode.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  i               1   11[COMMON] unsigned char 
  3928 ;;  check           1   12[COMMON] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  2    0[COMMON] int 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;Total ram usage:       13 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_receive_decode
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _check_err
  3953  0147                     _check_err:	
  3954                           
  3955                           ;receive_decode.c: 74:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g_
      +                          recv_buf[CODE_H_2];
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _check_err: [wreg+fsr1l+fsr1h+status,2+status,0]
  3959  0147  0020               	banksel	_g_data
  3960  0148  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  3961  0149  00F2               	movwf	??_check_err
  3962  014A  3002               	movlw	2
  3963  014B                     u103_25:	
  3964  014B  35F2               	lslf	??_check_err,f
  3965  014C  0B89               	decfsz	9,f
  3966  014D  294B               	goto	u103_25
  3967  014E  0020               	banksel	_g_data
  3968  014F  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  3969  0150  0772               	addwf	??_check_err,w
  3970  0151  00F3               	movwf	??_check_err+1
  3971  0152  0873               	movf	??_check_err+1,w
  3972  0153  0020               	banksel	_g_data
  3973  0154  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3974                           
  3975                           ;receive_decode.c: 75:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.g
      +                          _recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  3976  0155  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  3977  0156  00F2               	movwf	??_check_err
  3978  0157  3004               	movlw	4
  3979  0158                     u104_25:	
  3980  0158  35F2               	lslf	??_check_err,f
  3981  0159  0B89               	decfsz	9,f
  3982  015A  2958               	goto	u104_25
  3983  015B  0020               	banksel	_g_data
  3984  015C  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  3985  015D  00F3               	movwf	??_check_err+1
  3986  015E  3001               	movlw	1
  3987  015F                     u105_25:	
  3988  015F  35F3               	lslf	??_check_err+1,f
  3989  0160  3EFF               	addlw	-1
  3990  0161  1D03               	skipz
  3991  0162  295F               	goto	u105_25
  3992  0163  3573               	lslf	??_check_err+1,w
  3993  0164  0772               	addwf	??_check_err,w
  3994  0165  00F4               	movwf	??_check_err+2
  3995  0166  0020               	banksel	_g_data
  3996  0167  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  3997  0168  0774               	addwf	??_check_err+2,w
  3998  0169  00F5               	movwf	??_check_err+3
  3999  016A  0875               	movf	??_check_err+3,w
  4000  016B  0020               	banksel	_g_data
  4001  016C  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  4002                           
  4003                           ;receive_decode.c: 76:     u8 check = 0;
  4004  016D  01FC               	clrf	check_err@check
  4005                           
  4006                           ;receive_decode.c: 77:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  4007  016E  01FB               	clrf	check_err@i
  4008  016F  0AFB               	incf	check_err@i,f
  4009  0170  300A               	movlw	10
  4010  0171  027B               	subwf	check_err@i,w
  4011  0172  1803               	btfsc	3,0
  4012  0173  298D               	goto	i1l1525
  4013  0174                     i1l1519:	
  4014                           
  4015                           ;receive_decode.c: 78:     {;receive_decode.c: 79:         check ^= g_data.g_recv_buf[i]
      +                          ;
  4016  0174  087B               	movf	check_err@i,w
  4017  0175  00F2               	movwf	??_check_err
  4018  0176  01F3               	clrf	??_check_err+1
  4019  0177  302D               	movlw	low (_g_data+13)
  4020  0178  00F4               	movwf	??_check_err+2
  4021  0179  3000               	movlw	high (_g_data+13)
  4022  017A  00F5               	movwf	??_check_err+3
  4023  017B  0872               	movf	??_check_err,w
  4024  017C  0774               	addwf	??_check_err+2,w
  4025  017D  0086               	movwf	6
  4026  017E  0873               	movf	??_check_err+1,w
  4027  017F  3D75               	addwfc	??_check_err+3,w
  4028  0180  0087               	movwf	7
  4029  0181  0801               	movf	1,w
  4030  0182  00F6               	movwf	??_check_err+4
  4031  0183  0876               	movf	??_check_err+4,w
  4032  0184  06FC               	xorwf	check_err@check,f
  4033                           
  4034                           ;receive_decode.c: 80:     }
  4035  0185  3001               	movlw	1
  4036  0186  00F2               	movwf	??_check_err
  4037  0187  0872               	movf	??_check_err,w
  4038  0188  07FB               	addwf	check_err@i,f
  4039  0189  300A               	movlw	10
  4040  018A  027B               	subwf	check_err@i,w
  4041  018B  1C03               	skipc
  4042  018C  2974               	goto	i1l1519
  4043  018D                     i1l1525:	
  4044                           
  4045                           ;receive_decode.c: 81:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[CO
      +                          DE_P3] % 2 == 0) )
  4046  018D  087C               	movf	check_err@check,w
  4047  018E  1903               	btfsc	3,2
  4048  018F  2994               	goto	i1l137
  4049  0190  3003               	movlw	3
  4050  0191  067C               	xorwf	check_err@check,w
  4051  0192  1D03               	btfss	3,2
  4052  0193  29A4               	goto	i1l1537
  4053  0194                     i1l137:	
  4054  0194  0020               	banksel	_g_data
  4055  0195  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  4056  0196  29A4               	goto	i1l1537
  4057                           
  4058                           ;receive_decode.c: 82:     {;receive_decode.c: 83:         g_data.g_time_h += (2 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4059  0197  3002               	movlw	2
  4060  0198  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4061  0199  1903               	btfsc	3,2
  4062  019A  299E               	goto	i1l1533
  4063  019B  01F7               	clrf	_check_err$586
  4064  019C  01F8               	clrf	_check_err$586+1
  4065  019D  29A2               	goto	i1l1535
  4066  019E                     i1l1533:	
  4067  019E  300C               	movlw	12
  4068  019F  00F7               	movwf	_check_err$586
  4069  01A0  3000               	movlw	0
  4070  01A1  00F8               	movwf	_check_err$586+1
  4071  01A2                     i1l1535:	
  4072  01A2  0877               	movf	_check_err$586,w
  4073  01A3  29BF               	goto	L3
  4074  01A4                     i1l1537:	
  4075                           ;receive_decode.c: 84:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_recv
      +                          _buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  4076                           
  4077  01A4  037C               	decf	check_err@check,w
  4078  01A5  1903               	btfsc	3,2
  4079  01A6  29AB               	goto	i1l1541
  4080  01A7  3002               	movlw	2
  4081  01A8  067C               	xorwf	check_err@check,w
  4082  01A9  1D03               	btfss	3,2
  4083  01AA  29C4               	goto	i1l143
  4084  01AB                     i1l1541:	
  4085  01AB  0020               	banksel	_g_data
  4086  01AC  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  4087  01AD  1903               	btfsc	3,2
  4088  01AE  29B3               	goto	i1l1545
  4089  01AF  3003               	movlw	3
  4090  01B0  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4091  01B1  1D03               	btfss	3,2
  4092  01B2  29C4               	goto	i1l143
  4093  01B3                     i1l1545:	
  4094                           
  4095                           ;receive_decode.c: 86:     {;receive_decode.c: 87:         g_data.g_time_h += (3 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4096  01B3  3003               	movlw	3
  4097  01B4  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4098  01B5  1903               	btfsc	3,2
  4099  01B6  29BA               	goto	i1l1549
  4100  01B7  01F9               	clrf	_check_err$587
  4101  01B8  01FA               	clrf	_check_err$587+1
  4102  01B9  29BE               	goto	i1l1551
  4103  01BA                     i1l1549:	
  4104  01BA  300C               	movlw	12
  4105  01BB  00F9               	movwf	_check_err$587
  4106  01BC  3000               	movlw	0
  4107  01BD  00FA               	movwf	_check_err$587+1
  4108  01BE                     i1l1551:	
  4109  01BE  0879               	movf	_check_err$587,w
  4110  01BF                     L3:	
  4111  01BF  00F2               	movwf	??_check_err
  4112  01C0  0872               	movf	??_check_err,w
  4113  01C1  0020               	banksel	_g_data
  4114  01C2  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  4115                           
  4116                           ;receive_decode.c: 88:     }
  4117  01C3  29D0               	goto	i1l1559
  4118  01C4                     i1l143:	
  4119                           ;receive_decode.c: 89:     else
  4120                           
  4121                           
  4122                           ;receive_decode.c: 90:     {;receive_decode.c: 91:         g_data.g_find_recv_start = FA
      +                          LSE;
  4123  01C4  3000               	movlw	0
  4124  01C5  0020               	banksel	_g_data
  4125  01C6  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  4126                           
  4127                           ;receive_decode.c: 92:         g_data.g_isDecoding = 0;
  4128  01C7  3000               	movlw	0
  4129  01C8  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  4130                           
  4131                           ;receive_decode.c: 93:         g_data.g_recv_count = 0;
  4132  01C9  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  4133  01CA  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  4134                           
  4135                           ;receive_decode.c: 94:         return -1;
  4136  01CB  30FF               	movlw	255
  4137  01CC  00F0               	movwf	?_check_err
  4138  01CD  30FF               	movlw	255
  4139  01CE  00F1               	movwf	?_check_err+1
  4140  01CF  0008               	return
  4141  01D0                     i1l1559:	
  4142                           ;receive_decode.c: 95:     }
  4143                           
  4144                           
  4145                           ;receive_decode.c: 96:     return 0;
  4146  01D0  01F0               	clrf	?_check_err
  4147  01D1  01F1               	clrf	?_check_err+1
  4148  01D2  0008               	return
  4149  01D3                     __end_of_check_err:	
  4150                           
  4151                           	psect	text13
  4152  0306                     __ptext13:	
  4153 ;; *************** function ___lwmod *****************
  4154 ;; Defined at:
  4155 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  divisor         2    0[COMMON] unsigned int 
  4158 ;;  dividend        2    2[COMMON] unsigned int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  counter         1    5[COMMON] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  2    0[COMMON] unsigned int 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;Total ram usage:        6 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_ISR
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function ___lwmod
  4185  0306                     ___lwmod:	
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4189  0306  0870               	movf	___lwmod@divisor,w
  4190  0307  0471               	iorwf	___lwmod@divisor+1,w
  4191  0308  1903               	btfsc	3,2
  4192  0309  2B2D               	goto	i1l1857
  4193  030A  01F5               	clrf	___lwmod@counter
  4194  030B  0AF5               	incf	___lwmod@counter,f
  4195  030C                     i1l1847:	
  4196  030C  1BF1               	btfsc	___lwmod@divisor+1,7
  4197  030D  2B18               	goto	i1l1849
  4198  030E  3001               	movlw	1
  4199  030F                     u151_25:	
  4200  030F  35F0               	lslf	___lwmod@divisor,f
  4201  0310  0DF1               	rlf	___lwmod@divisor+1,f
  4202  0311  0B89               	decfsz	9,f
  4203  0312  2B0F               	goto	u151_25
  4204  0313  3001               	movlw	1
  4205  0314  00F4               	movwf	??___lwmod
  4206  0315  0874               	movf	??___lwmod,w
  4207  0316  07F5               	addwf	___lwmod@counter,f
  4208  0317  2B0C               	goto	i1l1847
  4209  0318                     i1l1849:	
  4210  0318  0871               	movf	___lwmod@divisor+1,w
  4211  0319  0273               	subwf	___lwmod@dividend+1,w
  4212  031A  1D03               	skipz
  4213  031B  2B1E               	goto	u153_25
  4214  031C  0870               	movf	___lwmod@divisor,w
  4215  031D  0272               	subwf	___lwmod@dividend,w
  4216  031E                     u153_25:	
  4217  031E  1C03               	skipc
  4218  031F  2B24               	goto	i1l1853
  4219  0320  0870               	movf	___lwmod@divisor,w
  4220  0321  02F2               	subwf	___lwmod@dividend,f
  4221  0322  0871               	movf	___lwmod@divisor+1,w
  4222  0323  3BF3               	subwfb	___lwmod@dividend+1,f
  4223  0324                     i1l1853:	
  4224  0324  3001               	movlw	1
  4225  0325                     u154_25:	
  4226  0325  36F1               	lsrf	___lwmod@divisor+1,f
  4227  0326  0CF0               	rrf	___lwmod@divisor,f
  4228  0327  0B89               	decfsz	9,f
  4229  0328  2B25               	goto	u154_25
  4230  0329  3001               	movlw	1
  4231  032A  02F5               	subwf	___lwmod@counter,f
  4232  032B  1D03               	btfss	3,2
  4233  032C  2B18               	goto	i1l1849
  4234  032D                     i1l1857:	
  4235  032D  0873               	movf	___lwmod@dividend+1,w
  4236  032E  00F1               	movwf	?___lwmod+1
  4237  032F  0872               	movf	___lwmod@dividend,w
  4238  0330  00F0               	movwf	?___lwmod
  4239  0331  0008               	return
  4240  0332                     __end_of___lwmod:	
  4241  007E                     btemp	set	126	;btemp
  4242  007E                     int$flags	set	126
  4243  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_check_err
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                             13 BANK0      3     3      0
                           _IIC_Init
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    2036
                                             11 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             13 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      11    11      0    1292
                                              0 BANK0     11    11      0
                          _check_err
                    _test_get_number
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       3     3      0     433
                                             10 COMMON     3     3      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _check_err                                           13    11      2     206
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _check_err
     _test_get_number
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      39       5       71.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri May 03 15:57:55 2019

             ?_receive_decode 0070                   _update_time 028D                   __CFG_CP$OFF 0000  
                          l66 0235                            l90 03B2                _update_display 0381  
                 __CFG_LVP$ON 0000             ?_control595_delay 0070                           _GIE 005F  
                         _RC4 0074                  __CFG_CPD$OFF 0000                           _ISR 0004  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000                          ?_ISR 0070  
                        l1719 021D                          _LATA 010C                          _LATB 010D  
                        _LATC 010E                          u1285 021B                          u1295 0233  
                        _ENUM 0048                          i1l81 001F                          i1l76 001A  
                        i1l77 0060                          i1l78 0022                          _TMR0 0015  
                        _WPUA 020C                          _WPUB 020D                          _WPUC 020E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _Temp 0041  
                        _main 03AF                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 0062                 __CFG_MCLRE$ON 0000                         ??_ISR 0054  
      __end_of_update_display 0391              __end_of_IIC_Init 039E                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATC3 0873  
                       _LATC4 0874                         _IOCAN 0392                         _IOCAP 0391  
                       _IOCBN 0395                         _IOCBP 0394                         _IOCCN 0398  
                       _IOCCP 0397                         i1l201 03A2                         i1l143 01C4  
                       i1l137 0194                         i1l156 0077               __end_of___lwmod 0332  
                       _TRISA 008C                         _TRISB 008D                         _TRISC 008E  
                       _WPUC3 1073                         _WPUC4 1074                         u86_25 033B  
              write_byte@data 0074                         status 0003                         wtemp0 007E  
             __initialization 0064                  __end_of_main 03B3               ?_update_display 0070  
              __CFG_LPBOR$OFF 0000                        ??_main 0059                        u103_25 014B  
                      i1l1501 02F2                        i1l1505 02FC                        i1l1443 0252  
                      i1l1541 01AB                        i1l1533 019E                        i1l1525 018D  
                      u104_25 0158                        i1l1453 0262                        i1l1551 01BE  
                      i1l1535 01A2                        i1l1519 0174                        i1l1463 0272  
                      i1l1545 01B3                        i1l1537 01A4                        i1l1481 028B  
                      i1l1473 0282                        i1l1803 00FF                        i1l1549 01BA  
                      u105_25 015F                        i1l1493 02DE                        i1l1733 0299  
                      i1l1901 005C                        i1l1559 01D0                        i1l1807 0119  
                      i1l1497 02E8                        i1l1489 02D5                        i1l1809 011C  
                      i1l1753 02C8                        i1l1737 02A0                        i1l1853 0324  
                      i1l1847 030C                        i1l1775 00A7                        i1l1849 0318  
                      i1l1857 032D                        i1l1797 00DE                        i1l1889 002E  
                      u151_25 030F                        u153_25 031E                        u145_25 010A  
                      u154_25 0325                        u146_25 0117                        u147_25 012F  
                      _TRISC3 0473                        _TRISC4 0474                __CFG_PWRTE$OFF 0000  
                      _g_data 0020                __CFG_STVREN$ON 0000                     ??___lwmod 0074  
            __end_of_init_env 0242                        _temp_h 0046                        _temp_l 0045  
            __end_of_segmcode 0381  times2number@high_level_times 0070      __size_of_test_get_number 003B  
     __end_of__initialization 006B                     ?_IIC_Init 0070              ??_receive_decode 0049  
              __pcstackCOMMON 0070                  ?_update_time 0070         control595_delay@times 0071  
          __size_of_check_err 008C                _OPTION_REGbits 0095                    __pbssBANK0 0020  
                  ??_IIC_Init 0056     __size_of_control595_delay 000B               __CFG_VCAPEN$OFF 0000  
                  __pmaintext 03AF                    __pintentry 0004                ISR@history_key 0047  
                     _ODCONC3 1473                       _ODCONC4 1474             __end_of_check_err 01D3  
                   ?_init_env 0070              ??_update_display 007A             ??_test_get_number 0070  
                     ___lwmod 0306                    check_err@i 007B                       __ptext1 01D3  
                     __ptext2 0391                       __ptext4 028D                       __ptext5 006F  
                     __ptext6 0381                       __ptext7 0359                       __ptext8 0332  
                     __ptext9 039E                  __size_of_ISR 005E                 ?_times2number 0070  
                   _IOCCFbits 0399                     _IOCCPbits 0397                       clrloop0 03AA  
        end_of_initialization 006B                    ??_init_env 0056          __size_of_update_time 003E  
                   _PORTAbits 000C                     _PORTCbits 000E                ??_times2number 0072  
                   _TRISCbits 008E                 _check_err$586 0077                 _check_err$587 0079  
            _control595_delay 039E             __size_of_IIC_Init 000D                  write_once@HL 0079  
                write_once@HR 0076                  write_once@ML 0077                  write_once@MR 0078  
                  _write_byte 0332                    _write_once 0359      receive_decode@read_value 0053  
         start_initialization 0064                   __end_of_ISR 0062                check_err@check 007C  
             receive_decode@i 0051                     ___latbits 0002                 __pcstackBANK0 0049  
             _test_get_number 02CB                     _check_err 0147             __size_of_init_env 006F  
   receive_decode@last_time_h 004D     receive_decode@last_time_m 004F          __end_of_times2number 028D  
                    ?___lwmod 0070       __size_of_receive_decode 00D8                   ?_write_byte 0070  
                 ?_write_once 0076               ISR@key_time_cnt 0043                      _IIC_Init 0391  
                    _LATAbits 010C                      _LATBbits 010D                    ?_check_err 0070  
                   clear_ram0 03A9      __end_of_control595_delay 03A9       __end_of_test_get_number 0306  
                    _WPUCbits 020E                   write_byte@i 0075           __size_of_write_byte 0027  
         __size_of_write_once 0018        test_get_number@get_num 0070                 ??_update_time 007D  
                   init_env@i 0057              __size_of___lwmod 002C       __size_of_update_display 0010  
                    __ptext10 0242                      __ptext11 02CB                      __ptext12 0147  
                    __ptext13 0306         __size_of_times2number 004B                      _init_env 01D3  
               __size_of_main 0004                   ??_check_err 0072                      _segmcode 0371  
                    int$flags 007E                _receive_decode 006F           __end_of_update_time 02CB  
            ?_test_get_number 0070                    _INTCONbits 000B                  _times2number 0242  
                    intlevel1 0000              ___lwmod@dividend 0072             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099        __end_of_receive_decode 0147                  ??_write_byte 0072  
                ??_write_once 0079                 __pstringtext1 0371               ___lwmod@divisor 0070  
             ___lwmod@counter 0075            __end_of_write_byte 0359            __end_of_write_once 0371  

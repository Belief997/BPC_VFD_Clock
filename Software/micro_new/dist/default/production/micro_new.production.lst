

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat May 04 02:02:13 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.00
    32                           ; Generated 27/05/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1786 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011C                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  011F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020D                     	;# 
   173  020E                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  030C                     	;# 
   203  030D                     	;# 
   204  030E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0390                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  0397                     	;# 
   220  0398                     	;# 
   221  0399                     	;# 
   222  039D                     	;# 
   223  039E                     	;# 
   224  039F                     	;# 
   225  0511                     	;# 
   226  0513                     	;# 
   227  051A                     	;# 
   228  0811                     	;# 
   229  0812                     	;# 
   230  0813                     	;# 
   231  0814                     	;# 
   232  0815                     	;# 
   233  0816                     	;# 
   234  0817                     	;# 
   235  0818                     	;# 
   236  0819                     	;# 
   237  081A                     	;# 
   238  081B                     	;# 
   239  081C                     	;# 
   240  081D                     	;# 
   241  081E                     	;# 
   242  081F                     	;# 
   243  0820                     	;# 
   244  0821                     	;# 
   245  0821                     	;# 
   246  0822                     	;# 
   247  0823                     	;# 
   248  0823                     	;# 
   249  0824                     	;# 
   250  0825                     	;# 
   251  0825                     	;# 
   252  0826                     	;# 
   253  0827                     	;# 
   254  0827                     	;# 
   255  0828                     	;# 
   256  0829                     	;# 
   257  082A                     	;# 
   258  082B                     	;# 
   259  082C                     	;# 
   260  082D                     	;# 
   261  082E                     	;# 
   262  082F                     	;# 
   263  0831                     	;# 
   264  0832                     	;# 
   265  0833                     	;# 
   266  0834                     	;# 
   267  0835                     	;# 
   268  0836                     	;# 
   269  0837                     	;# 
   270  0838                     	;# 
   271  0839                     	;# 
   272  083A                     	;# 
   273  083B                     	;# 
   274  083C                     	;# 
   275  083D                     	;# 
   276  083E                     	;# 
   277  083F                     	;# 
   278  0840                     	;# 
   279  0841                     	;# 
   280  0841                     	;# 
   281  0842                     	;# 
   282  0843                     	;# 
   283  0843                     	;# 
   284  0844                     	;# 
   285  0845                     	;# 
   286  0845                     	;# 
   287  0846                     	;# 
   288  0847                     	;# 
   289  0847                     	;# 
   290  0848                     	;# 
   291  0849                     	;# 
   292  084A                     	;# 
   293  084B                     	;# 
   294  084C                     	;# 
   295  084D                     	;# 
   296  084E                     	;# 
   297  084F                     	;# 
   298  0851                     	;# 
   299  0852                     	;# 
   300  0853                     	;# 
   301  0854                     	;# 
   302  0855                     	;# 
   303  0856                     	;# 
   304  0857                     	;# 
   305  0858                     	;# 
   306  0859                     	;# 
   307  085A                     	;# 
   308  085B                     	;# 
   309  085C                     	;# 
   310  085D                     	;# 
   311  085E                     	;# 
   312  085F                     	;# 
   313  0860                     	;# 
   314  0861                     	;# 
   315  0861                     	;# 
   316  0862                     	;# 
   317  0863                     	;# 
   318  0863                     	;# 
   319  0864                     	;# 
   320  0865                     	;# 
   321  0865                     	;# 
   322  0866                     	;# 
   323  0867                     	;# 
   324  0867                     	;# 
   325  0868                     	;# 
   326  0869                     	;# 
   327  086A                     	;# 
   328  086B                     	;# 
   329  086C                     	;# 
   330  086D                     	;# 
   331  086E                     	;# 
   332  086F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  008C                     	;# 
   374  008D                     	;# 
   375  008E                     	;# 
   376  0090                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009B                     	;# 
   389  009C                     	;# 
   390  009D                     	;# 
   391  009E                     	;# 
   392  009F                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  0111                     	;# 
   397  0112                     	;# 
   398  0113                     	;# 
   399  0114                     	;# 
   400  0115                     	;# 
   401  0116                     	;# 
   402  0117                     	;# 
   403  0118                     	;# 
   404  0119                     	;# 
   405  011A                     	;# 
   406  011B                     	;# 
   407  011C                     	;# 
   408  011D                     	;# 
   409  011D                     	;# 
   410  011D                     	;# 
   411  011E                     	;# 
   412  011F                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0191                     	;# 
   416  0191                     	;# 
   417  0192                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0194                     	;# 
   422  0195                     	;# 
   423  0196                     	;# 
   424  0197                     	;# 
   425  0199                     	;# 
   426  0199                     	;# 
   427  0199                     	;# 
   428  019A                     	;# 
   429  019A                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019D                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019E                     	;# 
   444  019E                     	;# 
   445  019F                     	;# 
   446  019F                     	;# 
   447  019F                     	;# 
   448  019F                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  020E                     	;# 
   453  0210                     	;# 
   454  0211                     	;# 
   455  0211                     	;# 
   456  0212                     	;# 
   457  0212                     	;# 
   458  0213                     	;# 
   459  0213                     	;# 
   460  0214                     	;# 
   461  0214                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0216                     	;# 
   467  0216                     	;# 
   468  0217                     	;# 
   469  0217                     	;# 
   470  028C                     	;# 
   471  028D                     	;# 
   472  028E                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  030C                     	;# 
   482  030D                     	;# 
   483  030E                     	;# 
   484  0311                     	;# 
   485  0311                     	;# 
   486  0312                     	;# 
   487  0313                     	;# 
   488  038C                     	;# 
   489  038D                     	;# 
   490  038E                     	;# 
   491  0390                     	;# 
   492  0391                     	;# 
   493  0392                     	;# 
   494  0393                     	;# 
   495  0394                     	;# 
   496  0395                     	;# 
   497  0396                     	;# 
   498  0397                     	;# 
   499  0398                     	;# 
   500  0399                     	;# 
   501  039D                     	;# 
   502  039E                     	;# 
   503  039F                     	;# 
   504  0511                     	;# 
   505  0513                     	;# 
   506  051A                     	;# 
   507  0811                     	;# 
   508  0812                     	;# 
   509  0813                     	;# 
   510  0814                     	;# 
   511  0815                     	;# 
   512  0816                     	;# 
   513  0817                     	;# 
   514  0818                     	;# 
   515  0819                     	;# 
   516  081A                     	;# 
   517  081B                     	;# 
   518  081C                     	;# 
   519  081D                     	;# 
   520  081E                     	;# 
   521  081F                     	;# 
   522  0820                     	;# 
   523  0821                     	;# 
   524  0821                     	;# 
   525  0822                     	;# 
   526  0823                     	;# 
   527  0823                     	;# 
   528  0824                     	;# 
   529  0825                     	;# 
   530  0825                     	;# 
   531  0826                     	;# 
   532  0827                     	;# 
   533  0827                     	;# 
   534  0828                     	;# 
   535  0829                     	;# 
   536  082A                     	;# 
   537  082B                     	;# 
   538  082C                     	;# 
   539  082D                     	;# 
   540  082E                     	;# 
   541  082F                     	;# 
   542  0831                     	;# 
   543  0832                     	;# 
   544  0833                     	;# 
   545  0834                     	;# 
   546  0835                     	;# 
   547  0836                     	;# 
   548  0837                     	;# 
   549  0838                     	;# 
   550  0839                     	;# 
   551  083A                     	;# 
   552  083B                     	;# 
   553  083C                     	;# 
   554  083D                     	;# 
   555  083E                     	;# 
   556  083F                     	;# 
   557  0840                     	;# 
   558  0841                     	;# 
   559  0841                     	;# 
   560  0842                     	;# 
   561  0843                     	;# 
   562  0843                     	;# 
   563  0844                     	;# 
   564  0845                     	;# 
   565  0845                     	;# 
   566  0846                     	;# 
   567  0847                     	;# 
   568  0847                     	;# 
   569  0848                     	;# 
   570  0849                     	;# 
   571  084A                     	;# 
   572  084B                     	;# 
   573  084C                     	;# 
   574  084D                     	;# 
   575  084E                     	;# 
   576  084F                     	;# 
   577  0851                     	;# 
   578  0852                     	;# 
   579  0853                     	;# 
   580  0854                     	;# 
   581  0855                     	;# 
   582  0856                     	;# 
   583  0857                     	;# 
   584  0858                     	;# 
   585  0859                     	;# 
   586  085A                     	;# 
   587  085B                     	;# 
   588  085C                     	;# 
   589  085D                     	;# 
   590  085E                     	;# 
   591  085F                     	;# 
   592  0860                     	;# 
   593  0861                     	;# 
   594  0861                     	;# 
   595  0862                     	;# 
   596  0863                     	;# 
   597  0863                     	;# 
   598  0864                     	;# 
   599  0865                     	;# 
   600  0865                     	;# 
   601  0866                     	;# 
   602  0867                     	;# 
   603  0867                     	;# 
   604  0868                     	;# 
   605  0869                     	;# 
   606  086A                     	;# 
   607  086B                     	;# 
   608  086C                     	;# 
   609  086D                     	;# 
   610  086E                     	;# 
   611  086F                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0014                     	;# 
   643  0015                     	;# 
   644  0016                     	;# 
   645  0016                     	;# 
   646  0017                     	;# 
   647  0018                     	;# 
   648  0019                     	;# 
   649  001A                     	;# 
   650  001B                     	;# 
   651  001C                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009B                     	;# 
   668  009C                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  009F                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0118                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011C                     	;# 
   687  011D                     	;# 
   688  011D                     	;# 
   689  011D                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  018C                     	;# 
   693  018D                     	;# 
   694  0191                     	;# 
   695  0191                     	;# 
   696  0192                     	;# 
   697  0193                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0194                     	;# 
   701  0195                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0199                     	;# 
   705  0199                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019A                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019C                     	;# 
   717  019C                     	;# 
   718  019D                     	;# 
   719  019D                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019E                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  019F                     	;# 
   726  019F                     	;# 
   727  019F                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  0210                     	;# 
   733  0211                     	;# 
   734  0211                     	;# 
   735  0212                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0213                     	;# 
   739  0214                     	;# 
   740  0214                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028E                     	;# 
   752  0291                     	;# 
   753  0291                     	;# 
   754  0292                     	;# 
   755  0293                     	;# 
   756  0298                     	;# 
   757  0298                     	;# 
   758  0299                     	;# 
   759  029A                     	;# 
   760  030C                     	;# 
   761  030D                     	;# 
   762  030E                     	;# 
   763  0311                     	;# 
   764  0311                     	;# 
   765  0312                     	;# 
   766  0313                     	;# 
   767  038C                     	;# 
   768  038D                     	;# 
   769  038E                     	;# 
   770  0390                     	;# 
   771  0391                     	;# 
   772  0392                     	;# 
   773  0393                     	;# 
   774  0394                     	;# 
   775  0395                     	;# 
   776  0396                     	;# 
   777  0397                     	;# 
   778  0398                     	;# 
   779  0399                     	;# 
   780  039D                     	;# 
   781  039E                     	;# 
   782  039F                     	;# 
   783  0511                     	;# 
   784  0513                     	;# 
   785  051A                     	;# 
   786  0811                     	;# 
   787  0812                     	;# 
   788  0813                     	;# 
   789  0814                     	;# 
   790  0815                     	;# 
   791  0816                     	;# 
   792  0817                     	;# 
   793  0818                     	;# 
   794  0819                     	;# 
   795  081A                     	;# 
   796  081B                     	;# 
   797  081C                     	;# 
   798  081D                     	;# 
   799  081E                     	;# 
   800  081F                     	;# 
   801  0820                     	;# 
   802  0821                     	;# 
   803  0821                     	;# 
   804  0822                     	;# 
   805  0823                     	;# 
   806  0823                     	;# 
   807  0824                     	;# 
   808  0825                     	;# 
   809  0825                     	;# 
   810  0826                     	;# 
   811  0827                     	;# 
   812  0827                     	;# 
   813  0828                     	;# 
   814  0829                     	;# 
   815  082A                     	;# 
   816  082B                     	;# 
   817  082C                     	;# 
   818  082D                     	;# 
   819  082E                     	;# 
   820  082F                     	;# 
   821  0831                     	;# 
   822  0832                     	;# 
   823  0833                     	;# 
   824  0834                     	;# 
   825  0835                     	;# 
   826  0836                     	;# 
   827  0837                     	;# 
   828  0838                     	;# 
   829  0839                     	;# 
   830  083A                     	;# 
   831  083B                     	;# 
   832  083C                     	;# 
   833  083D                     	;# 
   834  083E                     	;# 
   835  083F                     	;# 
   836  0840                     	;# 
   837  0841                     	;# 
   838  0841                     	;# 
   839  0842                     	;# 
   840  0843                     	;# 
   841  0843                     	;# 
   842  0844                     	;# 
   843  0845                     	;# 
   844  0845                     	;# 
   845  0846                     	;# 
   846  0847                     	;# 
   847  0847                     	;# 
   848  0848                     	;# 
   849  0849                     	;# 
   850  084A                     	;# 
   851  084B                     	;# 
   852  084C                     	;# 
   853  084D                     	;# 
   854  084E                     	;# 
   855  084F                     	;# 
   856  0851                     	;# 
   857  0852                     	;# 
   858  0853                     	;# 
   859  0854                     	;# 
   860  0855                     	;# 
   861  0856                     	;# 
   862  0857                     	;# 
   863  0858                     	;# 
   864  0859                     	;# 
   865  085A                     	;# 
   866  085B                     	;# 
   867  085C                     	;# 
   868  085D                     	;# 
   869  085E                     	;# 
   870  085F                     	;# 
   871  0860                     	;# 
   872  0861                     	;# 
   873  0861                     	;# 
   874  0862                     	;# 
   875  0863                     	;# 
   876  0863                     	;# 
   877  0864                     	;# 
   878  0865                     	;# 
   879  0865                     	;# 
   880  0866                     	;# 
   881  0867                     	;# 
   882  0867                     	;# 
   883  0868                     	;# 
   884  0869                     	;# 
   885  086A                     	;# 
   886  086B                     	;# 
   887  086C                     	;# 
   888  086D                     	;# 
   889  086E                     	;# 
   890  086F                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;# 
   902  0000                     	;# 
   903  0001                     	;# 
   904  0002                     	;# 
   905  0003                     	;# 
   906  0004                     	;# 
   907  0005                     	;# 
   908  0006                     	;# 
   909  0007                     	;# 
   910  0008                     	;# 
   911  0009                     	;# 
   912  000A                     	;# 
   913  000B                     	;# 
   914  000C                     	;# 
   915  000D                     	;# 
   916  000E                     	;# 
   917  0010                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  008E                     	;# 
   934  0090                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  009F                     	;# 
   951  010C                     	;# 
   952  010D                     	;# 
   953  010E                     	;# 
   954  0111                     	;# 
   955  0112                     	;# 
   956  0113                     	;# 
   957  0114                     	;# 
   958  0115                     	;# 
   959  0116                     	;# 
   960  0117                     	;# 
   961  0118                     	;# 
   962  0119                     	;# 
   963  011A                     	;# 
   964  011B                     	;# 
   965  011C                     	;# 
   966  011D                     	;# 
   967  011D                     	;# 
   968  011D                     	;# 
   969  011E                     	;# 
   970  011F                     	;# 
   971  018C                     	;# 
   972  018D                     	;# 
   973  0191                     	;# 
   974  0191                     	;# 
   975  0192                     	;# 
   976  0193                     	;# 
   977  0193                     	;# 
   978  0193                     	;# 
   979  0194                     	;# 
   980  0195                     	;# 
   981  0196                     	;# 
   982  0197                     	;# 
   983  0199                     	;# 
   984  0199                     	;# 
   985  0199                     	;# 
   986  019A                     	;# 
   987  019A                     	;# 
   988  019A                     	;# 
   989  019B                     	;# 
   990  019B                     	;# 
   991  019B                     	;# 
   992  019B                     	;# 
   993  019B                     	;# 
   994  019C                     	;# 
   995  019C                     	;# 
   996  019C                     	;# 
   997  019D                     	;# 
   998  019D                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019E                     	;# 
  1002  019E                     	;# 
  1003  019F                     	;# 
  1004  019F                     	;# 
  1005  019F                     	;# 
  1006  019F                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020D                     	;# 
  1010  020E                     	;# 
  1011  0210                     	;# 
  1012  0211                     	;# 
  1013  0211                     	;# 
  1014  0212                     	;# 
  1015  0212                     	;# 
  1016  0213                     	;# 
  1017  0213                     	;# 
  1018  0214                     	;# 
  1019  0214                     	;# 
  1020  0215                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0215                     	;# 
  1024  0216                     	;# 
  1025  0216                     	;# 
  1026  0217                     	;# 
  1027  0217                     	;# 
  1028  028C                     	;# 
  1029  028D                     	;# 
  1030  028E                     	;# 
  1031  0291                     	;# 
  1032  0291                     	;# 
  1033  0292                     	;# 
  1034  0293                     	;# 
  1035  0298                     	;# 
  1036  0298                     	;# 
  1037  0299                     	;# 
  1038  029A                     	;# 
  1039  030C                     	;# 
  1040  030D                     	;# 
  1041  030E                     	;# 
  1042  0311                     	;# 
  1043  0311                     	;# 
  1044  0312                     	;# 
  1045  0313                     	;# 
  1046  038C                     	;# 
  1047  038D                     	;# 
  1048  038E                     	;# 
  1049  0390                     	;# 
  1050  0391                     	;# 
  1051  0392                     	;# 
  1052  0393                     	;# 
  1053  0394                     	;# 
  1054  0395                     	;# 
  1055  0396                     	;# 
  1056  0397                     	;# 
  1057  0398                     	;# 
  1058  0399                     	;# 
  1059  039D                     	;# 
  1060  039E                     	;# 
  1061  039F                     	;# 
  1062  0511                     	;# 
  1063  0513                     	;# 
  1064  051A                     	;# 
  1065  0811                     	;# 
  1066  0812                     	;# 
  1067  0813                     	;# 
  1068  0814                     	;# 
  1069  0815                     	;# 
  1070  0816                     	;# 
  1071  0817                     	;# 
  1072  0818                     	;# 
  1073  0819                     	;# 
  1074  081A                     	;# 
  1075  081B                     	;# 
  1076  081C                     	;# 
  1077  081D                     	;# 
  1078  081E                     	;# 
  1079  081F                     	;# 
  1080  0820                     	;# 
  1081  0821                     	;# 
  1082  0821                     	;# 
  1083  0822                     	;# 
  1084  0823                     	;# 
  1085  0823                     	;# 
  1086  0824                     	;# 
  1087  0825                     	;# 
  1088  0825                     	;# 
  1089  0826                     	;# 
  1090  0827                     	;# 
  1091  0827                     	;# 
  1092  0828                     	;# 
  1093  0829                     	;# 
  1094  082A                     	;# 
  1095  082B                     	;# 
  1096  082C                     	;# 
  1097  082D                     	;# 
  1098  082E                     	;# 
  1099  082F                     	;# 
  1100  0831                     	;# 
  1101  0832                     	;# 
  1102  0833                     	;# 
  1103  0834                     	;# 
  1104  0835                     	;# 
  1105  0836                     	;# 
  1106  0837                     	;# 
  1107  0838                     	;# 
  1108  0839                     	;# 
  1109  083A                     	;# 
  1110  083B                     	;# 
  1111  083C                     	;# 
  1112  083D                     	;# 
  1113  083E                     	;# 
  1114  083F                     	;# 
  1115  0840                     	;# 
  1116  0841                     	;# 
  1117  0841                     	;# 
  1118  0842                     	;# 
  1119  0843                     	;# 
  1120  0843                     	;# 
  1121  0844                     	;# 
  1122  0845                     	;# 
  1123  0845                     	;# 
  1124  0846                     	;# 
  1125  0847                     	;# 
  1126  0847                     	;# 
  1127  0848                     	;# 
  1128  0849                     	;# 
  1129  084A                     	;# 
  1130  084B                     	;# 
  1131  084C                     	;# 
  1132  084D                     	;# 
  1133  084E                     	;# 
  1134  084F                     	;# 
  1135  0851                     	;# 
  1136  0852                     	;# 
  1137  0853                     	;# 
  1138  0854                     	;# 
  1139  0855                     	;# 
  1140  0856                     	;# 
  1141  0857                     	;# 
  1142  0858                     	;# 
  1143  0859                     	;# 
  1144  085A                     	;# 
  1145  085B                     	;# 
  1146  085C                     	;# 
  1147  085D                     	;# 
  1148  085E                     	;# 
  1149  085F                     	;# 
  1150  0860                     	;# 
  1151  0861                     	;# 
  1152  0861                     	;# 
  1153  0862                     	;# 
  1154  0863                     	;# 
  1155  0863                     	;# 
  1156  0864                     	;# 
  1157  0865                     	;# 
  1158  0865                     	;# 
  1159  0866                     	;# 
  1160  0867                     	;# 
  1161  0867                     	;# 
  1162  0868                     	;# 
  1163  0869                     	;# 
  1164  086A                     	;# 
  1165  086B                     	;# 
  1166  086C                     	;# 
  1167  086D                     	;# 
  1168  086E                     	;# 
  1169  086F                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  0090                     	;# 
  1214  0091                     	;# 
  1215  0092                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  009F                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010E                     	;# 
  1233  0111                     	;# 
  1234  0112                     	;# 
  1235  0113                     	;# 
  1236  0114                     	;# 
  1237  0115                     	;# 
  1238  0116                     	;# 
  1239  0117                     	;# 
  1240  0118                     	;# 
  1241  0119                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011C                     	;# 
  1245  011D                     	;# 
  1246  011D                     	;# 
  1247  011D                     	;# 
  1248  011E                     	;# 
  1249  011F                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0197                     	;# 
  1262  0199                     	;# 
  1263  0199                     	;# 
  1264  0199                     	;# 
  1265  019A                     	;# 
  1266  019A                     	;# 
  1267  019A                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019C                     	;# 
  1274  019C                     	;# 
  1275  019C                     	;# 
  1276  019D                     	;# 
  1277  019D                     	;# 
  1278  019D                     	;# 
  1279  019E                     	;# 
  1280  019E                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  019F                     	;# 
  1284  019F                     	;# 
  1285  019F                     	;# 
  1286  019F                     	;# 
  1287  020C                     	;# 
  1288  020D                     	;# 
  1289  020E                     	;# 
  1290  0210                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0212                     	;# 
  1295  0213                     	;# 
  1296  0213                     	;# 
  1297  0214                     	;# 
  1298  0214                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0216                     	;# 
  1304  0216                     	;# 
  1305  0217                     	;# 
  1306  0217                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028E                     	;# 
  1310  0291                     	;# 
  1311  0291                     	;# 
  1312  0292                     	;# 
  1313  0293                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  030C                     	;# 
  1319  030D                     	;# 
  1320  030E                     	;# 
  1321  0311                     	;# 
  1322  0311                     	;# 
  1323  0312                     	;# 
  1324  0313                     	;# 
  1325  038C                     	;# 
  1326  038D                     	;# 
  1327  038E                     	;# 
  1328  0390                     	;# 
  1329  0391                     	;# 
  1330  0392                     	;# 
  1331  0393                     	;# 
  1332  0394                     	;# 
  1333  0395                     	;# 
  1334  0396                     	;# 
  1335  0397                     	;# 
  1336  0398                     	;# 
  1337  0399                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0511                     	;# 
  1342  0513                     	;# 
  1343  051A                     	;# 
  1344  0811                     	;# 
  1345  0812                     	;# 
  1346  0813                     	;# 
  1347  0814                     	;# 
  1348  0815                     	;# 
  1349  0816                     	;# 
  1350  0817                     	;# 
  1351  0818                     	;# 
  1352  0819                     	;# 
  1353  081A                     	;# 
  1354  081B                     	;# 
  1355  081C                     	;# 
  1356  081D                     	;# 
  1357  081E                     	;# 
  1358  081F                     	;# 
  1359  0820                     	;# 
  1360  0821                     	;# 
  1361  0821                     	;# 
  1362  0822                     	;# 
  1363  0823                     	;# 
  1364  0823                     	;# 
  1365  0824                     	;# 
  1366  0825                     	;# 
  1367  0825                     	;# 
  1368  0826                     	;# 
  1369  0827                     	;# 
  1370  0827                     	;# 
  1371  0828                     	;# 
  1372  0829                     	;# 
  1373  082A                     	;# 
  1374  082B                     	;# 
  1375  082C                     	;# 
  1376  082D                     	;# 
  1377  082E                     	;# 
  1378  082F                     	;# 
  1379  0831                     	;# 
  1380  0832                     	;# 
  1381  0833                     	;# 
  1382  0834                     	;# 
  1383  0835                     	;# 
  1384  0836                     	;# 
  1385  0837                     	;# 
  1386  0838                     	;# 
  1387  0839                     	;# 
  1388  083A                     	;# 
  1389  083B                     	;# 
  1390  083C                     	;# 
  1391  083D                     	;# 
  1392  083E                     	;# 
  1393  083F                     	;# 
  1394  0840                     	;# 
  1395  0841                     	;# 
  1396  0841                     	;# 
  1397  0842                     	;# 
  1398  0843                     	;# 
  1399  0843                     	;# 
  1400  0844                     	;# 
  1401  0845                     	;# 
  1402  0845                     	;# 
  1403  0846                     	;# 
  1404  0847                     	;# 
  1405  0847                     	;# 
  1406  0848                     	;# 
  1407  0849                     	;# 
  1408  084A                     	;# 
  1409  084B                     	;# 
  1410  084C                     	;# 
  1411  084D                     	;# 
  1412  084E                     	;# 
  1413  084F                     	;# 
  1414  0851                     	;# 
  1415  0852                     	;# 
  1416  0853                     	;# 
  1417  0854                     	;# 
  1418  0855                     	;# 
  1419  0856                     	;# 
  1420  0857                     	;# 
  1421  0858                     	;# 
  1422  0859                     	;# 
  1423  085A                     	;# 
  1424  085B                     	;# 
  1425  085C                     	;# 
  1426  085D                     	;# 
  1427  085E                     	;# 
  1428  085F                     	;# 
  1429  0860                     	;# 
  1430  0861                     	;# 
  1431  0861                     	;# 
  1432  0862                     	;# 
  1433  0863                     	;# 
  1434  0863                     	;# 
  1435  0864                     	;# 
  1436  0865                     	;# 
  1437  0865                     	;# 
  1438  0866                     	;# 
  1439  0867                     	;# 
  1440  0867                     	;# 
  1441  0868                     	;# 
  1442  0869                     	;# 
  1443  086A                     	;# 
  1444  086B                     	;# 
  1445  086C                     	;# 
  1446  086D                     	;# 
  1447  086E                     	;# 
  1448  086F                     	;# 
  1449  0FE4                     	;# 
  1450  0FE5                     	;# 
  1451  0FE6                     	;# 
  1452  0FE7                     	;# 
  1453  0FE8                     	;# 
  1454  0FE9                     	;# 
  1455  0FEA                     	;# 
  1456  0FEB                     	;# 
  1457  0FED                     	;# 
  1458  0FEE                     	;# 
  1459  0FEF                     	;# 
  1460  0000                     	;# 
  1461  0001                     	;# 
  1462  0002                     	;# 
  1463  0003                     	;# 
  1464  0004                     	;# 
  1465  0005                     	;# 
  1466  0006                     	;# 
  1467  0007                     	;# 
  1468  0008                     	;# 
  1469  0009                     	;# 
  1470  000A                     	;# 
  1471  000B                     	;# 
  1472  000C                     	;# 
  1473  000D                     	;# 
  1474  000E                     	;# 
  1475  0010                     	;# 
  1476  0011                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0014                     	;# 
  1480  0015                     	;# 
  1481  0016                     	;# 
  1482  0016                     	;# 
  1483  0017                     	;# 
  1484  0018                     	;# 
  1485  0019                     	;# 
  1486  001A                     	;# 
  1487  001B                     	;# 
  1488  001C                     	;# 
  1489  008C                     	;# 
  1490  008D                     	;# 
  1491  008E                     	;# 
  1492  0090                     	;# 
  1493  0091                     	;# 
  1494  0092                     	;# 
  1495  0093                     	;# 
  1496  0094                     	;# 
  1497  0095                     	;# 
  1498  0096                     	;# 
  1499  0097                     	;# 
  1500  0098                     	;# 
  1501  0099                     	;# 
  1502  009A                     	;# 
  1503  009B                     	;# 
  1504  009B                     	;# 
  1505  009C                     	;# 
  1506  009D                     	;# 
  1507  009E                     	;# 
  1508  009F                     	;# 
  1509  010C                     	;# 
  1510  010D                     	;# 
  1511  010E                     	;# 
  1512  0111                     	;# 
  1513  0112                     	;# 
  1514  0113                     	;# 
  1515  0114                     	;# 
  1516  0115                     	;# 
  1517  0116                     	;# 
  1518  0117                     	;# 
  1519  0118                     	;# 
  1520  0119                     	;# 
  1521  011A                     	;# 
  1522  011B                     	;# 
  1523  011C                     	;# 
  1524  011D                     	;# 
  1525  011D                     	;# 
  1526  011D                     	;# 
  1527  011E                     	;# 
  1528  011F                     	;# 
  1529  018C                     	;# 
  1530  018D                     	;# 
  1531  0191                     	;# 
  1532  0191                     	;# 
  1533  0192                     	;# 
  1534  0193                     	;# 
  1535  0193                     	;# 
  1536  0193                     	;# 
  1537  0194                     	;# 
  1538  0195                     	;# 
  1539  0196                     	;# 
  1540  0197                     	;# 
  1541  0199                     	;# 
  1542  0199                     	;# 
  1543  0199                     	;# 
  1544  019A                     	;# 
  1545  019A                     	;# 
  1546  019A                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019C                     	;# 
  1553  019C                     	;# 
  1554  019C                     	;# 
  1555  019D                     	;# 
  1556  019D                     	;# 
  1557  019D                     	;# 
  1558  019E                     	;# 
  1559  019E                     	;# 
  1560  019E                     	;# 
  1561  019F                     	;# 
  1562  019F                     	;# 
  1563  019F                     	;# 
  1564  019F                     	;# 
  1565  019F                     	;# 
  1566  020C                     	;# 
  1567  020D                     	;# 
  1568  020E                     	;# 
  1569  0210                     	;# 
  1570  0211                     	;# 
  1571  0211                     	;# 
  1572  0212                     	;# 
  1573  0212                     	;# 
  1574  0213                     	;# 
  1575  0213                     	;# 
  1576  0214                     	;# 
  1577  0214                     	;# 
  1578  0215                     	;# 
  1579  0215                     	;# 
  1580  0215                     	;# 
  1581  0215                     	;# 
  1582  0216                     	;# 
  1583  0216                     	;# 
  1584  0217                     	;# 
  1585  0217                     	;# 
  1586  028C                     	;# 
  1587  028D                     	;# 
  1588  028E                     	;# 
  1589  0291                     	;# 
  1590  0291                     	;# 
  1591  0292                     	;# 
  1592  0293                     	;# 
  1593  0298                     	;# 
  1594  0298                     	;# 
  1595  0299                     	;# 
  1596  029A                     	;# 
  1597  030C                     	;# 
  1598  030D                     	;# 
  1599  030E                     	;# 
  1600  0311                     	;# 
  1601  0311                     	;# 
  1602  0312                     	;# 
  1603  0313                     	;# 
  1604  038C                     	;# 
  1605  038D                     	;# 
  1606  038E                     	;# 
  1607  0390                     	;# 
  1608  0391                     	;# 
  1609  0392                     	;# 
  1610  0393                     	;# 
  1611  0394                     	;# 
  1612  0395                     	;# 
  1613  0396                     	;# 
  1614  0397                     	;# 
  1615  0398                     	;# 
  1616  0399                     	;# 
  1617  039D                     	;# 
  1618  039E                     	;# 
  1619  039F                     	;# 
  1620  0511                     	;# 
  1621  0513                     	;# 
  1622  051A                     	;# 
  1623  0811                     	;# 
  1624  0812                     	;# 
  1625  0813                     	;# 
  1626  0814                     	;# 
  1627  0815                     	;# 
  1628  0816                     	;# 
  1629  0817                     	;# 
  1630  0818                     	;# 
  1631  0819                     	;# 
  1632  081A                     	;# 
  1633  081B                     	;# 
  1634  081C                     	;# 
  1635  081D                     	;# 
  1636  081E                     	;# 
  1637  081F                     	;# 
  1638  0820                     	;# 
  1639  0821                     	;# 
  1640  0821                     	;# 
  1641  0822                     	;# 
  1642  0823                     	;# 
  1643  0823                     	;# 
  1644  0824                     	;# 
  1645  0825                     	;# 
  1646  0825                     	;# 
  1647  0826                     	;# 
  1648  0827                     	;# 
  1649  0827                     	;# 
  1650  0828                     	;# 
  1651  0829                     	;# 
  1652  082A                     	;# 
  1653  082B                     	;# 
  1654  082C                     	;# 
  1655  082D                     	;# 
  1656  082E                     	;# 
  1657  082F                     	;# 
  1658  0831                     	;# 
  1659  0832                     	;# 
  1660  0833                     	;# 
  1661  0834                     	;# 
  1662  0835                     	;# 
  1663  0836                     	;# 
  1664  0837                     	;# 
  1665  0838                     	;# 
  1666  0839                     	;# 
  1667  083A                     	;# 
  1668  083B                     	;# 
  1669  083C                     	;# 
  1670  083D                     	;# 
  1671  083E                     	;# 
  1672  083F                     	;# 
  1673  0840                     	;# 
  1674  0841                     	;# 
  1675  0841                     	;# 
  1676  0842                     	;# 
  1677  0843                     	;# 
  1678  0843                     	;# 
  1679  0844                     	;# 
  1680  0845                     	;# 
  1681  0845                     	;# 
  1682  0846                     	;# 
  1683  0847                     	;# 
  1684  0847                     	;# 
  1685  0848                     	;# 
  1686  0849                     	;# 
  1687  084A                     	;# 
  1688  084B                     	;# 
  1689  084C                     	;# 
  1690  084D                     	;# 
  1691  084E                     	;# 
  1692  084F                     	;# 
  1693  0851                     	;# 
  1694  0852                     	;# 
  1695  0853                     	;# 
  1696  0854                     	;# 
  1697  0855                     	;# 
  1698  0856                     	;# 
  1699  0857                     	;# 
  1700  0858                     	;# 
  1701  0859                     	;# 
  1702  085A                     	;# 
  1703  085B                     	;# 
  1704  085C                     	;# 
  1705  085D                     	;# 
  1706  085E                     	;# 
  1707  085F                     	;# 
  1708  0860                     	;# 
  1709  0861                     	;# 
  1710  0861                     	;# 
  1711  0862                     	;# 
  1712  0863                     	;# 
  1713  0863                     	;# 
  1714  0864                     	;# 
  1715  0865                     	;# 
  1716  0865                     	;# 
  1717  0866                     	;# 
  1718  0867                     	;# 
  1719  0867                     	;# 
  1720  0868                     	;# 
  1721  0869                     	;# 
  1722  086A                     	;# 
  1723  086B                     	;# 
  1724  086C                     	;# 
  1725  086D                     	;# 
  1726  086E                     	;# 
  1727  086F                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  0010                     	;# 
  1755  0011                     	;# 
  1756  0012                     	;# 
  1757  0013                     	;# 
  1758  0014                     	;# 
  1759  0015                     	;# 
  1760  0016                     	;# 
  1761  0016                     	;# 
  1762  0017                     	;# 
  1763  0018                     	;# 
  1764  0019                     	;# 
  1765  001A                     	;# 
  1766  001B                     	;# 
  1767  001C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0092                     	;# 
  1774  0093                     	;# 
  1775  0094                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  009F                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  0111                     	;# 
  1792  0112                     	;# 
  1793  0113                     	;# 
  1794  0114                     	;# 
  1795  0115                     	;# 
  1796  0116                     	;# 
  1797  0117                     	;# 
  1798  0118                     	;# 
  1799  0119                     	;# 
  1800  011A                     	;# 
  1801  011B                     	;# 
  1802  011C                     	;# 
  1803  011D                     	;# 
  1804  011D                     	;# 
  1805  011D                     	;# 
  1806  011E                     	;# 
  1807  011F                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  0191                     	;# 
  1811  0191                     	;# 
  1812  0192                     	;# 
  1813  0193                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0214                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0216                     	;# 
  1862  0216                     	;# 
  1863  0217                     	;# 
  1864  0217                     	;# 
  1865  028C                     	;# 
  1866  028D                     	;# 
  1867  028E                     	;# 
  1868  0291                     	;# 
  1869  0291                     	;# 
  1870  0292                     	;# 
  1871  0293                     	;# 
  1872  0298                     	;# 
  1873  0298                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  030C                     	;# 
  1877  030D                     	;# 
  1878  030E                     	;# 
  1879  0311                     	;# 
  1880  0311                     	;# 
  1881  0312                     	;# 
  1882  0313                     	;# 
  1883  038C                     	;# 
  1884  038D                     	;# 
  1885  038E                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0511                     	;# 
  1900  0513                     	;# 
  1901  051A                     	;# 
  1902  0811                     	;# 
  1903  0812                     	;# 
  1904  0813                     	;# 
  1905  0814                     	;# 
  1906  0815                     	;# 
  1907  0816                     	;# 
  1908  0817                     	;# 
  1909  0818                     	;# 
  1910  0819                     	;# 
  1911  081A                     	;# 
  1912  081B                     	;# 
  1913  081C                     	;# 
  1914  081D                     	;# 
  1915  081E                     	;# 
  1916  081F                     	;# 
  1917  0820                     	;# 
  1918  0821                     	;# 
  1919  0821                     	;# 
  1920  0822                     	;# 
  1921  0823                     	;# 
  1922  0823                     	;# 
  1923  0824                     	;# 
  1924  0825                     	;# 
  1925  0825                     	;# 
  1926  0826                     	;# 
  1927  0827                     	;# 
  1928  0827                     	;# 
  1929  0828                     	;# 
  1930  0829                     	;# 
  1931  082A                     	;# 
  1932  082B                     	;# 
  1933  082C                     	;# 
  1934  082D                     	;# 
  1935  082E                     	;# 
  1936  082F                     	;# 
  1937  0831                     	;# 
  1938  0832                     	;# 
  1939  0833                     	;# 
  1940  0834                     	;# 
  1941  0835                     	;# 
  1942  0836                     	;# 
  1943  0837                     	;# 
  1944  0838                     	;# 
  1945  0839                     	;# 
  1946  083A                     	;# 
  1947  083B                     	;# 
  1948  083C                     	;# 
  1949  083D                     	;# 
  1950  083E                     	;# 
  1951  083F                     	;# 
  1952  0840                     	;# 
  1953  0841                     	;# 
  1954  0841                     	;# 
  1955  0842                     	;# 
  1956  0843                     	;# 
  1957  0843                     	;# 
  1958  0844                     	;# 
  1959  0845                     	;# 
  1960  0845                     	;# 
  1961  0846                     	;# 
  1962  0847                     	;# 
  1963  0847                     	;# 
  1964  0848                     	;# 
  1965  0849                     	;# 
  1966  084A                     	;# 
  1967  084B                     	;# 
  1968  084C                     	;# 
  1969  084D                     	;# 
  1970  084E                     	;# 
  1971  084F                     	;# 
  1972  0851                     	;# 
  1973  0852                     	;# 
  1974  0853                     	;# 
  1975  0854                     	;# 
  1976  0855                     	;# 
  1977  0856                     	;# 
  1978  0857                     	;# 
  1979  0858                     	;# 
  1980  0859                     	;# 
  1981  085A                     	;# 
  1982  085B                     	;# 
  1983  085C                     	;# 
  1984  085D                     	;# 
  1985  085E                     	;# 
  1986  085F                     	;# 
  1987  0860                     	;# 
  1988  0861                     	;# 
  1989  0861                     	;# 
  1990  0862                     	;# 
  1991  0863                     	;# 
  1992  0863                     	;# 
  1993  0864                     	;# 
  1994  0865                     	;# 
  1995  0865                     	;# 
  1996  0866                     	;# 
  1997  0867                     	;# 
  1998  0867                     	;# 
  1999  0868                     	;# 
  2000  0869                     	;# 
  2001  086A                     	;# 
  2002  086B                     	;# 
  2003  086C                     	;# 
  2004  086D                     	;# 
  2005  086E                     	;# 
  2006  086F                     	;# 
  2007  0FE4                     	;# 
  2008  0FE5                     	;# 
  2009  0FE6                     	;# 
  2010  0FE7                     	;# 
  2011  0FE8                     	;# 
  2012  0FE9                     	;# 
  2013  0FEA                     	;# 
  2014  0FEB                     	;# 
  2015  0FED                     	;# 
  2016  0FEE                     	;# 
  2017  0FEF                     	;# 
  2018  0000                     	;# 
  2019  0001                     	;# 
  2020  0002                     	;# 
  2021  0003                     	;# 
  2022  0004                     	;# 
  2023  0005                     	;# 
  2024  0006                     	;# 
  2025  0007                     	;# 
  2026  0008                     	;# 
  2027  0009                     	;# 
  2028  000A                     	;# 
  2029  000B                     	;# 
  2030  000C                     	;# 
  2031  000D                     	;# 
  2032  000E                     	;# 
  2033  0010                     	;# 
  2034  0011                     	;# 
  2035  0012                     	;# 
  2036  0013                     	;# 
  2037  0014                     	;# 
  2038  0015                     	;# 
  2039  0016                     	;# 
  2040  0016                     	;# 
  2041  0017                     	;# 
  2042  0018                     	;# 
  2043  0019                     	;# 
  2044  001A                     	;# 
  2045  001B                     	;# 
  2046  001C                     	;# 
  2047  008C                     	;# 
  2048  008D                     	;# 
  2049  008E                     	;# 
  2050  0090                     	;# 
  2051  0091                     	;# 
  2052  0092                     	;# 
  2053  0093                     	;# 
  2054  0094                     	;# 
  2055  0095                     	;# 
  2056  0096                     	;# 
  2057  0097                     	;# 
  2058  0098                     	;# 
  2059  0099                     	;# 
  2060  009A                     	;# 
  2061  009B                     	;# 
  2062  009B                     	;# 
  2063  009C                     	;# 
  2064  009D                     	;# 
  2065  009E                     	;# 
  2066  009F                     	;# 
  2067  010C                     	;# 
  2068  010D                     	;# 
  2069  010E                     	;# 
  2070  0111                     	;# 
  2071  0112                     	;# 
  2072  0113                     	;# 
  2073  0114                     	;# 
  2074  0115                     	;# 
  2075  0116                     	;# 
  2076  0117                     	;# 
  2077  0118                     	;# 
  2078  0119                     	;# 
  2079  011A                     	;# 
  2080  011B                     	;# 
  2081  011C                     	;# 
  2082  011D                     	;# 
  2083  011D                     	;# 
  2084  011D                     	;# 
  2085  011E                     	;# 
  2086  011F                     	;# 
  2087  018C                     	;# 
  2088  018D                     	;# 
  2089  0191                     	;# 
  2090  0191                     	;# 
  2091  0192                     	;# 
  2092  0193                     	;# 
  2093  0193                     	;# 
  2094  0193                     	;# 
  2095  0194                     	;# 
  2096  0195                     	;# 
  2097  0196                     	;# 
  2098  0197                     	;# 
  2099  0199                     	;# 
  2100  0199                     	;# 
  2101  0199                     	;# 
  2102  019A                     	;# 
  2103  019A                     	;# 
  2104  019A                     	;# 
  2105  019B                     	;# 
  2106  019B                     	;# 
  2107  019B                     	;# 
  2108  019B                     	;# 
  2109  019B                     	;# 
  2110  019C                     	;# 
  2111  019C                     	;# 
  2112  019C                     	;# 
  2113  019D                     	;# 
  2114  019D                     	;# 
  2115  019D                     	;# 
  2116  019E                     	;# 
  2117  019E                     	;# 
  2118  019E                     	;# 
  2119  019F                     	;# 
  2120  019F                     	;# 
  2121  019F                     	;# 
  2122  019F                     	;# 
  2123  019F                     	;# 
  2124  020C                     	;# 
  2125  020D                     	;# 
  2126  020E                     	;# 
  2127  0210                     	;# 
  2128  0211                     	;# 
  2129  0211                     	;# 
  2130  0212                     	;# 
  2131  0212                     	;# 
  2132  0213                     	;# 
  2133  0213                     	;# 
  2134  0214                     	;# 
  2135  0214                     	;# 
  2136  0215                     	;# 
  2137  0215                     	;# 
  2138  0215                     	;# 
  2139  0215                     	;# 
  2140  0216                     	;# 
  2141  0216                     	;# 
  2142  0217                     	;# 
  2143  0217                     	;# 
  2144  028C                     	;# 
  2145  028D                     	;# 
  2146  028E                     	;# 
  2147  0291                     	;# 
  2148  0291                     	;# 
  2149  0292                     	;# 
  2150  0293                     	;# 
  2151  0298                     	;# 
  2152  0298                     	;# 
  2153  0299                     	;# 
  2154  029A                     	;# 
  2155  030C                     	;# 
  2156  030D                     	;# 
  2157  030E                     	;# 
  2158  0311                     	;# 
  2159  0311                     	;# 
  2160  0312                     	;# 
  2161  0313                     	;# 
  2162  038C                     	;# 
  2163  038D                     	;# 
  2164  038E                     	;# 
  2165  0390                     	;# 
  2166  0391                     	;# 
  2167  0392                     	;# 
  2168  0393                     	;# 
  2169  0394                     	;# 
  2170  0395                     	;# 
  2171  0396                     	;# 
  2172  0397                     	;# 
  2173  0398                     	;# 
  2174  0399                     	;# 
  2175  039D                     	;# 
  2176  039E                     	;# 
  2177  039F                     	;# 
  2178  0511                     	;# 
  2179  0513                     	;# 
  2180  051A                     	;# 
  2181  0811                     	;# 
  2182  0812                     	;# 
  2183  0813                     	;# 
  2184  0814                     	;# 
  2185  0815                     	;# 
  2186  0816                     	;# 
  2187  0817                     	;# 
  2188  0818                     	;# 
  2189  0819                     	;# 
  2190  081A                     	;# 
  2191  081B                     	;# 
  2192  081C                     	;# 
  2193  081D                     	;# 
  2194  081E                     	;# 
  2195  081F                     	;# 
  2196  0820                     	;# 
  2197  0821                     	;# 
  2198  0821                     	;# 
  2199  0822                     	;# 
  2200  0823                     	;# 
  2201  0823                     	;# 
  2202  0824                     	;# 
  2203  0825                     	;# 
  2204  0825                     	;# 
  2205  0826                     	;# 
  2206  0827                     	;# 
  2207  0827                     	;# 
  2208  0828                     	;# 
  2209  0829                     	;# 
  2210  082A                     	;# 
  2211  082B                     	;# 
  2212  082C                     	;# 
  2213  082D                     	;# 
  2214  082E                     	;# 
  2215  082F                     	;# 
  2216  0831                     	;# 
  2217  0832                     	;# 
  2218  0833                     	;# 
  2219  0834                     	;# 
  2220  0835                     	;# 
  2221  0836                     	;# 
  2222  0837                     	;# 
  2223  0838                     	;# 
  2224  0839                     	;# 
  2225  083A                     	;# 
  2226  083B                     	;# 
  2227  083C                     	;# 
  2228  083D                     	;# 
  2229  083E                     	;# 
  2230  083F                     	;# 
  2231  0840                     	;# 
  2232  0841                     	;# 
  2233  0841                     	;# 
  2234  0842                     	;# 
  2235  0843                     	;# 
  2236  0843                     	;# 
  2237  0844                     	;# 
  2238  0845                     	;# 
  2239  0845                     	;# 
  2240  0846                     	;# 
  2241  0847                     	;# 
  2242  0847                     	;# 
  2243  0848                     	;# 
  2244  0849                     	;# 
  2245  084A                     	;# 
  2246  084B                     	;# 
  2247  084C                     	;# 
  2248  084D                     	;# 
  2249  084E                     	;# 
  2250  084F                     	;# 
  2251  0851                     	;# 
  2252  0852                     	;# 
  2253  0853                     	;# 
  2254  0854                     	;# 
  2255  0855                     	;# 
  2256  0856                     	;# 
  2257  0857                     	;# 
  2258  0858                     	;# 
  2259  0859                     	;# 
  2260  085A                     	;# 
  2261  085B                     	;# 
  2262  085C                     	;# 
  2263  085D                     	;# 
  2264  085E                     	;# 
  2265  085F                     	;# 
  2266  0860                     	;# 
  2267  0861                     	;# 
  2268  0861                     	;# 
  2269  0862                     	;# 
  2270  0863                     	;# 
  2271  0863                     	;# 
  2272  0864                     	;# 
  2273  0865                     	;# 
  2274  0865                     	;# 
  2275  0866                     	;# 
  2276  0867                     	;# 
  2277  0867                     	;# 
  2278  0868                     	;# 
  2279  0869                     	;# 
  2280  086A                     	;# 
  2281  086B                     	;# 
  2282  086C                     	;# 
  2283  086D                     	;# 
  2284  086E                     	;# 
  2285  086F                     	;# 
  2286  0FE4                     	;# 
  2287  0FE5                     	;# 
  2288  0FE6                     	;# 
  2289  0FE7                     	;# 
  2290  0FE8                     	;# 
  2291  0FE9                     	;# 
  2292  0FEA                     	;# 
  2293  0FEB                     	;# 
  2294  0FED                     	;# 
  2295  0FEE                     	;# 
  2296  0FEF                     	;# 
  2297                           
  2298                           	psect	stringtext1
  2299  0398                     __pstringtext1:	
  2300  0398                     _segmcode:	
  2301  0398  343F               	retlw	63
  2302  0399  3406               	retlw	6
  2303  039A  345B               	retlw	91
  2304  039B  344F               	retlw	79
  2305  039C  3466               	retlw	102
  2306  039D  346D               	retlw	109
  2307  039E  347D               	retlw	125
  2308  039F  3407               	retlw	7
  2309  03A0  347F               	retlw	127
  2310  03A1  346F               	retlw	111
  2311  03A2  3477               	retlw	119
  2312  03A3  347C               	retlw	124
  2313  03A4  3439               	retlw	57
  2314  03A5  345E               	retlw	94
  2315  03A6  3479               	retlw	121
  2316  03A7  3471               	retlw	113
  2317  03A8                     __end_of_segmcode:	
  2318  0015                     _TMR0	set	21
  2319  000C                     _PORTAbits	set	12
  2320  000E                     _PORTCbits	set	14
  2321  000B                     _INTCONbits	set	11
  2322  005F                     _GIE	set	95
  2323  0074                     _RC4	set	116
  2324  008E                     _TRISCbits	set	142
  2325  008E                     _TRISC	set	142
  2326  008D                     _TRISB	set	141
  2327  008C                     _TRISA	set	140
  2328  0095                     _OPTION_REGbits	set	149
  2329  0099                     _OSCCONbits	set	153
  2330  0473                     _TRISC3	set	1139
  2331  0474                     _TRISC4	set	1140
  2332  010C                     _LATAbits	set	268
  2333  010D                     _LATBbits	set	269
  2334  010E                     _LATC	set	270
  2335  010D                     _LATB	set	269
  2336  010C                     _LATA	set	268
  2337  0874                     _LATC4	set	2164
  2338  0873                     _LATC3	set	2163
  2339  020E                     _WPUCbits	set	526
  2340  020E                     _WPUC	set	526
  2341  020D                     _WPUB	set	525
  2342  020C                     _WPUA	set	524
  2343  1073                     _WPUC3	set	4211
  2344  1074                     _WPUC4	set	4212
  2345  1474                     _ODCONC4	set	5236
  2346  1473                     _ODCONC3	set	5235
  2347  0399                     _IOCCFbits	set	921
  2348  0397                     _IOCCPbits	set	919
  2349  0398                     _IOCCN	set	920
  2350  0397                     _IOCCP	set	919
  2351  0395                     _IOCBN	set	917
  2352  0394                     _IOCBP	set	916
  2353  0392                     _IOCAN	set	914
  2354  0391                     _IOCAP	set	913
  2355                           
  2356                           ; #config settings
  2357  0000                     
  2358                           	psect	cinit
  2359  0085                     start_initialization:	
  2360  0085                     __initialization:	
  2361                           
  2362                           ; Clear objects allocated to BANK0
  2363  0085  3020               	movlw	low __pbssBANK0
  2364  0086  0084               	movwf	4
  2365  0087  3000               	movlw	high __pbssBANK0
  2366  0088  0085               	movwf	5
  2367  0089  302B               	movlw	43
  2368  008A  3183  23E4         	fcall	clear_ram0
  2369  008C                     end_of_initialization:	
  2370                           ;End of C runtime variable initialization code
  2371                           
  2372  008C                     __end_of__initialization:	
  2373  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2374  008D  0020               	movlb	0
  2375  008E  3183  2BDD         	ljmp	_main	;jump to C main() function
  2376                           
  2377                           	psect	bssBANK0
  2378  0020                     __pbssBANK0:	
  2379  0020                     _g_data:	
  2380  0020                     	ds	35
  2381  0043                     _Temp:	
  2382  0043                     	ds	2
  2383  0045                     ISR@key_time_cnt:	
  2384  0045                     	ds	2
  2385  0047                     _temp_l:	
  2386  0047                     	ds	1
  2387  0048                     _temp_h:	
  2388  0048                     	ds	1
  2389  0049                     ISR@history_key:	
  2390  0049                     	ds	1
  2391  004A                     _ENUM:	
  2392  004A                     	ds	1
  2393                           
  2394                           	psect	clrtext
  2395  03E4                     clear_ram0:	
  2396                           ;	Called with FSR0 containing the base address, and
  2397                           ;	WREG with the size to clear
  2398                           
  2399  03E4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2400  03E5                     clrloop0:	
  2401  03E5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2402  03E6  3101               	addfsr 0,1
  2403  03E7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2404  03E8  2BE5               	goto	clrloop0	;have we reached the end yet?
  2405  03E9  3400               	retlw	0	;all done for this memory range, return
  2406                           
  2407                           	psect	cstackCOMMON
  2408  0070                     __pcstackCOMMON:	
  2409  0070                     ?_timer_init:	
  2410  0070                     ?_IIC_Init:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?_timer_start:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_receive_decode:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ?_update_time:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_timer_reset:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_update_display:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ?_init_env:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_ISR:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ?_main:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_times2number:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_test_get_number:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ??_test_get_number:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_control595_delay:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ??_control595_delay:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_write_byte:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?i1_timer_reset:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ??i1_timer_reset:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?i1_timer_start:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ??i1_timer_start:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_check_err:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?___lwmod:	
  2471                           ; 2 bytes @ 0x0
  2472                           
  2473  0070                     test_get_number@get_num:	
  2474                           ; 2 bytes @ 0x0
  2475                           
  2476  0070                     times2number@high_level_times:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ___lwmod@divisor:	
  2480                           ; 2 bytes @ 0x0
  2481                           
  2482                           
  2483                           ; 2 bytes @ 0x0
  2484  0070                     	ds	1
  2485  0071                     control595_delay@times:	
  2486                           
  2487                           ; 1 bytes @ 0x1
  2488  0071                     	ds	1
  2489  0072                     ??_times2number:	
  2490  0072                     ??_check_err:	
  2491                           ; 1 bytes @ 0x2
  2492                           
  2493  0072                     ??_write_byte:	
  2494                           ; 1 bytes @ 0x2
  2495                           
  2496  0072                     ___lwmod@dividend:	
  2497                           ; 1 bytes @ 0x2
  2498                           
  2499                           
  2500                           ; 2 bytes @ 0x2
  2501  0072                     	ds	2
  2502  0074                     ??___lwmod:	
  2503  0074                     write_byte@data:	
  2504                           ; 1 bytes @ 0x4
  2505                           
  2506                           
  2507                           ; 1 bytes @ 0x4
  2508  0074                     	ds	1
  2509  0075                     write_byte@i:	
  2510  0075                     ___lwmod@counter:	
  2511                           ; 1 bytes @ 0x5
  2512                           
  2513                           
  2514                           ; 1 bytes @ 0x5
  2515  0075                     	ds	1
  2516  0076                     ?_write_once:	
  2517  0076                     write_once@HR:	
  2518                           ; 1 bytes @ 0x6
  2519                           
  2520                           
  2521                           ; 1 bytes @ 0x6
  2522  0076                     	ds	1
  2523  0077                     write_once@ML:	
  2524  0077                     _check_err$597:	
  2525                           ; 1 bytes @ 0x7
  2526                           
  2527                           
  2528                           ; 2 bytes @ 0x7
  2529  0077                     	ds	1
  2530  0078                     write_once@MR:	
  2531                           
  2532                           ; 1 bytes @ 0x8
  2533  0078                     	ds	1
  2534  0079                     ??_write_once:	
  2535  0079                     write_once@HL:	
  2536                           ; 1 bytes @ 0x9
  2537                           
  2538  0079                     _check_err$598:	
  2539                           ; 1 bytes @ 0x9
  2540                           
  2541                           
  2542                           ; 2 bytes @ 0x9
  2543  0079                     	ds	1
  2544  007A                     ??_update_display:	
  2545                           
  2546                           ; 1 bytes @ 0xA
  2547  007A                     	ds	1
  2548  007B                     check_err@i:	
  2549                           
  2550                           ; 1 bytes @ 0xB
  2551  007B                     	ds	1
  2552  007C                     check_err@check:	
  2553                           
  2554                           ; 1 bytes @ 0xC
  2555  007C                     	ds	1
  2556  007D                     ??_update_time:	
  2557                           
  2558                           ; 1 bytes @ 0xD
  2559  007D                     	ds	1
  2560                           
  2561                           	psect	cstackBANK0
  2562  004B                     __pcstackBANK0:	
  2563  004B                     ??_receive_decode:	
  2564                           
  2565                           ; 1 bytes @ 0x0
  2566  004B                     	ds	4
  2567  004F                     receive_decode@last_time_h:	
  2568                           
  2569                           ; 2 bytes @ 0x4
  2570  004F                     	ds	2
  2571  0051                     receive_decode@last_time_m:	
  2572                           
  2573                           ; 2 bytes @ 0x6
  2574  0051                     	ds	2
  2575  0053                     receive_decode@i:	
  2576                           
  2577                           ; 2 bytes @ 0x8
  2578  0053                     	ds	2
  2579  0055                     receive_decode@read_value:	
  2580                           
  2581                           ; 1 bytes @ 0xA
  2582  0055                     	ds	1
  2583  0056                     ??_ISR:	
  2584                           
  2585                           ; 1 bytes @ 0xB
  2586  0056                     	ds	2
  2587  0058                     ??_timer_init:	
  2588  0058                     ??_IIC_Init:	
  2589                           ; 1 bytes @ 0xD
  2590                           
  2591  0058                     ??_timer_start:	
  2592                           ; 1 bytes @ 0xD
  2593                           
  2594  0058                     ??_timer_reset:	
  2595                           ; 1 bytes @ 0xD
  2596                           
  2597  0058                     ??_init_env:	
  2598                           ; 1 bytes @ 0xD
  2599                           
  2600                           
  2601                           ; 1 bytes @ 0xD
  2602  0058                     	ds	1
  2603  0059                     init_env@i:	
  2604                           
  2605                           ; 2 bytes @ 0xE
  2606  0059                     	ds	2
  2607  005B                     ??_main:	
  2608                           
  2609                           	psect	maintext
  2610  03DD                     __pmaintext:	
  2611                           ; 1 bytes @ 0x10
  2612 ;;
  2613 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2614 ;;
  2615 ;; *************** function _main *****************
  2616 ;; Defined at:
  2617 ;;		line 179 in file "main.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : B1F/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels required when called:    8
  2637 ;; This function calls:
  2638 ;;		_init_env
  2639 ;;		_timer_start
  2640 ;; This function is called by:
  2641 ;;		Startup code after reset
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _main
  2647  03DD                     _main:	
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2651  03DD  3181  21FD  3183   	fcall	_init_env
  2652  03E0  3183  23F4  3183   	fcall	_timer_start
  2653  03E3                     l100:	
  2654  03E3  2BE3               	goto	l100
  2655  03E4                     __end_of_main:	
  2656                           
  2657                           	psect	text1
  2658  03F4                     __ptext1:	
  2659 ;; *************** function _timer_start *****************
  2660 ;; Defined at:
  2661 ;;		line 27 in file "timer.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    7
  2682 ;; This function calls:
  2683 ;;		_timer_reset
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function _timer_start
  2691  03F4                     _timer_start:	
  2692                           
  2693                           ;timer.c: 29:     timer_reset();
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _timer_start: [wreg+status,2+status,0+pclath+cstack]
  2697  03F4  3183  23EA         	fcall	_timer_reset
  2698                           
  2699                           ;timer.c: 30:     INTCONbits.TMR0IE = 0b0;
  2700  03F6  128B               	bcf	11,5	;volatile
  2701  03F7  0008               	return
  2702  03F8                     __end_of_timer_start:	
  2703                           
  2704                           	psect	text2
  2705  03EA                     __ptext2:	
  2706 ;; *************** function _timer_reset *****************
  2707 ;; Defined at:
  2708 ;;		line 22 in file "timer.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    6
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_timer_start
  2733 ;;		_timer_stop
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function _timer_reset
  2739  03EA                     _timer_reset:	
  2740                           
  2741                           ;timer.c: 24:     INTCONbits.TMR0IF = 0;
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _timer_reset: [wreg]
  2745  03EA  110B               	bcf	11,2	;volatile
  2746                           
  2747                           ;timer.c: 25:     TMR0 = (217 + 14);
  2748  03EB  30E7               	movlw	231
  2749  03EC  0020               	movlb	0	; select bank0
  2750  03ED  0095               	movwf	21	;volatile
  2751  03EE  0008               	return
  2752  03EF                     __end_of_timer_reset:	
  2753                           
  2754                           	psect	text3
  2755  01FD                     __ptext3:	
  2756 ;; *************** function _init_env *****************
  2757 ;; Defined at:
  2758 ;;		line 39 in file "main.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  i               2   14[BANK0 ] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;Total ram usage:        3 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    7
  2779 ;; This function calls:
  2780 ;;		_IIC_Init
  2781 ;;		_timer_init
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _init_env
  2789  01FD                     _init_env:	
  2790                           
  2791                           ;main.c: 44:     IOCCP = 0;
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _init_env: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2795  01FD  178B               	bsf	11,7	;volatile
  2796                           
  2797                           ;main.c: 46: 
  2798  01FE  158B               	bsf	11,3	;volatile
  2799                           
  2800                           ;main.c: 52: 
  2801  01FF  0021               	movlb	1	; select bank1
  2802  0200  0819               	movf	25,w	;volatile
  2803  0201  39FC               	andlw	-4
  2804  0202  3802               	iorlw	2
  2805  0203  0099               	movwf	25	;volatile
  2806                           
  2807                           ;main.c: 53:     TRISCbits.TRISC1 = 1;
  2808  0204  0819               	movf	25,w	;volatile
  2809  0205  3987               	andlw	-121
  2810  0206  3850               	iorlw	80
  2811  0207  0099               	movwf	25	;volatile
  2812                           
  2813                           ;main.c: 55:     IOCCPbits.IOCCP1 = 1;
  2814  0208  3183  23B8  3181   	fcall	_timer_init
  2815                           
  2816                           ;main.c: 63: 
  2817  020B  0021               	movlb	1	; select bank1
  2818  020C  1395               	bcf	21,7	;volatile
  2819                           
  2820                           ;main.c: 65:     LATBbits.LATB2 = PIN_LOW;
  2821  020D  018C               	clrf	12	;volatile
  2822                           
  2823                           ;main.c: 66: 
  2824  020E  0022               	movlb	2	; select bank2
  2825  020F  018C               	clrf	12	;volatile
  2826                           
  2827                           ;main.c: 67: 
  2828  0210  0024               	movlb	4	; select bank4
  2829  0211  018C               	clrf	12	;volatile
  2830                           
  2831                           ;main.c: 68:     PORTCbits.RC2 = BPC_PWR_ON;
  2832  0212  0027               	movlb	7	; select bank7
  2833  0213  0191               	clrf	17	;volatile
  2834                           
  2835                           ;main.c: 69: 
  2836  0214  0192               	clrf	18	;volatile
  2837                           
  2838                           ;main.c: 71:     TRISCbits.TRISC0 = 1;
  2839  0215  0021               	movlb	1	; select bank1
  2840  0216  018D               	clrf	13	;volatile
  2841                           
  2842                           ;main.c: 72:     WPUCbits.WPUC0 = 1;
  2843  0217  0022               	movlb	2	; select bank2
  2844  0218  018D               	clrf	13	;volatile
  2845                           
  2846                           ;main.c: 73: 
  2847  0219  0024               	movlb	4	; select bank4
  2848  021A  018D               	clrf	13	;volatile
  2849                           
  2850                           ;main.c: 74: 
  2851  021B  0027               	movlb	7	; select bank7
  2852  021C  0194               	clrf	20	;volatile
  2853                           
  2854                           ;main.c: 75:     IIC_Init();
  2855  021D  0195               	clrf	21	;volatile
  2856                           
  2857                           ;main.c: 77: 
  2858  021E  0021               	movlb	1	; select bank1
  2859  021F  018E               	clrf	14	;volatile
  2860                           
  2861                           ;main.c: 78:     PORTAbits.RA0 = 1;
  2862  0220  0022               	movlb	2	; select bank2
  2863  0221  018E               	clrf	14	;volatile
  2864                           
  2865                           ;main.c: 79: }
  2866  0222  3001               	movlw	1
  2867  0223  0024               	movlb	4	; select bank4
  2868  0224  008E               	movwf	14	;volatile
  2869                           
  2870                           ;main.c: 80: 
  2871  0225  0027               	movlb	7	; select bank7
  2872  0226  0197               	clrf	23	;volatile
  2873                           
  2874                           ;main.c: 81: void __attribute__((picinterrupt(""))) ISR(void)
  2875  0227  0198               	clrf	24	;volatile
  2876                           
  2877                           ;main.c: 86: 
  2878  0228  0021               	movlb	1	; select bank1
  2879  0229  168E               	bsf	14,5	;volatile
  2880                           
  2881                           ;main.c: 87: 
  2882  022A  0024               	movlb	4	; select bank4
  2883  022B  168E               	bsf	14,5	;volatile
  2884                           
  2885                           ;main.c: 89: 
  2886  022C  0021               	movlb	1	; select bank1
  2887  022D  148E               	bsf	14,1	;volatile
  2888                           
  2889                           ;main.c: 90:     {
  2890  022E  0024               	movlb	4	; select bank4
  2891  022F  148E               	bsf	14,1	;volatile
  2892                           
  2893                           ;main.c: 91: 
  2894  0230  0027               	movlb	7	; select bank7
  2895  0231  1497               	bsf	23,1	;volatile
  2896                           
  2897                           ;main.c: 94:         g_data.g_flg_switch = FALSE;
  2898  0232  0020               	movlb	0	; select bank0
  2899  0233  01D9               	clrf	init_env@i
  2900  0234  01DA               	clrf	init_env@i+1
  2901  0235  085A               	movf	init_env@i+1,w
  2902  0236  3A80               	xorlw	128
  2903  0237  00D8               	movwf	??_init_env
  2904  0238  3080               	movlw	128
  2905  0239  0258               	subwf	??_init_env,w
  2906  023A  1D03               	skipz
  2907  023B  2A3E               	goto	u1365
  2908  023C  3014               	movlw	20
  2909  023D  0259               	subwf	init_env@i,w
  2910  023E                     u1365:	
  2911  023E  1803               	btfsc	3,0
  2912  023F  2A58               	goto	l70
  2913  0240                     l1827:	
  2914                           
  2915                           ;main.c: 95:         g_data.cnt_update = 0;
  2916  0240  3005               	movlw	5
  2917  0241  0020               	movlb	0	; select bank0
  2918  0242  00D8               	movwf	??_init_env
  2919  0243  0859               	movf	init_env@i,w
  2920  0244  3E2D               	addlw	(low ((_g_data| 0+13)))& (0+255)
  2921  0245  0086               	movwf	6
  2922  0246  0187               	clrf	7
  2923  0247  0858               	movf	??_init_env,w
  2924  0248  0081               	movwf	1
  2925                           
  2926                           ;main.c: 96:         g_data.g_recv_count = CODE_P0;
  2927  0249  3001               	movlw	1
  2928  024A  07D9               	addwf	init_env@i,f
  2929  024B  3000               	movlw	0
  2930  024C  3DDA               	addwfc	init_env@i+1,f
  2931  024D  085A               	movf	init_env@i+1,w
  2932  024E  3A80               	xorlw	128
  2933  024F  00D8               	movwf	??_init_env
  2934  0250  3080               	movlw	128
  2935  0251  0258               	subwf	??_init_env,w
  2936  0252  1D03               	skipz
  2937  0253  2A56               	goto	u1375
  2938  0254  3014               	movlw	20
  2939  0255  0259               	subwf	init_env@i,w
  2940  0256                     u1375:	
  2941  0256  1C03               	skipc
  2942  0257  2A40               	goto	l1827
  2943  0258                     l70:	
  2944                           
  2945                           ;main.c: 101:         return;
  2946  0258  0022               	movlb	2	; select bank2
  2947  0259  110D               	bcf	13,2	;volatile
  2948                           
  2949                           ;main.c: 104:     {
  2950  025A  0020               	movlb	0	; select bank0
  2951  025B  110E               	bcf	14,2	;volatile
  2952                           
  2953                           ;main.c: 107:     }
  2954  025C  0021               	movlb	1	; select bank1
  2955  025D  140E               	bsf	14,0	;volatile
  2956                           
  2957                           ;main.c: 108:     else if(INTCONbits.IOCIF || IOCCFbits.IOCCF1)
  2958  025E  0024               	movlb	4	; select bank4
  2959  025F  140E               	bsf	14,0	;volatile
  2960                           
  2961                           ;main.c: 111:         IOCCFbits.IOCCF1 = FALSE;
  2962  0260  3183  23C5         	fcall	_IIC_Init
  2963                           
  2964                           ;main.c: 114: 
  2965  0262  0020               	movlb	0	; select bank0
  2966  0263  140C               	bsf	12,0	;volatile
  2967  0264  0008               	return
  2968  0265                     __end_of_init_env:	
  2969                           
  2970                           	psect	text4
  2971  03B8                     __ptext4:	
  2972 ;; *************** function _timer_init *****************
  2973 ;; Defined at:
  2974 ;;		line 6 in file "timer.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    6
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_init_env
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _timer_init
  3004  03B8                     _timer_init:	
  3005                           
  3006                           ;timer.c: 9:     INTCONbits.GIE = 0b1;
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _timer_init: [wreg+status,2+status,0]
  3010  03B8  178B               	bsf	11,7	;volatile
  3011                           
  3012                           ;timer.c: 12:     INTCONbits.TMR0IE = 0b0;
  3013  03B9  128B               	bcf	11,5	;volatile
  3014                           
  3015                           ;timer.c: 17:     OPTION_REGbits.PSA = 0;
  3016  03BA  0021               	movlb	1	; select bank1
  3017  03BB  1195               	bcf	21,3	;volatile
  3018                           
  3019                           ;timer.c: 18:     OPTION_REGbits.TMR0CS = 0;
  3020  03BC  1295               	bcf	21,5	;volatile
  3021                           
  3022                           ;timer.c: 19:     OPTION_REGbits.PS = 4;
  3023  03BD  0815               	movf	21,w	;volatile
  3024  03BE  39F8               	andlw	-8
  3025  03BF  3804               	iorlw	4
  3026  03C0  0095               	movwf	21	;volatile
  3027                           
  3028                           ;timer.c: 20:     TMR0 = (217 + 14);
  3029  03C1  30E7               	movlw	231
  3030  03C2  0020               	movlb	0	; select bank0
  3031  03C3  0095               	movwf	21	;volatile
  3032  03C4  0008               	return
  3033  03C5                     __end_of_timer_init:	
  3034                           
  3035                           	psect	text5
  3036  03C5                     __ptext5:	
  3037 ;; *************** function _IIC_Init *****************
  3038 ;; Defined at:
  3039 ;;		line 8 in file "myiic.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		None
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    6
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_init_env
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _IIC_Init
  3069  03C5                     _IIC_Init:	
  3070                           
  3071                           ;myiic.c: 10:     LATC3=1;
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _IIC_Init: []
  3075  03C5  0022               	movlb	2	; select bank2
  3076  03C6  158E               	bsf	14,3	;volatile
  3077                           
  3078                           ;myiic.c: 11:  LATC4=1;
  3079  03C7  160E               	bsf	14,4	;volatile
  3080                           
  3081                           ;myiic.c: 13:     ODCONC3 = 1;
  3082  03C8  0025               	movlb	5	; select bank5
  3083  03C9  158E               	bsf	14,3	;volatile
  3084                           
  3085                           ;myiic.c: 14:     ODCONC4 = 1;
  3086  03CA  160E               	bsf	14,4	;volatile
  3087                           
  3088                           ;myiic.c: 16:     TRISC4 = 0;
  3089  03CB  0021               	movlb	1	; select bank1
  3090  03CC  120E               	bcf	14,4	;volatile
  3091                           
  3092                           ;myiic.c: 17:     TRISC3 = 0;
  3093  03CD  118E               	bcf	14,3	;volatile
  3094                           
  3095                           ;myiic.c: 19:  WPUC4 = 1;
  3096  03CE  0024               	movlb	4	; select bank4
  3097  03CF  160E               	bsf	14,4	;volatile
  3098                           
  3099                           ;myiic.c: 20:     WPUC3 = 1;
  3100  03D0  158E               	bsf	14,3	;volatile
  3101  03D1  0008               	return
  3102  03D2                     __end_of_IIC_Init:	
  3103                           
  3104                           	psect	intentry
  3105  0004                     __pintentry:	
  3106 ;; *************** function _ISR *****************
  3107 ;; Defined at:
  3108 ;;		line 117 in file "main.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;Total ram usage:        2 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    5
  3129 ;; This function calls:
  3130 ;;		___lwmod
  3131 ;;		_receive_decode
  3132 ;;		_update_time
  3133 ;;		i1_timer_reset
  3134 ;;		i1_timer_start
  3135 ;; This function is called by:
  3136 ;;		Interrupt level 1
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140  0004                     _ISR:	
  3141                           
  3142                           ;incstack = 0
  3143  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3144                           
  3145                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3146  0005  3180               	pagesel	$
  3147                           
  3148                           ;main.c: 119: ;main.c: 120:         {;main.c: 124:         update_time();
  3149  0006  0020               	movlb	0	; select bank0
  3150  0007  0821               	movf	_g_data+1,w	;volatile
  3151  0008  1D03               	btfss	3,2
  3152  0009  2823               	goto	i1l2017
  3153  000A  0320               	decf	_g_data,w	;volatile
  3154  000B  1903               	btfsc	3,2
  3155  000C  2814               	goto	i1l1997
  3156  000D  3000               	movlw	0
  3157  000E  0242               	subwf	_g_data+34,w	;volatile
  3158  000F  301E               	movlw	30
  3159  0010  1903               	skipnz
  3160  0011  0241               	subwf	_g_data+33,w	;volatile
  3161  0012  1C03               	skipc
  3162  0013  2823               	goto	i1l2017
  3163  0014                     i1l1997:	
  3164                           
  3165                           ;main.c: 126:         if(key_time_cnt++ % 10 == 0);main.c: 128:             history_key 
      +                          <<= 1;
  3166  0014  01A2               	clrf	_g_data+2	;volatile
  3167                           
  3168                           ;main.c: 129:             history_key |= (PORTCbits.RC5 == PIN_HIGH)? 0x01 : 0x00;
  3169  0015  3001               	movlw	1
  3170  0016  00D6               	movwf	??_ISR
  3171  0017  0856               	movf	??_ISR,w
  3172  0018  00A1               	movwf	_g_data+1	;volatile
  3173                           
  3174                           ;main.c: 130: 
  3175  0019  01A0               	clrf	_g_data	;volatile
  3176                           
  3177                           ;main.c: 131:             if(((0x03) == (history_key & (0x0f))) && (FALSE == g_data.g_fl
      +                          g_switch))
  3178  001A  01C1               	clrf	_g_data+33	;volatile
  3179  001B  01C2               	clrf	_g_data+34	;volatile
  3180                           
  3181                           ;main.c: 132:             {
  3182  001C  01AB               	clrf	_g_data+11	;volatile
  3183  001D  01AC               	clrf	_g_data+12	;volatile
  3184                           
  3185                           ;main.c: 133:                 g_data.g_flg_switch = TRUE;
  3186  001E  110E               	bcf	14,2	;volatile
  3187                           
  3188                           ;main.c: 135:         }
  3189  001F  100B               	bcf	11,0	;volatile
  3190                           
  3191                           ;main.c: 136: 
  3192  0020  0027               	movlb	7	; select bank7
  3193  0021  1099               	bcf	25,1	;volatile
  3194                           
  3195                           ;main.c: 137:         timer_reset();
  3196  0022  2881               	goto	i1l83
  3197  0023                     i1l2017:	
  3198                           ;main.c: 139:     }
  3199                           
  3200                           ;main.c: 138:         return;
  3201                           
  3202  0023  0020               	movlb	0	; select bank0
  3203  0024  0321               	decf	_g_data+1,w	;volatile
  3204  0025  1D03               	btfss	3,2
  3205  0026  2836               	goto	i1l85
  3206  0027  0027               	movlb	7	; select bank7
  3207  0028  1C99               	btfss	25,1	;volatile
  3208  0029  2836               	goto	i1l85
  3209  002A  0020               	movlb	0	; select bank0
  3210  002B  0322               	decf	_g_data+2,w	;volatile
  3211  002C  1D03               	btfss	3,2
  3212  002D  2836               	goto	i1l85
  3213                           
  3214                           ;main.c: 140:     return;;main.c: 141: }
  3215  002E  3000               	movlw	0
  3216  002F  00AC               	movwf	_g_data+12	;volatile
  3217  0030  3001               	movlw	1
  3218  0031  00AB               	movwf	_g_data+11	;volatile
  3219                           
  3220                           ;main.c: 142: 
  3221  0032  3183  23F8  3180   	fcall	i1_timer_start
  3222                           
  3223                           ;main.c: 143: void main(void)
  3224  0035  283E               	goto	i1l84
  3225  0036                     i1l85:	
  3226                           ;main.c: 144: {
  3227                           
  3228  0036  180B               	btfsc	11,0	;volatile
  3229  0037  283B               	goto	i1l89
  3230  0038  0027               	movlb	7	; select bank7
  3231  0039  1C99               	btfss	25,1	;volatile
  3232  003A  283E               	goto	i1l84
  3233  003B                     i1l89:	
  3234                           
  3235                           ;main.c: 145: ;main.c: 146:     init_env();
  3236  003B  100B               	bcf	11,0	;volatile
  3237                           
  3238                           ;main.c: 147:     timer_start();
  3239  003C  0027               	movlb	7	; select bank7
  3240  003D  1099               	bcf	25,1	;volatile
  3241  003E                     i1l84:	
  3242                           ;main.c: 148: 
  3243                           
  3244                           
  3245                           ;main.c: 151: }
  3246  003E  1D0B               	btfss	11,2	;volatile
  3247  003F  2881               	goto	i1l83
  3248  0040  0020               	movlb	0	; select bank0
  3249  0041  0321               	decf	_g_data+1,w	;volatile
  3250  0042  1D03               	btfss	3,2
  3251  0043  284E               	goto	i1l2037
  3252  0044  0822               	movf	_g_data+2,w	;volatile
  3253  0045  1903               	btfsc	3,2
  3254  0046  284B               	goto	i1l2035
  3255  0047  082B               	movf	_g_data+11,w	;volatile
  3256  0048  042C               	iorwf	_g_data+12,w	;volatile
  3257  0049  1903               	btfsc	3,2
  3258  004A  284E               	goto	i1l2037
  3259  004B                     i1l2035:	
  3260  004B  3180  2090  3180   	fcall	_receive_decode
  3261  004E                     i1l2037:	
  3262  004E  3182  22B0  3180   	fcall	_update_time
  3263  0051  300A               	movlw	10
  3264  0052  00F0               	movwf	___lwmod@divisor
  3265  0053  3000               	movlw	0
  3266  0054  00F1               	movwf	___lwmod@divisor+1
  3267  0055  0020               	movlb	0	; select bank0
  3268  0056  0846               	movf	ISR@key_time_cnt+1,w
  3269  0057  00D7               	movwf	??_ISR+1
  3270  0058  0845               	movf	ISR@key_time_cnt,w
  3271  0059  00D6               	movwf	??_ISR
  3272  005A  0AC5               	incf	ISR@key_time_cnt,f
  3273  005B  1903               	skipnz
  3274  005C  0AC6               	incf	ISR@key_time_cnt+1,f
  3275  005D  0856               	movf	??_ISR,w
  3276  005E  00F2               	movwf	___lwmod@dividend
  3277  005F  0857               	movf	??_ISR+1,w
  3278  0060  00F3               	movwf	___lwmod@dividend+1
  3279  0061  3183  232D  3180   	fcall	___lwmod
  3280  0064  0870               	movf	?___lwmod,w
  3281  0065  0471               	iorwf	?___lwmod+1,w
  3282  0066  1D03               	btfss	3,2
  3283  0067  287F               	goto	i1l2051
  3284  0068  1003               	clrc
  3285  0069  0020               	movlb	0	; select bank0
  3286  006A  0DC9               	rlf	ISR@history_key,f
  3287  006B  0E0E               	swapf	14,w	;volatile
  3288  006C  0C89               	rrf	9,f
  3289  006D  3901               	andlw	1
  3290  006E  00D6               	movwf	??_ISR
  3291  006F  0856               	movf	??_ISR,w
  3292  0070  04C9               	iorwf	ISR@history_key,f
  3293  0071  300F               	movlw	15
  3294  0072  0549               	andwf	ISR@history_key,w
  3295  0073  00D6               	movwf	??_ISR
  3296  0074  3003               	movlw	3
  3297  0075  0656               	xorwf	??_ISR,w
  3298  0076  1D03               	btfss	3,2
  3299  0077  287F               	goto	i1l2051
  3300  0078  0820               	movf	_g_data,w	;volatile
  3301  0079  1D03               	btfss	3,2
  3302  007A  287F               	goto	i1l2051
  3303  007B  3001               	movlw	1
  3304  007C  00D6               	movwf	??_ISR
  3305  007D  0856               	movf	??_ISR,w
  3306  007E  00A0               	movwf	_g_data	;volatile
  3307  007F                     i1l2051:	
  3308  007F  3183  23EF         	fcall	i1_timer_reset
  3309  0081                     i1l83:	
  3310  0081  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3311  0082  0009               	retfie
  3312  0083                     __end_of_ISR:	
  3313                           
  3314                           	psect	text7
  3315  03F8                     __ptext7:	
  3316 ;; *************** function i1_timer_start *****************
  3317 ;; Defined at:
  3318 ;;		line 27 in file "timer.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		i1_timer_reset
  3341 ;; This function is called by:
  3342 ;;		_ISR
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function i1_timer_start
  3348  03F8                     i1_timer_start:	
  3349                           
  3350                           ;timer.c: 29:     timer_reset();
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in i1_timer_start: [wreg+status,2+status,0+pclath+cstack]
  3354  03F8  3183  23EF         	fcall	i1_timer_reset
  3355                           
  3356                           ;timer.c: 30:     INTCONbits.TMR0IE = 0b0;
  3357  03FA  128B               	bcf	11,5	;volatile
  3358  03FB  0008               	return
  3359  03FC                     __end_ofi1_timer_start:	
  3360                           
  3361                           	psect	text8
  3362  03EF                     __ptext8:	
  3363 ;; *************** function i1_timer_reset *****************
  3364 ;; Defined at:
  3365 ;;		line 22 in file "timer.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_ISR
  3389 ;;		i1_timer_start
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function i1_timer_reset
  3395  03EF                     i1_timer_reset:	
  3396                           
  3397                           ;timer.c: 24:     INTCONbits.TMR0IF = 0;
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in i1_timer_reset: [wreg]
  3401  03EF  110B               	bcf	11,2	;volatile
  3402                           
  3403                           ;timer.c: 25:     TMR0 = (217 + 14);
  3404  03F0  30E7               	movlw	231
  3405  03F1  0020               	movlb	0	; select bank0
  3406  03F2  0095               	movwf	21	;volatile
  3407  03F3  0008               	return
  3408  03F4                     __end_ofi1_timer_reset:	
  3409                           
  3410                           	psect	text9
  3411  02B0                     __ptext9:	
  3412 ;; *************** function _update_time *****************
  3413 ;; Defined at:
  3414 ;;		line 14 in file "update_time.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;Total ram usage:        1 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		_update_display
  3437 ;; This function is called by:
  3438 ;;		_ISR
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _update_time
  3444  02B0                     _update_time:	
  3445                           
  3446                           ;update_time.c: 15:     g_data.g_time_10ms++;
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _update_time: [wreg+status,2+status,0+pclath+cstack]
  3450  02B0  3001               	movlw	1
  3451  02B1  00FD               	movwf	??_update_time
  3452  02B2  087D               	movf	??_update_time,w
  3453  02B3  0020               	banksel	_g_data
  3454  02B4  07A6               	addwf	(_g_data& (0+127)+6),f	;volatile
  3455                           
  3456                           ;update_time.c: 17:     if( 50 == g_data.g_time_10ms ){
  3457  02B5  3032               	movlw	50
  3458  02B6  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3459  02B7  1D03               	btfss	3,2
  3460  02B8  2ABC               	goto	i1l1925
  3461                           
  3462                           ;update_time.c: 18:         LATBbits.LATB3 = 1;
  3463  02B9  0022               	movlb	2	; select bank2
  3464  02BA  158D               	bsf	13,3	;volatile
  3465                           
  3466                           ;update_time.c: 19:     }else if( 100 == g_data.g_time_10ms ){
  3467  02BB  2AC3               	goto	i1l1929
  3468  02BC                     i1l1925:	
  3469  02BC  3064               	movlw	100
  3470  02BD  0020               	banksel	_g_data
  3471  02BE  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3472  02BF  1D03               	btfss	3,2
  3473  02C0  2AC3               	goto	i1l1929
  3474                           
  3475                           ;update_time.c: 20:         LATBbits.LATB3 = 0;
  3476  02C1  0022               	movlb	2	; select bank2
  3477  02C2  118D               	bcf	13,3	;volatile
  3478  02C3                     i1l1929:	
  3479                           ;update_time.c: 21:     }
  3480                           
  3481                           
  3482                           ;update_time.c: 23:     if(g_data.g_time_10ms == 100)
  3483  02C3  3064               	movlw	100
  3484  02C4  0020               	banksel	_g_data
  3485  02C5  0626               	xorwf	(_g_data& (0+127)+6),w	;volatile
  3486  02C6  1D03               	btfss	3,2
  3487  02C7  0008               	return
  3488                           
  3489                           ;update_time.c: 24:     {;update_time.c: 25:         g_data.g_time_10ms = 0;
  3490  02C8  3000               	movlw	0
  3491  02C9  00A6               	movwf	(_g_data& (0+127)+6)	;volatile
  3492                           
  3493                           ;update_time.c: 26:         g_data.g_time_s++;
  3494  02CA  3001               	movlw	1
  3495  02CB  00FD               	movwf	??_update_time
  3496  02CC  087D               	movf	??_update_time,w
  3497  02CD  0020               	banksel	_g_data
  3498  02CE  07A5               	addwf	(_g_data& (0+127)+5),f	;volatile
  3499                           
  3500                           ;update_time.c: 28:         if(g_data.g_time_s == 60)
  3501  02CF  303C               	movlw	60
  3502  02D0  0625               	xorwf	(_g_data& (0+127)+5),w	;volatile
  3503  02D1  1D03               	btfss	3,2
  3504  02D2  0008               	return
  3505                           
  3506                           ;update_time.c: 29:         {;update_time.c: 30:             g_data.g_time_m++;
  3507  02D3  3001               	movlw	1
  3508  02D4  00FD               	movwf	??_update_time
  3509  02D5  087D               	movf	??_update_time,w
  3510  02D6  0020               	banksel	_g_data
  3511  02D7  07A4               	addwf	(_g_data& (0+127)+4),f	;volatile
  3512                           
  3513                           ;update_time.c: 31:             g_data.g_time_s = 0;
  3514  02D8  3000               	movlw	0
  3515  02D9  00A5               	movwf	(_g_data& (0+127)+5)	;volatile
  3516                           
  3517                           ;update_time.c: 32:             g_data.cnt_update++;
  3518  02DA  3001               	movlw	1
  3519  02DB  07C1               	addwf	(_g_data& (0+127)+33),f	;volatile
  3520  02DC  3000               	movlw	0
  3521  02DD  3DC2               	addwfc	((_g_data+1)& (0+127)+33),f	;volatile
  3522                           
  3523                           ;update_time.c: 33:             if(g_data.g_time_m == 60)
  3524  02DE  303C               	movlw	60
  3525  02DF  0624               	xorwf	(_g_data& (0+127)+4),w	;volatile
  3526  02E0  1D03               	btfss	3,2
  3527  02E1  2AEF               	goto	i1l1949
  3528                           
  3529                           ;update_time.c: 34:             {;update_time.c: 35:                 g_data.g_time_h++;
  3530  02E2  3001               	movlw	1
  3531  02E3  00FD               	movwf	??_update_time
  3532  02E4  087D               	movf	??_update_time,w
  3533  02E5  0020               	banksel	_g_data
  3534  02E6  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  3535                           
  3536                           ;update_time.c: 36:                 g_data.g_time_m = 0;
  3537  02E7  3000               	movlw	0
  3538  02E8  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3539                           
  3540                           ;update_time.c: 38:                 if(g_data.g_time_h == 24)
  3541  02E9  3018               	movlw	24
  3542  02EA  0623               	xorwf	(_g_data& (0+127)+3),w	;volatile
  3543  02EB  1D03               	btfss	3,2
  3544  02EC  2AEF               	goto	i1l1949
  3545                           
  3546                           ;update_time.c: 39:                 {;update_time.c: 40:                     g_data.g_ti
      +                          me_h = 0;
  3547  02ED  3000               	movlw	0
  3548  02EE  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3549  02EF                     i1l1949:	
  3550                           ;update_time.c: 42:             }
  3551                           
  3552                           ;update_time.c: 41:                 }
  3553                           
  3554                           
  3555                           ;update_time.c: 44:             update_display();
  3556  02EF  3183  23A8         	fcall	_update_display
  3557                           
  3558                           ;update_time.c: 46:     }
  3559                           
  3560                           ;update_time.c: 45:         }
  3561  02F1  0008               	return
  3562  02F2                     __end_of_update_time:	
  3563                           ;update_time.c: 47:     return;
  3564                           
  3565                           
  3566                           	psect	text10
  3567  0090                     __ptext10:	
  3568 ;; *************** function _receive_decode *****************
  3569 ;; Defined at:
  3570 ;;		line 100 in file "receive_decode.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  i               2    8[BANK0 ] int 
  3575 ;;  last_time_m     2    6[BANK0 ] unsigned short 
  3576 ;;  last_time_h     2    4[BANK0 ] unsigned short 
  3577 ;;  read_value      1   10[BANK0 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:       11 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    4
  3594 ;; This function calls:
  3595 ;;		_check_err
  3596 ;;		_test_get_number
  3597 ;;		_times2number
  3598 ;;		_update_display
  3599 ;; This function is called by:
  3600 ;;		_ISR
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _receive_decode
  3606  0090                     _receive_decode:	
  3607                           
  3608                           ;receive_decode.c: 101:     if(g_data.g_find_recv_start == FALSE && PORTCbits.RC1 == PIN
      +                          _HIGH)
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _receive_decode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3612  0090  0020               	banksel	_g_data
  3613  0091  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3614  0092  1D03               	btfss	3,2
  3615  0093  289B               	goto	i1l166
  3616  0094  0020               	movlb	0	; select bank0
  3617  0095  1C8E               	btfss	14,1	;volatile
  3618  0096  289B               	goto	i1l166
  3619                           
  3620                           ;receive_decode.c: 102:     {;receive_decode.c: 103:         g_data.g_all_level_times = 
      +                          0;
  3621  0097  0020               	banksel	_g_data
  3622  0098  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3623  0099  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3624                           
  3625                           ;receive_decode.c: 104:         return;
  3626  009A  0008               	return
  3627  009B                     i1l166:	
  3628                           ;receive_decode.c: 105:     }
  3629                           
  3630                           
  3631                           ;receive_decode.c: 108:     if(PORTCbits.RC1 == PIN_HIGH)
  3632  009B  0020               	movlb	0	; select bank0
  3633  009C  1C8E               	btfss	14,1	;volatile
  3634  009D  28A3               	goto	i1l168
  3635                           
  3636                           ;receive_decode.c: 109:     {;receive_decode.c: 110:         g_data.g_high_level_times++
      +                          ;
  3637  009E  3001               	movlw	1
  3638  009F  0020               	banksel	_g_data
  3639  00A0  07A7               	addwf	(_g_data& (0+127)+7),f	;volatile
  3640  00A1  3000               	movlw	0
  3641  00A2  3DA8               	addwfc	((_g_data+1)& (0+127)+7),f	;volatile
  3642  00A3                     i1l168:	
  3643                           ;receive_decode.c: 111:     }
  3644                           
  3645                           
  3646                           ;receive_decode.c: 113:     g_data.g_all_level_times++;
  3647  00A3  3001               	movlw	1
  3648  00A4  0020               	banksel	_g_data
  3649  00A5  07A9               	addwf	(_g_data& (0+127)+9),f	;volatile
  3650  00A6  3000               	movlw	0
  3651  00A7  3DAA               	addwfc	((_g_data+1)& (0+127)+9),f	;volatile
  3652                           
  3653                           ;receive_decode.c: 117:     if(g_data.g_all_level_times < 100)
  3654  00A8  3000               	movlw	0
  3655  00A9  022A               	subwf	((_g_data+1)& (0+127)+9),w	;volatile
  3656  00AA  3064               	movlw	100
  3657  00AB  1903               	skipnz
  3658  00AC  0229               	subwf	(_g_data& (0+127)+9),w	;volatile
  3659  00AD  1C03               	btfss	3,0
  3660  00AE  0008               	return
  3661                           
  3662                           ;receive_decode.c: 122:     u8 read_value = times2number(g_data.g_high_level_times);
  3663                           
  3664                           ;receive_decode.c: 120:     }
  3665                           
  3666                           ;receive_decode.c: 118:     {;receive_decode.c: 119:         return;
  3667  00AF  0828               	movf	((_g_data+1)& (0+127)+7),w	;volatile
  3668  00B0  00F1               	movwf	times2number@high_level_times+1
  3669  00B1  0020               	banksel	_g_data
  3670  00B2  0827               	movf	(_g_data& (0+127)+7),w	;volatile
  3671  00B3  00F0               	movwf	times2number@high_level_times
  3672  00B4  3182  2265  3180   	fcall	_times2number
  3673  00B7  0020               	movlb	0	; select bank0
  3674  00B8  00CB               	movwf	??_receive_decode
  3675  00B9  084B               	movf	??_receive_decode,w
  3676  00BA  00D5               	movwf	receive_decode@read_value
  3677                           
  3678                           ;receive_decode.c: 124:     test_get_number(read_value);
  3679  00BB  0855               	movf	receive_decode@read_value,w
  3680  00BC  3182  22F2  3180   	fcall	_test_get_number
  3681                           
  3682                           ;receive_decode.c: 126:     g_data.g_all_level_times = 0;
  3683  00BF  0020               	banksel	_g_data
  3684  00C0  01A9               	clrf	(_g_data& (0+127)+9)	;volatile
  3685  00C1  01AA               	clrf	((_g_data+1)& (0+127)+9)	;volatile
  3686                           
  3687                           ;receive_decode.c: 127:     g_data.g_high_level_times = 0;
  3688  00C2  01A7               	clrf	(_g_data& (0+127)+7)	;volatile
  3689  00C3  01A8               	clrf	((_g_data+1)& (0+127)+7)	;volatile
  3690                           
  3691                           ;receive_decode.c: 129:     if(FALSE == g_data.g_find_recv_start)
  3692  00C4  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3693  00C5  1D03               	btfss	3,2
  3694  00C6  28D2               	goto	i1l1869
  3695                           
  3696                           ;receive_decode.c: 130:     {;receive_decode.c: 132:         if(read_value == 5)
  3697  00C7  3005               	movlw	5
  3698  00C8  0020               	movlb	0	; select bank0
  3699  00C9  0655               	xorwf	receive_decode@read_value,w
  3700  00CA  1D03               	btfss	3,2
  3701  00CB  0008               	return
  3702                           
  3703                           ;receive_decode.c: 133:         {;receive_decode.c: 135:             g_data.g_find_recv_
      +                          start = TRUE;
  3704  00CC  3001               	movlw	1
  3705  00CD  0020               	banksel	_g_data
  3706  00CE  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3707                           
  3708                           ;receive_decode.c: 136:             g_data.g_recv_buf[CODE_P0] = 0;
  3709  00CF  3000               	movlw	0
  3710  00D0  00AD               	movwf	(_g_data& (0+127)+13)	;volatile
  3711                           
  3712                           ;receive_decode.c: 139:             return;
  3713  00D1  0008               	return
  3714  00D2                     i1l1869:	
  3715                           ;receive_decode.c: 146:     }
  3716                           
  3717                           ;receive_decode.c: 145:         }
  3718                           
  3719                           ;receive_decode.c: 142:         {;receive_decode.c: 144:             return;
  3720                           
  3721                           ;receive_decode.c: 141:         else
  3722                           
  3723                           ;receive_decode.c: 140:         }
  3724                           
  3725                           
  3726                           ;receive_decode.c: 149:     if(g_data.g_find_recv_start == FALSE || (read_value == 4))
  3727  00D2  0822               	movf	(_g_data& (0+127)+2),w	;volatile
  3728  00D3  1903               	btfsc	3,2
  3729  00D4  0008               	return
  3730  00D5  3004               	movlw	4
  3731  00D6  0020               	movlb	0	; select bank0
  3732  00D7  0655               	xorwf	receive_decode@read_value,w
  3733  00D8  1903               	btfsc	3,2
  3734  00D9  0008               	return
  3735                           
  3736                           ;receive_decode.c: 156:     g_data.g_recv_buf[g_data.g_recv_count++] = read_value;
  3737                           
  3738                           ;receive_decode.c: 154:     }
  3739                           
  3740                           ;receive_decode.c: 150:     {;receive_decode.c: 153:         return;
  3741  00DA  3020               	movlw	low _g_data
  3742  00DB  0086               	movwf	6
  3743  00DC  3000               	movlw	high _g_data
  3744  00DD  0087               	movwf	7
  3745  00DE  314B               	addfsr 1,11
  3746  00DF  302D               	movlw	low (_g_data+13)
  3747  00E0  00CB               	movwf	??_receive_decode
  3748  00E1  3000               	movlw	high (_g_data+13)
  3749  00E2  00CC               	movwf	??_receive_decode+1
  3750  00E3  3F40               	moviw [0]fsr1
  3751  00E4  074B               	addwf	??_receive_decode,w
  3752  00E5  00CD               	movwf	??_receive_decode+2
  3753  00E6  3F41               	moviw [1]fsr1
  3754  00E7  3D4C               	addwfc	??_receive_decode+1,w
  3755  00E8  00CE               	movwf	??_receive_decode+3
  3756  00E9  084D               	movf	??_receive_decode+2,w
  3757  00EA  0086               	movwf	6
  3758  00EB  084E               	movf	??_receive_decode+3,w
  3759  00EC  0087               	movwf	7
  3760  00ED  0855               	movf	receive_decode@read_value,w
  3761  00EE  0081               	movwf	1
  3762  00EF  3001               	movlw	1
  3763  00F0  0020               	banksel	_g_data
  3764  00F1  07AB               	addwf	(_g_data& (0+127)+11),f	;volatile
  3765  00F2  3000               	movlw	0
  3766  00F3  3DAC               	addwfc	((_g_data+1)& (0+127)+11),f	;volatile
  3767                           
  3768                           ;receive_decode.c: 157:     if(g_data.g_recv_count <= CODE_P3)
  3769  00F4  3000               	movlw	0
  3770  00F5  022C               	subwf	((_g_data+1)& (0+127)+11),w	;volatile
  3771  00F6  300B               	movlw	11
  3772  00F7  1903               	skipnz
  3773  00F8  022B               	subwf	(_g_data& (0+127)+11),w	;volatile
  3774  00F9  1C03               	btfss	3,0
  3775  00FA  0008               	return
  3776                           
  3777                           ;receive_decode.c: 162:     if(g_data.g_recv_buf[CODE_P1] != 0 && g_data.g_recv_buf[CODE
      +                          _P2] != 0)
  3778                           
  3779                           ;receive_decode.c: 160:     }
  3780                           
  3781                           ;receive_decode.c: 158:     {;receive_decode.c: 159:         return;
  3782  00FB  082E               	movf	(_g_data& (0+127)+14),w	;volatile
  3783  00FC  1903               	btfsc	3,2
  3784  00FD  2908               	goto	i1l1891
  3785  00FE  082F               	movf	(_g_data& (0+127)+15),w	;volatile
  3786  00FF  1903               	btfsc	3,2
  3787  0100  2908               	goto	i1l1891
  3788                           
  3789                           ;receive_decode.c: 163:     {;receive_decode.c: 164:         g_data.g_find_recv_start = 
      +                          FALSE;
  3790  0101  3000               	movlw	0
  3791  0102  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3792                           
  3793                           ;receive_decode.c: 165:         g_data.g_isDecoding = 0;
  3794  0103  3000               	movlw	0
  3795  0104  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3796                           
  3797                           ;receive_decode.c: 166:         g_data.g_recv_count = 0;
  3798  0105  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3799  0106  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3800                           
  3801                           ;receive_decode.c: 167:         return;
  3802  0107  0008               	return
  3803  0108                     i1l1891:	
  3804                           ;receive_decode.c: 168:     }
  3805                           
  3806                           
  3807                           ;receive_decode.c: 170:     u16 last_time_h = g_data.g_time_h;
  3808  0108  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3809  0109  0020               	movlb	0	; select bank0
  3810  010A  00CB               	movwf	??_receive_decode
  3811  010B  01CC               	clrf	??_receive_decode+1
  3812  010C  084B               	movf	??_receive_decode,w
  3813  010D  00CF               	movwf	receive_decode@last_time_h
  3814  010E  084C               	movf	??_receive_decode+1,w
  3815  010F  00D0               	movwf	receive_decode@last_time_h+1
  3816                           
  3817                           ;receive_decode.c: 171:     u16 last_time_m = g_data.g_time_m;
  3818  0110  0020               	banksel	_g_data
  3819  0111  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3820  0112  0020               	movlb	0	; select bank0
  3821  0113  00CB               	movwf	??_receive_decode
  3822  0114  01CC               	clrf	??_receive_decode+1
  3823  0115  084B               	movf	??_receive_decode,w
  3824  0116  00D1               	movwf	receive_decode@last_time_m
  3825  0117  084C               	movf	??_receive_decode+1,w
  3826  0118  00D2               	movwf	receive_decode@last_time_m+1
  3827                           
  3828                           ;receive_decode.c: 174:         if(check_err())
  3829                           
  3830                           ;receive_decode.c: 173:     do{
  3831  0119  3181  2171  3180   	fcall	_check_err
  3832  011C  0870               	movf	?_check_err,w
  3833  011D  0471               	iorwf	?_check_err+1,w
  3834  011E  1903               	btfsc	3,2
  3835  011F  2929               	goto	i1l1897
  3836                           
  3837                           ;receive_decode.c: 175:         {;receive_decode.c: 177:             g_data.g_time_h = l
      +                          ast_time_h;
  3838  0120  0020               	movlb	0	; select bank0
  3839  0121  084F               	movf	receive_decode@last_time_h,w
  3840  0122  0020               	banksel	_g_data
  3841  0123  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  3842                           
  3843                           ;receive_decode.c: 178:             g_data.g_time_m = last_time_m;
  3844  0124  0020               	movlb	0	; select bank0
  3845  0125  0851               	movf	receive_decode@last_time_m,w
  3846  0126  0020               	banksel	_g_data
  3847  0127  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  3848                           
  3849                           ;receive_decode.c: 179:             break;
  3850  0128  2946               	goto	i1l1903
  3851  0129                     i1l1897:	
  3852                           ;receive_decode.c: 180:         }
  3853                           
  3854                           
  3855                           ;receive_decode.c: 183:         if(last_time_h != g_data.g_time_h || last_time_m != g_da
      +                          ta.g_time_m)
  3856  0129  0020               	banksel	_g_data
  3857  012A  0823               	movf	(_g_data& (0+127)+3),w	;volatile
  3858  012B  0020               	movlb	0	; select bank0
  3859  012C  00CB               	movwf	??_receive_decode
  3860  012D  01CC               	clrf	??_receive_decode+1
  3861  012E  0850               	movf	receive_decode@last_time_h+1,w
  3862  012F  064C               	xorwf	??_receive_decode+1,w
  3863  0130  1D03               	skipz
  3864  0131  2934               	goto	u150_25
  3865  0132  084F               	movf	receive_decode@last_time_h,w
  3866  0133  064B               	xorwf	??_receive_decode,w
  3867  0134                     u150_25:	
  3868  0134  1D03               	skipz
  3869  0135  2943               	goto	i1l1901
  3870  0136  0020               	banksel	_g_data
  3871  0137  0824               	movf	(_g_data& (0+127)+4),w	;volatile
  3872  0138  0020               	movlb	0	; select bank0
  3873  0139  00CB               	movwf	??_receive_decode
  3874  013A  01CC               	clrf	??_receive_decode+1
  3875  013B  0852               	movf	receive_decode@last_time_m+1,w
  3876  013C  064C               	xorwf	??_receive_decode+1,w
  3877  013D  1D03               	skipz
  3878  013E  2941               	goto	u151_25
  3879  013F  0851               	movf	receive_decode@last_time_m,w
  3880  0140  064B               	xorwf	??_receive_decode,w
  3881  0141                     u151_25:	
  3882  0141  1903               	skipnz
  3883  0142  2946               	goto	i1l1903
  3884  0143                     i1l1901:	
  3885                           
  3886                           ;receive_decode.c: 184:         {;receive_decode.c: 185:             update_display();
  3887  0143  3183  23A8  3180   	fcall	_update_display
  3888  0146                     i1l1903:	
  3889                           ;receive_decode.c: 187:     }while(0);
  3890                           
  3891                           ;receive_decode.c: 186:         }
  3892                           
  3893                           
  3894                           ;receive_decode.c: 191:     g_data.g_find_recv_start = FALSE;
  3895  0146  3000               	movlw	0
  3896  0147  0020               	banksel	_g_data
  3897  0148  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  3898                           
  3899                           ;receive_decode.c: 193:     g_data.g_isDecoding = FALSE;
  3900  0149  3000               	movlw	0
  3901  014A  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  3902                           
  3903                           ;receive_decode.c: 194:     g_data.g_recv_count = CODE_P0;
  3904  014B  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  3905  014C  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  3906                           
  3907                           ;receive_decode.c: 195:     for(int i = 0;i < 20; i++)
  3908  014D  0020               	movlb	0	; select bank0
  3909  014E  01D3               	clrf	receive_decode@i
  3910  014F  01D4               	clrf	receive_decode@i+1
  3911  0150                     L1:	
  3912  0150  0854               	movf	receive_decode@i+1,w
  3913  0151  3A80               	xorlw	128
  3914  0152  00CB               	movwf	??_receive_decode
  3915  0153  3080               	movlw	128
  3916  0154  024B               	subwf	??_receive_decode,w
  3917  0155  1D03               	skipz
  3918  0156  2959               	goto	u152_25
  3919  0157  3014               	movlw	20
  3920  0158  0253               	subwf	receive_decode@i,w
  3921  0159                     u152_25:	
  3922  0159  1803               	btfsc	3,0
  3923  015A  0008               	return
  3924                           
  3925                           ;receive_decode.c: 196:     {;receive_decode.c: 197:         g_data.g_recv_buf[i] = 5;
  3926  015B  302D               	movlw	low (_g_data+13)
  3927  015C  0020               	movlb	0	; select bank0
  3928  015D  00CB               	movwf	??_receive_decode
  3929  015E  3000               	movlw	high (_g_data+13)
  3930  015F  00CC               	movwf	??_receive_decode+1
  3931  0160  0853               	movf	receive_decode@i,w
  3932  0161  074B               	addwf	??_receive_decode,w
  3933  0162  00CD               	movwf	??_receive_decode+2
  3934  0163  0854               	movf	receive_decode@i+1,w
  3935  0164  3D4C               	addwfc	??_receive_decode+1,w
  3936  0165  00CE               	movwf	??_receive_decode+3
  3937  0166  084D               	movf	??_receive_decode+2,w
  3938  0167  0086               	movwf	6
  3939  0168  084E               	movf	??_receive_decode+3,w
  3940  0169  0087               	movwf	7
  3941  016A  3005               	movlw	5
  3942  016B  0081               	movwf	1
  3943                           
  3944                           ;receive_decode.c: 198:     }
  3945  016C  3001               	movlw	1
  3946  016D  07D3               	addwf	receive_decode@i,f
  3947  016E  3000               	movlw	0
  3948  016F  3DD4               	addwfc	receive_decode@i+1,f
  3949  0170  2950               	goto	L1
  3950  0171                     __end_of_receive_decode:	
  3951                           ;receive_decode.c: 199:     return;
  3952                           
  3953                           
  3954                           	psect	text11
  3955  03A8                     __ptext11:	
  3956 ;; *************** function _update_display *****************
  3957 ;; Defined at:
  3958 ;;		line 62 in file "update_display.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        3 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		_write_once
  3981 ;; This function is called by:
  3982 ;;		_receive_decode
  3983 ;;		_update_time
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _update_display
  3989  03A8                     _update_display:	
  3990                           
  3991                           ;update_display.c: 73:     write_once(0xa5, 0x5a, 0xa5, 0x5a);
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
  3995  03A8  305A               	movlw	90
  3996  03A9  00FA               	movwf	??_update_display
  3997  03AA  087A               	movf	??_update_display,w
  3998  03AB  00F6               	movwf	write_once@HR
  3999  03AC  30A5               	movlw	165
  4000  03AD  00FB               	movwf	??_update_display+1
  4001  03AE  087B               	movf	??_update_display+1,w
  4002  03AF  00F7               	movwf	write_once@ML
  4003  03B0  305A               	movlw	90
  4004  03B1  00FC               	movwf	??_update_display+2
  4005  03B2  087C               	movf	??_update_display+2,w
  4006  03B3  00F8               	movwf	write_once@MR
  4007  03B4  30A5               	movlw	165
  4008  03B5  3183  2380         	fcall	_write_once
  4009  03B7  0008               	return
  4010  03B8                     __end_of_update_display:	
  4011                           ;update_display.c: 74:     return;
  4012                           
  4013                           
  4014                           	psect	text12
  4015  0380                     __ptext12:	
  4016 ;; *************** function _write_once *****************
  4017 ;; Defined at:
  4018 ;;		line 50 in file "update_display.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  HL              1    wreg     unsigned char 
  4021 ;;  HR              1    6[COMMON] unsigned char 
  4022 ;;  ML              1    7[COMMON] unsigned char 
  4023 ;;  MR              1    8[COMMON] unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  HL              1    9[COMMON] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4035 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;Total ram usage:        4 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    2
  4042 ;; This function calls:
  4043 ;;		_control595_delay
  4044 ;;		_write_byte
  4045 ;; This function is called by:
  4046 ;;		_update_display
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _write_once
  4052  0380                     _write_once:	
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _write_once: [wreg+status,2+status,0+pclath+cstack]
  4056                           ;write_once@HL stored from wreg
  4057  0380  00F9               	movwf	write_once@HL
  4058                           
  4059                           ;update_display.c: 52:     write_byte(HL);
  4060  0381  0879               	movf	write_once@HL,w
  4061  0382  3183  2359  3183   	fcall	_write_byte
  4062                           
  4063                           ;update_display.c: 53:     write_byte(HR);
  4064  0385  0876               	movf	write_once@HR,w
  4065  0386  3183  2359  3183   	fcall	_write_byte
  4066                           
  4067                           ;update_display.c: 54:     write_byte(ML);
  4068  0389  0877               	movf	write_once@ML,w
  4069  038A  3183  2359  3183   	fcall	_write_byte
  4070                           
  4071                           ;update_display.c: 55:     write_byte(MR);
  4072  038D  0878               	movf	write_once@MR,w
  4073  038E  3183  2359  3183   	fcall	_write_byte
  4074                           
  4075                           ;update_display.c: 57:     LATBbits.LATB1 = PIN_HIGH;
  4076  0391  0022               	movlb	2	; select bank2
  4077  0392  148D               	bsf	13,1	;volatile
  4078                           
  4079                           ;update_display.c: 58:  control595_delay();
  4080  0393  3183  23D2         	fcall	_control595_delay
  4081                           
  4082                           ;update_display.c: 59:     LATBbits.LATB1 = PIN_LOW;
  4083  0395  0022               	movlb	2	; select bank2
  4084  0396  108D               	bcf	13,1	;volatile
  4085  0397  0008               	return
  4086  0398                     __end_of_write_once:	
  4087                           
  4088                           	psect	text13
  4089  0359                     __ptext13:	
  4090 ;; *************** function _write_byte *****************
  4091 ;; Defined at:
  4092 ;;		line 38 in file "update_display.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  data            1    wreg     unsigned char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  data            1    4[COMMON] unsigned char 
  4097 ;;  i               1    5[COMMON] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    1
  4114 ;; This function calls:
  4115 ;;		_control595_delay
  4116 ;; This function is called by:
  4117 ;;		_write_once
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _write_byte
  4123  0359                     _write_byte:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4127                           ;write_byte@data stored from wreg
  4128  0359  00F4               	movwf	write_byte@data
  4129                           
  4130                           ;update_display.c: 39:     u8 i;;update_display.c: 40:     for(i = 0; i < 8; i++){
  4131  035A  01F5               	clrf	write_byte@i
  4132  035B                     L2:	
  4133  035B  3008               	movlw	8
  4134  035C  0275               	subwf	write_byte@i,w
  4135  035D  1803               	btfsc	3,0
  4136  035E  0008               	return
  4137                           
  4138                           ;update_display.c: 41:   LATBbits.LATB5 = (data & 0x80) >> 7;
  4139  035F  0874               	movf	write_byte@data,w
  4140  0360  00F2               	movwf	??_write_byte
  4141  0361  3007               	movlw	7
  4142  0362                     u94_25:	
  4143  0362  36F2               	lsrf	??_write_byte,f
  4144  0363  0B89               	decfsz	9,f
  4145  0364  2B62               	goto	u94_25
  4146  0365  0872               	movf	??_write_byte,w
  4147  0366  3901               	andlw	1
  4148  0367  00F3               	movwf	??_write_byte+1
  4149  0368  0EF3               	swapf	??_write_byte+1,f
  4150  0369  0DF3               	rlf	??_write_byte+1,f
  4151  036A  0022               	movlb	2	; select bank2
  4152  036B  080D               	movf	13,w	;volatile
  4153  036C  0673               	xorwf	??_write_byte+1,w
  4154  036D  39DF               	andlw	-33
  4155  036E  0673               	xorwf	??_write_byte+1,w
  4156  036F  008D               	movwf	13	;volatile
  4157                           
  4158                           ;update_display.c: 42:         LATBbits.LATB0 = PIN_LOW;
  4159  0370  100D               	bcf	13,0	;volatile
  4160                           
  4161                           ;update_display.c: 43:   control595_delay();
  4162  0371  3183  23D2  3183   	fcall	_control595_delay
  4163                           
  4164                           ;update_display.c: 44:         LATBbits.LATB0 = PIN_HIGH;
  4165  0374  0022               	movlb	2	; select bank2
  4166  0375  140D               	bsf	13,0	;volatile
  4167                           
  4168                           ;update_display.c: 45:   control595_delay();
  4169  0376  3183  23D2  3183   	fcall	_control595_delay
  4170                           
  4171                           ;update_display.c: 46:         data <<= 1;
  4172  0379  1003               	clrc
  4173  037A  0DF4               	rlf	write_byte@data,f
  4174                           
  4175                           ;update_display.c: 47:     }
  4176  037B  3001               	movlw	1
  4177  037C  00F2               	movwf	??_write_byte
  4178  037D  0872               	movf	??_write_byte,w
  4179  037E  07F5               	addwf	write_byte@i,f
  4180  037F  2B5B               	goto	L2
  4181  0380                     __end_of_write_byte:	
  4182                           
  4183                           	psect	text14
  4184  03D2                     __ptext14:	
  4185 ;; *************** function _control595_delay *****************
  4186 ;; Defined at:
  4187 ;;		line 21 in file "update_display.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  times           1    1[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;Total ram usage:        2 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_write_byte
  4211 ;;		_write_once
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _control595_delay
  4217  03D2                     _control595_delay:	
  4218                           
  4219                           ;update_display.c: 22:    u8 times = 10;
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _control595_delay: [wreg+status,2+status,0]
  4223  03D2  300A               	movlw	10
  4224  03D3  00F0               	movwf	??_control595_delay
  4225  03D4  0870               	movf	??_control595_delay,w
  4226  03D5  00F1               	movwf	control595_delay@times
  4227  03D6                     i1l214:	
  4228                           ;update_display.c: 26:    }
  4229                           
  4230                           ;update_display.c: 23:    while(times > 0){
  4231                           
  4232                           
  4233                           ;update_display.c: 23:    while(times > 0){
  4234  03D6  0871               	movf	control595_delay@times,w
  4235  03D7  1903               	btfsc	3,2
  4236  03D8  0008               	return
  4237                           
  4238                           ;update_display.c: 24:     __nop();
  4239  03D9  0000               	nop
  4240                           
  4241                           ;update_display.c: 25:        times--;
  4242  03DA  3001               	movlw	1
  4243  03DB  02F1               	subwf	control595_delay@times,f
  4244  03DC  2BD6               	goto	i1l214
  4245  03DD                     __end_of_control595_delay:	
  4246                           
  4247                           	psect	text15
  4248  0265                     __ptext15:	
  4249 ;; *************** function _times2number *****************
  4250 ;; Defined at:
  4251 ;;		line 15 in file "receive_decode.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  high_level_t    2    0[COMMON] unsigned short 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      unsigned char 
  4258 ;; Registers used:
  4259 ;;		wreg
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;Total ram usage:        2 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_receive_decode
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _times2number
  4280  0265                     _times2number:	
  4281                           
  4282                           ;receive_decode.c: 16:     if(high_level_times >= 10 - 5 && high_level_times < 10 + 5){
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _times2number: [wreg]
  4286  0265  3000               	movlw	0
  4287  0266  0271               	subwf	times2number@high_level_times+1,w
  4288  0267  3005               	movlw	5
  4289  0268  1903               	skipnz
  4290  0269  0270               	subwf	times2number@high_level_times,w
  4291  026A  1C03               	skipc
  4292  026B  2A75               	goto	i1l1551
  4293  026C  3000               	movlw	0
  4294  026D  0271               	subwf	times2number@high_level_times+1,w
  4295  026E  300F               	movlw	15
  4296  026F  1903               	skipnz
  4297  0270  0270               	subwf	times2number@high_level_times,w
  4298  0271  1803               	skipnc
  4299  0272  2A75               	goto	i1l1551
  4300                           
  4301                           ;receive_decode.c: 18:         return 0;
  4302  0273  3000               	movlw	0
  4303                           
  4304                           ;receive_decode.c: 19:     }else if(high_level_times >= 20 - 5 && high_level_times < 20 
      +                          + 5){
  4305  0274  0008               	return
  4306  0275                     i1l1551:	
  4307  0275  3000               	movlw	0
  4308  0276  0271               	subwf	times2number@high_level_times+1,w
  4309  0277  300F               	movlw	15
  4310  0278  1903               	skipnz
  4311  0279  0270               	subwf	times2number@high_level_times,w
  4312  027A  1C03               	skipc
  4313  027B  2A85               	goto	i1l1561
  4314  027C  3000               	movlw	0
  4315  027D  0271               	subwf	times2number@high_level_times+1,w
  4316  027E  3019               	movlw	25
  4317  027F  1903               	skipnz
  4318  0280  0270               	subwf	times2number@high_level_times,w
  4319  0281  1803               	skipnc
  4320  0282  2A85               	goto	i1l1561
  4321                           
  4322                           ;receive_decode.c: 21:         return 1;
  4323  0283  3001               	movlw	1
  4324                           
  4325                           ;receive_decode.c: 22:     }else if(high_level_times >= 30 - 5 && high_level_times < 30 
      +                          + 5){
  4326  0284  0008               	return
  4327  0285                     i1l1561:	
  4328  0285  3000               	movlw	0
  4329  0286  0271               	subwf	times2number@high_level_times+1,w
  4330  0287  3019               	movlw	25
  4331  0288  1903               	skipnz
  4332  0289  0270               	subwf	times2number@high_level_times,w
  4333  028A  1C03               	skipc
  4334  028B  2A95               	goto	i1l1571
  4335  028C  3000               	movlw	0
  4336  028D  0271               	subwf	times2number@high_level_times+1,w
  4337  028E  3023               	movlw	35
  4338  028F  1903               	skipnz
  4339  0290  0270               	subwf	times2number@high_level_times,w
  4340  0291  1803               	skipnc
  4341  0292  2A95               	goto	i1l1571
  4342                           
  4343                           ;receive_decode.c: 24:         return 2;
  4344  0293  3002               	movlw	2
  4345                           
  4346                           ;receive_decode.c: 25:     }else if(high_level_times >= 40 - 5 && high_level_times < 40 
      +                          + 5){
  4347  0294  0008               	return
  4348  0295                     i1l1571:	
  4349  0295  3000               	movlw	0
  4350  0296  0271               	subwf	times2number@high_level_times+1,w
  4351  0297  3023               	movlw	35
  4352  0298  1903               	skipnz
  4353  0299  0270               	subwf	times2number@high_level_times,w
  4354  029A  1C03               	skipc
  4355  029B  2AA5               	goto	i1l1581
  4356  029C  3000               	movlw	0
  4357  029D  0271               	subwf	times2number@high_level_times+1,w
  4358  029E  302D               	movlw	45
  4359  029F  1903               	skipnz
  4360  02A0  0270               	subwf	times2number@high_level_times,w
  4361  02A1  1803               	skipnc
  4362  02A2  2AA5               	goto	i1l1581
  4363                           
  4364                           ;receive_decode.c: 27:         return 3;
  4365  02A3  3003               	movlw	3
  4366                           
  4367                           ;receive_decode.c: 28:     }else if(high_level_times >= 40 + 5){
  4368  02A4  0008               	return
  4369  02A5                     i1l1581:	
  4370  02A5  3000               	movlw	0
  4371  02A6  0271               	subwf	times2number@high_level_times+1,w
  4372  02A7  302D               	movlw	45
  4373  02A8  1903               	skipnz
  4374  02A9  0270               	subwf	times2number@high_level_times,w
  4375  02AA  1C03               	skipc
  4376  02AB  2AAE               	goto	i1l1589
  4377                           
  4378                           ;receive_decode.c: 30:         return 4;
  4379  02AC  3004               	movlw	4
  4380                           
  4381                           ;receive_decode.c: 31:     }else{
  4382  02AD  0008               	return
  4383  02AE                     i1l1589:	
  4384                           
  4385                           ;receive_decode.c: 33:         return 5;
  4386  02AE  3005               	movlw	5
  4387                           
  4388                           ;receive_decode.c: 34:     }
  4389  02AF  0008               	return
  4390  02B0                     __end_of_times2number:	
  4391                           
  4392                           	psect	text16
  4393  02F2                     __ptext16:	
  4394 ;; *************** function _test_get_number *****************
  4395 ;; Defined at:
  4396 ;;		line 38 in file "receive_decode.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  get_num         1    wreg     unsigned char 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  get_num         1    0[COMMON] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;Total ram usage:        1 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_receive_decode
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _test_get_number
  4425  02F2                     _test_get_number:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in _test_get_number: [wreg+status,2+status,0]
  4429                           ;test_get_number@get_num stored from wreg
  4430  02F2  00F0               	movwf	test_get_number@get_num
  4431                           
  4432                           ;receive_decode.c: 39:     if(get_num == 0){
  4433  02F3  0870               	movf	test_get_number@get_num,w
  4434  02F4  1D03               	btfss	3,2
  4435  02F5  2AFC               	goto	i1l1597
  4436                           
  4437                           ;receive_decode.c: 40:         LATAbits.LATA2 = 1;
  4438  02F6  0022               	movlb	2	; select bank2
  4439  02F7  150C               	bsf	12,2	;volatile
  4440                           
  4441                           ;receive_decode.c: 41:         LATAbits.LATA3 = 0;
  4442  02F8  118C               	bcf	12,3	;volatile
  4443                           
  4444                           ;receive_decode.c: 42:         LATAbits.LATA4 = 0;
  4445  02F9  120C               	bcf	12,4	;volatile
  4446                           
  4447                           ;receive_decode.c: 43:         LATAbits.LATA5 = 0;
  4448  02FA  128C               	bcf	12,5	;volatile
  4449                           
  4450                           ;receive_decode.c: 44:     }else if(get_num == 1){
  4451  02FB  0008               	return
  4452  02FC                     i1l1597:	
  4453  02FC  0370               	decf	test_get_number@get_num,w
  4454  02FD  1D03               	btfss	3,2
  4455  02FE  2B05               	goto	i1l1601
  4456                           
  4457                           ;receive_decode.c: 45:         LATAbits.LATA2 = 0;
  4458  02FF  0022               	movlb	2	; select bank2
  4459  0300  110C               	bcf	12,2	;volatile
  4460                           
  4461                           ;receive_decode.c: 46:         LATAbits.LATA3 = 1;
  4462  0301  158C               	bsf	12,3	;volatile
  4463                           
  4464                           ;receive_decode.c: 47:         LATAbits.LATA4 = 0;
  4465  0302  120C               	bcf	12,4	;volatile
  4466                           
  4467                           ;receive_decode.c: 48:         LATAbits.LATA5 = 0;
  4468  0303  128C               	bcf	12,5	;volatile
  4469                           
  4470                           ;receive_decode.c: 49:     }else if(get_num == 2){
  4471  0304  0008               	return
  4472  0305                     i1l1601:	
  4473  0305  3002               	movlw	2
  4474  0306  0670               	xorwf	test_get_number@get_num,w
  4475  0307  1D03               	btfss	3,2
  4476  0308  2B0F               	goto	i1l1605
  4477                           
  4478                           ;receive_decode.c: 50:         LATAbits.LATA2 = 0;
  4479  0309  0022               	movlb	2	; select bank2
  4480  030A  110C               	bcf	12,2	;volatile
  4481                           
  4482                           ;receive_decode.c: 51:         LATAbits.LATA3 = 0;
  4483  030B  118C               	bcf	12,3	;volatile
  4484                           
  4485                           ;receive_decode.c: 52:         LATAbits.LATA4 = 1;
  4486  030C  160C               	bsf	12,4	;volatile
  4487                           
  4488                           ;receive_decode.c: 53:         LATAbits.LATA5 = 0;
  4489  030D  128C               	bcf	12,5	;volatile
  4490                           
  4491                           ;receive_decode.c: 54:     }else if(get_num == 3){
  4492  030E  0008               	return
  4493  030F                     i1l1605:	
  4494  030F  3003               	movlw	3
  4495  0310  0670               	xorwf	test_get_number@get_num,w
  4496  0311  1D03               	btfss	3,2
  4497  0312  2B19               	goto	i1l1609
  4498                           
  4499                           ;receive_decode.c: 55:         LATAbits.LATA2 = 0;
  4500  0313  0022               	movlb	2	; select bank2
  4501  0314  110C               	bcf	12,2	;volatile
  4502                           
  4503                           ;receive_decode.c: 56:         LATAbits.LATA3 = 0;
  4504  0315  118C               	bcf	12,3	;volatile
  4505                           
  4506                           ;receive_decode.c: 57:         LATAbits.LATA4 = 0;
  4507  0316  120C               	bcf	12,4	;volatile
  4508                           
  4509                           ;receive_decode.c: 58:         LATAbits.LATA5 = 1;
  4510  0317  168C               	bsf	12,5	;volatile
  4511                           
  4512                           ;receive_decode.c: 59:     }else if(get_num == 4){
  4513  0318  0008               	return
  4514  0319                     i1l1609:	
  4515  0319  3004               	movlw	4
  4516  031A  0670               	xorwf	test_get_number@get_num,w
  4517  031B  1D03               	btfss	3,2
  4518  031C  2B23               	goto	i1l1613
  4519                           
  4520                           ;receive_decode.c: 60:         LATAbits.LATA2 = 1;
  4521  031D  0022               	movlb	2	; select bank2
  4522  031E  150C               	bsf	12,2	;volatile
  4523                           
  4524                           ;receive_decode.c: 61:         LATAbits.LATA3 = 1;
  4525  031F  158C               	bsf	12,3	;volatile
  4526                           
  4527                           ;receive_decode.c: 62:         LATAbits.LATA4 = 1;
  4528  0320  160C               	bsf	12,4	;volatile
  4529                           
  4530                           ;receive_decode.c: 63:         LATAbits.LATA5 = 1;
  4531  0321  168C               	bsf	12,5	;volatile
  4532                           
  4533                           ;receive_decode.c: 64:     }else if(get_num == 5){
  4534  0322  0008               	return
  4535  0323                     i1l1613:	
  4536  0323  3005               	movlw	5
  4537  0324  0670               	xorwf	test_get_number@get_num,w
  4538  0325  1D03               	btfss	3,2
  4539  0326  0008               	return
  4540                           
  4541                           ;receive_decode.c: 65:         LATAbits.LATA2 = 0;
  4542  0327  0022               	movlb	2	; select bank2
  4543  0328  110C               	bcf	12,2	;volatile
  4544                           
  4545                           ;receive_decode.c: 66:         LATAbits.LATA3 = 0;
  4546  0329  118C               	bcf	12,3	;volatile
  4547                           
  4548                           ;receive_decode.c: 67:         LATAbits.LATA4 = 0;
  4549  032A  120C               	bcf	12,4	;volatile
  4550                           
  4551                           ;receive_decode.c: 68:         LATAbits.LATA5 = 0;
  4552  032B  128C               	bcf	12,5	;volatile
  4553                           
  4554                           ;receive_decode.c: 69:     }
  4555  032C  0008               	return
  4556  032D                     __end_of_test_get_number:	
  4557                           
  4558                           	psect	text17
  4559  0171                     __ptext17:	
  4560 ;; *************** function _check_err *****************
  4561 ;; Defined at:
  4562 ;;		line 73 in file "receive_decode.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  i               1   11[COMMON] unsigned char 
  4567 ;;  check           1   12[COMMON] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  2    0[COMMON] int 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;Total ram usage:       13 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_receive_decode
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _check_err
  4592  0171                     _check_err:	
  4593                           
  4594                           ;receive_decode.c: 75:     g_data.g_time_h = g_data.g_recv_buf[CODE_H_1] * 4 + g_data.g_
      +                          recv_buf[CODE_H_2];
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _check_err: [wreg+fsr1l+fsr1h+status,2+status,0]
  4598  0171  0020               	banksel	_g_data
  4599  0172  0830               	movf	(_g_data& (0+127)+16),w	;volatile
  4600  0173  00F2               	movwf	??_check_err
  4601  0174  3002               	movlw	2
  4602  0175                     u111_25:	
  4603  0175  35F2               	lslf	??_check_err,f
  4604  0176  0B89               	decfsz	9,f
  4605  0177  2975               	goto	u111_25
  4606  0178  0020               	banksel	_g_data
  4607  0179  0831               	movf	(_g_data& (0+127)+17),w	;volatile
  4608  017A  0772               	addwf	??_check_err,w
  4609  017B  00F3               	movwf	??_check_err+1
  4610  017C  0873               	movf	??_check_err+1,w
  4611  017D  0020               	banksel	_g_data
  4612  017E  00A3               	movwf	(_g_data& (0+127)+3)	;volatile
  4613                           
  4614                           ;receive_decode.c: 76:     g_data.g_time_m = g_data.g_recv_buf[CODE_M_1] * 16 + g_data.g
      +                          _recv_buf[CODE_M_2] * 4 + g_data.g_recv_buf[CODE_M_3];
  4615  017F  0832               	movf	(_g_data& (0+127)+18),w	;volatile
  4616  0180  00F2               	movwf	??_check_err
  4617  0181  3004               	movlw	4
  4618  0182                     u112_25:	
  4619  0182  35F2               	lslf	??_check_err,f
  4620  0183  0B89               	decfsz	9,f
  4621  0184  2982               	goto	u112_25
  4622  0185  0020               	banksel	_g_data
  4623  0186  0833               	movf	(_g_data& (0+127)+19),w	;volatile
  4624  0187  00F3               	movwf	??_check_err+1
  4625  0188  3001               	movlw	1
  4626  0189                     u113_25:	
  4627  0189  35F3               	lslf	??_check_err+1,f
  4628  018A  3EFF               	addlw	-1
  4629  018B  1D03               	skipz
  4630  018C  2989               	goto	u113_25
  4631  018D  3573               	lslf	??_check_err+1,w
  4632  018E  0772               	addwf	??_check_err,w
  4633  018F  00F4               	movwf	??_check_err+2
  4634  0190  0020               	banksel	_g_data
  4635  0191  0834               	movf	(_g_data& (0+127)+20),w	;volatile
  4636  0192  0774               	addwf	??_check_err+2,w
  4637  0193  00F5               	movwf	??_check_err+3
  4638  0194  0875               	movf	??_check_err+3,w
  4639  0195  0020               	banksel	_g_data
  4640  0196  00A4               	movwf	(_g_data& (0+127)+4)	;volatile
  4641                           
  4642                           ;receive_decode.c: 77:     u8 check = 0;
  4643  0197  01FC               	clrf	check_err@check
  4644                           
  4645                           ;receive_decode.c: 78:     for(u8 i = CODE_P1; i < CODE_P3; i++)
  4646  0198  01FB               	clrf	check_err@i
  4647  0199  0AFB               	incf	check_err@i,f
  4648  019A  300A               	movlw	10
  4649  019B  027B               	subwf	check_err@i,w
  4650  019C  1803               	btfsc	3,0
  4651  019D  29B7               	goto	i1l1633
  4652  019E                     i1l1627:	
  4653                           
  4654                           ;receive_decode.c: 79:     {;receive_decode.c: 80:         check ^= g_data.g_recv_buf[i]
      +                          ;
  4655  019E  087B               	movf	check_err@i,w
  4656  019F  00F2               	movwf	??_check_err
  4657  01A0  01F3               	clrf	??_check_err+1
  4658  01A1  302D               	movlw	low (_g_data+13)
  4659  01A2  00F4               	movwf	??_check_err+2
  4660  01A3  3000               	movlw	high (_g_data+13)
  4661  01A4  00F5               	movwf	??_check_err+3
  4662  01A5  0872               	movf	??_check_err,w
  4663  01A6  0774               	addwf	??_check_err+2,w
  4664  01A7  0086               	movwf	6
  4665  01A8  0873               	movf	??_check_err+1,w
  4666  01A9  3D75               	addwfc	??_check_err+3,w
  4667  01AA  0087               	movwf	7
  4668  01AB  0801               	movf	1,w
  4669  01AC  00F6               	movwf	??_check_err+4
  4670  01AD  0876               	movf	??_check_err+4,w
  4671  01AE  06FC               	xorwf	check_err@check,f
  4672                           
  4673                           ;receive_decode.c: 81:     }
  4674  01AF  3001               	movlw	1
  4675  01B0  00F2               	movwf	??_check_err
  4676  01B1  0872               	movf	??_check_err,w
  4677  01B2  07FB               	addwf	check_err@i,f
  4678  01B3  300A               	movlw	10
  4679  01B4  027B               	subwf	check_err@i,w
  4680  01B5  1C03               	skipc
  4681  01B6  299E               	goto	i1l1627
  4682  01B7                     i1l1633:	
  4683                           
  4684                           ;receive_decode.c: 82:     if( (((0 == check) || (3 == check))) && (g_data.g_recv_buf[CO
      +                          DE_P3] % 2 == 0) )
  4685  01B7  087C               	movf	check_err@check,w
  4686  01B8  1903               	btfsc	3,2
  4687  01B9  29BE               	goto	i1l147
  4688  01BA  3003               	movlw	3
  4689  01BB  067C               	xorwf	check_err@check,w
  4690  01BC  1D03               	btfss	3,2
  4691  01BD  29CE               	goto	i1l1645
  4692  01BE                     i1l147:	
  4693  01BE  0020               	banksel	_g_data
  4694  01BF  1837               	btfsc	(_g_data& (0+127)+23),0	;volatile
  4695  01C0  29CE               	goto	i1l1645
  4696                           
  4697                           ;receive_decode.c: 83:     {;receive_decode.c: 84:         g_data.g_time_h += (2 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4698  01C1  3002               	movlw	2
  4699  01C2  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4700  01C3  1903               	btfsc	3,2
  4701  01C4  29C8               	goto	i1l1641
  4702  01C5  01F7               	clrf	_check_err$597
  4703  01C6  01F8               	clrf	_check_err$597+1
  4704  01C7  29CC               	goto	i1l1643
  4705  01C8                     i1l1641:	
  4706  01C8  300C               	movlw	12
  4707  01C9  00F7               	movwf	_check_err$597
  4708  01CA  3000               	movlw	0
  4709  01CB  00F8               	movwf	_check_err$597+1
  4710  01CC                     i1l1643:	
  4711  01CC  0877               	movf	_check_err$597,w
  4712  01CD  29E9               	goto	L3
  4713  01CE                     i1l1645:	
  4714                           ;receive_decode.c: 85:     }else if( (((1 == check) || (2 == check))) && ((g_data.g_recv
      +                          _buf[CODE_P3] == 1) || (g_data.g_recv_buf[CODE_P3] == 3)) )
  4715                           
  4716  01CE  037C               	decf	check_err@check,w
  4717  01CF  1903               	btfsc	3,2
  4718  01D0  29D5               	goto	i1l1649
  4719  01D1  3002               	movlw	2
  4720  01D2  067C               	xorwf	check_err@check,w
  4721  01D3  1D03               	btfss	3,2
  4722  01D4  29EE               	goto	i1l153
  4723  01D5                     i1l1649:	
  4724  01D5  0020               	banksel	_g_data
  4725  01D6  0337               	decf	(_g_data& (0+127)+23),w	;volatile
  4726  01D7  1903               	btfsc	3,2
  4727  01D8  29DD               	goto	i1l1653
  4728  01D9  3003               	movlw	3
  4729  01DA  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4730  01DB  1D03               	btfss	3,2
  4731  01DC  29EE               	goto	i1l153
  4732  01DD                     i1l1653:	
  4733                           
  4734                           ;receive_decode.c: 87:     {;receive_decode.c: 88:         g_data.g_time_h += (3 ==g_dat
      +                          a.g_recv_buf[CODE_P3])? 12 : 0;
  4735  01DD  3003               	movlw	3
  4736  01DE  0637               	xorwf	(_g_data& (0+127)+23),w	;volatile
  4737  01DF  1903               	btfsc	3,2
  4738  01E0  29E4               	goto	i1l1657
  4739  01E1  01F9               	clrf	_check_err$598
  4740  01E2  01FA               	clrf	_check_err$598+1
  4741  01E3  29E8               	goto	i1l1659
  4742  01E4                     i1l1657:	
  4743  01E4  300C               	movlw	12
  4744  01E5  00F9               	movwf	_check_err$598
  4745  01E6  3000               	movlw	0
  4746  01E7  00FA               	movwf	_check_err$598+1
  4747  01E8                     i1l1659:	
  4748  01E8  0879               	movf	_check_err$598,w
  4749  01E9                     L3:	
  4750  01E9  00F2               	movwf	??_check_err
  4751  01EA  0872               	movf	??_check_err,w
  4752  01EB  0020               	banksel	_g_data
  4753  01EC  07A3               	addwf	(_g_data& (0+127)+3),f	;volatile
  4754                           
  4755                           ;receive_decode.c: 89:     }
  4756  01ED  29FA               	goto	i1l1667
  4757  01EE                     i1l153:	
  4758                           ;receive_decode.c: 90:     else
  4759                           
  4760                           
  4761                           ;receive_decode.c: 91:     {;receive_decode.c: 92:         g_data.g_find_recv_start = FA
      +                          LSE;
  4762  01EE  3000               	movlw	0
  4763  01EF  0020               	banksel	_g_data
  4764  01F0  00A2               	movwf	(_g_data& (0+127)+2)	;volatile
  4765                           
  4766                           ;receive_decode.c: 93:         g_data.g_isDecoding = 0;
  4767  01F1  3000               	movlw	0
  4768  01F2  00A1               	movwf	(_g_data& (0+127)+1)	;volatile
  4769                           
  4770                           ;receive_decode.c: 94:         g_data.g_recv_count = 0;
  4771  01F3  01AB               	clrf	(_g_data& (0+127)+11)	;volatile
  4772  01F4  01AC               	clrf	((_g_data+1)& (0+127)+11)	;volatile
  4773                           
  4774                           ;receive_decode.c: 95:         return -1;
  4775  01F5  30FF               	movlw	255
  4776  01F6  00F0               	movwf	?_check_err
  4777  01F7  30FF               	movlw	255
  4778  01F8  00F1               	movwf	?_check_err+1
  4779  01F9  0008               	return
  4780  01FA                     i1l1667:	
  4781                           ;receive_decode.c: 96:     }
  4782                           
  4783                           
  4784                           ;receive_decode.c: 97:     return 0;
  4785  01FA  01F0               	clrf	?_check_err
  4786  01FB  01F1               	clrf	?_check_err+1
  4787  01FC  0008               	return
  4788  01FD                     __end_of_check_err:	
  4789                           
  4790                           	psect	text18
  4791  032D                     __ptext18:	
  4792 ;; *************** function ___lwmod *****************
  4793 ;; Defined at:
  4794 ;;		line 5 in file "F:\other_software\MPLAB_X_IDE\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  divisor         2    0[COMMON] unsigned int 
  4797 ;;  dividend        2    2[COMMON] unsigned int 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  counter         1    5[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  2    0[COMMON] unsigned int 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;Total ram usage:        6 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_ISR
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function ___lwmod
  4824  032D                     ___lwmod:	
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4828  032D  0870               	movf	___lwmod@divisor,w
  4829  032E  0471               	iorwf	___lwmod@divisor+1,w
  4830  032F  1903               	btfsc	3,2
  4831  0330  2B54               	goto	i1l1983
  4832  0331  01F5               	clrf	___lwmod@counter
  4833  0332  0AF5               	incf	___lwmod@counter,f
  4834  0333                     i1l1973:	
  4835  0333  1BF1               	btfsc	___lwmod@divisor+1,7
  4836  0334  2B3F               	goto	i1l1975
  4837  0335  3001               	movlw	1
  4838  0336                     u162_25:	
  4839  0336  35F0               	lslf	___lwmod@divisor,f
  4840  0337  0DF1               	rlf	___lwmod@divisor+1,f
  4841  0338  0B89               	decfsz	9,f
  4842  0339  2B36               	goto	u162_25
  4843  033A  3001               	movlw	1
  4844  033B  00F4               	movwf	??___lwmod
  4845  033C  0874               	movf	??___lwmod,w
  4846  033D  07F5               	addwf	___lwmod@counter,f
  4847  033E  2B33               	goto	i1l1973
  4848  033F                     i1l1975:	
  4849  033F  0871               	movf	___lwmod@divisor+1,w
  4850  0340  0273               	subwf	___lwmod@dividend+1,w
  4851  0341  1D03               	skipz
  4852  0342  2B45               	goto	u164_25
  4853  0343  0870               	movf	___lwmod@divisor,w
  4854  0344  0272               	subwf	___lwmod@dividend,w
  4855  0345                     u164_25:	
  4856  0345  1C03               	skipc
  4857  0346  2B4B               	goto	i1l1979
  4858  0347  0870               	movf	___lwmod@divisor,w
  4859  0348  02F2               	subwf	___lwmod@dividend,f
  4860  0349  0871               	movf	___lwmod@divisor+1,w
  4861  034A  3BF3               	subwfb	___lwmod@dividend+1,f
  4862  034B                     i1l1979:	
  4863  034B  3001               	movlw	1
  4864  034C                     u165_25:	
  4865  034C  36F1               	lsrf	___lwmod@divisor+1,f
  4866  034D  0CF0               	rrf	___lwmod@divisor,f
  4867  034E  0B89               	decfsz	9,f
  4868  034F  2B4C               	goto	u165_25
  4869  0350  3001               	movlw	1
  4870  0351  02F5               	subwf	___lwmod@counter,f
  4871  0352  1D03               	btfss	3,2
  4872  0353  2B3F               	goto	i1l1975
  4873  0354                     i1l1983:	
  4874  0354  0873               	movf	___lwmod@dividend+1,w
  4875  0355  00F1               	movwf	?___lwmod+1
  4876  0356  0872               	movf	___lwmod@dividend,w
  4877  0357  00F0               	movwf	?___lwmod
  4878  0358  0008               	return
  4879  0359                     __end_of___lwmod:	
  4880  007E                     btemp	set	126	;btemp
  4881  007E                     int$flags	set	126
  4882  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_update_time
    _update_time->_update_display
    _receive_decode->_check_err
    _receive_decode->_update_display
    _update_display->_write_once
    _write_once->_write_byte
    _write_byte->_control595_delay

Critical Paths under _main in BANK0

    _main->_init_env

Critical Paths under _ISR in BANK0

    _ISR->_receive_decode

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                           _init_env
                        _timer_start
 ---------------------------------------------------------------------------------
 (1) _timer_start                                          0     0      0       0
                        _timer_reset
 ---------------------------------------------------------------------------------
 (2) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_env                                             3     3      0      68
                                             13 BANK0      3     3      0
                           _IIC_Init
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0    2036
                                             11 BANK0      2     2      0
                            ___lwmod
                     _receive_decode
                        _update_time
                      i1_timer_reset
                      i1_timer_start
 ---------------------------------------------------------------------------------
 (4) i1_timer_start                                        0     0      0       0
                      i1_timer_reset
 ---------------------------------------------------------------------------------
 (5) i1_timer_reset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _update_time                                          1     1      0     433
                                             13 COMMON     1     1      0
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _receive_decode                                      11    11      0    1292
                                              0 BANK0     11    11      0
                          _check_err
                    _test_get_number
                       _times2number
                     _update_display
 ---------------------------------------------------------------------------------
 (5) _update_display                                       3     3      0     433
                                             10 COMMON     3     3      0
                         _write_once
 ---------------------------------------------------------------------------------
 (6) _write_once                                           4     1      3     433
                                              6 COMMON     4     1      3
                   _control595_delay
                         _write_byte
 ---------------------------------------------------------------------------------
 (7) _write_byte                                           4     4      0      93
                                              2 COMMON     4     4      0
                   _control595_delay
 ---------------------------------------------------------------------------------
 (8) _control595_delay                                     2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _times2number                                         2     0      2     274
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _test_get_number                                      1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _check_err                                           13    11      2     206
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_env
     _IIC_Init
     _timer_init
   _timer_start
     _timer_reset

 _ISR (ROOT)
   ___lwmod
   _receive_decode
     _check_err
     _test_get_number
     _times2number
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   _update_time
     _update_display
       _write_once
         _control595_delay
         _write_byte
           _control595_delay
   i1_timer_reset
   i1_timer_start
     i1_timer_reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      49      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      49      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat May 04 02:02:13 2019

             ?_receive_decode 0070                   _update_time 02B0                   __CFG_CP$OFF 0000  
                          l70 0258                _update_display 03A8                   __CFG_LVP$ON 0000  
                         l100 03E3             ?_control595_delay 0070                           _GIE 005F  
                         _RC4 0074                  __CFG_CPD$OFF 0000                           _ISR 0004  
                __CFG_BORV$LO 0000            ??_control595_delay 0070                           wreg 0009  
                __CFG_IESO$ON 0000                  __CFG_FOSC$HS 0000         __end_ofi1_timer_reset 03F4  
                        ?_ISR 0070         __end_ofi1_timer_start 03FC                          l1827 0240  
                        _LATA 010C                          _LATB 010D                          _LATC 010E  
                        u1365 023E                          u1375 0256                          _ENUM 004A  
                        i1l83 0081                          i1l84 003E                          i1l85 0036  
                        i1l89 003B                          _TMR0 0015                          _WPUA 020C  
                        _WPUB 020D                          _WPUC 020E                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _Temp 0043                          _main 03DD  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 0083  
               __CFG_MCLRE$ON 0000                         ??_ISR 0056        __end_of_update_display 03B8  
            __end_of_IIC_Init 03D2                 __CFG_PLLEN$ON 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _LATC3 0873                         _LATC4 0874  
                       _IOCAN 0392                         _IOCAP 0391                         _IOCBN 0395  
                       _IOCBP 0394                         _IOCCN 0398                         _IOCCP 0397  
                       i1l214 03D6                         i1l153 01EE                         i1l147 01BE  
                       i1l166 009B                         i1l168 00A3               __end_of___lwmod 0359  
                       _TRISA 008C                         _TRISB 008D                         _TRISC 008E  
                       _WPUC3 1073                         _WPUC4 1074                         u94_25 0362  
              write_byte@data 0074                         status 0003                         wtemp0 007E  
             __initialization 0085                  __end_of_main 03E4               ?_update_display 0070  
              __CFG_LPBOR$OFF 0000                        ??_main 005B                        i1l2017 0023  
                      i1l2051 007F                        i1l2035 004B                        u111_25 0175  
                      i1l2037 004E                        i1l1601 0305                        u112_25 0182  
                      i1l1613 0323                        i1l1605 030F                        i1l1551 0275  
                      i1l1641 01C8                        i1l1633 01B7                        i1l1609 0319  
                      i1l1561 0285                        i1l1643 01CC                        i1l1627 019E  
                      i1l1571 0295                        i1l1653 01DD                        i1l1645 01CE  
                      u113_25 0189                        i1l1581 02A5                        i1l1901 0143  
                      i1l1903 0146                        i1l1657 01E4                        i1l1649 01D5  
                      i1l1659 01E8                        i1l1667 01FA                        i1l1597 02FC  
                      i1l1589 02AE                        i1l1925 02BC                        i1l1929 02C3  
                      i1l1891 0108                        i1l1973 0333                        i1l1869 00D2  
                      i1l1949 02EF                        i1l1975 033F                        i1l1983 0354  
                      i1l1897 0129                        i1l1979 034B                        i1l1997 0014  
                      u150_25 0134                        u151_25 0141                        u152_25 0159  
                      u162_25 0336                        u164_25 0345                        u165_25 034C  
                      _TRISC3 0473                        _TRISC4 0474                __CFG_PWRTE$OFF 0000  
                      _g_data 0020                __CFG_STVREN$ON 0000                     ??___lwmod 0074  
            __end_of_init_env 0265                        _temp_h 0048                        _temp_l 0047  
            __end_of_segmcode 03A8  times2number@high_level_times 0070                  ?_timer_reset 0070  
                ?_timer_start 0070      __size_of_test_get_number 003B       __end_of__initialization 008C  
                   ?_IIC_Init 0070              ??_receive_decode 004B                __pcstackCOMMON 0070  
                ?_update_time 0070         control595_delay@times 0071            __size_of_check_err 008C  
              _OPTION_REGbits 0095                    __pbssBANK0 0020                    ??_IIC_Init 0058  
   __size_of_control595_delay 000B               __CFG_VCAPEN$OFF 0000                    __pmaintext 03DD  
                  __pintentry 0004                ISR@history_key 0049                       _ODCONC3 1473  
                     _ODCONC4 1474             __end_of_check_err 01FD                     ?_init_env 0070  
            ??_update_display 007A             ??_test_get_number 0070                       ___lwmod 032D  
      __size_ofi1_timer_reset 0005                    check_err@i 007B        __size_ofi1_timer_start 0004  
                     __ptext1 03F4                       __ptext2 03EA                       __ptext3 01FD  
                     __ptext4 03B8                       __ptext5 03C5                       __ptext7 03F8  
                     __ptext8 03EF                       __ptext9 02B0                  __size_of_ISR 007F  
               ?_times2number 0070                     _IOCCFbits 0399                     _IOCCPbits 0397  
                     clrloop0 03E5          end_of_initialization 008C          __size_of_timer_reset 0005  
        __size_of_timer_start 0004                    ??_init_env 0058          __size_of_update_time 0042  
                  _timer_init 03B8                     _PORTAbits 000C                     _PORTCbits 000E  
              ??_times2number 0072                     _TRISCbits 008E                 _check_err$597 0077  
               _check_err$598 0079                 i1_timer_reset 03EF                 i1_timer_start 03F8  
            _control595_delay 03D2             __size_of_IIC_Init 000D                  write_once@HL 0079  
                write_once@HR 0076                  write_once@ML 0077                  write_once@MR 0078  
                  _write_byte 0359                    _write_once 0380      receive_decode@read_value 0055  
         start_initialization 0085                   __end_of_ISR 0083                ?i1_timer_reset 0070  
              ?i1_timer_start 0070                check_err@check 007C               receive_decode@i 0053  
                 ?_timer_init 0070                     ___latbits 0002                 __pcstackBANK0 004B  
             _test_get_number 02F2                     _check_err 0171             __size_of_init_env 0068  
   receive_decode@last_time_h 004F     receive_decode@last_time_m 0051          __end_of_times2number 02B0  
                    ?___lwmod 0070       __size_of_receive_decode 00E1                   ?_write_byte 0070  
                 ?_write_once 0076               ISR@key_time_cnt 0045               ??i1_timer_reset 0070  
             ??i1_timer_start 0070                      _IIC_Init 03C5                      _LATAbits 010C  
                    _LATBbits 010D           __size_of_timer_init 000D                    ?_check_err 0070  
                   clear_ram0 03E4      __end_of_control595_delay 03DD       __end_of_test_get_number 032D  
                    _WPUCbits 020E                   write_byte@i 0075                 ??_timer_reset 0058  
               ??_timer_start 0058           __size_of_write_byte 0027           __size_of_write_once 0018  
      test_get_number@get_num 0070                 ??_update_time 007D                     init_env@i 0059  
            __size_of___lwmod 002C       __size_of_update_display 0010                      __ptext10 0090  
                    __ptext11 03A8                      __ptext12 0380                      __ptext13 0359  
                    __ptext14 03D2                      __ptext15 0265                      __ptext16 02F2  
                    __ptext17 0171                      __ptext18 032D         __size_of_times2number 004B  
                    _init_env 01FD                 __size_of_main 0007           __end_of_timer_reset 03EF  
         __end_of_timer_start 03F8                   ??_check_err 0072                      _segmcode 0398  
                    int$flags 007E                _receive_decode 0090                  ??_timer_init 0058  
         __end_of_update_time 02F2              ?_test_get_number 0070                    _INTCONbits 000B  
                _times2number 0265                      intlevel1 0000              ___lwmod@dividend 0072  
           __CFG_CLKOUTEN$OFF 0000            __end_of_timer_init 03C5                    _OSCCONbits 0099  
      __end_of_receive_decode 0171                  ??_write_byte 0072                  ??_write_once 0079  
               __pstringtext1 0398               ___lwmod@divisor 0070               ___lwmod@counter 0075  
                 _timer_reset 03EA                   _timer_start 03F4            __end_of_write_byte 0380  
          __end_of_write_once 0398  
